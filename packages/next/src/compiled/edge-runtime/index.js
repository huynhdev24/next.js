(()=>{var __webpack_modules__={756:e=>{e.exports='"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/abort-controller.js\nvar abort_controller_exports = {};\n__export(abort_controller_exports, {\n  AbortController: () => AbortController,\n  AbortSignal: () => AbortSignal,\n  DOMException: () => DOMException\n});\nmodule.exports = __toCommonJS(abort_controller_exports);\nvar kSignal = Symbol("kSignal");\nvar kAborted = Symbol("kAborted");\nvar kReason = Symbol("kReason");\nvar kName = Symbol("kName");\nvar kOnabort = Symbol("kOnabort");\nvar DOMException = class extends Error {\n  constructor(message, name) {\n    super(message);\n    this[kName] = name;\n  }\n  get name() {\n    return this[kName];\n  }\n};\n__name(DOMException, "DOMException");\nfunction createAbortSignal() {\n  const signal = new EventTarget();\n  Object.setPrototypeOf(signal, AbortSignal.prototype);\n  signal[kAborted] = false;\n  signal[kReason] = void 0;\n  signal[kOnabort] = void 0;\n  return signal;\n}\n__name(createAbortSignal, "createAbortSignal");\nfunction abortSignalAbort(signal, reason) {\n  if (typeof reason === "undefined") {\n    reason = new DOMException("The operation was aborted.", "AbortError");\n  }\n  if (signal.aborted) {\n    return;\n  }\n  signal[kReason] = reason;\n  signal[kAborted] = true;\n  signal.dispatchEvent(new Event("abort"));\n}\n__name(abortSignalAbort, "abortSignalAbort");\nvar AbortController = class {\n  constructor() {\n    this[kSignal] = createAbortSignal();\n  }\n  get signal() {\n    return this[kSignal];\n  }\n  abort(reason) {\n    abortSignalAbort(this.signal, reason);\n  }\n};\n__name(AbortController, "AbortController");\nvar AbortSignal = class extends EventTarget {\n  constructor() {\n    throw new TypeError("Illegal constructor.");\n  }\n  get aborted() {\n    return this[kAborted];\n  }\n  get reason() {\n    return this[kReason];\n  }\n  get onabort() {\n    return this[kOnabort];\n  }\n  set onabort(value) {\n    if (this[kOnabort]) {\n      this.removeEventListener("abort", this[kOnabort]);\n    }\n    if (value) {\n      this[kOnabort] = value;\n      this.addEventListener("abort", this[kOnabort]);\n    }\n  }\n  throwIfAborted() {\n    if (this[kAborted]) {\n      throw this[kReason];\n    }\n  }\n  static abort(reason) {\n    const signal = createAbortSignal();\n    abortSignalAbort(signal, reason);\n    return signal;\n  }\n  static timeout(milliseconds) {\n    const signal = createAbortSignal();\n    setTimeout(() => {\n      abortSignalAbort(\n        signal,\n        new DOMException("The operation timed out.", "TimeoutError")\n      );\n    }, milliseconds);\n    return signal;\n  }\n};\n__name(AbortSignal, "AbortSignal");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AbortController,\n  AbortSignal,\n  DOMException\n});\n'},7:e=>{e.exports='"use strict";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. "__esModule" has not been set), then set\n  // "default" to the CommonJS "module.exports" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// <define:process>\nvar init_define_process = __esm({\n  "<define:process>"() {\n  }\n});\n\n// ../../node_modules/.pnpm/blob-polyfill@7.0.20220408/node_modules/blob-polyfill/Blob.js\nvar require_Blob = __commonJS({\n  "../../node_modules/.pnpm/blob-polyfill@7.0.20220408/node_modules/blob-polyfill/Blob.js"(exports) {\n    init_define_process();\n    (function(global2) {\n      (function(factory) {\n        if (typeof define === "function" && define.amd) {\n          define(["exports"], factory);\n        } else if (typeof exports === "object" && typeof exports.nodeName !== "string") {\n          factory(exports);\n        } else {\n          factory(global2);\n        }\n      })(function(exports2) {\n        "use strict";\n        var BlobBuilder = global2.BlobBuilder || global2.WebKitBlobBuilder || global2.MSBlobBuilder || global2.MozBlobBuilder;\n        var URL = global2.URL || global2.webkitURL || function(href, a) {\n          a = document.createElement("a");\n          a.href = href;\n          return a;\n        };\n        var origBlob = global2.Blob;\n        var createObjectURL = URL.createObjectURL;\n        var revokeObjectURL = URL.revokeObjectURL;\n        var strTag = global2.Symbol && global2.Symbol.toStringTag;\n        var blobSupported = false;\n        var blobSupportsArrayBufferView = false;\n        var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n        try {\n          blobSupported = new Blob(["\\xE4"]).size === 2;\n          blobSupportsArrayBufferView = new Blob([new Uint8Array([1, 2])]).size === 2;\n        } catch (e) {\n        }\n        function mapArrayBufferViews(ary) {\n          return ary.map(function(chunk) {\n            if (chunk.buffer instanceof ArrayBuffer) {\n              var buf = chunk.buffer;\n              if (chunk.byteLength !== buf.byteLength) {\n                var copy = new Uint8Array(chunk.byteLength);\n                copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n                buf = copy.buffer;\n              }\n              return buf;\n            }\n            return chunk;\n          });\n        }\n        __name(mapArrayBufferViews, "mapArrayBufferViews");\n        function BlobBuilderConstructor(ary, options) {\n          options = options || {};\n          var bb = new BlobBuilder();\n          mapArrayBufferViews(ary).forEach(function(part) {\n            bb.append(part);\n          });\n          return options.type ? bb.getBlob(options.type) : bb.getBlob();\n        }\n        __name(BlobBuilderConstructor, "BlobBuilderConstructor");\n        function BlobConstructor(ary, options) {\n          return new origBlob(mapArrayBufferViews(ary), options || {});\n        }\n        __name(BlobConstructor, "BlobConstructor");\n        if (global2.Blob) {\n          BlobBuilderConstructor.prototype = Blob.prototype;\n          BlobConstructor.prototype = Blob.prototype;\n        }\n        function stringEncode(string) {\n          var pos = 0;\n          var len = string.length;\n          var Arr = global2.Uint8Array || Array;\n          var at = 0;\n          var tlen = Math.max(32, len + (len >> 1) + 7);\n          var target = new Arr(tlen >> 3 << 3);\n          while (pos < len) {\n            var value = string.charCodeAt(pos++);\n            if (value >= 55296 && value <= 56319) {\n              if (pos < len) {\n                var extra = string.charCodeAt(pos);\n                if ((extra & 64512) === 56320) {\n                  ++pos;\n                  value = ((value & 1023) << 10) + (extra & 1023) + 65536;\n                }\n              }\n              if (value >= 55296 && value <= 56319) {\n                continue;\n              }\n            }\n            if (at + 4 > target.length) {\n              tlen += 8;\n              tlen *= 1 + pos / string.length * 2;\n              tlen = tlen >> 3 << 3;\n              var update = new Uint8Array(tlen);\n              update.set(target);\n              target = update;\n            }\n            if ((value & 4294967168) === 0) {\n              target[at++] = value;\n              continue;\n            } else if ((value & 4294965248) === 0) {\n              target[at++] = value >> 6 & 31 | 192;\n            } else if ((value & 4294901760) === 0) {\n              target[at++] = value >> 12 & 15 | 224;\n              target[at++] = value >> 6 & 63 | 128;\n            } else if ((value & 4292870144) === 0) {\n              target[at++] = value >> 18 & 7 | 240;\n              target[at++] = value >> 12 & 63 | 128;\n              target[at++] = value >> 6 & 63 | 128;\n            } else {\n              continue;\n            }\n            target[at++] = value & 63 | 128;\n          }\n          return target.slice(0, at);\n        }\n        __name(stringEncode, "stringEncode");\n        function stringDecode(buf) {\n          var end = buf.length;\n          var res = [];\n          var i = 0;\n          while (i < end) {\n            var firstByte = buf[i];\n            var codePoint = null;\n            var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n            if (i + bytesPerSequence <= end) {\n              var secondByte, thirdByte, fourthByte, tempCodePoint;\n              switch (bytesPerSequence) {\n                case 1:\n                  if (firstByte < 128) {\n                    codePoint = firstByte;\n                  }\n                  break;\n                case 2:\n                  secondByte = buf[i + 1];\n                  if ((secondByte & 192) === 128) {\n                    tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n                    if (tempCodePoint > 127) {\n                      codePoint = tempCodePoint;\n                    }\n                  }\n                  break;\n                case 3:\n                  secondByte = buf[i + 1];\n                  thirdByte = buf[i + 2];\n                  if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n                    tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n                    if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                      codePoint = tempCodePoint;\n                    }\n                  }\n                  break;\n                case 4:\n                  secondByte = buf[i + 1];\n                  thirdByte = buf[i + 2];\n                  fourthByte = buf[i + 3];\n                  if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n                    tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n                    if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                      codePoint = tempCodePoint;\n                    }\n                  }\n              }\n            }\n            if (codePoint === null) {\n              codePoint = 65533;\n              bytesPerSequence = 1;\n            } else if (codePoint > 65535) {\n              codePoint -= 65536;\n              res.push(codePoint >>> 10 & 1023 | 55296);\n              codePoint = 56320 | codePoint & 1023;\n            }\n            res.push(codePoint);\n            i += bytesPerSequence;\n          }\n          var len = res.length;\n          var str = "";\n          var j = 0;\n          while (j < len) {\n            str += String.fromCharCode.apply(String, res.slice(j, j += 4096));\n          }\n          return str;\n        }\n        __name(stringDecode, "stringDecode");\n        var textEncode = typeof TextEncoder === "function" ? TextEncoder.prototype.encode.bind(new TextEncoder()) : stringEncode;\n        var textDecode = typeof TextDecoder === "function" ? TextDecoder.prototype.decode.bind(new TextDecoder()) : stringDecode;\n        function FakeBlobBuilder() {\n          function bufferClone(buf) {\n            var view = new Array(buf.byteLength);\n            var array = new Uint8Array(buf);\n            var i = view.length;\n            while (i--) {\n              view[i] = array[i];\n            }\n            return view;\n          }\n          __name(bufferClone, "bufferClone");\n          function array2base64(input) {\n            var byteToCharMap = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";\n            var output = [];\n            for (var i = 0; i < input.length; i += 3) {\n              var byte1 = input[i];\n              var haveByte2 = i + 1 < input.length;\n              var byte2 = haveByte2 ? input[i + 1] : 0;\n              var haveByte3 = i + 2 < input.length;\n              var byte3 = haveByte3 ? input[i + 2] : 0;\n              var outByte1 = byte1 >> 2;\n              var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;\n              var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;\n              var outByte4 = byte3 & 63;\n              if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                  outByte3 = 64;\n                }\n              }\n              output.push(\n                byteToCharMap[outByte1],\n                byteToCharMap[outByte2],\n                byteToCharMap[outByte3],\n                byteToCharMap[outByte4]\n              );\n            }\n            return output.join("");\n          }\n          __name(array2base64, "array2base64");\n          var create = Object.create || function(a) {\n            function c() {\n            }\n            __name(c, "c");\n            c.prototype = a;\n            return new c();\n          };\n          function getObjectTypeName(o) {\n            return Object.prototype.toString.call(o).slice(8, -1);\n          }\n          __name(getObjectTypeName, "getObjectTypeName");\n          function isPrototypeOf(c, o) {\n            return typeof c === "object" && Object.prototype.isPrototypeOf.call(c.prototype, o);\n          }\n          __name(isPrototypeOf, "isPrototypeOf");\n          function isDataView(o) {\n            return getObjectTypeName(o) === "DataView" || isPrototypeOf(global2.DataView, o);\n          }\n          __name(isDataView, "isDataView");\n          var arrayBufferClassNames = [\n            "Int8Array",\n            "Uint8Array",\n            "Uint8ClampedArray",\n            "Int16Array",\n            "Uint16Array",\n            "Int32Array",\n            "Uint32Array",\n            "Float32Array",\n            "Float64Array",\n            "ArrayBuffer"\n          ];\n          function includes(a, v) {\n            return a.indexOf(v) !== -1;\n          }\n          __name(includes, "includes");\n          function isArrayBuffer(o) {\n            return includes(arrayBufferClassNames, getObjectTypeName(o)) || isPrototypeOf(global2.ArrayBuffer, o);\n          }\n          __name(isArrayBuffer, "isArrayBuffer");\n          function concatTypedarrays(chunks) {\n            var size = 0;\n            var j = chunks.length;\n            while (j--) {\n              size += chunks[j].length;\n            }\n            var b = new Uint8Array(size);\n            var offset = 0;\n            for (var i = 0; i < chunks.length; i++) {\n              var chunk = chunks[i];\n              b.set(chunk, offset);\n              offset += chunk.byteLength || chunk.length;\n            }\n            return b;\n          }\n          __name(concatTypedarrays, "concatTypedarrays");\n          function Blob3(chunks, opts) {\n            chunks = chunks ? chunks.slice() : [];\n            opts = opts == null ? {} : opts;\n            for (var i = 0, len = chunks.length; i < len; i++) {\n              var chunk = chunks[i];\n              if (chunk instanceof Blob3) {\n                chunks[i] = chunk._buffer;\n              } else if (typeof chunk === "string") {\n                chunks[i] = textEncode(chunk);\n              } else if (isDataView(chunk)) {\n                chunks[i] = bufferClone(chunk.buffer);\n              } else if (isArrayBuffer(chunk)) {\n                chunks[i] = bufferClone(chunk);\n              } else {\n                chunks[i] = textEncode(String(chunk));\n              }\n            }\n            this._buffer = global2.Uint8Array ? concatTypedarrays(chunks) : [].concat.apply([], chunks);\n            this.size = this._buffer.length;\n            this.type = opts.type || "";\n            if (/[^\\u0020-\\u007E]/.test(this.type)) {\n              this.type = "";\n            } else {\n              this.type = this.type.toLowerCase();\n            }\n          }\n          __name(Blob3, "Blob");\n          Blob3.prototype.arrayBuffer = function() {\n            return Promise.resolve(this._buffer.buffer || this._buffer);\n          };\n          Blob3.prototype.text = function() {\n            return Promise.resolve(textDecode(this._buffer));\n          };\n          Blob3.prototype.slice = function(start, end, type) {\n            var slice = this._buffer.slice(start || 0, end || this._buffer.length);\n            return new Blob3([slice], { type });\n          };\n          Blob3.prototype.toString = function() {\n            return "[object Blob]";\n          };\n          function File2(chunks, name, opts) {\n            opts = opts || {};\n            var a = Blob3.call(this, chunks, opts) || this;\n            a.name = name.replace(/\\//g, ":");\n            a.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : /* @__PURE__ */ new Date();\n            a.lastModified = +a.lastModifiedDate;\n            return a;\n          }\n          __name(File2, "File");\n          File2.prototype = create(Blob3.prototype);\n          File2.prototype.constructor = File2;\n          if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(File2, Blob3);\n          } else {\n            try {\n              File2.__proto__ = Blob3;\n            } catch (e) {\n            }\n          }\n          File2.prototype.toString = function() {\n            return "[object File]";\n          };\n          function FileReader2() {\n            if (!(this instanceof FileReader2)) {\n              throw new TypeError("Failed to construct \'FileReader\': Please use the \'new\' operator, this DOM object constructor cannot be called as a function.");\n            }\n            var delegate = document.createDocumentFragment();\n            this.addEventListener = delegate.addEventListener;\n            this.dispatchEvent = function(evt) {\n              var local = this["on" + evt.type];\n              if (typeof local === "function")\n                local(evt);\n              delegate.dispatchEvent(evt);\n            };\n            this.removeEventListener = delegate.removeEventListener;\n          }\n          __name(FileReader2, "FileReader");\n          function _read(fr, blob2, kind) {\n            if (!(blob2 instanceof Blob3)) {\n              throw new TypeError("Failed to execute \'" + kind + "\' on \'FileReader\': parameter 1 is not of type \'Blob\'.");\n            }\n            fr.result = "";\n            setTimeout(function() {\n              this.readyState = FileReader2.LOADING;\n              fr.dispatchEvent(new Event("load"));\n              fr.dispatchEvent(new Event("loadend"));\n            });\n          }\n          __name(_read, "_read");\n          FileReader2.EMPTY = 0;\n          FileReader2.LOADING = 1;\n          FileReader2.DONE = 2;\n          FileReader2.prototype.error = null;\n          FileReader2.prototype.onabort = null;\n          FileReader2.prototype.onerror = null;\n          FileReader2.prototype.onload = null;\n          FileReader2.prototype.onloadend = null;\n          FileReader2.prototype.onloadstart = null;\n          FileReader2.prototype.onprogress = null;\n          FileReader2.prototype.readAsDataURL = function(blob2) {\n            _read(this, blob2, "readAsDataURL");\n            this.result = "data:" + blob2.type + ";base64," + array2base64(blob2._buffer);\n          };\n          FileReader2.prototype.readAsText = function(blob2) {\n            _read(this, blob2, "readAsText");\n            this.result = textDecode(blob2._buffer);\n          };\n          FileReader2.prototype.readAsArrayBuffer = function(blob2) {\n            _read(this, blob2, "readAsText");\n            this.result = (blob2._buffer.buffer || blob2._buffer).slice();\n          };\n          FileReader2.prototype.abort = function() {\n          };\n          URL.createObjectURL = function(blob2) {\n            return blob2 instanceof Blob3 ? "data:" + blob2.type + ";base64," + array2base64(blob2._buffer) : createObjectURL.call(URL, blob2);\n          };\n          URL.revokeObjectURL = function(url) {\n            revokeObjectURL && revokeObjectURL.call(URL, url);\n          };\n          var _send = global2.XMLHttpRequest && global2.XMLHttpRequest.prototype.send;\n          if (_send) {\n            XMLHttpRequest.prototype.send = function(data) {\n              if (data instanceof Blob3) {\n                this.setRequestHeader("Content-Type", data.type);\n                _send.call(this, textDecode(data._buffer));\n              } else {\n                _send.call(this, data);\n              }\n            };\n          }\n          exports2.Blob = Blob3;\n          exports2.File = File2;\n          exports2.FileReader = FileReader2;\n          exports2.URL = URL;\n        }\n        __name(FakeBlobBuilder, "FakeBlobBuilder");\n        function fixFileAndXHR() {\n          var isIE = !!global2.ActiveXObject || "-ms-scroll-limit" in document.documentElement.style && "-ms-ime-align" in document.documentElement.style;\n          var _send = global2.XMLHttpRequest && global2.XMLHttpRequest.prototype.send;\n          if (isIE && _send) {\n            XMLHttpRequest.prototype.send = function(data) {\n              if (data instanceof Blob) {\n                this.setRequestHeader("Content-Type", data.type);\n                _send.call(this, data);\n              } else {\n                _send.call(this, data);\n              }\n            };\n          }\n          try {\n            new File([], "");\n            exports2.File = global2.File;\n            exports2.FileReader = global2.FileReader;\n          } catch (e) {\n            try {\n              exports2.File = new Function(\n                \'class File extends Blob {constructor(chunks, name, opts) {opts = opts || {};super(chunks, opts || {});this.name = name.replace(/\\\\//g, ":");this.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : new Date();this.lastModified = +this.lastModifiedDate;}};return new File([], ""), File\'\n              )();\n            } catch (e2) {\n              exports2.File = function(b, d, c) {\n                var blob2 = new Blob(b, c);\n                var t = c && void 0 !== c.lastModified ? new Date(c.lastModified) : /* @__PURE__ */ new Date();\n                blob2.name = d.replace(/\\//g, ":");\n                blob2.lastModifiedDate = t;\n                blob2.lastModified = +t;\n                blob2.toString = function() {\n                  return "[object File]";\n                };\n                if (strTag) {\n                  blob2[strTag] = "File";\n                }\n                return blob2;\n              };\n            }\n          }\n        }\n        __name(fixFileAndXHR, "fixFileAndXHR");\n        if (blobSupported) {\n          fixFileAndXHR();\n          exports2.Blob = blobSupportsArrayBufferView ? global2.Blob : BlobConstructor;\n        } else if (blobBuilderSupported) {\n          fixFileAndXHR();\n          exports2.Blob = BlobBuilderConstructor;\n        } else {\n          FakeBlobBuilder();\n        }\n        if (strTag) {\n          if (!exports2.File.prototype[strTag])\n            exports2.File.prototype[strTag] = "File";\n          if (!exports2.Blob.prototype[strTag])\n            exports2.Blob.prototype[strTag] = "Blob";\n          if (!exports2.FileReader.prototype[strTag])\n            exports2.FileReader.prototype[strTag] = "FileReader";\n        }\n        var blob = exports2.Blob.prototype;\n        var stream;\n        try {\n          new ReadableStream({ type: "bytes" });\n          stream = /* @__PURE__ */ __name(function stream2() {\n            var position = 0;\n            var blob2 = this;\n            return new ReadableStream({\n              type: "bytes",\n              autoAllocateChunkSize: 524288,\n              pull: function(controller) {\n                var v = controller.byobRequest.view;\n                var chunk = blob2.slice(position, position + v.byteLength);\n                return chunk.arrayBuffer().then(function(buffer) {\n                  var uint8array = new Uint8Array(buffer);\n                  var bytesRead = uint8array.byteLength;\n                  position += bytesRead;\n                  v.set(uint8array);\n                  controller.byobRequest.respond(bytesRead);\n                  if (position >= blob2.size)\n                    controller.close();\n                });\n              }\n            });\n          }, "stream");\n        } catch (e) {\n          try {\n            new ReadableStream({});\n            stream = /* @__PURE__ */ __name(function stream2(blob2) {\n              var position = 0;\n              return new ReadableStream({\n                pull: function(controller) {\n                  var chunk = blob2.slice(position, position + 524288);\n                  return chunk.arrayBuffer().then(function(buffer) {\n                    position += buffer.byteLength;\n                    var uint8array = new Uint8Array(buffer);\n                    controller.enqueue(uint8array);\n                    if (position == blob2.size)\n                      controller.close();\n                  });\n                }\n              });\n            }, "stream");\n          } catch (e2) {\n            try {\n              new Response("").body.getReader().read();\n              stream = /* @__PURE__ */ __name(function stream2() {\n                return new Response(this).body;\n              }, "stream");\n            } catch (e3) {\n              stream = /* @__PURE__ */ __name(function stream2() {\n                throw new Error("Include https://github.com/MattiasBuelens/web-streams-polyfill");\n              }, "stream");\n            }\n          }\n        }\n        function promisify(obj) {\n          return new Promise(function(resolve, reject) {\n            obj.onload = obj.onerror = function(evt) {\n              obj.onload = obj.onerror = null;\n              evt.type === "load" ? resolve(obj.result || obj) : reject(new Error("Failed to read the blob/file"));\n            };\n          });\n        }\n        __name(promisify, "promisify");\n        if (!blob.arrayBuffer) {\n          blob.arrayBuffer = /* @__PURE__ */ __name(function arrayBuffer() {\n            var fr = new FileReader();\n            fr.readAsArrayBuffer(this);\n            return promisify(fr);\n          }, "arrayBuffer");\n        }\n        if (!blob.text) {\n          blob.text = /* @__PURE__ */ __name(function text() {\n            var fr = new FileReader();\n            fr.readAsText(this);\n            return promisify(fr);\n          }, "text");\n        }\n        if (!blob.stream) {\n          blob.stream = stream;\n        }\n      });\n    })(\n      typeof self !== "undefined" && self || typeof window !== "undefined" && window || typeof global !== "undefined" && global || exports\n    );\n  }\n});\n\n// src/primitives/blob.js\nvar blob_exports = {};\n__export(blob_exports, {\n  Blob: () => import_blob_polyfill.Blob\n});\nmodule.exports = __toCommonJS(blob_exports);\ninit_define_process();\nvar import_blob_polyfill = __toESM(require_Blob());\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Blob\n});\n'},168:e=>{e.exports='"use strict";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. "__esModule" has not been set), then set\n  // "default" to the CommonJS "module.exports" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// <define:process>\nvar init_define_process = __esm({\n  "<define:process>"() {\n  }\n});\n\n// ../format/dist/index.js\nvar require_dist = __commonJS({\n  "../format/dist/index.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var __defProp2 = Object.defineProperty;\n    var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;\n    var __getOwnPropNames2 = Object.getOwnPropertyNames;\n    var __hasOwnProp2 = Object.prototype.hasOwnProperty;\n    var __export2 = /* @__PURE__ */ __name((target, all) => {\n      for (var name in all)\n        __defProp2(target, name, { get: all[name], enumerable: true });\n    }, "__export");\n    var __copyProps2 = /* @__PURE__ */ __name((to, from, except, desc) => {\n      if (from && typeof from === "object" || typeof from === "function") {\n        for (let key of __getOwnPropNames2(from))\n          if (!__hasOwnProp2.call(to, key) && key !== except)\n            __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });\n      }\n      return to;\n    }, "__copyProps");\n    var __toCommonJS2 = /* @__PURE__ */ __name((mod) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod), "__toCommonJS");\n    var src_exports = {};\n    __export2(src_exports, {\n      createFormat: () => createFormat2\n    });\n    module2.exports = __toCommonJS2(src_exports);\n    var ReflectGetOwnPropertyDescriptor = Reflect.getOwnPropertyDescriptor;\n    function GetOwnGetter(target, key) {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      return descriptor ? descriptor.get : void 0;\n    }\n    __name(GetOwnGetter, "GetOwnGetter");\n    var ReflectGetPrototypeOf = Reflect.getPrototypeOf;\n    var TypedArray = ReflectGetPrototypeOf(Uint8Array);\n    var ArrayPrototypeFilter = Array.prototype.filter;\n    var ArrayPrototypePush = Array.prototype.push;\n    var DatePrototypeGetTime = Date.prototype.getTime;\n    var DatePrototypeToISOString = Date.prototype.toISOString;\n    var ObjectGetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\n    var ObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n    var ObjectGetOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var ObjectKeys = Object.keys;\n    var ObjectPrototypePropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n    var ObjectPrototypeToString = Object.prototype.toString;\n    var MapPrototypeGetSize = GetOwnGetter(Map.prototype, "size");\n    var SetPrototypeGetSize = GetOwnGetter(Set.prototype, "size");\n    var StringPrototypeIncludes = String.prototype.includes;\n    var SymbolIterator = Symbol.iterator;\n    var SymbolPrototypeToString = Symbol.prototype.toString;\n    var TypedArrayPrototypeGetLength = GetOwnGetter(\n      TypedArray.prototype,\n      "length"\n    );\n    var typedArrayStrings = /* @__PURE__ */ new Set([\n      "[object BigInt64Array]",\n      "[object BigUint64Array]",\n      "[object Float32Array]",\n      "[object Float64Array]",\n      "[object Int8Array]",\n      "[object Int16Array]",\n      "[object Int32Array]",\n      "[object Uint8Array]",\n      "[object Uint8ClampedArray]",\n      "[object Uint16Array]",\n      "[object Uint32Array]"\n    ]);\n    function getOwnNonIndexProperties(object, filter) {\n      const indexes = Array.isArray(object) || isTypedArray(object) ? new Set([...object.keys()].map((v) => v.toString())) : void 0;\n      return Object.entries(ObjectGetOwnPropertyDescriptors(object)).filter(([key, desc]) => {\n        if (indexes && indexes.has(key)) {\n          return false;\n        }\n        if (filter === 1 && !desc.enumerable) {\n          return false;\n        }\n        return true;\n      }).map(([key]) => key);\n    }\n    __name(getOwnNonIndexProperties, "getOwnNonIndexProperties");\n    var isTypedArray = /* @__PURE__ */ __name((value) => kind(value, "object") && typedArrayStrings.has(ObjectPrototypeToString.call(value)), "isTypedArray");\n    function kind(value, type) {\n      return typeof value === type;\n    }\n    __name(kind, "kind");\n    var getConstructorName = /* @__PURE__ */ __name((object) => {\n      var _a;\n      return (_a = object.constructor) == null ? void 0 : _a.name;\n    }, "getConstructorName");\n    var getPrefix = /* @__PURE__ */ __name((constructor = "", size = "") => `${constructor}${size} `, "getPrefix");\n    function createFormat2(opts = {}) {\n      if (opts.customInspectSymbol === void 0) {\n        opts.customInspectSymbol = Symbol.for("edge-runtime.inspect.custom");\n      }\n      if (opts.formatError === void 0) {\n        opts.formatError = (error2) => `[${Error.prototype.toString.call(error2)}]`;\n      }\n      const { formatError, customInspectSymbol } = opts;\n      function format2(...args) {\n        const [firstArg] = args;\n        if (!kind(firstArg, "string")) {\n          if (hasCustomSymbol(firstArg, customInspectSymbol)) {\n            return format2(firstArg[customInspectSymbol]({ format: format2 }));\n          } else {\n            return args.map((item) => inspect(item, { customInspectSymbol })).join(" ");\n          }\n        }\n        let index = 1;\n        let str = String(firstArg).replace(/%[sjdOoif%]/g, (token) => {\n          if (token === "%%")\n            return "%";\n          if (index >= args.length)\n            return token;\n          switch (token) {\n            case "%s": {\n              const arg = args[index++];\n              if (hasCustomSymbol(arg, customInspectSymbol)) {\n                return format2(arg[customInspectSymbol]({ format: format2 }));\n              } else if (isDate(arg) || isError(arg) || kind(arg, "bigint")) {\n                return format2(arg);\n              } else {\n                return String(arg);\n              }\n            }\n            case "%j":\n              return safeStringify(args[index++]);\n            case "%d": {\n              const arg = args[index++];\n              if (kind(arg, "bigint")) {\n                return format2(arg);\n              } else {\n                return String(Number(arg));\n              }\n            }\n            case "%O":\n              return inspect(args[index++], { customInspectSymbol });\n            case "%o":\n              return inspect(args[index++], {\n                customInspectSymbol,\n                showHidden: true,\n                depth: 4\n              });\n            case "%i": {\n              const arg = args[index++];\n              if (kind(arg, "bigint")) {\n                return format2(arg);\n              } else {\n                return String(parseInt(arg, 10));\n              }\n            }\n            case "%f":\n              return String(parseFloat(args[index++]));\n            default:\n              return token;\n          }\n        });\n        for (let arg = args[index]; index < args.length; arg = args[++index]) {\n          if (arg === null || !kind(arg, "object")) {\n            str += " " + arg;\n          } else {\n            str += " " + inspect(arg);\n          }\n        }\n        return str;\n      }\n      __name(format2, "format");\n      function formatValue(ctx, value, recurseTimes) {\n        if (hasCustomSymbol(value, customInspectSymbol)) {\n          return format2(value[customInspectSymbol]({ format: format2 }));\n        }\n        const formattedPrimitive = formatPrimitive(value);\n        if (formattedPrimitive !== void 0) {\n          return formattedPrimitive;\n        }\n        if (ctx.seen.includes(value)) {\n          let index = 1;\n          if (ctx.circular === void 0) {\n            ctx.circular = /* @__PURE__ */ new Map();\n            ctx.circular.set(value, index);\n          } else {\n            index = ctx.circular.get(value);\n            if (index === void 0) {\n              index = ctx.circular.size + 1;\n              ctx.circular.set(value, index);\n            }\n          }\n          return `[Circular *${index}]`;\n        }\n        return formatRaw(ctx, value, recurseTimes);\n      }\n      __name(formatValue, "formatValue");\n      function formatRaw(ctx, value, recurseTimes) {\n        let keys = [];\n        const constructor = getConstructorName(value);\n        let base = "";\n        let formatter = /* @__PURE__ */ __name(() => [], "formatter");\n        let braces = ["", ""];\n        let noIterator = true;\n        const filter = ctx.showHidden ? 0 : 1;\n        if (SymbolIterator in value) {\n          noIterator = false;\n          if (Array.isArray(value)) {\n            const prefix = constructor !== "Array" ? getPrefix(constructor, `(${value.length})`) : "";\n            keys = getOwnNonIndexProperties(value, filter);\n            braces = [`${prefix}[`, "]"];\n            if (value.length === 0 && keys.length === 0) {\n              return `${braces[0]}]`;\n            }\n            formatter = formatArray;\n          } else if (isSet(value)) {\n            const size = SetPrototypeGetSize.call(value);\n            const prefix = getPrefix(constructor, `(${size})`);\n            keys = getKeys(value, ctx.showHidden);\n            formatter = formatSet;\n            if (size === 0 && keys.length === 0) {\n              return `${prefix}{}`;\n            }\n            braces = [`${prefix}{`, "}"];\n          } else if (isMap(value)) {\n            const size = MapPrototypeGetSize.call(value);\n            const prefix = getPrefix(constructor, `(${size})`);\n            keys = getKeys(value, ctx.showHidden);\n            formatter = formatMap;\n            if (size === 0 && keys.length === 0) {\n              return `${prefix}{}`;\n            }\n            braces = [`${prefix}{`, "}"];\n          } else if (isTypedArray(value)) {\n            keys = getOwnNonIndexProperties(value, filter);\n            const size = TypedArrayPrototypeGetLength.call(value);\n            const prefix = getPrefix(constructor, `(${size})`);\n            braces = [`${prefix}[`, "]"];\n            if (value.length === 0 && keys.length === 0)\n              return `${braces[0]}]`;\n            formatter = formatTypedArray.bind(null, size);\n          } else {\n            noIterator = true;\n          }\n        }\n        if (noIterator) {\n          keys = getKeys(value, ctx.showHidden);\n          braces = ["{", "}"];\n          if (constructor === void 0) {\n            if (keys.length === 0) {\n              return `[Object: null prototype] {}`;\n            }\n          } else if (constructor === "Object") {\n            if (keys.length === 0) {\n              return `{}`;\n            }\n          } else if (kind(value, "function")) {\n            base = `[Function${value.name ? ": " + value.name : ""}]`;\n            if (keys.length === 0) {\n              return base;\n            }\n          } else if (isRegExp(value)) {\n            base = RegExp.prototype.toString.call(value);\n            if (keys.length === 0) {\n              return base;\n            }\n            base = " " + base;\n          } else if (isDate(value)) {\n            base = Number.isNaN(DatePrototypeGetTime.call(value)) ? Date.prototype.toString.call(value) : DatePrototypeToISOString.call(value);\n            if (keys.length === 0) {\n              return base;\n            }\n            base = " " + base;\n          } else if (isError(value)) {\n            base = formatError(value);\n            if (keys.length === 0) {\n              return base;\n            }\n            base = " " + base;\n          } else if (hasCustomSymbol(value, ctx.customInspectSymbol)) {\n            base = format2(value[ctx.customInspectSymbol]({ format: format2 }));\n            if (keys.length === 0) {\n              return base;\n            }\n            base = " " + base;\n          } else {\n            braces[0] = `${getPrefix(constructor)}{`;\n          }\n        }\n        if (recurseTimes && recurseTimes < 0) {\n          return isRegExp(value) ? RegExp.prototype.toString.call(value) : "[Object]";\n        }\n        ctx.seen.push(value);\n        const visibleKeys = new Set(keys);\n        const output = formatter(ctx, value, recurseTimes, visibleKeys, keys);\n        for (let i = 0; i < keys.length; i++) {\n          output.push(\n            formatProperty(\n              ctx,\n              value,\n              recurseTimes,\n              visibleKeys,\n              keys[i],\n              false\n            )\n          );\n        }\n        if (ctx.circular !== void 0) {\n          const index = ctx.circular.get(value);\n          if (index !== void 0) {\n            const reference = `<ref *${index}>`;\n            base = base === "" ? reference : `${reference} ${base}`;\n          }\n        }\n        ctx.seen.pop();\n        return reduceToSingleString(output, base, braces);\n      }\n      __name(formatRaw, "formatRaw");\n      function inspect(value, opts2) {\n        opts2 = Object.assign({ seen: [], depth: 2 }, opts2);\n        return formatValue(opts2, value, opts2.depth);\n      }\n      __name(inspect, "inspect");\n      function formatProperty(ctx, value, recurseTimes, visibleKeys, key, isArray) {\n        let name;\n        let str;\n        const desc = Object.getOwnPropertyDescriptor(value, key) || {\n          value: value[key]\n        };\n        if (desc.value !== void 0) {\n          str = formatValue(ctx, desc.value, recurseTimes);\n        } else if (desc.get) {\n          str = desc.set ? "[Getter/Setter]" : "[Getter]";\n        } else if (desc.set) {\n          str = "[Setter]";\n        } else {\n          str = "undefined";\n        }\n        if (isArray) {\n          return str;\n        }\n        if (kind(key, "symbol")) {\n          name = `[${SymbolPrototypeToString.call(key)}]`;\n        } else if (!visibleKeys.has(key)) {\n          name = "[" + key + "]";\n        } else {\n          name = key;\n        }\n        return `${name}: ${str}`;\n      }\n      __name(formatProperty, "formatProperty");\n      function formatArray(ctx, value, recurseTimes, visibleKeys) {\n        const output = [];\n        for (let index = 0; index < value.length; ++index) {\n          if (Object.prototype.hasOwnProperty.call(value, String(index))) {\n            output.push(\n              formatProperty(\n                ctx,\n                value,\n                recurseTimes,\n                visibleKeys,\n                String(index),\n                true\n              )\n            );\n          } else {\n            output.push("");\n          }\n        }\n        return output;\n      }\n      __name(formatArray, "formatArray");\n      function formatTypedArray(length, ctx, value, recurseTimes) {\n        const output = new Array(length);\n        for (let i = 0; i < length; ++i) {\n          output[i] = value.length > 0 && kind(value[0], "number") ? String(value[i]) : formatBigInt(value[i]);\n        }\n        if (ctx.showHidden) {\n          for (const key of [\n            "BYTES_PER_ELEMENT",\n            "length",\n            "byteLength",\n            "byteOffset",\n            "buffer"\n          ]) {\n            const str = formatValue(ctx, value[key], recurseTimes);\n            ArrayPrototypePush.call(output, `[${String(key)}]: ${str}`);\n          }\n        }\n        return output;\n      }\n      __name(formatTypedArray, "formatTypedArray");\n      function formatSet(ctx, value, recurseTimes) {\n        const output = [];\n        for (const v of value) {\n          ArrayPrototypePush.call(output, formatValue(ctx, v, recurseTimes));\n        }\n        return output;\n      }\n      __name(formatSet, "formatSet");\n      function formatMap(ctx, value, recurseTimes) {\n        const output = [];\n        for (const { 0: k, 1: v } of value) {\n          output.push(\n            `${formatValue(ctx, k, recurseTimes)} => ${formatValue(\n              ctx,\n              v,\n              recurseTimes\n            )}`\n          );\n        }\n        return output;\n      }\n      __name(formatMap, "formatMap");\n      return format2;\n    }\n    __name(createFormat2, "createFormat");\n    var formatBigInt = /* @__PURE__ */ __name((bigint) => `${bigint}n`, "formatBigInt");\n    function formatPrimitive(value) {\n      if (value === null)\n        return "null";\n      if (value === void 0)\n        return "undefined";\n      if (kind(value, "string")) {\n        return `\'${JSON.stringify(value).replace(/^"|"$/g, "").replace(/\'/g, "\\\\\'").replace(/\\\\"/g, \'"\')}\'`;\n      }\n      if (kind(value, "boolean"))\n        return "" + value;\n      if (kind(value, "number"))\n        return "" + value;\n      if (kind(value, "bigint"))\n        return formatBigInt(value);\n      if (kind(value, "symbol"))\n        return value.toString();\n    }\n    __name(formatPrimitive, "formatPrimitive");\n    function hasCustomSymbol(value, customInspectSymbol) {\n      return value !== null && kind(value, "object") && customInspectSymbol in value && kind(value[customInspectSymbol], "function");\n    }\n    __name(hasCustomSymbol, "hasCustomSymbol");\n    function isRegExp(value) {\n      return kind(value, "object") && Object.prototype.toString.call(value) === "[object RegExp]";\n    }\n    __name(isRegExp, "isRegExp");\n    function isDate(value) {\n      return kind(value, "object") && Object.prototype.toString.call(value) === "[object Date]";\n    }\n    __name(isDate, "isDate");\n    function isError(value) {\n      return kind(value, "object") && (Object.prototype.toString.call(value) === "[object Error]" || value instanceof Error);\n    }\n    __name(isError, "isError");\n    function isMap(value) {\n      return kind(value, "object") && Object.prototype.toString.call(value) === "[object Map]";\n    }\n    __name(isMap, "isMap");\n    function isSet(value) {\n      return kind(value, "object") && Object.prototype.toString.call(value) === "[object Set]";\n    }\n    __name(isSet, "isSet");\n    function isBelowBreakLength(output, start, base) {\n      const breakLength = 80;\n      let totalLength = output.length + start;\n      if (totalLength + output.length > breakLength) {\n        return false;\n      }\n      for (let i = 0; i < output.length; i++) {\n        totalLength += output[i].length;\n        if (totalLength > breakLength) {\n          return false;\n        }\n      }\n      return base === "" || !StringPrototypeIncludes.call(base, "\\n");\n    }\n    __name(isBelowBreakLength, "isBelowBreakLength");\n    function reduceToSingleString(output, base, braces) {\n      const start = output.length + braces[0].length + base.length + 10;\n      if (!isBelowBreakLength(output, start, base)) {\n        return (base ? base + " " : "") + braces[0] + "\\n  " + output.join(",\\n  ") + "\\n" + braces[1];\n      }\n      return ((base ? base + " " : "") + braces[0] + " " + output.join(", ") + " " + braces[1]).trim();\n    }\n    __name(reduceToSingleString, "reduceToSingleString");\n    function safeStringify(input) {\n      if (Array.isArray(input)) {\n        input = input.map(\n          (element) => JSON.parse(JSON.stringify(element, makeCircularReplacer()))\n        );\n      }\n      return JSON.stringify(input, makeCircularReplacer());\n    }\n    __name(safeStringify, "safeStringify");\n    function makeCircularReplacer() {\n      const seen = /* @__PURE__ */ new WeakSet();\n      return (key, value) => {\n        if (value !== null && kind(value, "object")) {\n          if (seen.has(value))\n            return "[Circular]";\n          seen.add(value);\n        }\n        return value;\n      };\n    }\n    __name(makeCircularReplacer, "makeCircularReplacer");\n    function getKeys(value, showHidden = false) {\n      let keys;\n      const symbols = ObjectGetOwnPropertySymbols(value);\n      if (showHidden) {\n        keys = ObjectGetOwnPropertyNames(value);\n        if (symbols.length !== 0)\n          ArrayPrototypePush.apply(keys, symbols);\n      } else {\n        try {\n          keys = ObjectKeys(value);\n        } catch (err) {\n          keys = ObjectGetOwnPropertyNames(value);\n        }\n        if (symbols.length !== 0) {\n          const filter = /* @__PURE__ */ __name((key) => ObjectPrototypePropertyIsEnumerable.call(value, key), "filter");\n          ArrayPrototypePush.apply(keys, ArrayPrototypeFilter.call(symbols, filter));\n        }\n      }\n      return keys;\n    }\n    __name(getKeys, "getKeys");\n  }\n});\n\n// src/primitives/console.js\nvar console_exports = {};\n__export(console_exports, {\n  console: () => konsole\n});\nmodule.exports = __toCommonJS(console_exports);\ninit_define_process();\nvar import_format = __toESM(require_dist());\nvar format = (0, import_format.createFormat)();\nvar bareError = console.error.bind(console);\nvar bareLog = console.log.bind(console);\nvar assert = console.assert.bind(console);\nvar time = console.time.bind(console);\nvar timeEnd = console.timeEnd.bind(console);\nvar timeLog = console.timeLog.bind(console);\nvar trace = console.trace.bind(console);\nvar error = /* @__PURE__ */ __name((...args) => bareError(format(...args)), "error");\nvar log = /* @__PURE__ */ __name((...args) => bareLog(format(...args)), "log");\nvar konsole = {\n  assert: (assertion, ...args) => assert(assertion, format(...args)),\n  count: console.count.bind(console),\n  debug: log,\n  dir: console.dir.bind(console),\n  error,\n  info: log,\n  log,\n  time: (...args) => time(format(...args)),\n  timeEnd: (...args) => timeEnd(format(...args)),\n  timeLog,\n  trace,\n  warn: error\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  console\n});\n'},399:e=>{e.exports='"use strict";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. "__esModule" has not been set), then set\n  // "default" to the CommonJS "module.exports" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/crypto.js\nvar crypto_exports = {};\n__export(crypto_exports, {\n  Crypto: () => Crypto2,\n  CryptoKey: () => CryptoKey,\n  SubtleCrypto: () => SubtleCrypto3,\n  crypto: () => crypto2\n});\nmodule.exports = __toCommonJS(crypto_exports);\n\n// ../../node_modules/.pnpm/pvtsutils@1.3.2/node_modules/pvtsutils/build/index.es.js\nvar ARRAY_BUFFER_NAME = "[object ArrayBuffer]";\nvar BufferSourceConverter = class {\n  static isArrayBuffer(data) {\n    return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n  }\n  static toArrayBuffer(data) {\n    if (this.isArrayBuffer(data)) {\n      return data;\n    }\n    if (data.byteLength === data.buffer.byteLength) {\n      return data.buffer;\n    }\n    return this.toUint8Array(data).slice().buffer;\n  }\n  static toUint8Array(data) {\n    return this.toView(data, Uint8Array);\n  }\n  static toView(data, type) {\n    if (data.constructor === type) {\n      return data;\n    }\n    if (this.isArrayBuffer(data)) {\n      return new type(data);\n    }\n    if (this.isArrayBufferView(data)) {\n      return new type(data.buffer, data.byteOffset, data.byteLength);\n    }\n    throw new TypeError("The provided value is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n  }\n  static isBufferSource(data) {\n    return this.isArrayBufferView(data) || this.isArrayBuffer(data);\n  }\n  static isArrayBufferView(data) {\n    return ArrayBuffer.isView(data) || data && this.isArrayBuffer(data.buffer);\n  }\n  static isEqual(a, b) {\n    const aView = BufferSourceConverter.toUint8Array(a);\n    const bView = BufferSourceConverter.toUint8Array(b);\n    if (aView.length !== bView.byteLength) {\n      return false;\n    }\n    for (let i = 0; i < aView.length; i++) {\n      if (aView[i] !== bView[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  static concat(...args) {\n    if (Array.isArray(args[0])) {\n      const buffers = args[0];\n      let size = 0;\n      for (const buffer of buffers) {\n        size += buffer.byteLength;\n      }\n      const res = new Uint8Array(size);\n      let offset = 0;\n      for (const buffer of buffers) {\n        const view = this.toUint8Array(buffer);\n        res.set(view, offset);\n        offset += view.length;\n      }\n      if (args[1]) {\n        return this.toView(res, args[1]);\n      }\n      return res.buffer;\n    } else {\n      return this.concat(args);\n    }\n  }\n};\n__name(BufferSourceConverter, "BufferSourceConverter");\nvar Utf8Converter = class {\n  static fromString(text) {\n    const s = unescape(encodeURIComponent(text));\n    const uintArray = new Uint8Array(s.length);\n    for (let i = 0; i < s.length; i++) {\n      uintArray[i] = s.charCodeAt(i);\n    }\n    return uintArray.buffer;\n  }\n  static toString(buffer) {\n    const buf = BufferSourceConverter.toUint8Array(buffer);\n    let encodedString = "";\n    for (let i = 0; i < buf.length; i++) {\n      encodedString += String.fromCharCode(buf[i]);\n    }\n    const decodedString = decodeURIComponent(escape(encodedString));\n    return decodedString;\n  }\n};\n__name(Utf8Converter, "Utf8Converter");\nvar Utf16Converter = class {\n  static toString(buffer, littleEndian = false) {\n    const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n    const dataView = new DataView(arrayBuffer);\n    let res = "";\n    for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n      const code = dataView.getUint16(i, littleEndian);\n      res += String.fromCharCode(code);\n    }\n    return res;\n  }\n  static fromString(text, littleEndian = false) {\n    const res = new ArrayBuffer(text.length * 2);\n    const dataView = new DataView(res);\n    for (let i = 0; i < text.length; i++) {\n      dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n    }\n    return res;\n  }\n};\n__name(Utf16Converter, "Utf16Converter");\nvar Convert = class {\n  static isHex(data) {\n    return typeof data === "string" && /^[a-z0-9]+$/i.test(data);\n  }\n  static isBase64(data) {\n    return typeof data === "string" && /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(data);\n  }\n  static isBase64Url(data) {\n    return typeof data === "string" && /^[a-zA-Z0-9-_]+$/i.test(data);\n  }\n  static ToString(buffer, enc = "utf8") {\n    const buf = BufferSourceConverter.toUint8Array(buffer);\n    switch (enc.toLowerCase()) {\n      case "utf8":\n        return this.ToUtf8String(buf);\n      case "binary":\n        return this.ToBinary(buf);\n      case "hex":\n        return this.ToHex(buf);\n      case "base64":\n        return this.ToBase64(buf);\n      case "base64url":\n        return this.ToBase64Url(buf);\n      case "utf16le":\n        return Utf16Converter.toString(buf, true);\n      case "utf16":\n      case "utf16be":\n        return Utf16Converter.toString(buf);\n      default:\n        throw new Error(`Unknown type of encoding \'${enc}\'`);\n    }\n  }\n  static FromString(str, enc = "utf8") {\n    if (!str) {\n      return new ArrayBuffer(0);\n    }\n    switch (enc.toLowerCase()) {\n      case "utf8":\n        return this.FromUtf8String(str);\n      case "binary":\n        return this.FromBinary(str);\n      case "hex":\n        return this.FromHex(str);\n      case "base64":\n        return this.FromBase64(str);\n      case "base64url":\n        return this.FromBase64Url(str);\n      case "utf16le":\n        return Utf16Converter.fromString(str, true);\n      case "utf16":\n      case "utf16be":\n        return Utf16Converter.fromString(str);\n      default:\n        throw new Error(`Unknown type of encoding \'${enc}\'`);\n    }\n  }\n  static ToBase64(buffer) {\n    const buf = BufferSourceConverter.toUint8Array(buffer);\n    if (typeof btoa !== "undefined") {\n      const binary = this.ToString(buf, "binary");\n      return btoa(binary);\n    } else {\n      return Buffer.from(buf).toString("base64");\n    }\n  }\n  static FromBase64(base64) {\n    const formatted = this.formatString(base64);\n    if (!formatted) {\n      return new ArrayBuffer(0);\n    }\n    if (!Convert.isBase64(formatted)) {\n      throw new TypeError("Argument \'base64Text\' is not Base64 encoded");\n    }\n    if (typeof atob !== "undefined") {\n      return this.FromBinary(atob(formatted));\n    } else {\n      return new Uint8Array(Buffer.from(formatted, "base64")).buffer;\n    }\n  }\n  static FromBase64Url(base64url) {\n    const formatted = this.formatString(base64url);\n    if (!formatted) {\n      return new ArrayBuffer(0);\n    }\n    if (!Convert.isBase64Url(formatted)) {\n      throw new TypeError("Argument \'base64url\' is not Base64Url encoded");\n    }\n    return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, "+").replace(/\\_/g, "/")));\n  }\n  static ToBase64Url(data) {\n    return this.ToBase64(data).replace(/\\+/g, "-").replace(/\\//g, "_").replace(/\\=/g, "");\n  }\n  static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n    switch (encoding) {\n      case "ascii":\n        return this.FromBinary(text);\n      case "utf8":\n        return Utf8Converter.fromString(text);\n      case "utf16":\n      case "utf16be":\n        return Utf16Converter.fromString(text);\n      case "utf16le":\n      case "usc2":\n        return Utf16Converter.fromString(text, true);\n      default:\n        throw new Error(`Unknown type of encoding \'${encoding}\'`);\n    }\n  }\n  static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n    switch (encoding) {\n      case "ascii":\n        return this.ToBinary(buffer);\n      case "utf8":\n        return Utf8Converter.toString(buffer);\n      case "utf16":\n      case "utf16be":\n        return Utf16Converter.toString(buffer);\n      case "utf16le":\n      case "usc2":\n        return Utf16Converter.toString(buffer, true);\n      default:\n        throw new Error(`Unknown type of encoding \'${encoding}\'`);\n    }\n  }\n  static FromBinary(text) {\n    const stringLength = text.length;\n    const resultView = new Uint8Array(stringLength);\n    for (let i = 0; i < stringLength; i++) {\n      resultView[i] = text.charCodeAt(i);\n    }\n    return resultView.buffer;\n  }\n  static ToBinary(buffer) {\n    const buf = BufferSourceConverter.toUint8Array(buffer);\n    let res = "";\n    for (let i = 0; i < buf.length; i++) {\n      res += String.fromCharCode(buf[i]);\n    }\n    return res;\n  }\n  static ToHex(buffer) {\n    const buf = BufferSourceConverter.toUint8Array(buffer);\n    const splitter = "";\n    const res = [];\n    const len = buf.length;\n    for (let i = 0; i < len; i++) {\n      const char = buf[i].toString(16).padStart(2, "0");\n      res.push(char);\n    }\n    return res.join(splitter);\n  }\n  static FromHex(hexString) {\n    let formatted = this.formatString(hexString);\n    if (!formatted) {\n      return new ArrayBuffer(0);\n    }\n    if (!Convert.isHex(formatted)) {\n      throw new TypeError("Argument \'hexString\' is not HEX encoded");\n    }\n    if (formatted.length % 2) {\n      formatted = `0${formatted}`;\n    }\n    const res = new Uint8Array(formatted.length / 2);\n    for (let i = 0; i < formatted.length; i = i + 2) {\n      const c = formatted.slice(i, i + 2);\n      res[i / 2] = parseInt(c, 16);\n    }\n    return res.buffer;\n  }\n  static ToUtf16String(buffer, littleEndian = false) {\n    return Utf16Converter.toString(buffer, littleEndian);\n  }\n  static FromUtf16String(text, littleEndian = false) {\n    return Utf16Converter.fromString(text, littleEndian);\n  }\n  static Base64Padding(base64) {\n    const padCount = 4 - base64.length % 4;\n    if (padCount < 4) {\n      for (let i = 0; i < padCount; i++) {\n        base64 += "=";\n      }\n    }\n    return base64;\n  }\n  static formatString(data) {\n    return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, "")) || "";\n  }\n};\n__name(Convert, "Convert");\nConvert.DEFAULT_UTF8_ENCODING = "utf8";\nfunction combine(...buf) {\n  const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n  const res = new Uint8Array(totalByteLength);\n  let currentPos = 0;\n  buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n    for (const item2 of arr) {\n      res[currentPos++] = item2;\n    }\n  });\n  return res.buffer;\n}\n__name(combine, "combine");\n\n// ../../node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js\nvar index_es_exports = {};\n__export(index_es_exports, {\n  Any: () => Any,\n  BaseBlock: () => BaseBlock,\n  BaseStringBlock: () => BaseStringBlock,\n  BitString: () => BitString,\n  BmpString: () => BmpString,\n  Boolean: () => Boolean,\n  CharacterString: () => CharacterString,\n  Choice: () => Choice,\n  Constructed: () => Constructed,\n  DATE: () => DATE,\n  DateTime: () => DateTime,\n  Duration: () => Duration,\n  EndOfContent: () => EndOfContent,\n  Enumerated: () => Enumerated,\n  GeneralString: () => GeneralString,\n  GeneralizedTime: () => GeneralizedTime,\n  GraphicString: () => GraphicString,\n  HexBlock: () => HexBlock,\n  IA5String: () => IA5String,\n  Integer: () => Integer,\n  Null: () => Null,\n  NumericString: () => NumericString,\n  ObjectIdentifier: () => ObjectIdentifier,\n  OctetString: () => OctetString,\n  Primitive: () => Primitive,\n  PrintableString: () => PrintableString,\n  RawData: () => RawData,\n  RelativeObjectIdentifier: () => RelativeObjectIdentifier,\n  Repeated: () => Repeated,\n  Sequence: () => Sequence,\n  Set: () => Set,\n  TIME: () => TIME,\n  TeletexString: () => TeletexString,\n  TimeOfDay: () => TimeOfDay,\n  UTCTime: () => UTCTime,\n  UniversalString: () => UniversalString,\n  Utf8String: () => Utf8String,\n  ValueBlock: () => ValueBlock,\n  VideotexString: () => VideotexString,\n  ViewWriter: () => ViewWriter,\n  VisibleString: () => VisibleString,\n  compareSchema: () => compareSchema,\n  fromBER: () => fromBER,\n  verifySchema: () => verifySchema\n});\n\n// ../../node_modules/.pnpm/pvutils@1.1.3/node_modules/pvutils/build/utils.es.js\nfunction utilFromBase(inputBuffer, inputBase) {\n  let result = 0;\n  if (inputBuffer.length === 1) {\n    return inputBuffer[0];\n  }\n  for (let i = inputBuffer.length - 1; i >= 0; i--) {\n    result += inputBuffer[inputBuffer.length - 1 - i] * Math.pow(2, inputBase * i);\n  }\n  return result;\n}\n__name(utilFromBase, "utilFromBase");\nfunction utilToBase(value, base, reserved = -1) {\n  const internalReserved = reserved;\n  let internalValue = value;\n  let result = 0;\n  let biggest = Math.pow(2, base);\n  for (let i = 1; i < 8; i++) {\n    if (value < biggest) {\n      let retBuf;\n      if (internalReserved < 0) {\n        retBuf = new ArrayBuffer(i);\n        result = i;\n      } else {\n        if (internalReserved < i) {\n          return new ArrayBuffer(0);\n        }\n        retBuf = new ArrayBuffer(internalReserved);\n        result = internalReserved;\n      }\n      const retView = new Uint8Array(retBuf);\n      for (let j = i - 1; j >= 0; j--) {\n        const basis = Math.pow(2, j * base);\n        retView[result - j - 1] = Math.floor(internalValue / basis);\n        internalValue -= retView[result - j - 1] * basis;\n      }\n      return retBuf;\n    }\n    biggest *= Math.pow(2, base);\n  }\n  return new ArrayBuffer(0);\n}\n__name(utilToBase, "utilToBase");\nfunction utilConcatView(...views) {\n  let outputLength = 0;\n  let prevLength = 0;\n  for (const view of views) {\n    outputLength += view.length;\n  }\n  const retBuf = new ArrayBuffer(outputLength);\n  const retView = new Uint8Array(retBuf);\n  for (const view of views) {\n    retView.set(view, prevLength);\n    prevLength += view.length;\n  }\n  return retView;\n}\n__name(utilConcatView, "utilConcatView");\nfunction utilDecodeTC() {\n  const buf = new Uint8Array(this.valueHex);\n  if (this.valueHex.byteLength >= 2) {\n    const condition1 = buf[0] === 255 && buf[1] & 128;\n    const condition2 = buf[0] === 0 && (buf[1] & 128) === 0;\n    if (condition1 || condition2) {\n      this.warnings.push("Needlessly long format");\n    }\n  }\n  const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\n  const bigIntView = new Uint8Array(bigIntBuffer);\n  for (let i = 0; i < this.valueHex.byteLength; i++) {\n    bigIntView[i] = 0;\n  }\n  bigIntView[0] = buf[0] & 128;\n  const bigInt = utilFromBase(bigIntView, 8);\n  const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\n  const smallIntView = new Uint8Array(smallIntBuffer);\n  for (let j = 0; j < this.valueHex.byteLength; j++) {\n    smallIntView[j] = buf[j];\n  }\n  smallIntView[0] &= 127;\n  const smallInt = utilFromBase(smallIntView, 8);\n  return smallInt - bigInt;\n}\n__name(utilDecodeTC, "utilDecodeTC");\nfunction utilEncodeTC(value) {\n  const modValue = value < 0 ? value * -1 : value;\n  let bigInt = 128;\n  for (let i = 1; i < 8; i++) {\n    if (modValue <= bigInt) {\n      if (value < 0) {\n        const smallInt = bigInt - modValue;\n        const retBuf2 = utilToBase(smallInt, 8, i);\n        const retView2 = new Uint8Array(retBuf2);\n        retView2[0] |= 128;\n        return retBuf2;\n      }\n      let retBuf = utilToBase(modValue, 8, i);\n      let retView = new Uint8Array(retBuf);\n      if (retView[0] & 128) {\n        const tempBuf = retBuf.slice(0);\n        const tempView = new Uint8Array(tempBuf);\n        retBuf = new ArrayBuffer(retBuf.byteLength + 1);\n        retView = new Uint8Array(retBuf);\n        for (let k = 0; k < tempBuf.byteLength; k++) {\n          retView[k + 1] = tempView[k];\n        }\n        retView[0] = 0;\n      }\n      return retBuf;\n    }\n    bigInt *= Math.pow(2, 8);\n  }\n  return new ArrayBuffer(0);\n}\n__name(utilEncodeTC, "utilEncodeTC");\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\n  if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\n    return false;\n  }\n  const view1 = new Uint8Array(inputBuffer1);\n  const view2 = new Uint8Array(inputBuffer2);\n  for (let i = 0; i < view1.length; i++) {\n    if (view1[i] !== view2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n__name(isEqualBuffer, "isEqualBuffer");\nfunction padNumber(inputNumber, fullLength) {\n  const str = inputNumber.toString(10);\n  if (fullLength < str.length) {\n    return "";\n  }\n  const dif = fullLength - str.length;\n  const padding = new Array(dif);\n  for (let i = 0; i < dif; i++) {\n    padding[i] = "0";\n  }\n  const paddingString = padding.join("");\n  return paddingString.concat(str);\n}\n__name(padNumber, "padNumber");\nvar log2 = Math.log(2);\n\n// ../../node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js\nfunction assertBigInt() {\n  if (typeof BigInt === "undefined") {\n    throw new Error("BigInt is not defined. Your environment doesn\'t implement BigInt.");\n  }\n}\n__name(assertBigInt, "assertBigInt");\nfunction concat(buffers) {\n  let outputLength = 0;\n  let prevLength = 0;\n  for (let i = 0; i < buffers.length; i++) {\n    const buffer = buffers[i];\n    outputLength += buffer.byteLength;\n  }\n  const retView = new Uint8Array(outputLength);\n  for (let i = 0; i < buffers.length; i++) {\n    const buffer = buffers[i];\n    retView.set(new Uint8Array(buffer), prevLength);\n    prevLength += buffer.byteLength;\n  }\n  return retView.buffer;\n}\n__name(concat, "concat");\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\n  if (!(inputBuffer instanceof Uint8Array)) {\n    baseBlock.error = "Wrong parameter: inputBuffer must be \'Uint8Array\'";\n    return false;\n  }\n  if (!inputBuffer.byteLength) {\n    baseBlock.error = "Wrong parameter: inputBuffer has zero length";\n    return false;\n  }\n  if (inputOffset < 0) {\n    baseBlock.error = "Wrong parameter: inputOffset less than zero";\n    return false;\n  }\n  if (inputLength < 0) {\n    baseBlock.error = "Wrong parameter: inputLength less than zero";\n    return false;\n  }\n  if (inputBuffer.byteLength - inputOffset - inputLength < 0) {\n    baseBlock.error = "End of input reached before message was fully decoded (inconsistent offset and length values)";\n    return false;\n  }\n  return true;\n}\n__name(checkBufferParams, "checkBufferParams");\nvar ViewWriter = class {\n  constructor() {\n    this.items = [];\n  }\n  write(buf) {\n    this.items.push(buf);\n  }\n  final() {\n    return concat(this.items);\n  }\n};\n__name(ViewWriter, "ViewWriter");\nvar powers2 = [new Uint8Array([1])];\nvar digitsString = "0123456789";\nvar NAME = "name";\nvar VALUE_HEX_VIEW = "valueHexView";\nvar IS_HEX_ONLY = "isHexOnly";\nvar ID_BLOCK = "idBlock";\nvar TAG_CLASS = "tagClass";\nvar TAG_NUMBER = "tagNumber";\nvar IS_CONSTRUCTED = "isConstructed";\nvar FROM_BER = "fromBER";\nvar TO_BER = "toBER";\nvar LOCAL = "local";\nvar EMPTY_STRING = "";\nvar EMPTY_BUFFER = new ArrayBuffer(0);\nvar EMPTY_VIEW = new Uint8Array(0);\nvar END_OF_CONTENT_NAME = "EndOfContent";\nvar OCTET_STRING_NAME = "OCTET STRING";\nvar BIT_STRING_NAME = "BIT STRING";\nfunction HexBlock(BaseClass) {\n  var _a2;\n  return _a2 = /* @__PURE__ */ __name(class Some extends BaseClass {\n    constructor(...args) {\n      var _a3;\n      super(...args);\n      const params = args[0] || {};\n      this.isHexOnly = (_a3 = params.isHexOnly) !== null && _a3 !== void 0 ? _a3 : false;\n      this.valueHexView = params.valueHex ? BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\n    }\n    get valueHex() {\n      return this.valueHexView.slice().buffer;\n    }\n    set valueHex(value) {\n      this.valueHexView = new Uint8Array(value);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n      const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n      if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n        return -1;\n      }\n      const endLength = inputOffset + inputLength;\n      this.valueHexView = view.subarray(inputOffset, endLength);\n      if (!this.valueHexView.length) {\n        this.warnings.push("Zero buffer length");\n        return inputOffset;\n      }\n      this.blockLength = inputLength;\n      return endLength;\n    }\n    toBER(sizeOnly = false) {\n      if (!this.isHexOnly) {\n        this.error = "Flag \'isHexOnly\' is not set, abort";\n        return EMPTY_BUFFER;\n      }\n      if (sizeOnly) {\n        return new ArrayBuffer(this.valueHexView.byteLength);\n      }\n      return this.valueHexView.byteLength === this.valueHexView.buffer.byteLength ? this.valueHexView.buffer : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n      return {\n        ...super.toJSON(),\n        isHexOnly: this.isHexOnly,\n        valueHex: Convert.ToHex(this.valueHexView)\n      };\n    }\n  }, "Some"), _a2.NAME = "hexBlock", _a2;\n}\n__name(HexBlock, "HexBlock");\nvar LocalBaseBlock = class {\n  constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW } = {}) {\n    this.blockLength = blockLength;\n    this.error = error;\n    this.warnings = warnings;\n    this.valueBeforeDecodeView = BufferSourceConverter.toUint8Array(valueBeforeDecode);\n  }\n  static blockName() {\n    return this.NAME;\n  }\n  get valueBeforeDecode() {\n    return this.valueBeforeDecodeView.slice().buffer;\n  }\n  set valueBeforeDecode(value) {\n    this.valueBeforeDecodeView = new Uint8Array(value);\n  }\n  toJSON() {\n    return {\n      blockName: this.constructor.NAME,\n      blockLength: this.blockLength,\n      error: this.error,\n      warnings: this.warnings,\n      valueBeforeDecode: Convert.ToHex(this.valueBeforeDecodeView)\n    };\n  }\n};\n__name(LocalBaseBlock, "LocalBaseBlock");\nLocalBaseBlock.NAME = "baseBlock";\nvar ValueBlock = class extends LocalBaseBlock {\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    throw TypeError("User need to make a specific function in a class which extends \'ValueBlock\'");\n  }\n  toBER(sizeOnly, writer) {\n    throw TypeError("User need to make a specific function in a class which extends \'ValueBlock\'");\n  }\n};\n__name(ValueBlock, "ValueBlock");\nValueBlock.NAME = "valueBlock";\nvar LocalIdentificationBlock = class extends HexBlock(LocalBaseBlock) {\n  constructor({ idBlock = {} } = {}) {\n    var _a2, _b, _c, _d;\n    super();\n    if (idBlock) {\n      this.isHexOnly = (_a2 = idBlock.isHexOnly) !== null && _a2 !== void 0 ? _a2 : false;\n      this.valueHexView = idBlock.valueHex ? BufferSourceConverter.toUint8Array(idBlock.valueHex) : EMPTY_VIEW;\n      this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\n      this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\n      this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\n    } else {\n      this.tagClass = -1;\n      this.tagNumber = -1;\n      this.isConstructed = false;\n    }\n  }\n  toBER(sizeOnly = false) {\n    let firstOctet = 0;\n    switch (this.tagClass) {\n      case 1:\n        firstOctet |= 0;\n        break;\n      case 2:\n        firstOctet |= 64;\n        break;\n      case 3:\n        firstOctet |= 128;\n        break;\n      case 4:\n        firstOctet |= 192;\n        break;\n      default:\n        this.error = "Unknown tag class";\n        return EMPTY_BUFFER;\n    }\n    if (this.isConstructed)\n      firstOctet |= 32;\n    if (this.tagNumber < 31 && !this.isHexOnly) {\n      const retView2 = new Uint8Array(1);\n      if (!sizeOnly) {\n        let number = this.tagNumber;\n        number &= 31;\n        firstOctet |= number;\n        retView2[0] = firstOctet;\n      }\n      return retView2.buffer;\n    }\n    if (!this.isHexOnly) {\n      const encodedBuf = utilToBase(this.tagNumber, 7);\n      const encodedView = new Uint8Array(encodedBuf);\n      const size = encodedBuf.byteLength;\n      const retView2 = new Uint8Array(size + 1);\n      retView2[0] = firstOctet | 31;\n      if (!sizeOnly) {\n        for (let i = 0; i < size - 1; i++)\n          retView2[i + 1] = encodedView[i] | 128;\n        retView2[size] = encodedView[size - 1];\n      }\n      return retView2.buffer;\n    }\n    const retView = new Uint8Array(this.valueHexView.byteLength + 1);\n    retView[0] = firstOctet | 31;\n    if (!sizeOnly) {\n      const curView = this.valueHexView;\n      for (let i = 0; i < curView.length - 1; i++)\n        retView[i + 1] = curView[i] | 128;\n      retView[this.valueHexView.byteLength] = curView[curView.length - 1];\n    }\n    return retView.buffer;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    const inputView = BufferSourceConverter.toUint8Array(inputBuffer);\n    if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n      return -1;\n    }\n    const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n    if (intBuffer.length === 0) {\n      this.error = "Zero buffer length";\n      return -1;\n    }\n    const tagClassMask = intBuffer[0] & 192;\n    switch (tagClassMask) {\n      case 0:\n        this.tagClass = 1;\n        break;\n      case 64:\n        this.tagClass = 2;\n        break;\n      case 128:\n        this.tagClass = 3;\n        break;\n      case 192:\n        this.tagClass = 4;\n        break;\n      default:\n        this.error = "Unknown tag class";\n        return -1;\n    }\n    this.isConstructed = (intBuffer[0] & 32) === 32;\n    this.isHexOnly = false;\n    const tagNumberMask = intBuffer[0] & 31;\n    if (tagNumberMask !== 31) {\n      this.tagNumber = tagNumberMask;\n      this.blockLength = 1;\n    } else {\n      let count = 1;\n      let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\n      let tagNumberBufferMaxLength = 255;\n      while (intBuffer[count] & 128) {\n        intTagNumberBuffer[count - 1] = intBuffer[count] & 127;\n        count++;\n        if (count >= intBuffer.length) {\n          this.error = "End of input reached before message was fully decoded";\n          return -1;\n        }\n        if (count === tagNumberBufferMaxLength) {\n          tagNumberBufferMaxLength += 255;\n          const tempBufferView2 = new Uint8Array(tagNumberBufferMaxLength);\n          for (let i = 0; i < intTagNumberBuffer.length; i++)\n            tempBufferView2[i] = intTagNumberBuffer[i];\n          intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\n        }\n      }\n      this.blockLength = count + 1;\n      intTagNumberBuffer[count - 1] = intBuffer[count] & 127;\n      const tempBufferView = new Uint8Array(count);\n      for (let i = 0; i < count; i++)\n        tempBufferView[i] = intTagNumberBuffer[i];\n      intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\n      intTagNumberBuffer.set(tempBufferView);\n      if (this.blockLength <= 9)\n        this.tagNumber = utilFromBase(intTagNumberBuffer, 7);\n      else {\n        this.isHexOnly = true;\n        this.warnings.push("Tag too long, represented as hex-coded");\n      }\n    }\n    if (this.tagClass === 1 && this.isConstructed) {\n      switch (this.tagNumber) {\n        case 1:\n        case 2:\n        case 5:\n        case 6:\n        case 9:\n        case 13:\n        case 14:\n        case 23:\n        case 24:\n        case 31:\n        case 32:\n        case 33:\n        case 34:\n          this.error = "Constructed encoding used for primitive type";\n          return -1;\n      }\n    }\n    return inputOffset + this.blockLength;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      tagClass: this.tagClass,\n      tagNumber: this.tagNumber,\n      isConstructed: this.isConstructed\n    };\n  }\n};\n__name(LocalIdentificationBlock, "LocalIdentificationBlock");\nLocalIdentificationBlock.NAME = "identificationBlock";\nvar LocalLengthBlock = class extends LocalBaseBlock {\n  constructor({ lenBlock = {} } = {}) {\n    var _a2, _b, _c;\n    super();\n    this.isIndefiniteForm = (_a2 = lenBlock.isIndefiniteForm) !== null && _a2 !== void 0 ? _a2 : false;\n    this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\n    this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    const view = BufferSourceConverter.toUint8Array(inputBuffer);\n    if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n      return -1;\n    }\n    const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\n    if (intBuffer.length === 0) {\n      this.error = "Zero buffer length";\n      return -1;\n    }\n    if (intBuffer[0] === 255) {\n      this.error = "Length block 0xFF is reserved by standard";\n      return -1;\n    }\n    this.isIndefiniteForm = intBuffer[0] === 128;\n    if (this.isIndefiniteForm) {\n      this.blockLength = 1;\n      return inputOffset + this.blockLength;\n    }\n    this.longFormUsed = !!(intBuffer[0] & 128);\n    if (this.longFormUsed === false) {\n      this.length = intBuffer[0];\n      this.blockLength = 1;\n      return inputOffset + this.blockLength;\n    }\n    const count = intBuffer[0] & 127;\n    if (count > 8) {\n      this.error = "Too big integer";\n      return -1;\n    }\n    if (count + 1 > intBuffer.length) {\n      this.error = "End of input reached before message was fully decoded";\n      return -1;\n    }\n    const lenOffset = inputOffset + 1;\n    const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\n    if (lengthBufferView[count - 1] === 0)\n      this.warnings.push("Needlessly long encoded length");\n    this.length = utilFromBase(lengthBufferView, 8);\n    if (this.longFormUsed && this.length <= 127)\n      this.warnings.push("Unnecessary usage of long length form");\n    this.blockLength = count + 1;\n    return inputOffset + this.blockLength;\n  }\n  toBER(sizeOnly = false) {\n    let retBuf;\n    let retView;\n    if (this.length > 127)\n      this.longFormUsed = true;\n    if (this.isIndefiniteForm) {\n      retBuf = new ArrayBuffer(1);\n      if (sizeOnly === false) {\n        retView = new Uint8Array(retBuf);\n        retView[0] = 128;\n      }\n      return retBuf;\n    }\n    if (this.longFormUsed) {\n      const encodedBuf = utilToBase(this.length, 8);\n      if (encodedBuf.byteLength > 127) {\n        this.error = "Too big length";\n        return EMPTY_BUFFER;\n      }\n      retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\n      if (sizeOnly)\n        return retBuf;\n      const encodedView = new Uint8Array(encodedBuf);\n      retView = new Uint8Array(retBuf);\n      retView[0] = encodedBuf.byteLength | 128;\n      for (let i = 0; i < encodedBuf.byteLength; i++)\n        retView[i + 1] = encodedView[i];\n      return retBuf;\n    }\n    retBuf = new ArrayBuffer(1);\n    if (sizeOnly === false) {\n      retView = new Uint8Array(retBuf);\n      retView[0] = this.length;\n    }\n    return retBuf;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      isIndefiniteForm: this.isIndefiniteForm,\n      longFormUsed: this.longFormUsed,\n      length: this.length\n    };\n  }\n};\n__name(LocalLengthBlock, "LocalLengthBlock");\nLocalLengthBlock.NAME = "lengthBlock";\nvar typeStore = {};\nvar BaseBlock = class extends LocalBaseBlock {\n  constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\n    super(parameters);\n    this.name = name;\n    this.optional = optional;\n    if (primitiveSchema) {\n      this.primitiveSchema = primitiveSchema;\n    }\n    this.idBlock = new LocalIdentificationBlock(parameters);\n    this.lenBlock = new LocalLengthBlock(parameters);\n    this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, this.lenBlock.isIndefiniteForm ? inputLength : this.lenBlock.length);\n    if (resultOffset === -1) {\n      this.error = this.valueBlock.error;\n      return resultOffset;\n    }\n    if (!this.idBlock.error.length)\n      this.blockLength += this.idBlock.blockLength;\n    if (!this.lenBlock.error.length)\n      this.blockLength += this.lenBlock.blockLength;\n    if (!this.valueBlock.error.length)\n      this.blockLength += this.valueBlock.blockLength;\n    return resultOffset;\n  }\n  toBER(sizeOnly, writer) {\n    const _writer = writer || new ViewWriter();\n    if (!writer) {\n      prepareIndefiniteForm(this);\n    }\n    const idBlockBuf = this.idBlock.toBER(sizeOnly);\n    _writer.write(idBlockBuf);\n    if (this.lenBlock.isIndefiniteForm) {\n      _writer.write(new Uint8Array([128]).buffer);\n      this.valueBlock.toBER(sizeOnly, _writer);\n      _writer.write(new ArrayBuffer(2));\n    } else {\n      const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\n      this.lenBlock.length = valueBlockBuf.byteLength;\n      const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\n      _writer.write(lenBlockBuf);\n      _writer.write(valueBlockBuf);\n    }\n    if (!writer) {\n      return _writer.final();\n    }\n    return EMPTY_BUFFER;\n  }\n  toJSON() {\n    const object = {\n      ...super.toJSON(),\n      idBlock: this.idBlock.toJSON(),\n      lenBlock: this.lenBlock.toJSON(),\n      valueBlock: this.valueBlock.toJSON(),\n      name: this.name,\n      optional: this.optional\n    };\n    if (this.primitiveSchema)\n      object.primitiveSchema = this.primitiveSchema.toJSON();\n    return object;\n  }\n  toString(encoding = "ascii") {\n    if (encoding === "ascii") {\n      return this.onAsciiEncoding();\n    }\n    return Convert.ToHex(this.toBER());\n  }\n  onAsciiEncoding() {\n    return `${this.constructor.NAME} : ${Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`;\n  }\n  isEqual(other) {\n    if (this === other) {\n      return true;\n    }\n    if (!(other instanceof this.constructor)) {\n      return false;\n    }\n    const thisRaw = this.toBER();\n    const otherRaw = other.toBER();\n    return isEqualBuffer(thisRaw, otherRaw);\n  }\n};\n__name(BaseBlock, "BaseBlock");\nBaseBlock.NAME = "BaseBlock";\nfunction prepareIndefiniteForm(baseBlock) {\n  if (baseBlock instanceof typeStore.Constructed) {\n    for (const value of baseBlock.valueBlock.value) {\n      if (prepareIndefiniteForm(value)) {\n        baseBlock.lenBlock.isIndefiniteForm = true;\n      }\n    }\n  }\n  return !!baseBlock.lenBlock.isIndefiniteForm;\n}\n__name(prepareIndefiniteForm, "prepareIndefiniteForm");\nvar BaseStringBlock = class extends BaseBlock {\n  constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\n    super(parameters, stringValueBlockType);\n    if (value) {\n      this.fromString(value);\n    }\n  }\n  getValue() {\n    return this.valueBlock.value;\n  }\n  setValue(value) {\n    this.valueBlock.value = value;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, this.lenBlock.isIndefiniteForm ? inputLength : this.lenBlock.length);\n    if (resultOffset === -1) {\n      this.error = this.valueBlock.error;\n      return resultOffset;\n    }\n    this.fromBuffer(this.valueBlock.valueHexView);\n    if (!this.idBlock.error.length)\n      this.blockLength += this.idBlock.blockLength;\n    if (!this.lenBlock.error.length)\n      this.blockLength += this.lenBlock.blockLength;\n    if (!this.valueBlock.error.length)\n      this.blockLength += this.valueBlock.blockLength;\n    return resultOffset;\n  }\n  onAsciiEncoding() {\n    return `${this.constructor.NAME} : \'${this.valueBlock.value}\'`;\n  }\n};\n__name(BaseStringBlock, "BaseStringBlock");\nBaseStringBlock.NAME = "BaseStringBlock";\nvar LocalPrimitiveValueBlock = class extends HexBlock(ValueBlock) {\n  constructor({ isHexOnly = true, ...parameters } = {}) {\n    super(parameters);\n    this.isHexOnly = isHexOnly;\n  }\n};\n__name(LocalPrimitiveValueBlock, "LocalPrimitiveValueBlock");\nLocalPrimitiveValueBlock.NAME = "PrimitiveValueBlock";\nvar _a$w;\nvar Primitive = class extends BaseBlock {\n  constructor(parameters = {}) {\n    super(parameters, LocalPrimitiveValueBlock);\n    this.idBlock.isConstructed = false;\n  }\n};\n__name(Primitive, "Primitive");\n_a$w = Primitive;\n(() => {\n  typeStore.Primitive = _a$w;\n})();\nPrimitive.NAME = "PRIMITIVE";\nfunction localChangeType(inputObject, newType) {\n  if (inputObject instanceof newType) {\n    return inputObject;\n  }\n  const newObject = new newType();\n  newObject.idBlock = inputObject.idBlock;\n  newObject.lenBlock = inputObject.lenBlock;\n  newObject.warnings = inputObject.warnings;\n  newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\n  return newObject;\n}\n__name(localChangeType, "localChangeType");\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\n  const incomingOffset = inputOffset;\n  let returnObject = new BaseBlock({}, ValueBlock);\n  const baseBlock = new LocalBaseBlock();\n  if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\n    returnObject.error = baseBlock.error;\n    return {\n      offset: -1,\n      result: returnObject\n    };\n  }\n  const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\n  if (!intBuffer.length) {\n    returnObject.error = "Zero buffer length";\n    return {\n      offset: -1,\n      result: returnObject\n    };\n  }\n  let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\n  if (returnObject.idBlock.warnings.length) {\n    returnObject.warnings.concat(returnObject.idBlock.warnings);\n  }\n  if (resultOffset === -1) {\n    returnObject.error = returnObject.idBlock.error;\n    return {\n      offset: -1,\n      result: returnObject\n    };\n  }\n  inputOffset = resultOffset;\n  inputLength -= returnObject.idBlock.blockLength;\n  resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\n  if (returnObject.lenBlock.warnings.length) {\n    returnObject.warnings.concat(returnObject.lenBlock.warnings);\n  }\n  if (resultOffset === -1) {\n    returnObject.error = returnObject.lenBlock.error;\n    return {\n      offset: -1,\n      result: returnObject\n    };\n  }\n  inputOffset = resultOffset;\n  inputLength -= returnObject.lenBlock.blockLength;\n  if (!returnObject.idBlock.isConstructed && returnObject.lenBlock.isIndefiniteForm) {\n    returnObject.error = "Indefinite length form used for primitive encoding form";\n    return {\n      offset: -1,\n      result: returnObject\n    };\n  }\n  let newASN1Type = BaseBlock;\n  switch (returnObject.idBlock.tagClass) {\n    case 1:\n      if (returnObject.idBlock.tagNumber >= 37 && returnObject.idBlock.isHexOnly === false) {\n        returnObject.error = "UNIVERSAL 37 and upper tags are reserved by ASN.1 standard";\n        return {\n          offset: -1,\n          result: returnObject\n        };\n      }\n      switch (returnObject.idBlock.tagNumber) {\n        case 0:\n          if (returnObject.idBlock.isConstructed && returnObject.lenBlock.length > 0) {\n            returnObject.error = "Type [UNIVERSAL 0] is reserved";\n            return {\n              offset: -1,\n              result: returnObject\n            };\n          }\n          newASN1Type = typeStore.EndOfContent;\n          break;\n        case 1:\n          newASN1Type = typeStore.Boolean;\n          break;\n        case 2:\n          newASN1Type = typeStore.Integer;\n          break;\n        case 3:\n          newASN1Type = typeStore.BitString;\n          break;\n        case 4:\n          newASN1Type = typeStore.OctetString;\n          break;\n        case 5:\n          newASN1Type = typeStore.Null;\n          break;\n        case 6:\n          newASN1Type = typeStore.ObjectIdentifier;\n          break;\n        case 10:\n          newASN1Type = typeStore.Enumerated;\n          break;\n        case 12:\n          newASN1Type = typeStore.Utf8String;\n          break;\n        case 13:\n          newASN1Type = typeStore.RelativeObjectIdentifier;\n          break;\n        case 14:\n          newASN1Type = typeStore.TIME;\n          break;\n        case 15:\n          returnObject.error = "[UNIVERSAL 15] is reserved by ASN.1 standard";\n          return {\n            offset: -1,\n            result: returnObject\n          };\n        case 16:\n          newASN1Type = typeStore.Sequence;\n          break;\n        case 17:\n          newASN1Type = typeStore.Set;\n          break;\n        case 18:\n          newASN1Type = typeStore.NumericString;\n          break;\n        case 19:\n          newASN1Type = typeStore.PrintableString;\n          break;\n        case 20:\n          newASN1Type = typeStore.TeletexString;\n          break;\n        case 21:\n          newASN1Type = typeStore.VideotexString;\n          break;\n        case 22:\n          newASN1Type = typeStore.IA5String;\n          break;\n        case 23:\n          newASN1Type = typeStore.UTCTime;\n          break;\n        case 24:\n          newASN1Type = typeStore.GeneralizedTime;\n          break;\n        case 25:\n          newASN1Type = typeStore.GraphicString;\n          break;\n        case 26:\n          newASN1Type = typeStore.VisibleString;\n          break;\n        case 27:\n          newASN1Type = typeStore.GeneralString;\n          break;\n        case 28:\n          newASN1Type = typeStore.UniversalString;\n          break;\n        case 29:\n          newASN1Type = typeStore.CharacterString;\n          break;\n        case 30:\n          newASN1Type = typeStore.BmpString;\n          break;\n        case 31:\n          newASN1Type = typeStore.DATE;\n          break;\n        case 32:\n          newASN1Type = typeStore.TimeOfDay;\n          break;\n        case 33:\n          newASN1Type = typeStore.DateTime;\n          break;\n        case 34:\n          newASN1Type = typeStore.Duration;\n          break;\n        default: {\n          const newObject = returnObject.idBlock.isConstructed ? new typeStore.Constructed() : new typeStore.Primitive();\n          newObject.idBlock = returnObject.idBlock;\n          newObject.lenBlock = returnObject.lenBlock;\n          newObject.warnings = returnObject.warnings;\n          returnObject = newObject;\n        }\n      }\n      break;\n    case 2:\n    case 3:\n    case 4:\n    default: {\n      newASN1Type = returnObject.idBlock.isConstructed ? typeStore.Constructed : typeStore.Primitive;\n    }\n  }\n  returnObject = localChangeType(returnObject, newASN1Type);\n  resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\n  returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\n  return {\n    offset: resultOffset,\n    result: returnObject\n  };\n}\n__name(localFromBER, "localFromBER");\nfunction fromBER(inputBuffer) {\n  if (!inputBuffer.byteLength) {\n    const result = new BaseBlock({}, ValueBlock);\n    result.error = "Input buffer has zero length";\n    return {\n      offset: -1,\n      result\n    };\n  }\n  return localFromBER(BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\n}\n__name(fromBER, "fromBER");\nfunction checkLen(indefiniteLength, length) {\n  if (indefiniteLength) {\n    return 1;\n  }\n  return length;\n}\n__name(checkLen, "checkLen");\nvar LocalConstructedValueBlock = class extends ValueBlock {\n  constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\n    super(parameters);\n    this.value = value;\n    this.isIndefiniteForm = isIndefiniteForm;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    const view = BufferSourceConverter.toUint8Array(inputBuffer);\n    if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n      return -1;\n    }\n    this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\n    if (this.valueBeforeDecodeView.length === 0) {\n      this.warnings.push("Zero buffer length");\n      return inputOffset;\n    }\n    let currentOffset = inputOffset;\n    while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\n      const returnObject = localFromBER(view, currentOffset, inputLength);\n      if (returnObject.offset === -1) {\n        this.error = returnObject.result.error;\n        this.warnings.concat(returnObject.result.warnings);\n        return -1;\n      }\n      currentOffset = returnObject.offset;\n      this.blockLength += returnObject.result.blockLength;\n      inputLength -= returnObject.result.blockLength;\n      this.value.push(returnObject.result);\n      if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\n        break;\n      }\n    }\n    if (this.isIndefiniteForm) {\n      if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\n        this.value.pop();\n      } else {\n        this.warnings.push("No EndOfContent block encoded");\n      }\n    }\n    return currentOffset;\n  }\n  toBER(sizeOnly, writer) {\n    const _writer = writer || new ViewWriter();\n    for (let i = 0; i < this.value.length; i++) {\n      this.value[i].toBER(sizeOnly, _writer);\n    }\n    if (!writer) {\n      return _writer.final();\n    }\n    return EMPTY_BUFFER;\n  }\n  toJSON() {\n    const object = {\n      ...super.toJSON(),\n      isIndefiniteForm: this.isIndefiniteForm,\n      value: []\n    };\n    for (const value of this.value) {\n      object.value.push(value.toJSON());\n    }\n    return object;\n  }\n};\n__name(LocalConstructedValueBlock, "LocalConstructedValueBlock");\nLocalConstructedValueBlock.NAME = "ConstructedValueBlock";\nvar _a$v;\nvar Constructed = class extends BaseBlock {\n  constructor(parameters = {}) {\n    super(parameters, LocalConstructedValueBlock);\n    this.idBlock.isConstructed = true;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n    const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, this.lenBlock.isIndefiniteForm ? inputLength : this.lenBlock.length);\n    if (resultOffset === -1) {\n      this.error = this.valueBlock.error;\n      return resultOffset;\n    }\n    if (!this.idBlock.error.length)\n      this.blockLength += this.idBlock.blockLength;\n    if (!this.lenBlock.error.length)\n      this.blockLength += this.lenBlock.blockLength;\n    if (!this.valueBlock.error.length)\n      this.blockLength += this.valueBlock.blockLength;\n    return resultOffset;\n  }\n  onAsciiEncoding() {\n    const values = [];\n    for (const value of this.valueBlock.value) {\n      values.push(value.toString("ascii").split("\\n").map((o) => `  ${o}`).join("\\n"));\n    }\n    const blockName = this.idBlock.tagClass === 3 ? `[${this.idBlock.tagNumber}]` : this.constructor.NAME;\n    return values.length ? `${blockName} :\n${values.join("\\n")}` : `${blockName} :`;\n  }\n};\n__name(Constructed, "Constructed");\n_a$v = Constructed;\n(() => {\n  typeStore.Constructed = _a$v;\n})();\nConstructed.NAME = "CONSTRUCTED";\nvar LocalEndOfContentValueBlock = class extends ValueBlock {\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    return inputOffset;\n  }\n  toBER(sizeOnly) {\n    return EMPTY_BUFFER;\n  }\n};\n__name(LocalEndOfContentValueBlock, "LocalEndOfContentValueBlock");\nLocalEndOfContentValueBlock.override = "EndOfContentValueBlock";\nvar _a$u;\nvar EndOfContent = class extends BaseBlock {\n  constructor(parameters = {}) {\n    super(parameters, LocalEndOfContentValueBlock);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 0;\n  }\n};\n__name(EndOfContent, "EndOfContent");\n_a$u = EndOfContent;\n(() => {\n  typeStore.EndOfContent = _a$u;\n})();\nEndOfContent.NAME = END_OF_CONTENT_NAME;\nvar _a$t;\nvar Null = class extends BaseBlock {\n  constructor(parameters = {}) {\n    super(parameters, ValueBlock);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 5;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    if (this.lenBlock.length > 0)\n      this.warnings.push("Non-zero length of value block for Null type");\n    if (!this.idBlock.error.length)\n      this.blockLength += this.idBlock.blockLength;\n    if (!this.lenBlock.error.length)\n      this.blockLength += this.lenBlock.blockLength;\n    this.blockLength += inputLength;\n    if (inputOffset + inputLength > inputBuffer.byteLength) {\n      this.error = "End of input reached before message was fully decoded (inconsistent offset and length values)";\n      return -1;\n    }\n    return inputOffset + inputLength;\n  }\n  toBER(sizeOnly, writer) {\n    const retBuf = new ArrayBuffer(2);\n    if (!sizeOnly) {\n      const retView = new Uint8Array(retBuf);\n      retView[0] = 5;\n      retView[1] = 0;\n    }\n    if (writer) {\n      writer.write(retBuf);\n    }\n    return retBuf;\n  }\n  onAsciiEncoding() {\n    return `${this.constructor.NAME}`;\n  }\n};\n__name(Null, "Null");\n_a$t = Null;\n(() => {\n  typeStore.Null = _a$t;\n})();\nNull.NAME = "NULL";\nvar LocalBooleanValueBlock = class extends HexBlock(ValueBlock) {\n  constructor({ value, ...parameters } = {}) {\n    super(parameters);\n    if (parameters.valueHex) {\n      this.valueHexView = BufferSourceConverter.toUint8Array(parameters.valueHex);\n    } else {\n      this.valueHexView = new Uint8Array(1);\n    }\n    if (value) {\n      this.value = value;\n    }\n  }\n  get value() {\n    for (const octet of this.valueHexView) {\n      if (octet > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n  set value(value) {\n    this.valueHexView[0] = value ? 255 : 0;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    const inputView = BufferSourceConverter.toUint8Array(inputBuffer);\n    if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n      return -1;\n    }\n    this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\n    if (inputLength > 1)\n      this.warnings.push("Boolean value encoded in more then 1 octet");\n    this.isHexOnly = true;\n    utilDecodeTC.call(this);\n    this.blockLength = inputLength;\n    return inputOffset + inputLength;\n  }\n  toBER() {\n    return this.valueHexView.slice();\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      value: this.value\n    };\n  }\n};\n__name(LocalBooleanValueBlock, "LocalBooleanValueBlock");\nLocalBooleanValueBlock.NAME = "BooleanValueBlock";\nvar _a$s;\nvar Boolean = class extends BaseBlock {\n  constructor(parameters = {}) {\n    super(parameters, LocalBooleanValueBlock);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 1;\n  }\n  getValue() {\n    return this.valueBlock.value;\n  }\n  setValue(value) {\n    this.valueBlock.value = value;\n  }\n  onAsciiEncoding() {\n    return `${this.constructor.NAME} : ${this.getValue}`;\n  }\n};\n__name(Boolean, "Boolean");\n_a$s = Boolean;\n(() => {\n  typeStore.Boolean = _a$s;\n})();\nBoolean.NAME = "BOOLEAN";\nvar LocalOctetStringValueBlock = class extends HexBlock(LocalConstructedValueBlock) {\n  constructor({ isConstructed = false, ...parameters } = {}) {\n    super(parameters);\n    this.isConstructed = isConstructed;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    let resultOffset = 0;\n    if (this.isConstructed) {\n      this.isHexOnly = false;\n      resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n      if (resultOffset === -1)\n        return resultOffset;\n      for (let i = 0; i < this.value.length; i++) {\n        const currentBlockName = this.value[i].constructor.NAME;\n        if (currentBlockName === END_OF_CONTENT_NAME) {\n          if (this.isIndefiniteForm)\n            break;\n          else {\n            this.error = "EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only";\n            return -1;\n          }\n        }\n        if (currentBlockName !== OCTET_STRING_NAME) {\n          this.error = "OCTET STRING may consists of OCTET STRINGs only";\n          return -1;\n        }\n      }\n    } else {\n      this.isHexOnly = true;\n      resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n      this.blockLength = inputLength;\n    }\n    return resultOffset;\n  }\n  toBER(sizeOnly, writer) {\n    if (this.isConstructed)\n      return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n    return sizeOnly ? new ArrayBuffer(this.valueHexView.byteLength) : this.valueHexView.slice().buffer;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      isConstructed: this.isConstructed\n    };\n  }\n};\n__name(LocalOctetStringValueBlock, "LocalOctetStringValueBlock");\nLocalOctetStringValueBlock.NAME = "OctetStringValueBlock";\nvar _a$r;\nvar OctetString = class extends BaseBlock {\n  constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n    var _b, _c;\n    (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length);\n    super({\n      idBlock: {\n        isConstructed: parameters.isConstructed,\n        ...idBlock\n      },\n      lenBlock: {\n        ...lenBlock,\n        isIndefiniteForm: !!parameters.isIndefiniteForm\n      },\n      ...parameters\n    }, LocalOctetStringValueBlock);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 4;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    this.valueBlock.isConstructed = this.idBlock.isConstructed;\n    this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n    if (inputLength === 0) {\n      if (this.idBlock.error.length === 0)\n        this.blockLength += this.idBlock.blockLength;\n      if (this.lenBlock.error.length === 0)\n        this.blockLength += this.lenBlock.blockLength;\n      return inputOffset;\n    }\n    if (!this.valueBlock.isConstructed) {\n      const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n      const buf = view.subarray(inputOffset, inputOffset + inputLength);\n      try {\n        if (buf.byteLength) {\n          const asn = localFromBER(buf, 0, buf.byteLength);\n          if (asn.offset !== -1 && asn.offset === inputLength) {\n            this.valueBlock.value = [asn.result];\n          }\n        }\n      } catch (e) {\n      }\n    }\n    return super.fromBER(inputBuffer, inputOffset, inputLength);\n  }\n  onAsciiEncoding() {\n    if (this.valueBlock.isConstructed || this.valueBlock.value && this.valueBlock.value.length) {\n      return Constructed.prototype.onAsciiEncoding.call(this);\n    }\n    return `${this.constructor.NAME} : ${Convert.ToHex(this.valueBlock.valueHexView)}`;\n  }\n  getValue() {\n    if (!this.idBlock.isConstructed) {\n      return this.valueBlock.valueHexView.slice().buffer;\n    }\n    const array = [];\n    for (const content of this.valueBlock.value) {\n      if (content instanceof OctetString) {\n        array.push(content.valueBlock.valueHexView);\n      }\n    }\n    return BufferSourceConverter.concat(array);\n  }\n};\n__name(OctetString, "OctetString");\n_a$r = OctetString;\n(() => {\n  typeStore.OctetString = _a$r;\n})();\nOctetString.NAME = OCTET_STRING_NAME;\nvar LocalBitStringValueBlock = class extends HexBlock(LocalConstructedValueBlock) {\n  constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\n    super(parameters);\n    this.unusedBits = unusedBits;\n    this.isConstructed = isConstructed;\n    this.blockLength = this.valueHexView.byteLength;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    if (!inputLength) {\n      return inputOffset;\n    }\n    let resultOffset = -1;\n    if (this.isConstructed) {\n      resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n      if (resultOffset === -1)\n        return resultOffset;\n      for (const value of this.value) {\n        const currentBlockName = value.constructor.NAME;\n        if (currentBlockName === END_OF_CONTENT_NAME) {\n          if (this.isIndefiniteForm)\n            break;\n          else {\n            this.error = "EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only";\n            return -1;\n          }\n        }\n        if (currentBlockName !== BIT_STRING_NAME) {\n          this.error = "BIT STRING may consists of BIT STRINGs only";\n          return -1;\n        }\n        const valueBlock = value.valueBlock;\n        if (this.unusedBits > 0 && valueBlock.unusedBits > 0) {\n          this.error = \'Using of "unused bits" inside constructive BIT STRING allowed for least one only\';\n          return -1;\n        }\n        this.unusedBits = valueBlock.unusedBits;\n      }\n      return resultOffset;\n    }\n    const inputView = BufferSourceConverter.toUint8Array(inputBuffer);\n    if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n      return -1;\n    }\n    const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n    this.unusedBits = intBuffer[0];\n    if (this.unusedBits > 7) {\n      this.error = "Unused bits for BitString must be in range 0-7";\n      return -1;\n    }\n    if (!this.unusedBits) {\n      const buf = intBuffer.subarray(1);\n      try {\n        if (buf.byteLength) {\n          const asn = localFromBER(buf, 0, buf.byteLength);\n          if (asn.offset !== -1 && asn.offset === inputLength - 1) {\n            this.value = [asn.result];\n          }\n        }\n      } catch (e) {\n      }\n    }\n    this.valueHexView = intBuffer.subarray(1);\n    this.blockLength = intBuffer.length;\n    return inputOffset + inputLength;\n  }\n  toBER(sizeOnly, writer) {\n    if (this.isConstructed) {\n      return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n    }\n    if (sizeOnly) {\n      return new ArrayBuffer(this.valueHexView.byteLength + 1);\n    }\n    if (!this.valueHexView.byteLength) {\n      return EMPTY_BUFFER;\n    }\n    const retView = new Uint8Array(this.valueHexView.length + 1);\n    retView[0] = this.unusedBits;\n    retView.set(this.valueHexView, 1);\n    return retView.buffer;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      unusedBits: this.unusedBits,\n      isConstructed: this.isConstructed\n    };\n  }\n};\n__name(LocalBitStringValueBlock, "LocalBitStringValueBlock");\nLocalBitStringValueBlock.NAME = "BitStringValueBlock";\nvar _a$q;\nvar BitString = class extends BaseBlock {\n  constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n    var _b, _c;\n    (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length);\n    super({\n      idBlock: {\n        isConstructed: parameters.isConstructed,\n        ...idBlock\n      },\n      lenBlock: {\n        ...lenBlock,\n        isIndefiniteForm: !!parameters.isIndefiniteForm\n      },\n      ...parameters\n    }, LocalBitStringValueBlock);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 3;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    this.valueBlock.isConstructed = this.idBlock.isConstructed;\n    this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n    return super.fromBER(inputBuffer, inputOffset, inputLength);\n  }\n  onAsciiEncoding() {\n    if (this.valueBlock.isConstructed || this.valueBlock.value && this.valueBlock.value.length) {\n      return Constructed.prototype.onAsciiEncoding.call(this);\n    } else {\n      const bits = [];\n      const valueHex = this.valueBlock.valueHexView;\n      for (const byte of valueHex) {\n        bits.push(byte.toString(2).padStart(8, "0"));\n      }\n      const bitsStr = bits.join("");\n      return `${this.constructor.NAME} : ${bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits)}`;\n    }\n  }\n};\n__name(BitString, "BitString");\n_a$q = BitString;\n(() => {\n  typeStore.BitString = _a$q;\n})();\nBitString.NAME = BIT_STRING_NAME;\nvar _a$p;\nfunction viewAdd(first, second) {\n  const c = new Uint8Array([0]);\n  const firstView = new Uint8Array(first);\n  const secondView = new Uint8Array(second);\n  let firstViewCopy = firstView.slice(0);\n  const firstViewCopyLength = firstViewCopy.length - 1;\n  const secondViewCopy = secondView.slice(0);\n  const secondViewCopyLength = secondViewCopy.length - 1;\n  let value = 0;\n  const max = secondViewCopyLength < firstViewCopyLength ? firstViewCopyLength : secondViewCopyLength;\n  let counter = 0;\n  for (let i = max; i >= 0; i--, counter++) {\n    switch (true) {\n      case counter < secondViewCopy.length:\n        value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\n        break;\n      default:\n        value = firstViewCopy[firstViewCopyLength - counter] + c[0];\n    }\n    c[0] = value / 10;\n    switch (true) {\n      case counter >= firstViewCopy.length:\n        firstViewCopy = utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\n        break;\n      default:\n        firstViewCopy[firstViewCopyLength - counter] = value % 10;\n    }\n  }\n  if (c[0] > 0)\n    firstViewCopy = utilConcatView(c, firstViewCopy);\n  return firstViewCopy;\n}\n__name(viewAdd, "viewAdd");\nfunction power2(n) {\n  if (n >= powers2.length) {\n    for (let p = powers2.length; p <= n; p++) {\n      const c = new Uint8Array([0]);\n      let digits = powers2[p - 1].slice(0);\n      for (let i = digits.length - 1; i >= 0; i--) {\n        const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\n        c[0] = newValue[0] / 10;\n        digits[i] = newValue[0] % 10;\n      }\n      if (c[0] > 0)\n        digits = utilConcatView(c, digits);\n      powers2.push(digits);\n    }\n  }\n  return powers2[n];\n}\n__name(power2, "power2");\nfunction viewSub(first, second) {\n  let b = 0;\n  const firstView = new Uint8Array(first);\n  const secondView = new Uint8Array(second);\n  const firstViewCopy = firstView.slice(0);\n  const firstViewCopyLength = firstViewCopy.length - 1;\n  const secondViewCopy = secondView.slice(0);\n  const secondViewCopyLength = secondViewCopy.length - 1;\n  let value;\n  let counter = 0;\n  for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\n    value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\n    switch (true) {\n      case value < 0:\n        b = 1;\n        firstViewCopy[firstViewCopyLength - counter] = value + 10;\n        break;\n      default:\n        b = 0;\n        firstViewCopy[firstViewCopyLength - counter] = value;\n    }\n  }\n  if (b > 0) {\n    for (let i = firstViewCopyLength - secondViewCopyLength + 1; i >= 0; i--, counter++) {\n      value = firstViewCopy[firstViewCopyLength - counter] - b;\n      if (value < 0) {\n        b = 1;\n        firstViewCopy[firstViewCopyLength - counter] = value + 10;\n      } else {\n        b = 0;\n        firstViewCopy[firstViewCopyLength - counter] = value;\n        break;\n      }\n    }\n  }\n  return firstViewCopy.slice();\n}\n__name(viewSub, "viewSub");\nvar LocalIntegerValueBlock = class extends HexBlock(ValueBlock) {\n  constructor({ value, ...parameters } = {}) {\n    super(parameters);\n    this._valueDec = 0;\n    if (parameters.valueHex) {\n      this.setValueHex();\n    }\n    if (value !== void 0) {\n      this.valueDec = value;\n    }\n  }\n  setValueHex() {\n    if (this.valueHexView.length >= 4) {\n      this.warnings.push("Too big Integer for decoding, hex only");\n      this.isHexOnly = true;\n      this._valueDec = 0;\n    } else {\n      this.isHexOnly = false;\n      if (this.valueHexView.length > 0) {\n        this._valueDec = utilDecodeTC.call(this);\n      }\n    }\n  }\n  set valueDec(v) {\n    this._valueDec = v;\n    this.isHexOnly = false;\n    this.valueHexView = new Uint8Array(utilEncodeTC(v));\n  }\n  get valueDec() {\n    return this._valueDec;\n  }\n  fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\n    const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\n    if (offset === -1)\n      return offset;\n    const view = this.valueHexView;\n    if (view[0] === 0 && (view[1] & 128) !== 0) {\n      this.valueHexView = view.subarray(1);\n    } else {\n      if (expectedLength !== 0) {\n        if (view.length < expectedLength) {\n          if (expectedLength - view.length > 1)\n            expectedLength = view.length + 1;\n          this.valueHexView = view.subarray(expectedLength - view.length);\n        }\n      }\n    }\n    return offset;\n  }\n  toDER(sizeOnly = false) {\n    const view = this.valueHexView;\n    switch (true) {\n      case (view[0] & 128) !== 0:\n        {\n          const updatedView = new Uint8Array(this.valueHexView.length + 1);\n          updatedView[0] = 0;\n          updatedView.set(view, 1);\n          this.valueHexView = updatedView;\n        }\n        break;\n      case (view[0] === 0 && (view[1] & 128) === 0):\n        {\n          this.valueHexView = this.valueHexView.subarray(1);\n        }\n        break;\n    }\n    return this.toBER(sizeOnly);\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n    if (resultOffset === -1) {\n      return resultOffset;\n    }\n    this.setValueHex();\n    return resultOffset;\n  }\n  toBER(sizeOnly) {\n    return sizeOnly ? new ArrayBuffer(this.valueHexView.length) : this.valueHexView.slice().buffer;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      valueDec: this.valueDec\n    };\n  }\n  toString() {\n    const firstBit = this.valueHexView.length * 8 - 1;\n    let digits = new Uint8Array(this.valueHexView.length * 8 / 3);\n    let bitNumber = 0;\n    let currentByte;\n    const asn1View = this.valueHexView;\n    let result = "";\n    let flag = false;\n    for (let byteNumber = asn1View.byteLength - 1; byteNumber >= 0; byteNumber--) {\n      currentByte = asn1View[byteNumber];\n      for (let i = 0; i < 8; i++) {\n        if ((currentByte & 1) === 1) {\n          switch (bitNumber) {\n            case firstBit:\n              digits = viewSub(power2(bitNumber), digits);\n              result = "-";\n              break;\n            default:\n              digits = viewAdd(digits, power2(bitNumber));\n          }\n        }\n        bitNumber++;\n        currentByte >>= 1;\n      }\n    }\n    for (let i = 0; i < digits.length; i++) {\n      if (digits[i])\n        flag = true;\n      if (flag)\n        result += digitsString.charAt(digits[i]);\n    }\n    if (flag === false)\n      result += digitsString.charAt(0);\n    return result;\n  }\n};\n__name(LocalIntegerValueBlock, "LocalIntegerValueBlock");\n_a$p = LocalIntegerValueBlock;\nLocalIntegerValueBlock.NAME = "IntegerValueBlock";\n(() => {\n  Object.defineProperty(_a$p.prototype, "valueHex", {\n    set: function(v) {\n      this.valueHexView = new Uint8Array(v);\n      this.setValueHex();\n    },\n    get: function() {\n      return this.valueHexView.slice().buffer;\n    }\n  });\n})();\nvar _a$o;\nvar Integer = class extends BaseBlock {\n  constructor(parameters = {}) {\n    super(parameters, LocalIntegerValueBlock);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 2;\n  }\n  toBigInt() {\n    assertBigInt();\n    return BigInt(this.valueBlock.toString());\n  }\n  static fromBigInt(value) {\n    assertBigInt();\n    const bigIntValue = BigInt(value);\n    const writer = new ViewWriter();\n    const hex = bigIntValue.toString(16).replace(/^-/, "");\n    const view = new Uint8Array(Convert.FromHex(hex));\n    if (bigIntValue < 0) {\n      const first = new Uint8Array(view.length + (view[0] & 128 ? 1 : 0));\n      first[0] |= 128;\n      const firstInt = BigInt(`0x${Convert.ToHex(first)}`);\n      const secondInt = firstInt + bigIntValue;\n      const second = BufferSourceConverter.toUint8Array(Convert.FromHex(secondInt.toString(16)));\n      second[0] |= 128;\n      writer.write(second);\n    } else {\n      if (view[0] & 128) {\n        writer.write(new Uint8Array([0]));\n      }\n      writer.write(view);\n    }\n    const res = new Integer({\n      valueHex: writer.final()\n    });\n    return res;\n  }\n  convertToDER() {\n    const integer = new Integer({ valueHex: this.valueBlock.valueHexView });\n    integer.valueBlock.toDER();\n    return integer;\n  }\n  convertFromDER() {\n    return new Integer({\n      valueHex: this.valueBlock.valueHexView[0] === 0 ? this.valueBlock.valueHexView.subarray(1) : this.valueBlock.valueHexView\n    });\n  }\n  onAsciiEncoding() {\n    return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\n  }\n};\n__name(Integer, "Integer");\n_a$o = Integer;\n(() => {\n  typeStore.Integer = _a$o;\n})();\nInteger.NAME = "INTEGER";\nvar _a$n;\nvar Enumerated = class extends Integer {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 10;\n  }\n};\n__name(Enumerated, "Enumerated");\n_a$n = Enumerated;\n(() => {\n  typeStore.Enumerated = _a$n;\n})();\nEnumerated.NAME = "ENUMERATED";\nvar LocalSidValueBlock = class extends HexBlock(ValueBlock) {\n  constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\n    super(parameters);\n    this.valueDec = valueDec;\n    this.isFirstSid = isFirstSid;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    if (!inputLength) {\n      return inputOffset;\n    }\n    const inputView = BufferSourceConverter.toUint8Array(inputBuffer);\n    if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n      return -1;\n    }\n    const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n    this.valueHexView = new Uint8Array(inputLength);\n    for (let i = 0; i < inputLength; i++) {\n      this.valueHexView[i] = intBuffer[i] & 127;\n      this.blockLength++;\n      if ((intBuffer[i] & 128) === 0)\n        break;\n    }\n    const tempView = new Uint8Array(this.blockLength);\n    for (let i = 0; i < this.blockLength; i++) {\n      tempView[i] = this.valueHexView[i];\n    }\n    this.valueHexView = tempView;\n    if ((intBuffer[this.blockLength - 1] & 128) !== 0) {\n      this.error = "End of input reached before message was fully decoded";\n      return -1;\n    }\n    if (this.valueHexView[0] === 0)\n      this.warnings.push("Needlessly long format of SID encoding");\n    if (this.blockLength <= 8)\n      this.valueDec = utilFromBase(this.valueHexView, 7);\n    else {\n      this.isHexOnly = true;\n      this.warnings.push("Too big SID for decoding, hex only");\n    }\n    return inputOffset + this.blockLength;\n  }\n  set valueBigInt(value) {\n    assertBigInt();\n    let bits = BigInt(value).toString(2);\n    while (bits.length % 7) {\n      bits = "0" + bits;\n    }\n    const bytes = new Uint8Array(bits.length / 7);\n    for (let i = 0; i < bytes.length; i++) {\n      bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 128 : 0);\n    }\n    this.fromBER(bytes.buffer, 0, bytes.length);\n  }\n  toBER(sizeOnly) {\n    if (this.isHexOnly) {\n      if (sizeOnly)\n        return new ArrayBuffer(this.valueHexView.byteLength);\n      const curView = this.valueHexView;\n      const retView2 = new Uint8Array(this.blockLength);\n      for (let i = 0; i < this.blockLength - 1; i++)\n        retView2[i] = curView[i] | 128;\n      retView2[this.blockLength - 1] = curView[this.blockLength - 1];\n      return retView2.buffer;\n    }\n    const encodedBuf = utilToBase(this.valueDec, 7);\n    if (encodedBuf.byteLength === 0) {\n      this.error = "Error during encoding SID value";\n      return EMPTY_BUFFER;\n    }\n    const retView = new Uint8Array(encodedBuf.byteLength);\n    if (!sizeOnly) {\n      const encodedView = new Uint8Array(encodedBuf);\n      const len = encodedBuf.byteLength - 1;\n      for (let i = 0; i < len; i++)\n        retView[i] = encodedView[i] | 128;\n      retView[len] = encodedView[len];\n    }\n    return retView;\n  }\n  toString() {\n    let result = "";\n    if (this.isHexOnly)\n      result = Convert.ToHex(this.valueHexView);\n    else {\n      if (this.isFirstSid) {\n        let sidValue = this.valueDec;\n        if (this.valueDec <= 39)\n          result = "0.";\n        else {\n          if (this.valueDec <= 79) {\n            result = "1.";\n            sidValue -= 40;\n          } else {\n            result = "2.";\n            sidValue -= 80;\n          }\n        }\n        result += sidValue.toString();\n      } else\n        result = this.valueDec.toString();\n    }\n    return result;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      valueDec: this.valueDec,\n      isFirstSid: this.isFirstSid\n    };\n  }\n};\n__name(LocalSidValueBlock, "LocalSidValueBlock");\nLocalSidValueBlock.NAME = "sidBlock";\nvar LocalObjectIdentifierValueBlock = class extends ValueBlock {\n  constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n    super(parameters);\n    this.value = [];\n    if (value) {\n      this.fromString(value);\n    }\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    let resultOffset = inputOffset;\n    while (inputLength > 0) {\n      const sidBlock = new LocalSidValueBlock();\n      resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n      if (resultOffset === -1) {\n        this.blockLength = 0;\n        this.error = sidBlock.error;\n        return resultOffset;\n      }\n      if (this.value.length === 0)\n        sidBlock.isFirstSid = true;\n      this.blockLength += sidBlock.blockLength;\n      inputLength -= sidBlock.blockLength;\n      this.value.push(sidBlock);\n    }\n    return resultOffset;\n  }\n  toBER(sizeOnly) {\n    const retBuffers = [];\n    for (let i = 0; i < this.value.length; i++) {\n      const valueBuf = this.value[i].toBER(sizeOnly);\n      if (valueBuf.byteLength === 0) {\n        this.error = this.value[i].error;\n        return EMPTY_BUFFER;\n      }\n      retBuffers.push(valueBuf);\n    }\n    return concat(retBuffers);\n  }\n  fromString(string) {\n    this.value = [];\n    let pos1 = 0;\n    let pos2 = 0;\n    let sid = "";\n    let flag = false;\n    do {\n      pos2 = string.indexOf(".", pos1);\n      if (pos2 === -1)\n        sid = string.substring(pos1);\n      else\n        sid = string.substring(pos1, pos2);\n      pos1 = pos2 + 1;\n      if (flag) {\n        const sidBlock = this.value[0];\n        let plus = 0;\n        switch (sidBlock.valueDec) {\n          case 0:\n            break;\n          case 1:\n            plus = 40;\n            break;\n          case 2:\n            plus = 80;\n            break;\n          default:\n            this.value = [];\n            return;\n        }\n        const parsedSID = parseInt(sid, 10);\n        if (isNaN(parsedSID))\n          return;\n        sidBlock.valueDec = parsedSID + plus;\n        flag = false;\n      } else {\n        const sidBlock = new LocalSidValueBlock();\n        if (sid > Number.MAX_SAFE_INTEGER) {\n          assertBigInt();\n          const sidValue = BigInt(sid);\n          sidBlock.valueBigInt = sidValue;\n        } else {\n          sidBlock.valueDec = parseInt(sid, 10);\n          if (isNaN(sidBlock.valueDec))\n            return;\n        }\n        if (!this.value.length) {\n          sidBlock.isFirstSid = true;\n          flag = true;\n        }\n        this.value.push(sidBlock);\n      }\n    } while (pos2 !== -1);\n  }\n  toString() {\n    let result = "";\n    let isHexOnly = false;\n    for (let i = 0; i < this.value.length; i++) {\n      isHexOnly = this.value[i].isHexOnly;\n      let sidStr = this.value[i].toString();\n      if (i !== 0)\n        result = `${result}.`;\n      if (isHexOnly) {\n        sidStr = `{${sidStr}}`;\n        if (this.value[i].isFirstSid)\n          result = `2.{${sidStr} - 80}`;\n        else\n          result += sidStr;\n      } else\n        result += sidStr;\n    }\n    return result;\n  }\n  toJSON() {\n    const object = {\n      ...super.toJSON(),\n      value: this.toString(),\n      sidArray: []\n    };\n    for (let i = 0; i < this.value.length; i++) {\n      object.sidArray.push(this.value[i].toJSON());\n    }\n    return object;\n  }\n};\n__name(LocalObjectIdentifierValueBlock, "LocalObjectIdentifierValueBlock");\nLocalObjectIdentifierValueBlock.NAME = "ObjectIdentifierValueBlock";\nvar _a$m;\nvar ObjectIdentifier = class extends BaseBlock {\n  constructor(parameters = {}) {\n    super(parameters, LocalObjectIdentifierValueBlock);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 6;\n  }\n  getValue() {\n    return this.valueBlock.toString();\n  }\n  setValue(value) {\n    this.valueBlock.fromString(value);\n  }\n  onAsciiEncoding() {\n    return `${this.constructor.NAME} : ${this.valueBlock.toString() || "empty"}`;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      value: this.getValue()\n    };\n  }\n};\n__name(ObjectIdentifier, "ObjectIdentifier");\n_a$m = ObjectIdentifier;\n(() => {\n  typeStore.ObjectIdentifier = _a$m;\n})();\nObjectIdentifier.NAME = "OBJECT IDENTIFIER";\nvar LocalRelativeSidValueBlock = class extends HexBlock(LocalBaseBlock) {\n  constructor({ valueDec = 0, ...parameters } = {}) {\n    super(parameters);\n    this.valueDec = valueDec;\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    if (inputLength === 0)\n      return inputOffset;\n    const inputView = BufferSourceConverter.toUint8Array(inputBuffer);\n    if (!checkBufferParams(this, inputView, inputOffset, inputLength))\n      return -1;\n    const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n    this.valueHexView = new Uint8Array(inputLength);\n    for (let i = 0; i < inputLength; i++) {\n      this.valueHexView[i] = intBuffer[i] & 127;\n      this.blockLength++;\n      if ((intBuffer[i] & 128) === 0)\n        break;\n    }\n    const tempView = new Uint8Array(this.blockLength);\n    for (let i = 0; i < this.blockLength; i++)\n      tempView[i] = this.valueHexView[i];\n    this.valueHexView = tempView;\n    if ((intBuffer[this.blockLength - 1] & 128) !== 0) {\n      this.error = "End of input reached before message was fully decoded";\n      return -1;\n    }\n    if (this.valueHexView[0] === 0)\n      this.warnings.push("Needlessly long format of SID encoding");\n    if (this.blockLength <= 8)\n      this.valueDec = utilFromBase(this.valueHexView, 7);\n    else {\n      this.isHexOnly = true;\n      this.warnings.push("Too big SID for decoding, hex only");\n    }\n    return inputOffset + this.blockLength;\n  }\n  toBER(sizeOnly) {\n    if (this.isHexOnly) {\n      if (sizeOnly)\n        return new ArrayBuffer(this.valueHexView.byteLength);\n      const curView = this.valueHexView;\n      const retView2 = new Uint8Array(this.blockLength);\n      for (let i = 0; i < this.blockLength - 1; i++)\n        retView2[i] = curView[i] | 128;\n      retView2[this.blockLength - 1] = curView[this.blockLength - 1];\n      return retView2.buffer;\n    }\n    const encodedBuf = utilToBase(this.valueDec, 7);\n    if (encodedBuf.byteLength === 0) {\n      this.error = "Error during encoding SID value";\n      return EMPTY_BUFFER;\n    }\n    const retView = new Uint8Array(encodedBuf.byteLength);\n    if (!sizeOnly) {\n      const encodedView = new Uint8Array(encodedBuf);\n      const len = encodedBuf.byteLength - 1;\n      for (let i = 0; i < len; i++)\n        retView[i] = encodedView[i] | 128;\n      retView[len] = encodedView[len];\n    }\n    return retView.buffer;\n  }\n  toString() {\n    let result = "";\n    if (this.isHexOnly)\n      result = Convert.ToHex(this.valueHexView);\n    else {\n      result = this.valueDec.toString();\n    }\n    return result;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      valueDec: this.valueDec\n    };\n  }\n};\n__name(LocalRelativeSidValueBlock, "LocalRelativeSidValueBlock");\nLocalRelativeSidValueBlock.NAME = "relativeSidBlock";\nvar LocalRelativeObjectIdentifierValueBlock = class extends ValueBlock {\n  constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n    super(parameters);\n    this.value = [];\n    if (value) {\n      this.fromString(value);\n    }\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    let resultOffset = inputOffset;\n    while (inputLength > 0) {\n      const sidBlock = new LocalRelativeSidValueBlock();\n      resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n      if (resultOffset === -1) {\n        this.blockLength = 0;\n        this.error = sidBlock.error;\n        return resultOffset;\n      }\n      this.blockLength += sidBlock.blockLength;\n      inputLength -= sidBlock.blockLength;\n      this.value.push(sidBlock);\n    }\n    return resultOffset;\n  }\n  toBER(sizeOnly, writer) {\n    const retBuffers = [];\n    for (let i = 0; i < this.value.length; i++) {\n      const valueBuf = this.value[i].toBER(sizeOnly);\n      if (valueBuf.byteLength === 0) {\n        this.error = this.value[i].error;\n        return EMPTY_BUFFER;\n      }\n      retBuffers.push(valueBuf);\n    }\n    return concat(retBuffers);\n  }\n  fromString(string) {\n    this.value = [];\n    let pos1 = 0;\n    let pos2 = 0;\n    let sid = "";\n    do {\n      pos2 = string.indexOf(".", pos1);\n      if (pos2 === -1)\n        sid = string.substring(pos1);\n      else\n        sid = string.substring(pos1, pos2);\n      pos1 = pos2 + 1;\n      const sidBlock = new LocalRelativeSidValueBlock();\n      sidBlock.valueDec = parseInt(sid, 10);\n      if (isNaN(sidBlock.valueDec))\n        return true;\n      this.value.push(sidBlock);\n    } while (pos2 !== -1);\n    return true;\n  }\n  toString() {\n    let result = "";\n    let isHexOnly = false;\n    for (let i = 0; i < this.value.length; i++) {\n      isHexOnly = this.value[i].isHexOnly;\n      let sidStr = this.value[i].toString();\n      if (i !== 0)\n        result = `${result}.`;\n      if (isHexOnly) {\n        sidStr = `{${sidStr}}`;\n        result += sidStr;\n      } else\n        result += sidStr;\n    }\n    return result;\n  }\n  toJSON() {\n    const object = {\n      ...super.toJSON(),\n      value: this.toString(),\n      sidArray: []\n    };\n    for (let i = 0; i < this.value.length; i++)\n      object.sidArray.push(this.value[i].toJSON());\n    return object;\n  }\n};\n__name(LocalRelativeObjectIdentifierValueBlock, "LocalRelativeObjectIdentifierValueBlock");\nLocalRelativeObjectIdentifierValueBlock.NAME = "RelativeObjectIdentifierValueBlock";\nvar _a$l;\nvar RelativeObjectIdentifier = class extends BaseBlock {\n  constructor(parameters = {}) {\n    super(parameters, LocalRelativeObjectIdentifierValueBlock);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 13;\n  }\n  getValue() {\n    return this.valueBlock.toString();\n  }\n  setValue(value) {\n    this.valueBlock.fromString(value);\n  }\n  onAsciiEncoding() {\n    return `${this.constructor.NAME} : ${this.valueBlock.toString() || "empty"}`;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      value: this.getValue()\n    };\n  }\n};\n__name(RelativeObjectIdentifier, "RelativeObjectIdentifier");\n_a$l = RelativeObjectIdentifier;\n(() => {\n  typeStore.RelativeObjectIdentifier = _a$l;\n})();\nRelativeObjectIdentifier.NAME = "RelativeObjectIdentifier";\nvar _a$k;\nvar Sequence = class extends Constructed {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 16;\n  }\n};\n__name(Sequence, "Sequence");\n_a$k = Sequence;\n(() => {\n  typeStore.Sequence = _a$k;\n})();\nSequence.NAME = "SEQUENCE";\nvar _a$j;\nvar Set = class extends Constructed {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 17;\n  }\n};\n__name(Set, "Set");\n_a$j = Set;\n(() => {\n  typeStore.Set = _a$j;\n})();\nSet.NAME = "SET";\nvar LocalStringValueBlock = class extends HexBlock(ValueBlock) {\n  constructor({ ...parameters } = {}) {\n    super(parameters);\n    this.isHexOnly = true;\n    this.value = EMPTY_STRING;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      value: this.value\n    };\n  }\n};\n__name(LocalStringValueBlock, "LocalStringValueBlock");\nLocalStringValueBlock.NAME = "StringValueBlock";\nvar LocalSimpleStringValueBlock = class extends LocalStringValueBlock {\n};\n__name(LocalSimpleStringValueBlock, "LocalSimpleStringValueBlock");\nLocalSimpleStringValueBlock.NAME = "SimpleStringValueBlock";\nvar LocalSimpleStringBlock = class extends BaseStringBlock {\n  constructor({ ...parameters } = {}) {\n    super(parameters, LocalSimpleStringValueBlock);\n  }\n  fromBuffer(inputBuffer) {\n    this.valueBlock.value = String.fromCharCode.apply(null, BufferSourceConverter.toUint8Array(inputBuffer));\n  }\n  fromString(inputString) {\n    const strLen = inputString.length;\n    const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\n    for (let i = 0; i < strLen; i++)\n      view[i] = inputString.charCodeAt(i);\n    this.valueBlock.value = inputString;\n  }\n};\n__name(LocalSimpleStringBlock, "LocalSimpleStringBlock");\nLocalSimpleStringBlock.NAME = "SIMPLE STRING";\nvar LocalUtf8StringValueBlock = class extends LocalSimpleStringBlock {\n  fromBuffer(inputBuffer) {\n    this.valueBlock.valueHexView = BufferSourceConverter.toUint8Array(inputBuffer);\n    try {\n      this.valueBlock.value = Convert.ToUtf8String(inputBuffer);\n    } catch (ex) {\n      this.warnings.push(`Error during "decodeURIComponent": ${ex}, using raw string`);\n      this.valueBlock.value = Convert.ToBinary(inputBuffer);\n    }\n  }\n  fromString(inputString) {\n    this.valueBlock.valueHexView = new Uint8Array(Convert.FromUtf8String(inputString));\n    this.valueBlock.value = inputString;\n  }\n};\n__name(LocalUtf8StringValueBlock, "LocalUtf8StringValueBlock");\nLocalUtf8StringValueBlock.NAME = "Utf8StringValueBlock";\nvar _a$i;\nvar Utf8String = class extends LocalUtf8StringValueBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 12;\n  }\n};\n__name(Utf8String, "Utf8String");\n_a$i = Utf8String;\n(() => {\n  typeStore.Utf8String = _a$i;\n})();\nUtf8String.NAME = "UTF8String";\nvar LocalBmpStringValueBlock = class extends LocalSimpleStringBlock {\n  fromBuffer(inputBuffer) {\n    this.valueBlock.value = Convert.ToUtf16String(inputBuffer);\n    this.valueBlock.valueHexView = BufferSourceConverter.toUint8Array(inputBuffer);\n  }\n  fromString(inputString) {\n    this.valueBlock.value = inputString;\n    this.valueBlock.valueHexView = new Uint8Array(Convert.FromUtf16String(inputString));\n  }\n};\n__name(LocalBmpStringValueBlock, "LocalBmpStringValueBlock");\nLocalBmpStringValueBlock.NAME = "BmpStringValueBlock";\nvar _a$h;\nvar BmpString = class extends LocalBmpStringValueBlock {\n  constructor({ ...parameters } = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 30;\n  }\n};\n__name(BmpString, "BmpString");\n_a$h = BmpString;\n(() => {\n  typeStore.BmpString = _a$h;\n})();\nBmpString.NAME = "BMPString";\nvar LocalUniversalStringValueBlock = class extends LocalSimpleStringBlock {\n  fromBuffer(inputBuffer) {\n    const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\n    const valueView = new Uint8Array(copyBuffer);\n    for (let i = 0; i < valueView.length; i += 4) {\n      valueView[i] = valueView[i + 3];\n      valueView[i + 1] = valueView[i + 2];\n      valueView[i + 2] = 0;\n      valueView[i + 3] = 0;\n    }\n    this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\n  }\n  fromString(inputString) {\n    const strLength = inputString.length;\n    const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\n    for (let i = 0; i < strLength; i++) {\n      const codeBuf = utilToBase(inputString.charCodeAt(i), 8);\n      const codeView = new Uint8Array(codeBuf);\n      if (codeView.length > 4)\n        continue;\n      const dif = 4 - codeView.length;\n      for (let j = codeView.length - 1; j >= 0; j--)\n        valueHexView[i * 4 + j + dif] = codeView[j];\n    }\n    this.valueBlock.value = inputString;\n  }\n};\n__name(LocalUniversalStringValueBlock, "LocalUniversalStringValueBlock");\nLocalUniversalStringValueBlock.NAME = "UniversalStringValueBlock";\nvar _a$g;\nvar UniversalString = class extends LocalUniversalStringValueBlock {\n  constructor({ ...parameters } = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 28;\n  }\n};\n__name(UniversalString, "UniversalString");\n_a$g = UniversalString;\n(() => {\n  typeStore.UniversalString = _a$g;\n})();\nUniversalString.NAME = "UniversalString";\nvar _a$f;\nvar NumericString = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 18;\n  }\n};\n__name(NumericString, "NumericString");\n_a$f = NumericString;\n(() => {\n  typeStore.NumericString = _a$f;\n})();\nNumericString.NAME = "NumericString";\nvar _a$e;\nvar PrintableString = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 19;\n  }\n};\n__name(PrintableString, "PrintableString");\n_a$e = PrintableString;\n(() => {\n  typeStore.PrintableString = _a$e;\n})();\nPrintableString.NAME = "PrintableString";\nvar _a$d;\nvar TeletexString = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 20;\n  }\n};\n__name(TeletexString, "TeletexString");\n_a$d = TeletexString;\n(() => {\n  typeStore.TeletexString = _a$d;\n})();\nTeletexString.NAME = "TeletexString";\nvar _a$c;\nvar VideotexString = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 21;\n  }\n};\n__name(VideotexString, "VideotexString");\n_a$c = VideotexString;\n(() => {\n  typeStore.VideotexString = _a$c;\n})();\nVideotexString.NAME = "VideotexString";\nvar _a$b;\nvar IA5String = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 22;\n  }\n};\n__name(IA5String, "IA5String");\n_a$b = IA5String;\n(() => {\n  typeStore.IA5String = _a$b;\n})();\nIA5String.NAME = "IA5String";\nvar _a$a;\nvar GraphicString = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 25;\n  }\n};\n__name(GraphicString, "GraphicString");\n_a$a = GraphicString;\n(() => {\n  typeStore.GraphicString = _a$a;\n})();\nGraphicString.NAME = "GraphicString";\nvar _a$9;\nvar VisibleString = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 26;\n  }\n};\n__name(VisibleString, "VisibleString");\n_a$9 = VisibleString;\n(() => {\n  typeStore.VisibleString = _a$9;\n})();\nVisibleString.NAME = "VisibleString";\nvar _a$8;\nvar GeneralString = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 27;\n  }\n};\n__name(GeneralString, "GeneralString");\n_a$8 = GeneralString;\n(() => {\n  typeStore.GeneralString = _a$8;\n})();\nGeneralString.NAME = "GeneralString";\nvar _a$7;\nvar CharacterString = class extends LocalSimpleStringBlock {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 29;\n  }\n};\n__name(CharacterString, "CharacterString");\n_a$7 = CharacterString;\n(() => {\n  typeStore.CharacterString = _a$7;\n})();\nCharacterString.NAME = "CharacterString";\nvar _a$6;\nvar UTCTime = class extends VisibleString {\n  constructor({ value, valueDate, ...parameters } = {}) {\n    super(parameters);\n    this.year = 0;\n    this.month = 0;\n    this.day = 0;\n    this.hour = 0;\n    this.minute = 0;\n    this.second = 0;\n    if (value) {\n      this.fromString(value);\n      this.valueBlock.valueHexView = new Uint8Array(value.length);\n      for (let i = 0; i < value.length; i++)\n        this.valueBlock.valueHexView[i] = value.charCodeAt(i);\n    }\n    if (valueDate) {\n      this.fromDate(valueDate);\n      this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\n    }\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 23;\n  }\n  fromBuffer(inputBuffer) {\n    this.fromString(String.fromCharCode.apply(null, BufferSourceConverter.toUint8Array(inputBuffer)));\n  }\n  toBuffer() {\n    const str = this.toString();\n    const buffer = new ArrayBuffer(str.length);\n    const view = new Uint8Array(buffer);\n    for (let i = 0; i < str.length; i++)\n      view[i] = str.charCodeAt(i);\n    return buffer;\n  }\n  fromDate(inputDate) {\n    this.year = inputDate.getUTCFullYear();\n    this.month = inputDate.getUTCMonth() + 1;\n    this.day = inputDate.getUTCDate();\n    this.hour = inputDate.getUTCHours();\n    this.minute = inputDate.getUTCMinutes();\n    this.second = inputDate.getUTCSeconds();\n  }\n  toDate() {\n    return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second));\n  }\n  fromString(inputString) {\n    const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\n    const parserArray = parser.exec(inputString);\n    if (parserArray === null) {\n      this.error = "Wrong input string for conversion";\n      return;\n    }\n    const year = parseInt(parserArray[1], 10);\n    if (year >= 50)\n      this.year = 1900 + year;\n    else\n      this.year = 2e3 + year;\n    this.month = parseInt(parserArray[2], 10);\n    this.day = parseInt(parserArray[3], 10);\n    this.hour = parseInt(parserArray[4], 10);\n    this.minute = parseInt(parserArray[5], 10);\n    this.second = parseInt(parserArray[6], 10);\n  }\n  toString(encoding = "iso") {\n    if (encoding === "iso") {\n      const outputArray = new Array(7);\n      outputArray[0] = padNumber(this.year < 2e3 ? this.year - 1900 : this.year - 2e3, 2);\n      outputArray[1] = padNumber(this.month, 2);\n      outputArray[2] = padNumber(this.day, 2);\n      outputArray[3] = padNumber(this.hour, 2);\n      outputArray[4] = padNumber(this.minute, 2);\n      outputArray[5] = padNumber(this.second, 2);\n      outputArray[6] = "Z";\n      return outputArray.join("");\n    }\n    return super.toString(encoding);\n  }\n  onAsciiEncoding() {\n    return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      year: this.year,\n      month: this.month,\n      day: this.day,\n      hour: this.hour,\n      minute: this.minute,\n      second: this.second\n    };\n  }\n};\n__name(UTCTime, "UTCTime");\n_a$6 = UTCTime;\n(() => {\n  typeStore.UTCTime = _a$6;\n})();\nUTCTime.NAME = "UTCTime";\nvar _a$5;\nvar GeneralizedTime = class extends UTCTime {\n  constructor(parameters = {}) {\n    var _b;\n    super(parameters);\n    (_b = this.millisecond) !== null && _b !== void 0 ? _b : this.millisecond = 0;\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 24;\n  }\n  fromDate(inputDate) {\n    super.fromDate(inputDate);\n    this.millisecond = inputDate.getUTCMilliseconds();\n  }\n  toDate() {\n    return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond));\n  }\n  fromString(inputString) {\n    let isUTC = false;\n    let timeString = "";\n    let dateTimeString = "";\n    let fractionPart = 0;\n    let parser;\n    let hourDifference = 0;\n    let minuteDifference = 0;\n    if (inputString[inputString.length - 1] === "Z") {\n      timeString = inputString.substring(0, inputString.length - 1);\n      isUTC = true;\n    } else {\n      const number = new Number(inputString[inputString.length - 1]);\n      if (isNaN(number.valueOf()))\n        throw new Error("Wrong input string for conversion");\n      timeString = inputString;\n    }\n    if (isUTC) {\n      if (timeString.indexOf("+") !== -1)\n        throw new Error("Wrong input string for conversion");\n      if (timeString.indexOf("-") !== -1)\n        throw new Error("Wrong input string for conversion");\n    } else {\n      let multiplier = 1;\n      let differencePosition = timeString.indexOf("+");\n      let differenceString = "";\n      if (differencePosition === -1) {\n        differencePosition = timeString.indexOf("-");\n        multiplier = -1;\n      }\n      if (differencePosition !== -1) {\n        differenceString = timeString.substring(differencePosition + 1);\n        timeString = timeString.substring(0, differencePosition);\n        if (differenceString.length !== 2 && differenceString.length !== 4)\n          throw new Error("Wrong input string for conversion");\n        let number = parseInt(differenceString.substring(0, 2), 10);\n        if (isNaN(number.valueOf()))\n          throw new Error("Wrong input string for conversion");\n        hourDifference = multiplier * number;\n        if (differenceString.length === 4) {\n          number = parseInt(differenceString.substring(2, 4), 10);\n          if (isNaN(number.valueOf()))\n            throw new Error("Wrong input string for conversion");\n          minuteDifference = multiplier * number;\n        }\n      }\n    }\n    let fractionPointPosition = timeString.indexOf(".");\n    if (fractionPointPosition === -1)\n      fractionPointPosition = timeString.indexOf(",");\n    if (fractionPointPosition !== -1) {\n      const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\n      if (isNaN(fractionPartCheck.valueOf()))\n        throw new Error("Wrong input string for conversion");\n      fractionPart = fractionPartCheck.valueOf();\n      dateTimeString = timeString.substring(0, fractionPointPosition);\n    } else\n      dateTimeString = timeString;\n    switch (true) {\n      case dateTimeString.length === 8:\n        parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\n        if (fractionPointPosition !== -1)\n          throw new Error("Wrong input string for conversion");\n        break;\n      case dateTimeString.length === 10:\n        parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\n        if (fractionPointPosition !== -1) {\n          let fractionResult = 60 * fractionPart;\n          this.minute = Math.floor(fractionResult);\n          fractionResult = 60 * (fractionResult - this.minute);\n          this.second = Math.floor(fractionResult);\n          fractionResult = 1e3 * (fractionResult - this.second);\n          this.millisecond = Math.floor(fractionResult);\n        }\n        break;\n      case dateTimeString.length === 12:\n        parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n        if (fractionPointPosition !== -1) {\n          let fractionResult = 60 * fractionPart;\n          this.second = Math.floor(fractionResult);\n          fractionResult = 1e3 * (fractionResult - this.second);\n          this.millisecond = Math.floor(fractionResult);\n        }\n        break;\n      case dateTimeString.length === 14:\n        parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n        if (fractionPointPosition !== -1) {\n          const fractionResult = 1e3 * fractionPart;\n          this.millisecond = Math.floor(fractionResult);\n        }\n        break;\n      default:\n        throw new Error("Wrong input string for conversion");\n    }\n    const parserArray = parser.exec(dateTimeString);\n    if (parserArray === null)\n      throw new Error("Wrong input string for conversion");\n    for (let j = 1; j < parserArray.length; j++) {\n      switch (j) {\n        case 1:\n          this.year = parseInt(parserArray[j], 10);\n          break;\n        case 2:\n          this.month = parseInt(parserArray[j], 10);\n          break;\n        case 3:\n          this.day = parseInt(parserArray[j], 10);\n          break;\n        case 4:\n          this.hour = parseInt(parserArray[j], 10) + hourDifference;\n          break;\n        case 5:\n          this.minute = parseInt(parserArray[j], 10) + minuteDifference;\n          break;\n        case 6:\n          this.second = parseInt(parserArray[j], 10);\n          break;\n        default:\n          throw new Error("Wrong input string for conversion");\n      }\n    }\n    if (isUTC === false) {\n      const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n      this.year = tempDate.getUTCFullYear();\n      this.month = tempDate.getUTCMonth();\n      this.day = tempDate.getUTCDay();\n      this.hour = tempDate.getUTCHours();\n      this.minute = tempDate.getUTCMinutes();\n      this.second = tempDate.getUTCSeconds();\n      this.millisecond = tempDate.getUTCMilliseconds();\n    }\n  }\n  toString(encoding = "iso") {\n    if (encoding === "iso") {\n      const outputArray = [];\n      outputArray.push(padNumber(this.year, 4));\n      outputArray.push(padNumber(this.month, 2));\n      outputArray.push(padNumber(this.day, 2));\n      outputArray.push(padNumber(this.hour, 2));\n      outputArray.push(padNumber(this.minute, 2));\n      outputArray.push(padNumber(this.second, 2));\n      if (this.millisecond !== 0) {\n        outputArray.push(".");\n        outputArray.push(padNumber(this.millisecond, 3));\n      }\n      outputArray.push("Z");\n      return outputArray.join("");\n    }\n    return super.toString(encoding);\n  }\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      millisecond: this.millisecond\n    };\n  }\n};\n__name(GeneralizedTime, "GeneralizedTime");\n_a$5 = GeneralizedTime;\n(() => {\n  typeStore.GeneralizedTime = _a$5;\n})();\nGeneralizedTime.NAME = "GeneralizedTime";\nvar _a$4;\nvar DATE = class extends Utf8String {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 31;\n  }\n};\n__name(DATE, "DATE");\n_a$4 = DATE;\n(() => {\n  typeStore.DATE = _a$4;\n})();\nDATE.NAME = "DATE";\nvar _a$3;\nvar TimeOfDay = class extends Utf8String {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 32;\n  }\n};\n__name(TimeOfDay, "TimeOfDay");\n_a$3 = TimeOfDay;\n(() => {\n  typeStore.TimeOfDay = _a$3;\n})();\nTimeOfDay.NAME = "TimeOfDay";\nvar _a$2;\nvar DateTime = class extends Utf8String {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 33;\n  }\n};\n__name(DateTime, "DateTime");\n_a$2 = DateTime;\n(() => {\n  typeStore.DateTime = _a$2;\n})();\nDateTime.NAME = "DateTime";\nvar _a$1;\nvar Duration = class extends Utf8String {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 34;\n  }\n};\n__name(Duration, "Duration");\n_a$1 = Duration;\n(() => {\n  typeStore.Duration = _a$1;\n})();\nDuration.NAME = "Duration";\nvar _a;\nvar TIME = class extends Utf8String {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.idBlock.tagClass = 1;\n    this.idBlock.tagNumber = 14;\n  }\n};\n__name(TIME, "TIME");\n_a = TIME;\n(() => {\n  typeStore.TIME = _a;\n})();\nTIME.NAME = "TIME";\nvar Any = class {\n  constructor({ name = EMPTY_STRING, optional = false } = {}) {\n    this.name = name;\n    this.optional = optional;\n  }\n};\n__name(Any, "Any");\nvar Choice = class extends Any {\n  constructor({ value = [], ...parameters } = {}) {\n    super(parameters);\n    this.value = value;\n  }\n};\n__name(Choice, "Choice");\nvar Repeated = class extends Any {\n  constructor({ value = new Any(), local = false, ...parameters } = {}) {\n    super(parameters);\n    this.value = value;\n    this.local = local;\n  }\n};\n__name(Repeated, "Repeated");\nvar RawData = class {\n  constructor({ data = EMPTY_VIEW } = {}) {\n    this.dataView = BufferSourceConverter.toUint8Array(data);\n  }\n  get data() {\n    return this.dataView.slice().buffer;\n  }\n  set data(value) {\n    this.dataView = BufferSourceConverter.toUint8Array(value);\n  }\n  fromBER(inputBuffer, inputOffset, inputLength) {\n    const endLength = inputOffset + inputLength;\n    this.dataView = BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\n    return endLength;\n  }\n  toBER(sizeOnly) {\n    return this.dataView.slice().buffer;\n  }\n};\n__name(RawData, "RawData");\nfunction compareSchema(root, inputData, inputSchema) {\n  if (inputSchema instanceof Choice) {\n    for (let j = 0; j < inputSchema.value.length; j++) {\n      const result = compareSchema(root, inputData, inputSchema.value[j]);\n      if (result.verified) {\n        return {\n          verified: true,\n          result: root\n        };\n      }\n    }\n    {\n      const _result = {\n        verified: false,\n        result: {\n          error: "Wrong values for Choice type"\n        }\n      };\n      if (inputSchema.hasOwnProperty(NAME))\n        _result.name = inputSchema.name;\n      return _result;\n    }\n  }\n  if (inputSchema instanceof Any) {\n    if (inputSchema.hasOwnProperty(NAME))\n      root[inputSchema.name] = inputData;\n    return {\n      verified: true,\n      result: root\n    };\n  }\n  if (root instanceof Object === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong root object" }\n    };\n  }\n  if (inputData instanceof Object === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 data" }\n    };\n  }\n  if (inputSchema instanceof Object === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema" }\n    };\n  }\n  if (ID_BLOCK in inputSchema === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema" }\n    };\n  }\n  if (FROM_BER in inputSchema.idBlock === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema" }\n    };\n  }\n  if (TO_BER in inputSchema.idBlock === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema" }\n    };\n  }\n  const encodedId = inputSchema.idBlock.toBER(false);\n  if (encodedId.byteLength === 0) {\n    return {\n      verified: false,\n      result: { error: "Error encoding idBlock for ASN.1 schema" }\n    };\n  }\n  const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\n  if (decodedOffset === -1) {\n    return {\n      verified: false,\n      result: { error: "Error decoding idBlock for ASN.1 schema" }\n    };\n  }\n  if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema" }\n    };\n  }\n  if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\n    return {\n      verified: false,\n      result: root\n    };\n  }\n  if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema" }\n    };\n  }\n  if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\n    return {\n      verified: false,\n      result: root\n    };\n  }\n  if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema" }\n    };\n  }\n  if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\n    return {\n      verified: false,\n      result: root\n    };\n  }\n  if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema" }\n    };\n  }\n  if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\n    return {\n      verified: false,\n      result: root\n    };\n  }\n  if (inputSchema.idBlock.isHexOnly) {\n    if (VALUE_HEX_VIEW in inputSchema.idBlock === false) {\n      return {\n        verified: false,\n        result: { error: "Wrong ASN.1 schema" }\n      };\n    }\n    const schemaView = inputSchema.idBlock.valueHexView;\n    const asn1View = inputData.idBlock.valueHexView;\n    if (schemaView.length !== asn1View.length) {\n      return {\n        verified: false,\n        result: root\n      };\n    }\n    for (let i = 0; i < schemaView.length; i++) {\n      if (schemaView[i] !== asn1View[1]) {\n        return {\n          verified: false,\n          result: root\n        };\n      }\n    }\n  }\n  if (inputSchema.name) {\n    inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n    if (inputSchema.name)\n      root[inputSchema.name] = inputData;\n  }\n  if (inputSchema instanceof typeStore.Constructed) {\n    let admission = 0;\n    let result = {\n      verified: false,\n      result: {\n        error: "Unknown error"\n      }\n    };\n    let maxLength = inputSchema.valueBlock.value.length;\n    if (maxLength > 0) {\n      if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n        maxLength = inputData.valueBlock.value.length;\n      }\n    }\n    if (maxLength === 0) {\n      return {\n        verified: true,\n        result: root\n      };\n    }\n    if (inputData.valueBlock.value.length === 0 && inputSchema.valueBlock.value.length !== 0) {\n      let _optional = true;\n      for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\n        _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\n      if (_optional) {\n        return {\n          verified: true,\n          result: root\n        };\n      }\n      if (inputSchema.name) {\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n        if (inputSchema.name)\n          delete root[inputSchema.name];\n      }\n      root.error = "Inconsistent object length";\n      return {\n        verified: false,\n        result: root\n      };\n    }\n    for (let i = 0; i < maxLength; i++) {\n      if (i - admission >= inputData.valueBlock.value.length) {\n        if (inputSchema.valueBlock.value[i].optional === false) {\n          const _result = {\n            verified: false,\n            result: root\n          };\n          root.error = "Inconsistent length between ASN.1 data and schema";\n          if (inputSchema.name) {\n            inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n            if (inputSchema.name) {\n              delete root[inputSchema.name];\n              _result.name = inputSchema.name;\n            }\n          }\n          return _result;\n        }\n      } else {\n        if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n          result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\n          if (result.verified === false) {\n            if (inputSchema.valueBlock.value[0].optional)\n              admission++;\n            else {\n              if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name)\n                  delete root[inputSchema.name];\n              }\n              return result;\n            }\n          }\n          if (NAME in inputSchema.valueBlock.value[0] && inputSchema.valueBlock.value[0].name.length > 0) {\n            let arrayRoot = {};\n            if (LOCAL in inputSchema.valueBlock.value[0] && inputSchema.valueBlock.value[0].local)\n              arrayRoot = inputData;\n            else\n              arrayRoot = root;\n            if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === "undefined")\n              arrayRoot[inputSchema.valueBlock.value[0].name] = [];\n            arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\n          }\n        } else {\n          result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\n          if (result.verified === false) {\n            if (inputSchema.valueBlock.value[i].optional)\n              admission++;\n            else {\n              if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name)\n                  delete root[inputSchema.name];\n              }\n              return result;\n            }\n          }\n        }\n      }\n    }\n    if (result.verified === false) {\n      const _result = {\n        verified: false,\n        result: root\n      };\n      if (inputSchema.name) {\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n        if (inputSchema.name) {\n          delete root[inputSchema.name];\n          _result.name = inputSchema.name;\n        }\n      }\n      return _result;\n    }\n    return {\n      verified: true,\n      result: root\n    };\n  }\n  if (inputSchema.primitiveSchema && VALUE_HEX_VIEW in inputData.valueBlock) {\n    const asn1 = localFromBER(inputData.valueBlock.valueHexView);\n    if (asn1.offset === -1) {\n      const _result = {\n        verified: false,\n        result: asn1.result\n      };\n      if (inputSchema.name) {\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n        if (inputSchema.name) {\n          delete root[inputSchema.name];\n          _result.name = inputSchema.name;\n        }\n      }\n      return _result;\n    }\n    return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\n  }\n  return {\n    verified: true,\n    result: root\n  };\n}\n__name(compareSchema, "compareSchema");\nfunction verifySchema(inputBuffer, inputSchema) {\n  if (inputSchema instanceof Object === false) {\n    return {\n      verified: false,\n      result: { error: "Wrong ASN.1 schema type" }\n    };\n  }\n  const asn1 = localFromBER(BufferSourceConverter.toUint8Array(inputBuffer));\n  if (asn1.offset === -1) {\n    return {\n      verified: false,\n      result: asn1.result\n    };\n  }\n  return compareSchema(asn1.result, asn1.result, inputSchema);\n}\n__name(verifySchema, "verifySchema");\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/enums.js\nvar AsnTypeTypes;\n(function(AsnTypeTypes2) {\n  AsnTypeTypes2[AsnTypeTypes2["Sequence"] = 0] = "Sequence";\n  AsnTypeTypes2[AsnTypeTypes2["Set"] = 1] = "Set";\n  AsnTypeTypes2[AsnTypeTypes2["Choice"] = 2] = "Choice";\n})(AsnTypeTypes || (AsnTypeTypes = {}));\nvar AsnPropTypes;\n(function(AsnPropTypes2) {\n  AsnPropTypes2[AsnPropTypes2["Any"] = 1] = "Any";\n  AsnPropTypes2[AsnPropTypes2["Boolean"] = 2] = "Boolean";\n  AsnPropTypes2[AsnPropTypes2["OctetString"] = 3] = "OctetString";\n  AsnPropTypes2[AsnPropTypes2["BitString"] = 4] = "BitString";\n  AsnPropTypes2[AsnPropTypes2["Integer"] = 5] = "Integer";\n  AsnPropTypes2[AsnPropTypes2["Enumerated"] = 6] = "Enumerated";\n  AsnPropTypes2[AsnPropTypes2["ObjectIdentifier"] = 7] = "ObjectIdentifier";\n  AsnPropTypes2[AsnPropTypes2["Utf8String"] = 8] = "Utf8String";\n  AsnPropTypes2[AsnPropTypes2["BmpString"] = 9] = "BmpString";\n  AsnPropTypes2[AsnPropTypes2["UniversalString"] = 10] = "UniversalString";\n  AsnPropTypes2[AsnPropTypes2["NumericString"] = 11] = "NumericString";\n  AsnPropTypes2[AsnPropTypes2["PrintableString"] = 12] = "PrintableString";\n  AsnPropTypes2[AsnPropTypes2["TeletexString"] = 13] = "TeletexString";\n  AsnPropTypes2[AsnPropTypes2["VideotexString"] = 14] = "VideotexString";\n  AsnPropTypes2[AsnPropTypes2["IA5String"] = 15] = "IA5String";\n  AsnPropTypes2[AsnPropTypes2["GraphicString"] = 16] = "GraphicString";\n  AsnPropTypes2[AsnPropTypes2["VisibleString"] = 17] = "VisibleString";\n  AsnPropTypes2[AsnPropTypes2["GeneralString"] = 18] = "GeneralString";\n  AsnPropTypes2[AsnPropTypes2["CharacterString"] = 19] = "CharacterString";\n  AsnPropTypes2[AsnPropTypes2["UTCTime"] = 20] = "UTCTime";\n  AsnPropTypes2[AsnPropTypes2["GeneralizedTime"] = 21] = "GeneralizedTime";\n  AsnPropTypes2[AsnPropTypes2["DATE"] = 22] = "DATE";\n  AsnPropTypes2[AsnPropTypes2["TimeOfDay"] = 23] = "TimeOfDay";\n  AsnPropTypes2[AsnPropTypes2["DateTime"] = 24] = "DateTime";\n  AsnPropTypes2[AsnPropTypes2["Duration"] = 25] = "Duration";\n  AsnPropTypes2[AsnPropTypes2["TIME"] = 26] = "TIME";\n  AsnPropTypes2[AsnPropTypes2["Null"] = 27] = "Null";\n})(AsnPropTypes || (AsnPropTypes = {}));\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/converters.js\nvar AsnAnyConverter = {\n  fromASN: (value) => value instanceof Null ? null : value.valueBeforeDecodeView,\n  toASN: (value) => {\n    if (value === null) {\n      return new Null();\n    }\n    const schema = fromBER(value);\n    if (schema.result.error) {\n      throw new Error(schema.result.error);\n    }\n    return schema.result;\n  }\n};\nvar AsnIntegerConverter = {\n  fromASN: (value) => value.valueBlock.valueHexView.byteLength >= 4 ? value.valueBlock.toString() : value.valueBlock.valueDec,\n  toASN: (value) => new Integer({ value: +value })\n};\nvar AsnEnumeratedConverter = {\n  fromASN: (value) => value.valueBlock.valueDec,\n  toASN: (value) => new Enumerated({ value })\n};\nvar AsnBitStringConverter = {\n  fromASN: (value) => value.valueBlock.valueHexView,\n  toASN: (value) => new BitString({ valueHex: value })\n};\nvar AsnObjectIdentifierConverter = {\n  fromASN: (value) => value.valueBlock.toString(),\n  toASN: (value) => new ObjectIdentifier({ value })\n};\nvar AsnBooleanConverter = {\n  fromASN: (value) => value.valueBlock.value,\n  toASN: (value) => new Boolean({ value })\n};\nvar AsnOctetStringConverter = {\n  fromASN: (value) => value.valueBlock.valueHexView,\n  toASN: (value) => new OctetString({ valueHex: value })\n};\nfunction createStringConverter(Asn1Type) {\n  return {\n    fromASN: (value) => value.valueBlock.value,\n    toASN: (value) => new Asn1Type({ value })\n  };\n}\n__name(createStringConverter, "createStringConverter");\nvar AsnUtf8StringConverter = createStringConverter(Utf8String);\nvar AsnBmpStringConverter = createStringConverter(BmpString);\nvar AsnUniversalStringConverter = createStringConverter(UniversalString);\nvar AsnNumericStringConverter = createStringConverter(NumericString);\nvar AsnPrintableStringConverter = createStringConverter(PrintableString);\nvar AsnTeletexStringConverter = createStringConverter(TeletexString);\nvar AsnVideotexStringConverter = createStringConverter(VideotexString);\nvar AsnIA5StringConverter = createStringConverter(IA5String);\nvar AsnGraphicStringConverter = createStringConverter(GraphicString);\nvar AsnVisibleStringConverter = createStringConverter(VisibleString);\nvar AsnGeneralStringConverter = createStringConverter(GeneralString);\nvar AsnCharacterStringConverter = createStringConverter(CharacterString);\nvar AsnUTCTimeConverter = {\n  fromASN: (value) => value.toDate(),\n  toASN: (value) => new UTCTime({ valueDate: value })\n};\nvar AsnGeneralizedTimeConverter = {\n  fromASN: (value) => value.toDate(),\n  toASN: (value) => new GeneralizedTime({ valueDate: value })\n};\nvar AsnNullConverter = {\n  fromASN: () => null,\n  toASN: () => {\n    return new Null();\n  }\n};\nfunction defaultConverter(type) {\n  switch (type) {\n    case AsnPropTypes.Any:\n      return AsnAnyConverter;\n    case AsnPropTypes.BitString:\n      return AsnBitStringConverter;\n    case AsnPropTypes.BmpString:\n      return AsnBmpStringConverter;\n    case AsnPropTypes.Boolean:\n      return AsnBooleanConverter;\n    case AsnPropTypes.CharacterString:\n      return AsnCharacterStringConverter;\n    case AsnPropTypes.Enumerated:\n      return AsnEnumeratedConverter;\n    case AsnPropTypes.GeneralString:\n      return AsnGeneralStringConverter;\n    case AsnPropTypes.GeneralizedTime:\n      return AsnGeneralizedTimeConverter;\n    case AsnPropTypes.GraphicString:\n      return AsnGraphicStringConverter;\n    case AsnPropTypes.IA5String:\n      return AsnIA5StringConverter;\n    case AsnPropTypes.Integer:\n      return AsnIntegerConverter;\n    case AsnPropTypes.Null:\n      return AsnNullConverter;\n    case AsnPropTypes.NumericString:\n      return AsnNumericStringConverter;\n    case AsnPropTypes.ObjectIdentifier:\n      return AsnObjectIdentifierConverter;\n    case AsnPropTypes.OctetString:\n      return AsnOctetStringConverter;\n    case AsnPropTypes.PrintableString:\n      return AsnPrintableStringConverter;\n    case AsnPropTypes.TeletexString:\n      return AsnTeletexStringConverter;\n    case AsnPropTypes.UTCTime:\n      return AsnUTCTimeConverter;\n    case AsnPropTypes.UniversalString:\n      return AsnUniversalStringConverter;\n    case AsnPropTypes.Utf8String:\n      return AsnUtf8StringConverter;\n    case AsnPropTypes.VideotexString:\n      return AsnVideotexStringConverter;\n    case AsnPropTypes.VisibleString:\n      return AsnVisibleStringConverter;\n    default:\n      return null;\n  }\n}\n__name(defaultConverter, "defaultConverter");\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/helper.js\nfunction isConvertible(target) {\n  if (typeof target === "function" && target.prototype) {\n    if (target.prototype.toASN && target.prototype.fromASN) {\n      return true;\n    } else {\n      return isConvertible(target.prototype);\n    }\n  } else {\n    return !!(target && typeof target === "object" && "toASN" in target && "fromASN" in target);\n  }\n}\n__name(isConvertible, "isConvertible");\nfunction isTypeOfArray(target) {\n  var _a2;\n  if (target) {\n    const proto = Object.getPrototypeOf(target);\n    if (((_a2 = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a2 === void 0 ? void 0 : _a2.constructor) === Array) {\n      return true;\n    }\n    return isTypeOfArray(proto);\n  }\n  return false;\n}\n__name(isTypeOfArray, "isTypeOfArray");\nfunction isArrayEqual(bytes1, bytes2) {\n  if (!(bytes1 && bytes2)) {\n    return false;\n  }\n  if (bytes1.byteLength !== bytes2.byteLength) {\n    return false;\n  }\n  const b1 = new Uint8Array(bytes1);\n  const b2 = new Uint8Array(bytes2);\n  for (let i = 0; i < bytes1.byteLength; i++) {\n    if (b1[i] !== b2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n__name(isArrayEqual, "isArrayEqual");\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/schema.js\nvar AsnSchemaStorage = class {\n  constructor() {\n    this.items = /* @__PURE__ */ new WeakMap();\n  }\n  has(target) {\n    return this.items.has(target);\n  }\n  get(target, checkSchema = false) {\n    const schema = this.items.get(target);\n    if (!schema) {\n      throw new Error(`Cannot get schema for \'${target.prototype.constructor.name}\' target`);\n    }\n    if (checkSchema && !schema.schema) {\n      throw new Error(`Schema \'${target.prototype.constructor.name}\' doesn\'t contain ASN.1 schema. Call \'AsnSchemaStorage.cache\'.`);\n    }\n    return schema;\n  }\n  cache(target) {\n    const schema = this.get(target);\n    if (!schema.schema) {\n      schema.schema = this.create(target, true);\n    }\n  }\n  createDefault(target) {\n    const schema = {\n      type: AsnTypeTypes.Sequence,\n      items: {}\n    };\n    const parentSchema = this.findParentSchema(target);\n    if (parentSchema) {\n      Object.assign(schema, parentSchema);\n      schema.items = Object.assign({}, schema.items, parentSchema.items);\n    }\n    return schema;\n  }\n  create(target, useNames) {\n    const schema = this.items.get(target) || this.createDefault(target);\n    const asn1Value = [];\n    for (const key in schema.items) {\n      const item = schema.items[key];\n      const name = useNames ? key : "";\n      let asn1Item;\n      if (typeof item.type === "number") {\n        const Asn1TypeName = AsnPropTypes[item.type];\n        const Asn1Type = index_es_exports[Asn1TypeName];\n        if (!Asn1Type) {\n          throw new Error(`Cannot get ASN1 class by name \'${Asn1TypeName}\'`);\n        }\n        asn1Item = new Asn1Type({ name });\n      } else if (isConvertible(item.type)) {\n        const instance = new item.type();\n        asn1Item = instance.toSchema(name);\n      } else if (item.optional) {\n        const itemSchema = this.get(item.type);\n        if (itemSchema.type === AsnTypeTypes.Choice) {\n          asn1Item = new Any({ name });\n        } else {\n          asn1Item = this.create(item.type, false);\n          asn1Item.name = name;\n        }\n      } else {\n        asn1Item = new Any({ name });\n      }\n      const optional = !!item.optional || item.defaultValue !== void 0;\n      if (item.repeated) {\n        asn1Item.name = "";\n        const Container = item.repeated === "set" ? Set : Sequence;\n        asn1Item = new Container({\n          name: "",\n          value: [\n            new Repeated({\n              name,\n              value: asn1Item\n            })\n          ]\n        });\n      }\n      if (item.context !== null && item.context !== void 0) {\n        if (item.implicit) {\n          if (typeof item.type === "number" || isConvertible(item.type)) {\n            const Container = item.repeated ? Constructed : Primitive;\n            asn1Value.push(new Container({\n              name,\n              optional,\n              idBlock: {\n                tagClass: 3,\n                tagNumber: item.context\n              }\n            }));\n          } else {\n            this.cache(item.type);\n            const isRepeated = !!item.repeated;\n            let value = !isRepeated ? this.get(item.type, true).schema : asn1Item;\n            value = "valueBlock" in value ? value.valueBlock.value : value.value;\n            asn1Value.push(new Constructed({\n              name: !isRepeated ? name : "",\n              optional,\n              idBlock: {\n                tagClass: 3,\n                tagNumber: item.context\n              },\n              value\n            }));\n          }\n        } else {\n          asn1Value.push(new Constructed({\n            optional,\n            idBlock: {\n              tagClass: 3,\n              tagNumber: item.context\n            },\n            value: [asn1Item]\n          }));\n        }\n      } else {\n        asn1Item.optional = optional;\n        asn1Value.push(asn1Item);\n      }\n    }\n    switch (schema.type) {\n      case AsnTypeTypes.Sequence:\n        return new Sequence({ value: asn1Value, name: "" });\n      case AsnTypeTypes.Set:\n        return new Set({ value: asn1Value, name: "" });\n      case AsnTypeTypes.Choice:\n        return new Choice({ value: asn1Value, name: "" });\n      default:\n        throw new Error(`Unsupported ASN1 type in use`);\n    }\n  }\n  set(target, schema) {\n    this.items.set(target, schema);\n    return this;\n  }\n  findParentSchema(target) {\n    const parent = Object.getPrototypeOf(target);\n    if (parent) {\n      const schema = this.items.get(parent);\n      return schema || this.findParentSchema(parent);\n    }\n    return null;\n  }\n};\n__name(AsnSchemaStorage, "AsnSchemaStorage");\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/storage.js\nvar schemaStorage = new AsnSchemaStorage();\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/decorators.js\nvar AsnType = /* @__PURE__ */ __name((options) => (target) => {\n  let schema;\n  if (!schemaStorage.has(target)) {\n    schema = schemaStorage.createDefault(target);\n    schemaStorage.set(target, schema);\n  } else {\n    schema = schemaStorage.get(target);\n  }\n  Object.assign(schema, options);\n}, "AsnType");\nvar AsnProp = /* @__PURE__ */ __name((options) => (target, propertyKey) => {\n  let schema;\n  if (!schemaStorage.has(target.constructor)) {\n    schema = schemaStorage.createDefault(target.constructor);\n    schemaStorage.set(target.constructor, schema);\n  } else {\n    schema = schemaStorage.get(target.constructor);\n  }\n  const copyOptions = Object.assign({}, options);\n  if (typeof copyOptions.type === "number" && !copyOptions.converter) {\n    const defaultConverter2 = defaultConverter(options.type);\n    if (!defaultConverter2) {\n      throw new Error(`Cannot get default converter for property \'${propertyKey}\' of ${target.constructor.name}`);\n    }\n    copyOptions.converter = defaultConverter2;\n  }\n  schema.items[propertyKey] = copyOptions;\n}, "AsnProp");\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js\nvar AsnSchemaValidationError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.schemas = [];\n  }\n};\n__name(AsnSchemaValidationError, "AsnSchemaValidationError");\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/parser.js\nvar AsnParser = class {\n  static parse(data, target) {\n    const asn1Parsed = fromBER(data);\n    if (asn1Parsed.result.error) {\n      throw new Error(asn1Parsed.result.error);\n    }\n    const res = this.fromASN(asn1Parsed.result, target);\n    return res;\n  }\n  static fromASN(asn1Schema, target) {\n    var _a2;\n    try {\n      if (isConvertible(target)) {\n        const value = new target();\n        return value.fromASN(asn1Schema);\n      }\n      const schema = schemaStorage.get(target);\n      schemaStorage.cache(target);\n      let targetSchema = schema.schema;\n      if (asn1Schema.constructor === Constructed && schema.type !== AsnTypeTypes.Choice) {\n        targetSchema = new Constructed({\n          idBlock: {\n            tagClass: 3,\n            tagNumber: asn1Schema.idBlock.tagNumber\n          },\n          value: schema.schema.valueBlock.value\n        });\n        for (const key in schema.items) {\n          delete asn1Schema[key];\n        }\n      }\n      const asn1ComparedSchema = compareSchema({}, asn1Schema, targetSchema);\n      if (!asn1ComparedSchema.verified) {\n        throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);\n      }\n      const res = new target();\n      if (isTypeOfArray(target)) {\n        if (!("value" in asn1Schema.valueBlock && Array.isArray(asn1Schema.valueBlock.value))) {\n          throw new Error(`Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.`);\n        }\n        const itemType = schema.itemType;\n        if (typeof itemType === "number") {\n          const converter = defaultConverter(itemType);\n          if (!converter) {\n            throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n          }\n          return target.from(asn1Schema.valueBlock.value, (element) => converter.fromASN(element));\n        } else {\n          return target.from(asn1Schema.valueBlock.value, (element) => this.fromASN(element, itemType));\n        }\n      }\n      for (const key in schema.items) {\n        const asn1SchemaValue = asn1ComparedSchema.result[key];\n        if (!asn1SchemaValue) {\n          continue;\n        }\n        const schemaItem = schema.items[key];\n        const schemaItemType = schemaItem.type;\n        if (typeof schemaItemType === "number" || isConvertible(schemaItemType)) {\n          const converter = (_a2 = schemaItem.converter) !== null && _a2 !== void 0 ? _a2 : isConvertible(schemaItemType) ? new schemaItemType() : null;\n          if (!converter) {\n            throw new Error("Converter is empty");\n          }\n          if (schemaItem.repeated) {\n            if (schemaItem.implicit) {\n              const Container = schemaItem.repeated === "sequence" ? Sequence : Set;\n              const newItem = new Container();\n              newItem.valueBlock = asn1SchemaValue.valueBlock;\n              const newItemAsn = fromBER(newItem.toBER(false));\n              if (newItemAsn.offset === -1) {\n                throw new Error(`Cannot parse the child item. ${newItemAsn.result.error}`);\n              }\n              if (!("value" in newItemAsn.result.valueBlock && Array.isArray(newItemAsn.result.valueBlock.value))) {\n                throw new Error("Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.");\n              }\n              const value = newItemAsn.result.valueBlock.value;\n              res[key] = Array.from(value, (element) => converter.fromASN(element));\n            } else {\n              res[key] = Array.from(asn1SchemaValue, (element) => converter.fromASN(element));\n            }\n          } else {\n            let value = asn1SchemaValue;\n            if (schemaItem.implicit) {\n              let newItem;\n              if (isConvertible(schemaItemType)) {\n                newItem = new schemaItemType().toSchema("");\n              } else {\n                const Asn1TypeName = AsnPropTypes[schemaItemType];\n                const Asn1Type = index_es_exports[Asn1TypeName];\n                if (!Asn1Type) {\n                  throw new Error(`Cannot get \'${Asn1TypeName}\' class from asn1js module`);\n                }\n                newItem = new Asn1Type();\n              }\n              newItem.valueBlock = value.valueBlock;\n              value = fromBER(newItem.toBER(false)).result;\n            }\n            res[key] = converter.fromASN(value);\n          }\n        } else {\n          if (schemaItem.repeated) {\n            if (!Array.isArray(asn1SchemaValue)) {\n              throw new Error("Cannot get list of items from the ASN.1 parsed value. ASN.1 value should be iterable.");\n            }\n            res[key] = Array.from(asn1SchemaValue, (element) => this.fromASN(element, schemaItemType));\n          } else {\n            res[key] = this.fromASN(asn1SchemaValue, schemaItemType);\n          }\n        }\n      }\n      return res;\n    } catch (error) {\n      if (error instanceof AsnSchemaValidationError) {\n        error.schemas.push(target.name);\n      }\n      throw error;\n    }\n  }\n};\n__name(AsnParser, "AsnParser");\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/serializer.js\nvar AsnSerializer = class {\n  static serialize(obj) {\n    if (obj instanceof BaseBlock) {\n      return obj.toBER(false);\n    }\n    return this.toASN(obj).toBER(false);\n  }\n  static toASN(obj) {\n    if (obj && typeof obj === "object" && isConvertible(obj)) {\n      return obj.toASN();\n    }\n    if (!(obj && typeof obj === "object")) {\n      throw new TypeError("Parameter 1 should be type of Object.");\n    }\n    const target = obj.constructor;\n    const schema = schemaStorage.get(target);\n    schemaStorage.cache(target);\n    let asn1Value = [];\n    if (schema.itemType) {\n      if (!Array.isArray(obj)) {\n        throw new TypeError("Parameter 1 should be type of Array.");\n      }\n      if (typeof schema.itemType === "number") {\n        const converter = defaultConverter(schema.itemType);\n        if (!converter) {\n          throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n        }\n        asn1Value = obj.map((o) => converter.toASN(o));\n      } else {\n        asn1Value = obj.map((o) => this.toAsnItem({ type: schema.itemType }, "[]", target, o));\n      }\n    } else {\n      for (const key in schema.items) {\n        const schemaItem = schema.items[key];\n        const objProp = obj[key];\n        if (objProp === void 0 || schemaItem.defaultValue === objProp || typeof schemaItem.defaultValue === "object" && typeof objProp === "object" && isArrayEqual(this.serialize(schemaItem.defaultValue), this.serialize(objProp))) {\n          continue;\n        }\n        const asn1Item = AsnSerializer.toAsnItem(schemaItem, key, target, objProp);\n        if (typeof schemaItem.context === "number") {\n          if (schemaItem.implicit) {\n            if (!schemaItem.repeated && (typeof schemaItem.type === "number" || isConvertible(schemaItem.type))) {\n              const value = {};\n              value.valueHex = asn1Item instanceof Null ? asn1Item.valueBeforeDecodeView : asn1Item.valueBlock.toBER();\n              asn1Value.push(new Primitive({\n                optional: schemaItem.optional,\n                idBlock: {\n                  tagClass: 3,\n                  tagNumber: schemaItem.context\n                },\n                ...value\n              }));\n            } else {\n              asn1Value.push(new Constructed({\n                optional: schemaItem.optional,\n                idBlock: {\n                  tagClass: 3,\n                  tagNumber: schemaItem.context\n                },\n                value: asn1Item.valueBlock.value\n              }));\n            }\n          } else {\n            asn1Value.push(new Constructed({\n              optional: schemaItem.optional,\n              idBlock: {\n                tagClass: 3,\n                tagNumber: schemaItem.context\n              },\n              value: [asn1Item]\n            }));\n          }\n        } else if (schemaItem.repeated) {\n          asn1Value = asn1Value.concat(asn1Item);\n        } else {\n          asn1Value.push(asn1Item);\n        }\n      }\n    }\n    let asnSchema;\n    switch (schema.type) {\n      case AsnTypeTypes.Sequence:\n        asnSchema = new Sequence({ value: asn1Value });\n        break;\n      case AsnTypeTypes.Set:\n        asnSchema = new Set({ value: asn1Value });\n        break;\n      case AsnTypeTypes.Choice:\n        if (!asn1Value[0]) {\n          throw new Error(`Schema \'${target.name}\' has wrong data. Choice cannot be empty.`);\n        }\n        asnSchema = asn1Value[0];\n        break;\n    }\n    return asnSchema;\n  }\n  static toAsnItem(schemaItem, key, target, objProp) {\n    let asn1Item;\n    if (typeof schemaItem.type === "number") {\n      const converter = schemaItem.converter;\n      if (!converter) {\n        throw new Error(`Property \'${key}\' doesn\'t have converter for type ${AsnPropTypes[schemaItem.type]} in schema \'${target.name}\'`);\n      }\n      if (schemaItem.repeated) {\n        if (!Array.isArray(objProp)) {\n          throw new TypeError("Parameter \'objProp\' should be type of Array.");\n        }\n        const items = Array.from(objProp, (element) => converter.toASN(element));\n        const Container = schemaItem.repeated === "sequence" ? Sequence : Set;\n        asn1Item = new Container({\n          value: items\n        });\n      } else {\n        asn1Item = converter.toASN(objProp);\n      }\n    } else {\n      if (schemaItem.repeated) {\n        if (!Array.isArray(objProp)) {\n          throw new TypeError("Parameter \'objProp\' should be type of Array.");\n        }\n        const items = Array.from(objProp, (element) => this.toASN(element));\n        const Container = schemaItem.repeated === "sequence" ? Sequence : Set;\n        asn1Item = new Container({\n          value: items\n        });\n      } else {\n        asn1Item = this.toASN(objProp);\n      }\n    }\n    return asn1Item;\n  }\n};\n__name(AsnSerializer, "AsnSerializer");\n\n// ../../node_modules/.pnpm/@peculiar+asn1-schema@2.3.6/node_modules/@peculiar/asn1-schema/build/es2015/convert.js\nvar AsnConvert = class {\n  static serialize(obj) {\n    return AsnSerializer.serialize(obj);\n  }\n  static parse(data, target) {\n    return AsnParser.parse(data, target);\n  }\n  static toString(data) {\n    const buf = BufferSourceConverter.isBufferSource(data) ? BufferSourceConverter.toArrayBuffer(data) : AsnConvert.serialize(data);\n    const asn = fromBER(buf);\n    if (asn.offset === -1) {\n      throw new Error(`Cannot decode ASN.1 data. ${asn.result.error}`);\n    }\n    return asn.result.toString();\n  }\n};\n__name(AsnConvert, "AsnConvert");\n\n// ../../node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n__name(__decorate, "__decorate");\n\n// ../../node_modules/.pnpm/@peculiar+json-schema@1.1.12/node_modules/@peculiar/json-schema/build/index.es.js\nvar JsonError = class extends Error {\n  constructor(message, innerError) {\n    super(innerError ? `${message}. See the inner exception for more details.` : message);\n    this.message = message;\n    this.innerError = innerError;\n  }\n};\n__name(JsonError, "JsonError");\nvar TransformError = class extends JsonError {\n  constructor(schema, message, innerError) {\n    super(message, innerError);\n    this.schema = schema;\n  }\n};\n__name(TransformError, "TransformError");\nvar ParserError = class extends TransformError {\n  constructor(schema, message, innerError) {\n    super(schema, `JSON doesn\'t match to \'${schema.target.name}\' schema. ${message}`, innerError);\n  }\n};\n__name(ParserError, "ParserError");\nvar ValidationError = class extends JsonError {\n};\n__name(ValidationError, "ValidationError");\nvar SerializerError = class extends JsonError {\n  constructor(schemaName, message, innerError) {\n    super(`Cannot serialize by \'${schemaName}\' schema. ${message}`, innerError);\n    this.schemaName = schemaName;\n  }\n};\n__name(SerializerError, "SerializerError");\nvar KeyError = class extends ParserError {\n  constructor(schema, keys, errors = {}) {\n    super(schema, "Some keys doesn\'t match to schema");\n    this.keys = keys;\n    this.errors = errors;\n  }\n};\n__name(KeyError, "KeyError");\nvar JsonPropTypes;\n(function(JsonPropTypes2) {\n  JsonPropTypes2[JsonPropTypes2["Any"] = 0] = "Any";\n  JsonPropTypes2[JsonPropTypes2["Boolean"] = 1] = "Boolean";\n  JsonPropTypes2[JsonPropTypes2["Number"] = 2] = "Number";\n  JsonPropTypes2[JsonPropTypes2["String"] = 3] = "String";\n})(JsonPropTypes || (JsonPropTypes = {}));\nfunction checkType(value, type) {\n  switch (type) {\n    case JsonPropTypes.Boolean:\n      return typeof value === "boolean";\n    case JsonPropTypes.Number:\n      return typeof value === "number";\n    case JsonPropTypes.String:\n      return typeof value === "string";\n  }\n  return true;\n}\n__name(checkType, "checkType");\nfunction throwIfTypeIsWrong(value, type) {\n  if (!checkType(value, type)) {\n    throw new TypeError(`Value must be ${JsonPropTypes[type]}`);\n  }\n}\n__name(throwIfTypeIsWrong, "throwIfTypeIsWrong");\nfunction isConvertible2(target) {\n  if (target && target.prototype) {\n    if (target.prototype.toJSON && target.prototype.fromJSON) {\n      return true;\n    } else {\n      return isConvertible2(target.prototype);\n    }\n  } else {\n    return !!(target && target.toJSON && target.fromJSON);\n  }\n}\n__name(isConvertible2, "isConvertible");\nvar JsonSchemaStorage = class {\n  constructor() {\n    this.items = /* @__PURE__ */ new Map();\n  }\n  has(target) {\n    return this.items.has(target) || !!this.findParentSchema(target);\n  }\n  get(target) {\n    const schema = this.items.get(target) || this.findParentSchema(target);\n    if (!schema) {\n      throw new Error("Cannot get schema for current target");\n    }\n    return schema;\n  }\n  create(target) {\n    const schema = { names: {} };\n    const parentSchema = this.findParentSchema(target);\n    if (parentSchema) {\n      Object.assign(schema, parentSchema);\n      schema.names = {};\n      for (const name in parentSchema.names) {\n        schema.names[name] = Object.assign({}, parentSchema.names[name]);\n      }\n    }\n    schema.target = target;\n    return schema;\n  }\n  set(target, schema) {\n    this.items.set(target, schema);\n    return this;\n  }\n  findParentSchema(target) {\n    const parent = target.__proto__;\n    if (parent) {\n      const schema = this.items.get(parent);\n      return schema || this.findParentSchema(parent);\n    }\n    return null;\n  }\n};\n__name(JsonSchemaStorage, "JsonSchemaStorage");\nvar DEFAULT_SCHEMA = "default";\nvar schemaStorage2 = new JsonSchemaStorage();\nvar PatternValidation = class {\n  constructor(pattern) {\n    this.pattern = new RegExp(pattern);\n  }\n  validate(value) {\n    const pattern = new RegExp(this.pattern.source, this.pattern.flags);\n    if (typeof value !== "string") {\n      throw new ValidationError("Incoming value must be string");\n    }\n    if (!pattern.exec(value)) {\n      throw new ValidationError(`Value doesn\'t match to pattern \'${pattern.toString()}\'`);\n    }\n  }\n};\n__name(PatternValidation, "PatternValidation");\nvar InclusiveValidation = class {\n  constructor(min = Number.MIN_VALUE, max = Number.MAX_VALUE) {\n    this.min = min;\n    this.max = max;\n  }\n  validate(value) {\n    throwIfTypeIsWrong(value, JsonPropTypes.Number);\n    if (!(this.min <= value && value <= this.max)) {\n      const min = this.min === Number.MIN_VALUE ? "MIN" : this.min;\n      const max = this.max === Number.MAX_VALUE ? "MAX" : this.max;\n      throw new ValidationError(`Value doesn\'t match to diapason [${min},${max}]`);\n    }\n  }\n};\n__name(InclusiveValidation, "InclusiveValidation");\nvar ExclusiveValidation = class {\n  constructor(min = Number.MIN_VALUE, max = Number.MAX_VALUE) {\n    this.min = min;\n    this.max = max;\n  }\n  validate(value) {\n    throwIfTypeIsWrong(value, JsonPropTypes.Number);\n    if (!(this.min < value && value < this.max)) {\n      const min = this.min === Number.MIN_VALUE ? "MIN" : this.min;\n      const max = this.max === Number.MAX_VALUE ? "MAX" : this.max;\n      throw new ValidationError(`Value doesn\'t match to diapason (${min},${max})`);\n    }\n  }\n};\n__name(ExclusiveValidation, "ExclusiveValidation");\nvar LengthValidation = class {\n  constructor(length, minLength, maxLength) {\n    this.length = length;\n    this.minLength = minLength;\n    this.maxLength = maxLength;\n  }\n  validate(value) {\n    if (this.length !== void 0) {\n      if (value.length !== this.length) {\n        throw new ValidationError(`Value length must be exactly ${this.length}.`);\n      }\n      return;\n    }\n    if (this.minLength !== void 0) {\n      if (value.length < this.minLength) {\n        throw new ValidationError(`Value length must be more than ${this.minLength}.`);\n      }\n    }\n    if (this.maxLength !== void 0) {\n      if (value.length > this.maxLength) {\n        throw new ValidationError(`Value length must be less than ${this.maxLength}.`);\n      }\n    }\n  }\n};\n__name(LengthValidation, "LengthValidation");\nvar EnumerationValidation = class {\n  constructor(enumeration) {\n    this.enumeration = enumeration;\n  }\n  validate(value) {\n    throwIfTypeIsWrong(value, JsonPropTypes.String);\n    if (!this.enumeration.includes(value)) {\n      throw new ValidationError(`Value must be one of ${this.enumeration.map((v) => `\'${v}\'`).join(", ")}`);\n    }\n  }\n};\n__name(EnumerationValidation, "EnumerationValidation");\nvar JsonTransform = class {\n  static checkValues(data, schemaItem) {\n    const values = Array.isArray(data) ? data : [data];\n    for (const value of values) {\n      for (const validation of schemaItem.validations) {\n        if (validation instanceof LengthValidation && schemaItem.repeated) {\n          validation.validate(data);\n        } else {\n          validation.validate(value);\n        }\n      }\n    }\n  }\n  static checkTypes(value, schemaItem) {\n    if (schemaItem.repeated && !Array.isArray(value)) {\n      throw new TypeError("Value must be Array");\n    }\n    if (typeof schemaItem.type === "number") {\n      const values = Array.isArray(value) ? value : [value];\n      for (const v of values) {\n        throwIfTypeIsWrong(v, schemaItem.type);\n      }\n    }\n  }\n  static getSchemaByName(schema, name = DEFAULT_SCHEMA) {\n    return { ...schema.names[DEFAULT_SCHEMA], ...schema.names[name] };\n  }\n};\n__name(JsonTransform, "JsonTransform");\nvar JsonSerializer = class extends JsonTransform {\n  static serialize(obj, options, replacer, space) {\n    const json = this.toJSON(obj, options);\n    return JSON.stringify(json, replacer, space);\n  }\n  static toJSON(obj, options = {}) {\n    let res;\n    let targetSchema = options.targetSchema;\n    const schemaName = options.schemaName || DEFAULT_SCHEMA;\n    if (isConvertible2(obj)) {\n      return obj.toJSON();\n    }\n    if (Array.isArray(obj)) {\n      res = [];\n      for (const item of obj) {\n        res.push(this.toJSON(item, options));\n      }\n    } else if (typeof obj === "object") {\n      if (targetSchema && !schemaStorage2.has(targetSchema)) {\n        throw new JsonError("Cannot get schema for `targetSchema` param");\n      }\n      targetSchema = targetSchema || obj.constructor;\n      if (schemaStorage2.has(targetSchema)) {\n        const schema = schemaStorage2.get(targetSchema);\n        res = {};\n        const namedSchema = this.getSchemaByName(schema, schemaName);\n        for (const key in namedSchema) {\n          try {\n            const item = namedSchema[key];\n            const objItem = obj[key];\n            let value;\n            if (item.optional && objItem === void 0 || item.defaultValue !== void 0 && objItem === item.defaultValue) {\n              continue;\n            }\n            if (!item.optional && objItem === void 0) {\n              throw new SerializerError(targetSchema.name, `Property \'${key}\' is required.`);\n            }\n            if (typeof item.type === "number") {\n              if (item.converter) {\n                if (item.repeated) {\n                  value = objItem.map((el) => item.converter.toJSON(el, obj));\n                } else {\n                  value = item.converter.toJSON(objItem, obj);\n                }\n              } else {\n                value = objItem;\n              }\n            } else {\n              if (item.repeated) {\n                value = objItem.map((el) => this.toJSON(el, { schemaName }));\n              } else {\n                value = this.toJSON(objItem, { schemaName });\n              }\n            }\n            this.checkTypes(value, item);\n            this.checkValues(value, item);\n            res[item.name || key] = value;\n          } catch (e) {\n            if (e instanceof SerializerError) {\n              throw e;\n            } else {\n              throw new SerializerError(schema.target.name, `Property \'${key}\' is wrong. ${e.message}`, e);\n            }\n          }\n        }\n      } else {\n        res = {};\n        for (const key in obj) {\n          res[key] = this.toJSON(obj[key], { schemaName });\n        }\n      }\n    } else {\n      res = obj;\n    }\n    return res;\n  }\n};\n__name(JsonSerializer, "JsonSerializer");\nvar JsonParser = class extends JsonTransform {\n  static parse(data, options) {\n    const obj = JSON.parse(data);\n    return this.fromJSON(obj, options);\n  }\n  static fromJSON(target, options) {\n    const targetSchema = options.targetSchema;\n    const schemaName = options.schemaName || DEFAULT_SCHEMA;\n    const obj = new targetSchema();\n    if (isConvertible2(obj)) {\n      return obj.fromJSON(target);\n    }\n    const schema = schemaStorage2.get(targetSchema);\n    const namedSchema = this.getSchemaByName(schema, schemaName);\n    const keyErrors = {};\n    if (options.strictProperty && !Array.isArray(target)) {\n      JsonParser.checkStrictProperty(target, namedSchema, schema);\n    }\n    for (const key in namedSchema) {\n      try {\n        const item = namedSchema[key];\n        const name = item.name || key;\n        const value = target[name];\n        if (value === void 0 && (item.optional || item.defaultValue !== void 0)) {\n          continue;\n        }\n        if (!item.optional && value === void 0) {\n          throw new ParserError(schema, `Property \'${name}\' is required.`);\n        }\n        this.checkTypes(value, item);\n        this.checkValues(value, item);\n        if (typeof item.type === "number") {\n          if (item.converter) {\n            if (item.repeated) {\n              obj[key] = value.map((el) => item.converter.fromJSON(el, obj));\n            } else {\n              obj[key] = item.converter.fromJSON(value, obj);\n            }\n          } else {\n            obj[key] = value;\n          }\n        } else {\n          const newOptions = {\n            ...options,\n            targetSchema: item.type,\n            schemaName\n          };\n          if (item.repeated) {\n            obj[key] = value.map((el) => this.fromJSON(el, newOptions));\n          } else {\n            obj[key] = this.fromJSON(value, newOptions);\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof ParserError)) {\n          e = new ParserError(schema, `Property \'${key}\' is wrong. ${e.message}`, e);\n        }\n        if (options.strictAllKeys) {\n          keyErrors[key] = e;\n        } else {\n          throw e;\n        }\n      }\n    }\n    const keys = Object.keys(keyErrors);\n    if (keys.length) {\n      throw new KeyError(schema, keys, keyErrors);\n    }\n    return obj;\n  }\n  static checkStrictProperty(target, namedSchema, schema) {\n    const jsonProps = Object.keys(target);\n    const schemaProps = Object.keys(namedSchema);\n    const keys = [];\n    for (const key of jsonProps) {\n      if (schemaProps.indexOf(key) === -1) {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      throw new KeyError(schema, keys);\n    }\n  }\n};\n__name(JsonParser, "JsonParser");\nfunction getValidations(item) {\n  const validations = [];\n  if (item.pattern) {\n    validations.push(new PatternValidation(item.pattern));\n  }\n  if (item.type === JsonPropTypes.Number || item.type === JsonPropTypes.Any) {\n    if (item.minInclusive !== void 0 || item.maxInclusive !== void 0) {\n      validations.push(new InclusiveValidation(item.minInclusive, item.maxInclusive));\n    }\n    if (item.minExclusive !== void 0 || item.maxExclusive !== void 0) {\n      validations.push(new ExclusiveValidation(item.minExclusive, item.maxExclusive));\n    }\n    if (item.enumeration !== void 0) {\n      validations.push(new EnumerationValidation(item.enumeration));\n    }\n  }\n  if (item.type === JsonPropTypes.String || item.repeated || item.type === JsonPropTypes.Any) {\n    if (item.length !== void 0 || item.minLength !== void 0 || item.maxLength !== void 0) {\n      validations.push(new LengthValidation(item.length, item.minLength, item.maxLength));\n    }\n  }\n  return validations;\n}\n__name(getValidations, "getValidations");\nvar JsonProp = /* @__PURE__ */ __name((options = {}) => (target, propertyKey) => {\n  const errorMessage = `Cannot set type for ${propertyKey} property of ${target.constructor.name} schema`;\n  let schema;\n  if (!schemaStorage2.has(target.constructor)) {\n    schema = schemaStorage2.create(target.constructor);\n    schemaStorage2.set(target.constructor, schema);\n  } else {\n    schema = schemaStorage2.get(target.constructor);\n    if (schema.target !== target.constructor) {\n      schema = schemaStorage2.create(target.constructor);\n      schemaStorage2.set(target.constructor, schema);\n    }\n  }\n  const defaultSchema = {\n    type: JsonPropTypes.Any,\n    validations: []\n  };\n  const copyOptions = Object.assign(defaultSchema, options);\n  copyOptions.validations = getValidations(copyOptions);\n  if (typeof copyOptions.type !== "number") {\n    if (!schemaStorage2.has(copyOptions.type) && !isConvertible2(copyOptions.type)) {\n      throw new Error(`${errorMessage}. Assigning type doesn\'t have schema.`);\n    }\n  }\n  let schemaNames;\n  if (Array.isArray(options.schema)) {\n    schemaNames = options.schema;\n  } else {\n    schemaNames = [options.schema || DEFAULT_SCHEMA];\n  }\n  for (const schemaName of schemaNames) {\n    if (!schema.names[schemaName]) {\n      schema.names[schemaName] = {};\n    }\n    const namedSchema = schema.names[schemaName];\n    namedSchema[propertyKey] = copyOptions;\n  }\n}, "JsonProp");\n\n// ../../node_modules/.pnpm/webcrypto-core@1.7.7/node_modules/webcrypto-core/build/webcrypto-core.es.js\nvar CryptoError = class extends Error {\n};\n__name(CryptoError, "CryptoError");\nvar AlgorithmError = class extends CryptoError {\n};\n__name(AlgorithmError, "AlgorithmError");\nvar UnsupportedOperationError = class extends CryptoError {\n  constructor(methodName) {\n    super(`Unsupported operation: ${methodName ? `${methodName}` : ""}`);\n  }\n};\n__name(UnsupportedOperationError, "UnsupportedOperationError");\nvar OperationError = class extends CryptoError {\n};\n__name(OperationError, "OperationError");\nvar RequiredPropertyError = class extends CryptoError {\n  constructor(propName) {\n    super(`${propName}: Missing required property`);\n  }\n};\n__name(RequiredPropertyError, "RequiredPropertyError");\nfunction isJWK(data) {\n  return typeof data === "object" && "kty" in data;\n}\n__name(isJWK, "isJWK");\nvar ProviderCrypto = class {\n  async digest(...args) {\n    this.checkDigest.apply(this, args);\n    return this.onDigest.apply(this, args);\n  }\n  checkDigest(algorithm, data) {\n    this.checkAlgorithmName(algorithm);\n  }\n  async onDigest(algorithm, data) {\n    throw new UnsupportedOperationError("digest");\n  }\n  async generateKey(...args) {\n    this.checkGenerateKey.apply(this, args);\n    return this.onGenerateKey.apply(this, args);\n  }\n  checkGenerateKey(algorithm, extractable, keyUsages, ...args) {\n    this.checkAlgorithmName(algorithm);\n    this.checkGenerateKeyParams(algorithm);\n    if (!(keyUsages && keyUsages.length)) {\n      throw new TypeError(`Usages cannot be empty when creating a key.`);\n    }\n    let allowedUsages;\n    if (Array.isArray(this.usages)) {\n      allowedUsages = this.usages;\n    } else {\n      allowedUsages = this.usages.privateKey.concat(this.usages.publicKey);\n    }\n    this.checkKeyUsages(keyUsages, allowedUsages);\n  }\n  checkGenerateKeyParams(algorithm) {\n  }\n  async onGenerateKey(algorithm, extractable, keyUsages, ...args) {\n    throw new UnsupportedOperationError("generateKey");\n  }\n  async sign(...args) {\n    this.checkSign.apply(this, args);\n    return this.onSign.apply(this, args);\n  }\n  checkSign(algorithm, key, data, ...args) {\n    this.checkAlgorithmName(algorithm);\n    this.checkAlgorithmParams(algorithm);\n    this.checkCryptoKey(key, "sign");\n  }\n  async onSign(algorithm, key, data, ...args) {\n    throw new UnsupportedOperationError("sign");\n  }\n  async verify(...args) {\n    this.checkVerify.apply(this, args);\n    return this.onVerify.apply(this, args);\n  }\n  checkVerify(algorithm, key, signature, data, ...args) {\n    this.checkAlgorithmName(algorithm);\n    this.checkAlgorithmParams(algorithm);\n    this.checkCryptoKey(key, "verify");\n  }\n  async onVerify(algorithm, key, signature, data, ...args) {\n    throw new UnsupportedOperationError("verify");\n  }\n  async encrypt(...args) {\n    this.checkEncrypt.apply(this, args);\n    return this.onEncrypt.apply(this, args);\n  }\n  checkEncrypt(algorithm, key, data, options = {}, ...args) {\n    this.checkAlgorithmName(algorithm);\n    this.checkAlgorithmParams(algorithm);\n    this.checkCryptoKey(key, options.keyUsage ? "encrypt" : void 0);\n  }\n  async onEncrypt(algorithm, key, data, ...args) {\n    throw new UnsupportedOperationError("encrypt");\n  }\n  async decrypt(...args) {\n    this.checkDecrypt.apply(this, args);\n    return this.onDecrypt.apply(this, args);\n  }\n  checkDecrypt(algorithm, key, data, options = {}, ...args) {\n    this.checkAlgorithmName(algorithm);\n    this.checkAlgorithmParams(algorithm);\n    this.checkCryptoKey(key, options.keyUsage ? "decrypt" : void 0);\n  }\n  async onDecrypt(algorithm, key, data, ...args) {\n    throw new UnsupportedOperationError("decrypt");\n  }\n  async deriveBits(...args) {\n    this.checkDeriveBits.apply(this, args);\n    return this.onDeriveBits.apply(this, args);\n  }\n  checkDeriveBits(algorithm, baseKey, length, options = {}, ...args) {\n    this.checkAlgorithmName(algorithm);\n    this.checkAlgorithmParams(algorithm);\n    this.checkCryptoKey(baseKey, options.keyUsage ? "deriveBits" : void 0);\n    if (length % 8 !== 0) {\n      throw new OperationError("length: Is not multiple of 8");\n    }\n  }\n  async onDeriveBits(algorithm, baseKey, length, ...args) {\n    throw new UnsupportedOperationError("deriveBits");\n  }\n  async exportKey(...args) {\n    this.checkExportKey.apply(this, args);\n    return this.onExportKey.apply(this, args);\n  }\n  checkExportKey(format, key, ...args) {\n    this.checkKeyFormat(format);\n    this.checkCryptoKey(key);\n    if (!key.extractable) {\n      throw new CryptoError("key: Is not extractable");\n    }\n  }\n  async onExportKey(format, key, ...args) {\n    throw new UnsupportedOperationError("exportKey");\n  }\n  async importKey(...args) {\n    this.checkImportKey.apply(this, args);\n    return this.onImportKey.apply(this, args);\n  }\n  checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {\n    this.checkKeyFormat(format);\n    this.checkKeyData(format, keyData);\n    this.checkAlgorithmName(algorithm);\n    this.checkImportParams(algorithm);\n    if (Array.isArray(this.usages)) {\n      this.checkKeyUsages(keyUsages, this.usages);\n    }\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {\n    throw new UnsupportedOperationError("importKey");\n  }\n  checkAlgorithmName(algorithm) {\n    if (algorithm.name.toLowerCase() !== this.name.toLowerCase()) {\n      throw new AlgorithmError("Unrecognized name");\n    }\n  }\n  checkAlgorithmParams(algorithm) {\n  }\n  checkDerivedKeyParams(algorithm) {\n  }\n  checkKeyUsages(usages, allowed) {\n    for (const usage of usages) {\n      if (allowed.indexOf(usage) === -1) {\n        throw new TypeError("Cannot create a key using the specified key usages");\n      }\n    }\n  }\n  checkCryptoKey(key, keyUsage) {\n    this.checkAlgorithmName(key.algorithm);\n    if (keyUsage && key.usages.indexOf(keyUsage) === -1) {\n      throw new CryptoError(`key does not match that of operation`);\n    }\n  }\n  checkRequiredProperty(data, propName) {\n    if (!(propName in data)) {\n      throw new RequiredPropertyError(propName);\n    }\n  }\n  checkHashAlgorithm(algorithm, hashAlgorithms) {\n    for (const item of hashAlgorithms) {\n      if (item.toLowerCase() === algorithm.name.toLowerCase()) {\n        return;\n      }\n    }\n    throw new OperationError(`hash: Must be one of ${hashAlgorithms.join(", ")}`);\n  }\n  checkImportParams(algorithm) {\n  }\n  checkKeyFormat(format) {\n    switch (format) {\n      case "raw":\n      case "pkcs8":\n      case "spki":\n      case "jwk":\n        break;\n      default:\n        throw new TypeError("format: Is invalid value. Must be \'jwk\', \'raw\', \'spki\', or \'pkcs8\'");\n    }\n  }\n  checkKeyData(format, keyData) {\n    if (!keyData) {\n      throw new TypeError("keyData: Cannot be empty on empty on key importing");\n    }\n    if (format === "jwk") {\n      if (!isJWK(keyData)) {\n        throw new TypeError("keyData: Is not JsonWebToken");\n      }\n    } else if (!BufferSourceConverter.isBufferSource(keyData)) {\n      throw new TypeError("keyData: Is not ArrayBufferView or ArrayBuffer");\n    }\n  }\n  prepareData(data) {\n    return BufferSourceConverter.toArrayBuffer(data);\n  }\n};\n__name(ProviderCrypto, "ProviderCrypto");\nvar AesProvider = class extends ProviderCrypto {\n  checkGenerateKeyParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "length");\n    if (typeof algorithm.length !== "number") {\n      throw new TypeError("length: Is not of type Number");\n    }\n    switch (algorithm.length) {\n      case 128:\n      case 192:\n      case 256:\n        break;\n      default:\n        throw new TypeError("length: Must be 128, 192, or 256");\n    }\n  }\n  checkDerivedKeyParams(algorithm) {\n    this.checkGenerateKeyParams(algorithm);\n  }\n};\n__name(AesProvider, "AesProvider");\nvar AesCbcProvider = class extends AesProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "AES-CBC";\n    this.usages = ["encrypt", "decrypt", "wrapKey", "unwrapKey"];\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "iv");\n    if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n      throw new TypeError("iv: Is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n    }\n    if (algorithm.iv.byteLength !== 16) {\n      throw new TypeError("iv: Must have length 16 bytes");\n    }\n  }\n};\n__name(AesCbcProvider, "AesCbcProvider");\nvar AesCmacProvider = class extends AesProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "AES-CMAC";\n    this.usages = ["sign", "verify"];\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "length");\n    if (typeof algorithm.length !== "number") {\n      throw new TypeError("length: Is not a Number");\n    }\n    if (algorithm.length < 1) {\n      throw new OperationError("length: Must be more than 0");\n    }\n  }\n};\n__name(AesCmacProvider, "AesCmacProvider");\nvar AesCtrProvider = class extends AesProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "AES-CTR";\n    this.usages = ["encrypt", "decrypt", "wrapKey", "unwrapKey"];\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "counter");\n    if (!(algorithm.counter instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.counter))) {\n      throw new TypeError("counter: Is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n    }\n    if (algorithm.counter.byteLength !== 16) {\n      throw new TypeError("iv: Must have length 16 bytes");\n    }\n    this.checkRequiredProperty(algorithm, "length");\n    if (typeof algorithm.length !== "number") {\n      throw new TypeError("length: Is not a Number");\n    }\n    if (algorithm.length < 1) {\n      throw new OperationError("length: Must be more than 0");\n    }\n  }\n};\n__name(AesCtrProvider, "AesCtrProvider");\nvar AesEcbProvider = class extends AesProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "AES-ECB";\n    this.usages = ["encrypt", "decrypt", "wrapKey", "unwrapKey"];\n  }\n};\n__name(AesEcbProvider, "AesEcbProvider");\nvar AesGcmProvider = class extends AesProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "AES-GCM";\n    this.usages = ["encrypt", "decrypt", "wrapKey", "unwrapKey"];\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "iv");\n    if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n      throw new TypeError("iv: Is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n    }\n    if (algorithm.iv.byteLength < 1) {\n      throw new OperationError("iv: Must have length more than 0 and less than 2^64 - 1");\n    }\n    if (!("tagLength" in algorithm)) {\n      algorithm.tagLength = 128;\n    }\n    switch (algorithm.tagLength) {\n      case 32:\n      case 64:\n      case 96:\n      case 104:\n      case 112:\n      case 120:\n      case 128:\n        break;\n      default:\n        throw new OperationError("tagLength: Must be one of 32, 64, 96, 104, 112, 120 or 128");\n    }\n  }\n};\n__name(AesGcmProvider, "AesGcmProvider");\nvar AesKwProvider = class extends AesProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "AES-KW";\n    this.usages = ["wrapKey", "unwrapKey"];\n  }\n};\n__name(AesKwProvider, "AesKwProvider");\nvar DesProvider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.usages = ["encrypt", "decrypt", "wrapKey", "unwrapKey"];\n  }\n  checkAlgorithmParams(algorithm) {\n    if (this.ivSize) {\n      this.checkRequiredProperty(algorithm, "iv");\n      if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n        throw new TypeError("iv: Is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n      }\n      if (algorithm.iv.byteLength !== this.ivSize) {\n        throw new TypeError(`iv: Must have length ${this.ivSize} bytes`);\n      }\n    }\n  }\n  checkGenerateKeyParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "length");\n    if (typeof algorithm.length !== "number") {\n      throw new TypeError("length: Is not of type Number");\n    }\n    if (algorithm.length !== this.keySizeBits) {\n      throw new OperationError(`algorithm.length: Must be ${this.keySizeBits}`);\n    }\n  }\n  checkDerivedKeyParams(algorithm) {\n    this.checkGenerateKeyParams(algorithm);\n  }\n};\n__name(DesProvider, "DesProvider");\nvar RsaProvider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.hashAlgorithms = ["SHA-1", "SHA-256", "SHA-384", "SHA-512"];\n  }\n  checkGenerateKeyParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "hash");\n    this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    this.checkRequiredProperty(algorithm, "publicExponent");\n    if (!(algorithm.publicExponent && algorithm.publicExponent instanceof Uint8Array)) {\n      throw new TypeError("publicExponent: Missing or not a Uint8Array");\n    }\n    const publicExponent = Convert.ToBase64(algorithm.publicExponent);\n    if (!(publicExponent === "Aw==" || publicExponent === "AQAB")) {\n      throw new TypeError("publicExponent: Must be [3] or [1,0,1]");\n    }\n    this.checkRequiredProperty(algorithm, "modulusLength");\n    if (algorithm.modulusLength % 8 || algorithm.modulusLength < 256 || algorithm.modulusLength > 16384) {\n      throw new TypeError("The modulus length must be a multiple of 8 bits and >= 256 and <= 16384");\n    }\n  }\n  checkImportParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "hash");\n    this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n  }\n};\n__name(RsaProvider, "RsaProvider");\nvar RsaSsaProvider = class extends RsaProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "RSASSA-PKCS1-v1_5";\n    this.usages = {\n      privateKey: ["sign"],\n      publicKey: ["verify"]\n    };\n  }\n};\n__name(RsaSsaProvider, "RsaSsaProvider");\nvar RsaPssProvider = class extends RsaProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "RSA-PSS";\n    this.usages = {\n      privateKey: ["sign"],\n      publicKey: ["verify"]\n    };\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "saltLength");\n    if (typeof algorithm.saltLength !== "number") {\n      throw new TypeError("saltLength: Is not a Number");\n    }\n    if (algorithm.saltLength < 0) {\n      throw new RangeError("saltLength: Must be positive number");\n    }\n  }\n};\n__name(RsaPssProvider, "RsaPssProvider");\nvar RsaOaepProvider = class extends RsaProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "RSA-OAEP";\n    this.usages = {\n      privateKey: ["decrypt", "unwrapKey"],\n      publicKey: ["encrypt", "wrapKey"]\n    };\n  }\n  checkAlgorithmParams(algorithm) {\n    if (algorithm.label && !(algorithm.label instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.label))) {\n      throw new TypeError("label: Is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n    }\n  }\n};\n__name(RsaOaepProvider, "RsaOaepProvider");\nvar EllipticProvider = class extends ProviderCrypto {\n  checkGenerateKeyParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "namedCurve");\n    this.checkNamedCurve(algorithm.namedCurve);\n  }\n  checkNamedCurve(namedCurve) {\n    for (const item of this.namedCurves) {\n      if (item.toLowerCase() === namedCurve.toLowerCase()) {\n        return;\n      }\n    }\n    throw new OperationError(`namedCurve: Must be one of ${this.namedCurves.join(", ")}`);\n  }\n};\n__name(EllipticProvider, "EllipticProvider");\nvar EcdsaProvider = class extends EllipticProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "ECDSA";\n    this.hashAlgorithms = ["SHA-1", "SHA-256", "SHA-384", "SHA-512"];\n    this.usages = {\n      privateKey: ["sign"],\n      publicKey: ["verify"]\n    };\n    this.namedCurves = ["P-256", "P-384", "P-521", "K-256"];\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "hash");\n    this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n  }\n};\n__name(EcdsaProvider, "EcdsaProvider");\nvar KEY_TYPES = ["secret", "private", "public"];\nvar CryptoKey = class {\n  static create(algorithm, type, extractable, usages) {\n    const key = new this();\n    key.algorithm = algorithm;\n    key.type = type;\n    key.extractable = extractable;\n    key.usages = usages;\n    return key;\n  }\n  static isKeyType(data) {\n    return KEY_TYPES.indexOf(data) !== -1;\n  }\n  get [Symbol.toStringTag]() {\n    return "CryptoKey";\n  }\n};\n__name(CryptoKey, "CryptoKey");\nvar EcdhProvider = class extends EllipticProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "ECDH";\n    this.usages = {\n      privateKey: ["deriveBits", "deriveKey"],\n      publicKey: []\n    };\n    this.namedCurves = ["P-256", "P-384", "P-521", "K-256"];\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "public");\n    if (!(algorithm.public instanceof CryptoKey)) {\n      throw new TypeError("public: Is not a CryptoKey");\n    }\n    if (algorithm.public.type !== "public") {\n      throw new OperationError("public: Is not a public key");\n    }\n    if (algorithm.public.algorithm.name !== this.name) {\n      throw new OperationError(`public: Is not ${this.name} key`);\n    }\n  }\n};\n__name(EcdhProvider, "EcdhProvider");\nvar EcdhEsProvider = class extends EcdhProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "ECDH-ES";\n    this.namedCurves = ["X25519", "X448"];\n  }\n};\n__name(EcdhEsProvider, "EcdhEsProvider");\nvar EdDsaProvider = class extends EllipticProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "EdDSA";\n    this.usages = {\n      privateKey: ["sign"],\n      publicKey: ["verify"]\n    };\n    this.namedCurves = ["Ed25519", "Ed448"];\n  }\n};\n__name(EdDsaProvider, "EdDsaProvider");\nvar ObjectIdentifier2 = /* @__PURE__ */ __name(class ObjectIdentifier3 {\n  constructor(value) {\n    if (value) {\n      this.value = value;\n    }\n  }\n}, "ObjectIdentifier");\n__decorate([\n  AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ObjectIdentifier2.prototype, "value", void 0);\nObjectIdentifier2 = __decorate([\n  AsnType({ type: AsnTypeTypes.Choice })\n], ObjectIdentifier2);\nvar AlgorithmIdentifier = class {\n  constructor(params) {\n    Object.assign(this, params);\n  }\n};\n__name(AlgorithmIdentifier, "AlgorithmIdentifier");\n__decorate([\n  AsnProp({\n    type: AsnPropTypes.ObjectIdentifier\n  })\n], AlgorithmIdentifier.prototype, "algorithm", void 0);\n__decorate([\n  AsnProp({\n    type: AsnPropTypes.Any,\n    optional: true\n  })\n], AlgorithmIdentifier.prototype, "parameters", void 0);\nvar PrivateKeyInfo = class {\n  constructor() {\n    this.version = 0;\n    this.privateKeyAlgorithm = new AlgorithmIdentifier();\n    this.privateKey = new ArrayBuffer(0);\n  }\n};\n__name(PrivateKeyInfo, "PrivateKeyInfo");\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer })\n], PrivateKeyInfo.prototype, "version", void 0);\n__decorate([\n  AsnProp({ type: AlgorithmIdentifier })\n], PrivateKeyInfo.prototype, "privateKeyAlgorithm", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.OctetString })\n], PrivateKeyInfo.prototype, "privateKey", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Any, optional: true })\n], PrivateKeyInfo.prototype, "attributes", void 0);\nvar PublicKeyInfo = class {\n  constructor() {\n    this.publicKeyAlgorithm = new AlgorithmIdentifier();\n    this.publicKey = new ArrayBuffer(0);\n  }\n};\n__name(PublicKeyInfo, "PublicKeyInfo");\n__decorate([\n  AsnProp({ type: AlgorithmIdentifier })\n], PublicKeyInfo.prototype, "publicKeyAlgorithm", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.BitString })\n], PublicKeyInfo.prototype, "publicKey", void 0);\nvar JsonBase64UrlArrayBufferConverter = {\n  fromJSON: (value) => Convert.FromBase64Url(value),\n  toJSON: (value) => Convert.ToBase64Url(new Uint8Array(value))\n};\nvar AsnIntegerArrayBufferConverter = {\n  fromASN: (value) => {\n    const valueHex = value.valueBlock.valueHex;\n    return !new Uint8Array(valueHex)[0] ? value.valueBlock.valueHex.slice(1) : value.valueBlock.valueHex;\n  },\n  toASN: (value) => {\n    const valueHex = new Uint8Array(value)[0] > 127 ? combine(new Uint8Array([0]).buffer, value) : value;\n    return new Integer({ valueHex });\n  }\n};\nvar RsaPrivateKey = class {\n  constructor() {\n    this.version = 0;\n    this.modulus = new ArrayBuffer(0);\n    this.publicExponent = new ArrayBuffer(0);\n    this.privateExponent = new ArrayBuffer(0);\n    this.prime1 = new ArrayBuffer(0);\n    this.prime2 = new ArrayBuffer(0);\n    this.exponent1 = new ArrayBuffer(0);\n    this.exponent2 = new ArrayBuffer(0);\n    this.coefficient = new ArrayBuffer(0);\n  }\n};\n__name(RsaPrivateKey, "RsaPrivateKey");\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerConverter })\n], RsaPrivateKey.prototype, "version", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "n", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, "modulus", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "e", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, "publicExponent", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "d", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, "privateExponent", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "p", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, "prime1", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "q", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, "prime2", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "dp", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, "exponent1", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "dq", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, "exponent2", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "qi", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, "coefficient", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Any, optional: true })\n], RsaPrivateKey.prototype, "otherPrimeInfos", void 0);\nvar RsaPublicKey = class {\n  constructor() {\n    this.modulus = new ArrayBuffer(0);\n    this.publicExponent = new ArrayBuffer(0);\n  }\n};\n__name(RsaPublicKey, "RsaPublicKey");\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "n", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPublicKey.prototype, "modulus", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n  JsonProp({ name: "e", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPublicKey.prototype, "publicExponent", void 0);\nvar EcPublicKey = /* @__PURE__ */ __name(class EcPublicKey2 {\n  constructor(value) {\n    this.value = new ArrayBuffer(0);\n    if (value) {\n      this.value = value;\n    }\n  }\n  toJSON() {\n    let bytes = new Uint8Array(this.value);\n    if (bytes[0] !== 4) {\n      throw new CryptoError("Wrong ECPoint. Current version supports only Uncompressed (0x04) point");\n    }\n    bytes = new Uint8Array(this.value.slice(1));\n    const size = bytes.length / 2;\n    const offset = 0;\n    const json = {\n      x: Convert.ToBase64Url(bytes.buffer.slice(offset, offset + size)),\n      y: Convert.ToBase64Url(bytes.buffer.slice(offset + size, offset + size + size))\n    };\n    return json;\n  }\n  fromJSON(json) {\n    if (!("x" in json)) {\n      throw new Error("x: Missing required property");\n    }\n    if (!("y" in json)) {\n      throw new Error("y: Missing required property");\n    }\n    const x = Convert.FromBase64Url(json.x);\n    const y = Convert.FromBase64Url(json.y);\n    const value = combine(new Uint8Array([4]).buffer, x, y);\n    this.value = new Uint8Array(value).buffer;\n    return this;\n  }\n}, "EcPublicKey");\n__decorate([\n  AsnProp({ type: AsnPropTypes.OctetString })\n], EcPublicKey.prototype, "value", void 0);\nEcPublicKey = __decorate([\n  AsnType({ type: AsnTypeTypes.Choice })\n], EcPublicKey);\nvar EcPrivateKey = class {\n  constructor() {\n    this.version = 1;\n    this.privateKey = new ArrayBuffer(0);\n  }\n  fromJSON(json) {\n    if (!("d" in json)) {\n      throw new Error("d: Missing required property");\n    }\n    this.privateKey = Convert.FromBase64Url(json.d);\n    if ("x" in json) {\n      const publicKey = new EcPublicKey();\n      publicKey.fromJSON(json);\n      const asn = AsnSerializer.toASN(publicKey);\n      if ("valueHex" in asn.valueBlock) {\n        this.publicKey = asn.valueBlock.valueHex;\n      }\n    }\n    return this;\n  }\n  toJSON() {\n    const jwk = {};\n    jwk.d = Convert.ToBase64Url(this.privateKey);\n    if (this.publicKey) {\n      Object.assign(jwk, new EcPublicKey(this.publicKey).toJSON());\n    }\n    return jwk;\n  }\n};\n__name(EcPrivateKey, "EcPrivateKey");\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerConverter })\n], EcPrivateKey.prototype, "version", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.OctetString })\n], EcPrivateKey.prototype, "privateKey", void 0);\n__decorate([\n  AsnProp({ context: 0, type: AsnPropTypes.Any, optional: true })\n], EcPrivateKey.prototype, "parameters", void 0);\n__decorate([\n  AsnProp({ context: 1, type: AsnPropTypes.BitString, optional: true })\n], EcPrivateKey.prototype, "publicKey", void 0);\nvar AsnIntegerWithoutPaddingConverter = {\n  fromASN: (value) => {\n    const bytes = new Uint8Array(value.valueBlock.valueHex);\n    return bytes[0] === 0 ? bytes.buffer.slice(1) : bytes.buffer;\n  },\n  toASN: (value) => {\n    const bytes = new Uint8Array(value);\n    if (bytes[0] > 127) {\n      const newValue = new Uint8Array(bytes.length + 1);\n      newValue.set(bytes, 1);\n      return new Integer({ valueHex: newValue.buffer });\n    }\n    return new Integer({ valueHex: value });\n  }\n};\nvar index$2 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  AsnIntegerWithoutPaddingConverter\n});\nvar EcUtils = class {\n  static decodePoint(data, pointSize) {\n    const view = BufferSourceConverter.toUint8Array(data);\n    if (view.length === 0 || view[0] !== 4) {\n      throw new Error("Only uncompressed point format supported");\n    }\n    const n = (view.length - 1) / 2;\n    if (n !== Math.ceil(pointSize / 8)) {\n      throw new Error("Point does not match field size");\n    }\n    const xb = view.slice(1, n + 1);\n    const yb = view.slice(n + 1, n + 1 + n);\n    return { x: xb, y: yb };\n  }\n  static encodePoint(point, pointSize) {\n    const size = Math.ceil(pointSize / 8);\n    if (point.x.byteLength !== size || point.y.byteLength !== size) {\n      throw new Error("X,Y coordinates don\'t match point size criteria");\n    }\n    const x = BufferSourceConverter.toUint8Array(point.x);\n    const y = BufferSourceConverter.toUint8Array(point.y);\n    const res = new Uint8Array(size * 2 + 1);\n    res[0] = 4;\n    res.set(x, 1);\n    res.set(y, size + 1);\n    return res;\n  }\n  static getSize(pointSize) {\n    return Math.ceil(pointSize / 8);\n  }\n  static encodeSignature(signature, pointSize) {\n    const size = this.getSize(pointSize);\n    const r = BufferSourceConverter.toUint8Array(signature.r);\n    const s = BufferSourceConverter.toUint8Array(signature.s);\n    const res = new Uint8Array(size * 2);\n    res.set(this.padStart(r, size));\n    res.set(this.padStart(s, size), size);\n    return res;\n  }\n  static decodeSignature(data, pointSize) {\n    const size = this.getSize(pointSize);\n    const view = BufferSourceConverter.toUint8Array(data);\n    if (view.length !== size * 2) {\n      throw new Error("Incorrect size of the signature");\n    }\n    const r = view.slice(0, size);\n    const s = view.slice(size);\n    return {\n      r: this.trimStart(r),\n      s: this.trimStart(s)\n    };\n  }\n  static trimStart(data) {\n    let i = 0;\n    while (i < data.length - 1 && data[i] === 0) {\n      i++;\n    }\n    if (i === 0) {\n      return data;\n    }\n    return data.slice(i, data.length);\n  }\n  static padStart(data, size) {\n    if (size === data.length) {\n      return data;\n    }\n    const res = new Uint8Array(size);\n    res.set(data, size - data.length);\n    return res;\n  }\n};\n__name(EcUtils, "EcUtils");\nvar EcDsaSignature = class {\n  constructor() {\n    this.r = new ArrayBuffer(0);\n    this.s = new ArrayBuffer(0);\n  }\n  static fromWebCryptoSignature(value) {\n    const pointSize = value.byteLength / 2;\n    const point = EcUtils.decodeSignature(value, pointSize * 8);\n    const ecSignature = new EcDsaSignature();\n    ecSignature.r = BufferSourceConverter.toArrayBuffer(point.r);\n    ecSignature.s = BufferSourceConverter.toArrayBuffer(point.s);\n    return ecSignature;\n  }\n  toWebCryptoSignature(pointSize) {\n    pointSize !== null && pointSize !== void 0 ? pointSize : pointSize = Math.max(this.r.byteLength, this.s.byteLength) * 8;\n    const signature = EcUtils.encodeSignature(this, pointSize);\n    return signature.buffer;\n  }\n};\n__name(EcDsaSignature, "EcDsaSignature");\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerWithoutPaddingConverter })\n], EcDsaSignature.prototype, "r", void 0);\n__decorate([\n  AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerWithoutPaddingConverter })\n], EcDsaSignature.prototype, "s", void 0);\nvar OneAsymmetricKey = class extends PrivateKeyInfo {\n};\n__name(OneAsymmetricKey, "OneAsymmetricKey");\n__decorate([\n  AsnProp({ context: 1, implicit: true, type: AsnPropTypes.BitString, optional: true })\n], OneAsymmetricKey.prototype, "publicKey", void 0);\nvar EdPrivateKey = /* @__PURE__ */ __name(class EdPrivateKey2 {\n  constructor() {\n    this.value = new ArrayBuffer(0);\n  }\n  fromJSON(json) {\n    if (!json.d) {\n      throw new Error("d: Missing required property");\n    }\n    this.value = Convert.FromBase64Url(json.d);\n    return this;\n  }\n  toJSON() {\n    const jwk = {\n      d: Convert.ToBase64Url(this.value)\n    };\n    return jwk;\n  }\n}, "EdPrivateKey");\n__decorate([\n  AsnProp({ type: AsnPropTypes.OctetString })\n], EdPrivateKey.prototype, "value", void 0);\nEdPrivateKey = __decorate([\n  AsnType({ type: AsnTypeTypes.Choice })\n], EdPrivateKey);\nvar EdPublicKey = /* @__PURE__ */ __name(class EdPublicKey2 {\n  constructor(value) {\n    this.value = new ArrayBuffer(0);\n    if (value) {\n      this.value = value;\n    }\n  }\n  toJSON() {\n    const json = {\n      x: Convert.ToBase64Url(this.value)\n    };\n    return json;\n  }\n  fromJSON(json) {\n    if (!("x" in json)) {\n      throw new Error("x: Missing required property");\n    }\n    this.value = Convert.FromBase64Url(json.x);\n    return this;\n  }\n}, "EdPublicKey");\n__decorate([\n  AsnProp({ type: AsnPropTypes.BitString })\n], EdPublicKey.prototype, "value", void 0);\nEdPublicKey = __decorate([\n  AsnType({ type: AsnTypeTypes.Choice })\n], EdPublicKey);\nvar CurvePrivateKey = /* @__PURE__ */ __name(class CurvePrivateKey2 {\n}, "CurvePrivateKey");\n__decorate([\n  AsnProp({ type: AsnPropTypes.OctetString }),\n  JsonProp({ type: JsonPropTypes.String, converter: JsonBase64UrlArrayBufferConverter })\n], CurvePrivateKey.prototype, "d", void 0);\nCurvePrivateKey = __decorate([\n  AsnType({ type: AsnTypeTypes.Choice })\n], CurvePrivateKey);\nvar idSecp256r1 = "1.2.840.10045.3.1.7";\nvar idEllipticCurve = "1.3.132.0";\nvar idSecp384r1 = `${idEllipticCurve}.34`;\nvar idSecp521r1 = `${idEllipticCurve}.35`;\nvar idSecp256k1 = `${idEllipticCurve}.10`;\nvar idVersionOne = "1.3.36.3.3.2.8.1.1";\nvar idBrainpoolP160r1 = `${idVersionOne}.1`;\nvar idBrainpoolP160t1 = `${idVersionOne}.2`;\nvar idBrainpoolP192r1 = `${idVersionOne}.3`;\nvar idBrainpoolP192t1 = `${idVersionOne}.4`;\nvar idBrainpoolP224r1 = `${idVersionOne}.5`;\nvar idBrainpoolP224t1 = `${idVersionOne}.6`;\nvar idBrainpoolP256r1 = `${idVersionOne}.7`;\nvar idBrainpoolP256t1 = `${idVersionOne}.8`;\nvar idBrainpoolP320r1 = `${idVersionOne}.9`;\nvar idBrainpoolP320t1 = `${idVersionOne}.10`;\nvar idBrainpoolP384r1 = `${idVersionOne}.11`;\nvar idBrainpoolP384t1 = `${idVersionOne}.12`;\nvar idBrainpoolP512r1 = `${idVersionOne}.13`;\nvar idBrainpoolP512t1 = `${idVersionOne}.14`;\nvar idX25519 = "1.3.101.110";\nvar idX448 = "1.3.101.111";\nvar idEd25519 = "1.3.101.112";\nvar idEd448 = "1.3.101.113";\nvar index$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  AlgorithmIdentifier,\n  get CurvePrivateKey() {\n    return CurvePrivateKey;\n  },\n  EcDsaSignature,\n  EcPrivateKey,\n  get EcPublicKey() {\n    return EcPublicKey;\n  },\n  get EdPrivateKey() {\n    return EdPrivateKey;\n  },\n  get EdPublicKey() {\n    return EdPublicKey;\n  },\n  get ObjectIdentifier() {\n    return ObjectIdentifier2;\n  },\n  OneAsymmetricKey,\n  PrivateKeyInfo,\n  PublicKeyInfo,\n  RsaPrivateKey,\n  RsaPublicKey,\n  converters: index$2,\n  idBrainpoolP160r1,\n  idBrainpoolP160t1,\n  idBrainpoolP192r1,\n  idBrainpoolP192t1,\n  idBrainpoolP224r1,\n  idBrainpoolP224t1,\n  idBrainpoolP256r1,\n  idBrainpoolP256t1,\n  idBrainpoolP320r1,\n  idBrainpoolP320t1,\n  idBrainpoolP384r1,\n  idBrainpoolP384t1,\n  idBrainpoolP512r1,\n  idBrainpoolP512t1,\n  idEd25519,\n  idEd448,\n  idEllipticCurve,\n  idSecp256k1,\n  idSecp256r1,\n  idSecp384r1,\n  idSecp521r1,\n  idVersionOne,\n  idX25519,\n  idX448\n});\nvar EcCurves = class {\n  constructor() {\n  }\n  static register(item) {\n    const oid = new ObjectIdentifier2();\n    oid.value = item.id;\n    const raw = AsnConvert.serialize(oid);\n    this.items.push({\n      ...item,\n      raw\n    });\n    this.names.push(item.name);\n  }\n  static find(nameOrId) {\n    nameOrId = nameOrId.toUpperCase();\n    for (const item of this.items) {\n      if (item.name.toUpperCase() === nameOrId || item.id.toUpperCase() === nameOrId) {\n        return item;\n      }\n    }\n    return null;\n  }\n  static get(nameOrId) {\n    const res = this.find(nameOrId);\n    if (!res) {\n      throw new Error(`Unsupported EC named curve \'${nameOrId}\'`);\n    }\n    return res;\n  }\n};\n__name(EcCurves, "EcCurves");\nEcCurves.items = [];\nEcCurves.names = [];\nEcCurves.register({ name: "P-256", id: idSecp256r1, size: 256 });\nEcCurves.register({ name: "P-384", id: idSecp384r1, size: 384 });\nEcCurves.register({ name: "P-521", id: idSecp521r1, size: 521 });\nEcCurves.register({ name: "K-256", id: idSecp256k1, size: 256 });\nEcCurves.register({ name: "brainpoolP160r1", id: idBrainpoolP160r1, size: 160 });\nEcCurves.register({ name: "brainpoolP160t1", id: idBrainpoolP160t1, size: 160 });\nEcCurves.register({ name: "brainpoolP192r1", id: idBrainpoolP192r1, size: 192 });\nEcCurves.register({ name: "brainpoolP192t1", id: idBrainpoolP192t1, size: 192 });\nEcCurves.register({ name: "brainpoolP224r1", id: idBrainpoolP224r1, size: 224 });\nEcCurves.register({ name: "brainpoolP224t1", id: idBrainpoolP224t1, size: 224 });\nEcCurves.register({ name: "brainpoolP256r1", id: idBrainpoolP256r1, size: 256 });\nEcCurves.register({ name: "brainpoolP256t1", id: idBrainpoolP256t1, size: 256 });\nEcCurves.register({ name: "brainpoolP320r1", id: idBrainpoolP320r1, size: 320 });\nEcCurves.register({ name: "brainpoolP320t1", id: idBrainpoolP320t1, size: 320 });\nEcCurves.register({ name: "brainpoolP384r1", id: idBrainpoolP384r1, size: 384 });\nEcCurves.register({ name: "brainpoolP384t1", id: idBrainpoolP384t1, size: 384 });\nEcCurves.register({ name: "brainpoolP512r1", id: idBrainpoolP512r1, size: 512 });\nEcCurves.register({ name: "brainpoolP512t1", id: idBrainpoolP512t1, size: 512 });\nvar HmacProvider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "HMAC";\n    this.hashAlgorithms = ["SHA-1", "SHA-256", "SHA-384", "SHA-512"];\n    this.usages = ["sign", "verify"];\n  }\n  getDefaultLength(algName) {\n    switch (algName.toUpperCase()) {\n      case "SHA-1":\n      case "SHA-256":\n      case "SHA-384":\n      case "SHA-512":\n        return 512;\n      default:\n        throw new Error(`Unknown algorithm name \'${algName}\'`);\n    }\n  }\n  checkGenerateKeyParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "hash");\n    this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    if ("length" in algorithm) {\n      if (typeof algorithm.length !== "number") {\n        throw new TypeError("length: Is not a Number");\n      }\n      if (algorithm.length < 1) {\n        throw new RangeError("length: Number is out of range");\n      }\n    }\n  }\n  checkImportParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "hash");\n    this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n  }\n};\n__name(HmacProvider, "HmacProvider");\nvar Pbkdf2Provider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "PBKDF2";\n    this.hashAlgorithms = ["SHA-1", "SHA-256", "SHA-384", "SHA-512"];\n    this.usages = ["deriveBits", "deriveKey"];\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "hash");\n    this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    this.checkRequiredProperty(algorithm, "salt");\n    if (!(algorithm.salt instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.salt))) {\n      throw new TypeError("salt: Is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n    }\n    this.checkRequiredProperty(algorithm, "iterations");\n    if (typeof algorithm.iterations !== "number") {\n      throw new TypeError("iterations: Is not a Number");\n    }\n    if (algorithm.iterations < 1) {\n      throw new TypeError("iterations: Is less than 1");\n    }\n  }\n  checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {\n    super.checkImportKey(format, keyData, algorithm, extractable, keyUsages);\n    if (extractable) {\n      throw new SyntaxError("extractable: Must be \'false\'");\n    }\n  }\n};\n__name(Pbkdf2Provider, "Pbkdf2Provider");\nvar HkdfProvider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "HKDF";\n    this.hashAlgorithms = ["SHA-1", "SHA-256", "SHA-384", "SHA-512"];\n    this.usages = ["deriveKey", "deriveBits"];\n  }\n  checkAlgorithmParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "hash");\n    this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    this.checkRequiredProperty(algorithm, "salt");\n    if (!BufferSourceConverter.isBufferSource(algorithm.salt)) {\n      throw new TypeError("salt: Is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n    }\n    this.checkRequiredProperty(algorithm, "info");\n    if (!BufferSourceConverter.isBufferSource(algorithm.info)) {\n      throw new TypeError("salt: Is not of type \'(ArrayBuffer or ArrayBufferView)\'");\n    }\n  }\n  checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {\n    super.checkImportKey(format, keyData, algorithm, extractable, keyUsages);\n    if (extractable) {\n      throw new SyntaxError("extractable: Must be \'false\'");\n    }\n  }\n};\n__name(HkdfProvider, "HkdfProvider");\nvar ShakeProvider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.usages = [];\n    this.defaultLength = 0;\n  }\n  digest(...args) {\n    args[0] = { length: this.defaultLength, ...args[0] };\n    return super.digest.apply(this, args);\n  }\n  checkDigest(algorithm, data) {\n    super.checkDigest(algorithm, data);\n    const length = algorithm.length || 0;\n    if (typeof length !== "number") {\n      throw new TypeError("length: Is not a Number");\n    }\n    if (length < 0) {\n      throw new TypeError("length: Is negative");\n    }\n  }\n};\n__name(ShakeProvider, "ShakeProvider");\nvar Shake128Provider = class extends ShakeProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "shake128";\n    this.defaultLength = 16;\n  }\n};\n__name(Shake128Provider, "Shake128Provider");\nvar Shake256Provider = class extends ShakeProvider {\n  constructor() {\n    super(...arguments);\n    this.name = "shake256";\n    this.defaultLength = 32;\n  }\n};\n__name(Shake256Provider, "Shake256Provider");\nvar Crypto = class {\n  get [Symbol.toStringTag]() {\n    return "Crypto";\n  }\n  randomUUID() {\n    const b = this.getRandomValues(new Uint8Array(16));\n    b[6] = b[6] & 15 | 64;\n    b[8] = b[8] & 63 | 128;\n    const uuid = Convert.ToHex(b).toLowerCase();\n    return `${uuid.substring(0, 8)}-${uuid.substring(8, 12)}-${uuid.substring(12, 16)}-${uuid.substring(16, 20)}-${uuid.substring(20)}`;\n  }\n};\n__name(Crypto, "Crypto");\nvar ProviderStorage = class {\n  constructor() {\n    this.items = {};\n  }\n  get(algorithmName) {\n    return this.items[algorithmName.toLowerCase()] || null;\n  }\n  set(provider) {\n    this.items[provider.name.toLowerCase()] = provider;\n  }\n  removeAt(algorithmName) {\n    const provider = this.get(algorithmName.toLowerCase());\n    if (provider) {\n      delete this.items[algorithmName];\n    }\n    return provider;\n  }\n  has(name) {\n    return !!this.get(name);\n  }\n  get length() {\n    return Object.keys(this.items).length;\n  }\n  get algorithms() {\n    const algorithms = [];\n    for (const key in this.items) {\n      const provider = this.items[key];\n      algorithms.push(provider.name);\n    }\n    return algorithms.sort();\n  }\n};\n__name(ProviderStorage, "ProviderStorage");\nvar SubtleCrypto = class {\n  constructor() {\n    this.providers = new ProviderStorage();\n  }\n  static isHashedAlgorithm(data) {\n    return data && typeof data === "object" && "name" in data && "hash" in data ? true : false;\n  }\n  get [Symbol.toStringTag]() {\n    return "SubtleCrypto";\n  }\n  async digest(...args) {\n    this.checkRequiredArguments(args, 2, "digest");\n    const [algorithm, data, ...params] = args;\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const preparedData = BufferSourceConverter.toArrayBuffer(data);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    const result = await provider.digest(preparedAlgorithm, preparedData, ...params);\n    return result;\n  }\n  async generateKey(...args) {\n    this.checkRequiredArguments(args, 3, "generateKey");\n    const [algorithm, extractable, keyUsages, ...params] = args;\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    const result = await provider.generateKey({ ...preparedAlgorithm, name: provider.name }, extractable, keyUsages, ...params);\n    return result;\n  }\n  async sign(...args) {\n    this.checkRequiredArguments(args, 3, "sign");\n    const [algorithm, key, data, ...params] = args;\n    this.checkCryptoKey(key);\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const preparedData = BufferSourceConverter.toArrayBuffer(data);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    const result = await provider.sign({ ...preparedAlgorithm, name: provider.name }, key, preparedData, ...params);\n    return result;\n  }\n  async verify(...args) {\n    this.checkRequiredArguments(args, 4, "verify");\n    const [algorithm, key, signature, data, ...params] = args;\n    this.checkCryptoKey(key);\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const preparedData = BufferSourceConverter.toArrayBuffer(data);\n    const preparedSignature = BufferSourceConverter.toArrayBuffer(signature);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    const result = await provider.verify({ ...preparedAlgorithm, name: provider.name }, key, preparedSignature, preparedData, ...params);\n    return result;\n  }\n  async encrypt(...args) {\n    this.checkRequiredArguments(args, 3, "encrypt");\n    const [algorithm, key, data, ...params] = args;\n    this.checkCryptoKey(key);\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const preparedData = BufferSourceConverter.toArrayBuffer(data);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    const result = await provider.encrypt({ ...preparedAlgorithm, name: provider.name }, key, preparedData, { keyUsage: true }, ...params);\n    return result;\n  }\n  async decrypt(...args) {\n    this.checkRequiredArguments(args, 3, "decrypt");\n    const [algorithm, key, data, ...params] = args;\n    this.checkCryptoKey(key);\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const preparedData = BufferSourceConverter.toArrayBuffer(data);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    const result = await provider.decrypt({ ...preparedAlgorithm, name: provider.name }, key, preparedData, { keyUsage: true }, ...params);\n    return result;\n  }\n  async deriveBits(...args) {\n    this.checkRequiredArguments(args, 3, "deriveBits");\n    const [algorithm, baseKey, length, ...params] = args;\n    this.checkCryptoKey(baseKey);\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    const result = await provider.deriveBits({ ...preparedAlgorithm, name: provider.name }, baseKey, length, { keyUsage: true }, ...params);\n    return result;\n  }\n  async deriveKey(...args) {\n    this.checkRequiredArguments(args, 5, "deriveKey");\n    const [algorithm, baseKey, derivedKeyType, extractable, keyUsages, ...params] = args;\n    const preparedDerivedKeyType = this.prepareAlgorithm(derivedKeyType);\n    const importProvider = this.getProvider(preparedDerivedKeyType.name);\n    importProvider.checkDerivedKeyParams(preparedDerivedKeyType);\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    provider.checkCryptoKey(baseKey, "deriveKey");\n    const derivedBits = await provider.deriveBits({ ...preparedAlgorithm, name: provider.name }, baseKey, derivedKeyType.length || 512, { keyUsage: false }, ...params);\n    return this.importKey("raw", derivedBits, derivedKeyType, extractable, keyUsages, ...params);\n  }\n  async exportKey(...args) {\n    this.checkRequiredArguments(args, 2, "exportKey");\n    const [format, key, ...params] = args;\n    this.checkCryptoKey(key);\n    const provider = this.getProvider(key.algorithm.name);\n    const result = await provider.exportKey(format, key, ...params);\n    return result;\n  }\n  async importKey(...args) {\n    this.checkRequiredArguments(args, 5, "importKey");\n    const [format, keyData, algorithm, extractable, keyUsages, ...params] = args;\n    const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    if (["pkcs8", "spki", "raw"].indexOf(format) !== -1) {\n      const preparedData = BufferSourceConverter.toArrayBuffer(keyData);\n      return provider.importKey(format, preparedData, { ...preparedAlgorithm, name: provider.name }, extractable, keyUsages, ...params);\n    } else {\n      if (!keyData.kty) {\n        throw new TypeError("keyData: Is not JSON");\n      }\n    }\n    return provider.importKey(format, keyData, { ...preparedAlgorithm, name: provider.name }, extractable, keyUsages, ...params);\n  }\n  async wrapKey(format, key, wrappingKey, wrapAlgorithm, ...args) {\n    let keyData = await this.exportKey(format, key, ...args);\n    if (format === "jwk") {\n      const json = JSON.stringify(keyData);\n      keyData = Convert.FromUtf8String(json);\n    }\n    const preparedAlgorithm = this.prepareAlgorithm(wrapAlgorithm);\n    const preparedData = BufferSourceConverter.toArrayBuffer(keyData);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    return provider.encrypt({ ...preparedAlgorithm, name: provider.name }, wrappingKey, preparedData, { keyUsage: false }, ...args);\n  }\n  async unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages, ...args) {\n    const preparedAlgorithm = this.prepareAlgorithm(unwrapAlgorithm);\n    const preparedData = BufferSourceConverter.toArrayBuffer(wrappedKey);\n    const provider = this.getProvider(preparedAlgorithm.name);\n    let keyData = await provider.decrypt({ ...preparedAlgorithm, name: provider.name }, unwrappingKey, preparedData, { keyUsage: false }, ...args);\n    if (format === "jwk") {\n      try {\n        keyData = JSON.parse(Convert.ToUtf8String(keyData));\n      } catch (e) {\n        const error = new TypeError("wrappedKey: Is not a JSON");\n        error.internal = e;\n        throw error;\n      }\n    }\n    return this.importKey(format, keyData, unwrappedKeyAlgorithm, extractable, keyUsages, ...args);\n  }\n  checkRequiredArguments(args, size, methodName) {\n    if (args.length < size) {\n      throw new TypeError(`Failed to execute \'${methodName}\' on \'SubtleCrypto\': ${size} arguments required, but only ${args.length} present`);\n    }\n  }\n  prepareAlgorithm(algorithm) {\n    if (typeof algorithm === "string") {\n      return {\n        name: algorithm\n      };\n    }\n    if (SubtleCrypto.isHashedAlgorithm(algorithm)) {\n      const preparedAlgorithm = { ...algorithm };\n      preparedAlgorithm.hash = this.prepareAlgorithm(algorithm.hash);\n      return preparedAlgorithm;\n    }\n    return { ...algorithm };\n  }\n  getProvider(name) {\n    const provider = this.providers.get(name);\n    if (!provider) {\n      throw new AlgorithmError("Unrecognized name");\n    }\n    return provider;\n  }\n  checkCryptoKey(key) {\n    if (!(key instanceof CryptoKey)) {\n      throw new TypeError(`Key is not of type \'CryptoKey\'`);\n    }\n  }\n};\n__name(SubtleCrypto, "SubtleCrypto");\n\n// ../../node_modules/.pnpm/@peculiar+webcrypto@1.4.3/node_modules/@peculiar/webcrypto/build/webcrypto.es.js\nvar crypto = __toESM(require("crypto"));\nvar import_crypto = __toESM(require("crypto"));\nvar process = __toESM(require("process"));\nvar JsonBase64UrlConverter = {\n  fromJSON: (value) => Buffer.from(Convert.FromBase64Url(value)),\n  toJSON: (value) => Convert.ToBase64Url(value)\n};\nvar CryptoKey2 = class extends CryptoKey {\n  constructor() {\n    super(...arguments);\n    this.data = Buffer.alloc(0);\n    this.algorithm = { name: "" };\n    this.extractable = false;\n    this.type = "secret";\n    this.usages = [];\n    this.kty = "oct";\n    this.alg = "";\n  }\n};\n__name(CryptoKey2, "CryptoKey");\n__decorate([\n  JsonProp({ name: "ext", type: JsonPropTypes.Boolean, optional: true })\n], CryptoKey2.prototype, "extractable", void 0);\n__decorate([\n  JsonProp({ name: "key_ops", type: JsonPropTypes.String, repeated: true, optional: true })\n], CryptoKey2.prototype, "usages", void 0);\n__decorate([\n  JsonProp({ type: JsonPropTypes.String })\n], CryptoKey2.prototype, "kty", void 0);\n__decorate([\n  JsonProp({ type: JsonPropTypes.String, optional: true })\n], CryptoKey2.prototype, "alg", void 0);\nvar SymmetricKey = class extends CryptoKey2 {\n  constructor() {\n    super(...arguments);\n    this.kty = "oct";\n    this.type = "secret";\n  }\n};\n__name(SymmetricKey, "SymmetricKey");\nvar AsymmetricKey = class extends CryptoKey2 {\n};\n__name(AsymmetricKey, "AsymmetricKey");\nvar AesCryptoKey = class extends SymmetricKey {\n  get alg() {\n    switch (this.algorithm.name.toUpperCase()) {\n      case "AES-CBC":\n        return `A${this.algorithm.length}CBC`;\n      case "AES-CTR":\n        return `A${this.algorithm.length}CTR`;\n      case "AES-GCM":\n        return `A${this.algorithm.length}GCM`;\n      case "AES-KW":\n        return `A${this.algorithm.length}KW`;\n      case "AES-CMAC":\n        return `A${this.algorithm.length}CMAC`;\n      case "AES-ECB":\n        return `A${this.algorithm.length}ECB`;\n      default:\n        throw new AlgorithmError("Unsupported algorithm name");\n    }\n  }\n  set alg(value) {\n  }\n};\n__name(AesCryptoKey, "AesCryptoKey");\n__decorate([\n  JsonProp({ name: "k", converter: JsonBase64UrlConverter })\n], AesCryptoKey.prototype, "data", void 0);\nvar AesCrypto = class {\n  static async generateKey(algorithm, extractable, keyUsages) {\n    const key = new AesCryptoKey();\n    key.algorithm = algorithm;\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    key.data = import_crypto.default.randomBytes(algorithm.length >> 3);\n    return key;\n  }\n  static async exportKey(format, key) {\n    if (!(key instanceof AesCryptoKey)) {\n      throw new Error("key: Is not AesCryptoKey");\n    }\n    switch (format.toLowerCase()) {\n      case "jwk":\n        return JsonSerializer.toJSON(key);\n      case "raw":\n        return new Uint8Array(key.data).buffer;\n      default:\n        throw new OperationError("format: Must be \'jwk\' or \'raw\'");\n    }\n  }\n  static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n    let key;\n    switch (format.toLowerCase()) {\n      case "jwk":\n        key = JsonParser.fromJSON(keyData, { targetSchema: AesCryptoKey });\n        break;\n      case "raw":\n        key = new AesCryptoKey();\n        key.data = Buffer.from(keyData);\n        break;\n      default:\n        throw new OperationError("format: Must be \'jwk\' or \'raw\'");\n    }\n    key.algorithm = algorithm;\n    key.algorithm.length = key.data.length << 3;\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    switch (key.algorithm.length) {\n      case 128:\n      case 192:\n      case 256:\n        break;\n      default:\n        throw new OperationError("keyData: Is wrong key length");\n    }\n    return key;\n  }\n  static async encrypt(algorithm, key, data) {\n    switch (algorithm.name.toUpperCase()) {\n      case "AES-CBC":\n        return this.encryptAesCBC(algorithm, key, Buffer.from(data));\n      case "AES-CTR":\n        return this.encryptAesCTR(algorithm, key, Buffer.from(data));\n      case "AES-GCM":\n        return this.encryptAesGCM(algorithm, key, Buffer.from(data));\n      case "AES-KW":\n        return this.encryptAesKW(algorithm, key, Buffer.from(data));\n      case "AES-ECB":\n        return this.encryptAesECB(algorithm, key, Buffer.from(data));\n      default:\n        throw new OperationError("algorithm: Is not recognized");\n    }\n  }\n  static async decrypt(algorithm, key, data) {\n    if (!(key instanceof AesCryptoKey)) {\n      throw new Error("key: Is not AesCryptoKey");\n    }\n    switch (algorithm.name.toUpperCase()) {\n      case "AES-CBC":\n        return this.decryptAesCBC(algorithm, key, Buffer.from(data));\n      case "AES-CTR":\n        return this.decryptAesCTR(algorithm, key, Buffer.from(data));\n      case "AES-GCM":\n        return this.decryptAesGCM(algorithm, key, Buffer.from(data));\n      case "AES-KW":\n        return this.decryptAesKW(algorithm, key, Buffer.from(data));\n      case "AES-ECB":\n        return this.decryptAesECB(algorithm, key, Buffer.from(data));\n      default:\n        throw new OperationError("algorithm: Is not recognized");\n    }\n  }\n  static async encryptAesCBC(algorithm, key, data) {\n    const cipher = import_crypto.default.createCipheriv(`aes-${key.algorithm.length}-cbc`, key.data, new Uint8Array(algorithm.iv));\n    let enc = cipher.update(data);\n    enc = Buffer.concat([enc, cipher.final()]);\n    const res = new Uint8Array(enc).buffer;\n    return res;\n  }\n  static async decryptAesCBC(algorithm, key, data) {\n    const decipher = import_crypto.default.createDecipheriv(`aes-${key.algorithm.length}-cbc`, key.data, new Uint8Array(algorithm.iv));\n    let dec = decipher.update(data);\n    dec = Buffer.concat([dec, decipher.final()]);\n    return new Uint8Array(dec).buffer;\n  }\n  static async encryptAesCTR(algorithm, key, data) {\n    const cipher = import_crypto.default.createCipheriv(`aes-${key.algorithm.length}-ctr`, key.data, Buffer.from(algorithm.counter));\n    let enc = cipher.update(data);\n    enc = Buffer.concat([enc, cipher.final()]);\n    const res = new Uint8Array(enc).buffer;\n    return res;\n  }\n  static async decryptAesCTR(algorithm, key, data) {\n    const decipher = import_crypto.default.createDecipheriv(`aes-${key.algorithm.length}-ctr`, key.data, new Uint8Array(algorithm.counter));\n    let dec = decipher.update(data);\n    dec = Buffer.concat([dec, decipher.final()]);\n    return new Uint8Array(dec).buffer;\n  }\n  static async encryptAesGCM(algorithm, key, data) {\n    const cipher = import_crypto.default.createCipheriv(`aes-${key.algorithm.length}-gcm`, key.data, Buffer.from(algorithm.iv), {\n      authTagLength: (algorithm.tagLength || 128) >> 3\n    });\n    if (algorithm.additionalData) {\n      cipher.setAAD(Buffer.from(algorithm.additionalData));\n    }\n    let enc = cipher.update(data);\n    enc = Buffer.concat([enc, cipher.final(), cipher.getAuthTag()]);\n    const res = new Uint8Array(enc).buffer;\n    return res;\n  }\n  static async decryptAesGCM(algorithm, key, data) {\n    const decipher = import_crypto.default.createDecipheriv(`aes-${key.algorithm.length}-gcm`, key.data, new Uint8Array(algorithm.iv));\n    const tagLength = (algorithm.tagLength || 128) >> 3;\n    const enc = data.slice(0, data.length - tagLength);\n    const tag = data.slice(data.length - tagLength);\n    if (algorithm.additionalData) {\n      decipher.setAAD(Buffer.from(algorithm.additionalData));\n    }\n    decipher.setAuthTag(tag);\n    let dec = decipher.update(enc);\n    dec = Buffer.concat([dec, decipher.final()]);\n    return new Uint8Array(dec).buffer;\n  }\n  static async encryptAesKW(algorithm, key, data) {\n    const cipher = import_crypto.default.createCipheriv(`id-aes${key.algorithm.length}-wrap`, key.data, this.AES_KW_IV);\n    let enc = cipher.update(data);\n    enc = Buffer.concat([enc, cipher.final()]);\n    return new Uint8Array(enc).buffer;\n  }\n  static async decryptAesKW(algorithm, key, data) {\n    const decipher = import_crypto.default.createDecipheriv(`id-aes${key.algorithm.length}-wrap`, key.data, this.AES_KW_IV);\n    let dec = decipher.update(data);\n    dec = Buffer.concat([dec, decipher.final()]);\n    return new Uint8Array(dec).buffer;\n  }\n  static async encryptAesECB(algorithm, key, data) {\n    const cipher = import_crypto.default.createCipheriv(`aes-${key.algorithm.length}-ecb`, key.data, new Uint8Array(0));\n    let enc = cipher.update(data);\n    enc = Buffer.concat([enc, cipher.final()]);\n    const res = new Uint8Array(enc).buffer;\n    return res;\n  }\n  static async decryptAesECB(algorithm, key, data) {\n    const decipher = import_crypto.default.createDecipheriv(`aes-${key.algorithm.length}-ecb`, key.data, new Uint8Array(0));\n    let dec = decipher.update(data);\n    dec = Buffer.concat([dec, decipher.final()]);\n    return new Uint8Array(dec).buffer;\n  }\n};\n__name(AesCrypto, "AesCrypto");\nAesCrypto.AES_KW_IV = Buffer.from("A6A6A6A6A6A6A6A6", "hex");\nvar keyStorage = /* @__PURE__ */ new WeakMap();\nfunction getCryptoKey(key) {\n  const res = keyStorage.get(key);\n  if (!res) {\n    throw new OperationError("Cannot get CryptoKey from secure storage");\n  }\n  return res;\n}\n__name(getCryptoKey, "getCryptoKey");\nfunction setCryptoKey(value) {\n  const key = CryptoKey.create(value.algorithm, value.type, value.extractable, value.usages);\n  Object.freeze(key);\n  keyStorage.set(key, value);\n  return key;\n}\n__name(setCryptoKey, "setCryptoKey");\nvar AesCbcProvider2 = class extends AesCbcProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const key = await AesCrypto.generateKey({\n      name: this.name,\n      length: algorithm.length\n    }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  async onEncrypt(algorithm, key, data) {\n    return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onDecrypt(algorithm, key, data) {\n    return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return AesCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n      throw new TypeError("key: Is not a AesCryptoKey");\n    }\n  }\n};\n__name(AesCbcProvider2, "AesCbcProvider");\nvar zero = Buffer.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar rb = Buffer.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 135]);\nvar blockSize = 16;\nfunction bitShiftLeft(buffer) {\n  const shifted = Buffer.alloc(buffer.length);\n  const last = buffer.length - 1;\n  for (let index = 0; index < last; index++) {\n    shifted[index] = buffer[index] << 1;\n    if (buffer[index + 1] & 128) {\n      shifted[index] += 1;\n    }\n  }\n  shifted[last] = buffer[last] << 1;\n  return shifted;\n}\n__name(bitShiftLeft, "bitShiftLeft");\nfunction xor(a, b) {\n  const length = Math.min(a.length, b.length);\n  const output = Buffer.alloc(length);\n  for (let index = 0; index < length; index++) {\n    output[index] = a[index] ^ b[index];\n  }\n  return output;\n}\n__name(xor, "xor");\nfunction aes(key, message) {\n  const cipher = crypto.createCipheriv(`aes${key.length << 3}`, key, zero);\n  const result = cipher.update(message);\n  cipher.final();\n  return result;\n}\n__name(aes, "aes");\nfunction getMessageBlock(message, blockIndex) {\n  const block = Buffer.alloc(blockSize);\n  const start = blockIndex * blockSize;\n  const end = start + blockSize;\n  message.copy(block, 0, start, end);\n  return block;\n}\n__name(getMessageBlock, "getMessageBlock");\nfunction getPaddedMessageBlock(message, blockIndex) {\n  const block = Buffer.alloc(blockSize);\n  const start = blockIndex * blockSize;\n  const end = message.length;\n  block.fill(0);\n  message.copy(block, 0, start, end);\n  block[end - start] = 128;\n  return block;\n}\n__name(getPaddedMessageBlock, "getPaddedMessageBlock");\nfunction generateSubkeys(key) {\n  const l = aes(key, zero);\n  let subkey1 = bitShiftLeft(l);\n  if (l[0] & 128) {\n    subkey1 = xor(subkey1, rb);\n  }\n  let subkey2 = bitShiftLeft(subkey1);\n  if (subkey1[0] & 128) {\n    subkey2 = xor(subkey2, rb);\n  }\n  return { subkey1, subkey2 };\n}\n__name(generateSubkeys, "generateSubkeys");\nfunction aesCmac(key, message) {\n  const subkeys = generateSubkeys(key);\n  let blockCount = Math.ceil(message.length / blockSize);\n  let lastBlockCompleteFlag;\n  let lastBlock;\n  if (blockCount === 0) {\n    blockCount = 1;\n    lastBlockCompleteFlag = false;\n  } else {\n    lastBlockCompleteFlag = message.length % blockSize === 0;\n  }\n  const lastBlockIndex = blockCount - 1;\n  if (lastBlockCompleteFlag) {\n    lastBlock = xor(getMessageBlock(message, lastBlockIndex), subkeys.subkey1);\n  } else {\n    lastBlock = xor(getPaddedMessageBlock(message, lastBlockIndex), subkeys.subkey2);\n  }\n  let x = zero;\n  let y;\n  for (let index = 0; index < lastBlockIndex; index++) {\n    y = xor(x, getMessageBlock(message, index));\n    x = aes(key, y);\n  }\n  y = xor(lastBlock, x);\n  return aes(key, y);\n}\n__name(aesCmac, "aesCmac");\nvar AesCmacProvider2 = class extends AesCmacProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const key = await AesCrypto.generateKey({\n      name: this.name,\n      length: algorithm.length\n    }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  async onSign(algorithm, key, data) {\n    const result = aesCmac(getCryptoKey(key).data, Buffer.from(data));\n    return new Uint8Array(result).buffer;\n  }\n  async onVerify(algorithm, key, signature, data) {\n    const signature2 = await this.sign(algorithm, key, data);\n    return Buffer.from(signature).compare(Buffer.from(signature2)) === 0;\n  }\n  async onExportKey(format, key) {\n    return AesCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n    return setCryptoKey(res);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n      throw new TypeError("key: Is not a AesCryptoKey");\n    }\n  }\n};\n__name(AesCmacProvider2, "AesCmacProvider");\nvar AesCtrProvider2 = class extends AesCtrProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const key = await AesCrypto.generateKey({\n      name: this.name,\n      length: algorithm.length\n    }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  async onEncrypt(algorithm, key, data) {\n    return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onDecrypt(algorithm, key, data) {\n    return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return AesCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n    return setCryptoKey(res);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n      throw new TypeError("key: Is not a AesCryptoKey");\n    }\n  }\n};\n__name(AesCtrProvider2, "AesCtrProvider");\nvar AesGcmProvider2 = class extends AesGcmProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const key = await AesCrypto.generateKey({\n      name: this.name,\n      length: algorithm.length\n    }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  async onEncrypt(algorithm, key, data) {\n    return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onDecrypt(algorithm, key, data) {\n    return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return AesCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n    return setCryptoKey(res);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n      throw new TypeError("key: Is not a AesCryptoKey");\n    }\n  }\n};\n__name(AesGcmProvider2, "AesGcmProvider");\nvar AesKwProvider2 = class extends AesKwProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const res = await AesCrypto.generateKey({\n      name: this.name,\n      length: algorithm.length\n    }, extractable, keyUsages);\n    return setCryptoKey(res);\n  }\n  async onExportKey(format, key) {\n    return AesCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n    return setCryptoKey(res);\n  }\n  async onEncrypt(algorithm, key, data) {\n    return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onDecrypt(algorithm, key, data) {\n    return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n      throw new TypeError("key: Is not a AesCryptoKey");\n    }\n  }\n};\n__name(AesKwProvider2, "AesKwProvider");\nvar AesEcbProvider2 = class extends AesEcbProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const key = await AesCrypto.generateKey({\n      name: this.name,\n      length: algorithm.length\n    }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  async onEncrypt(algorithm, key, data) {\n    return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onDecrypt(algorithm, key, data) {\n    return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return AesCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n    return setCryptoKey(res);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n      throw new TypeError("key: Is not a AesCryptoKey");\n    }\n  }\n};\n__name(AesEcbProvider2, "AesEcbProvider");\nvar DesCryptoKey = class extends SymmetricKey {\n  get alg() {\n    switch (this.algorithm.name.toUpperCase()) {\n      case "DES-CBC":\n        return `DES-CBC`;\n      case "DES-EDE3-CBC":\n        return `3DES-CBC`;\n      default:\n        throw new AlgorithmError("Unsupported algorithm name");\n    }\n  }\n  set alg(value) {\n  }\n};\n__name(DesCryptoKey, "DesCryptoKey");\n__decorate([\n  JsonProp({ name: "k", converter: JsonBase64UrlConverter })\n], DesCryptoKey.prototype, "data", void 0);\nvar DesCrypto = class {\n  static async generateKey(algorithm, extractable, keyUsages) {\n    const key = new DesCryptoKey();\n    key.algorithm = algorithm;\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    key.data = import_crypto.default.randomBytes(algorithm.length >> 3);\n    return key;\n  }\n  static async exportKey(format, key) {\n    switch (format.toLowerCase()) {\n      case "jwk":\n        return JsonSerializer.toJSON(key);\n      case "raw":\n        return new Uint8Array(key.data).buffer;\n      default:\n        throw new OperationError("format: Must be \'jwk\' or \'raw\'");\n    }\n  }\n  static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n    let key;\n    switch (format.toLowerCase()) {\n      case "jwk":\n        key = JsonParser.fromJSON(keyData, { targetSchema: DesCryptoKey });\n        break;\n      case "raw":\n        key = new DesCryptoKey();\n        key.data = Buffer.from(keyData);\n        break;\n      default:\n        throw new OperationError("format: Must be \'jwk\' or \'raw\'");\n    }\n    key.algorithm = algorithm;\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return key;\n  }\n  static async encrypt(algorithm, key, data) {\n    switch (algorithm.name.toUpperCase()) {\n      case "DES-CBC":\n        return this.encryptDesCBC(algorithm, key, Buffer.from(data));\n      case "DES-EDE3-CBC":\n        return this.encryptDesEDE3CBC(algorithm, key, Buffer.from(data));\n      default:\n        throw new OperationError("algorithm: Is not recognized");\n    }\n  }\n  static async decrypt(algorithm, key, data) {\n    if (!(key instanceof DesCryptoKey)) {\n      throw new Error("key: Is not DesCryptoKey");\n    }\n    switch (algorithm.name.toUpperCase()) {\n      case "DES-CBC":\n        return this.decryptDesCBC(algorithm, key, Buffer.from(data));\n      case "DES-EDE3-CBC":\n        return this.decryptDesEDE3CBC(algorithm, key, Buffer.from(data));\n      default:\n        throw new OperationError("algorithm: Is not recognized");\n    }\n  }\n  static async encryptDesCBC(algorithm, key, data) {\n    const cipher = import_crypto.default.createCipheriv(`des-cbc`, key.data, new Uint8Array(algorithm.iv));\n    let enc = cipher.update(data);\n    enc = Buffer.concat([enc, cipher.final()]);\n    const res = new Uint8Array(enc).buffer;\n    return res;\n  }\n  static async decryptDesCBC(algorithm, key, data) {\n    const decipher = import_crypto.default.createDecipheriv(`des-cbc`, key.data, new Uint8Array(algorithm.iv));\n    let dec = decipher.update(data);\n    dec = Buffer.concat([dec, decipher.final()]);\n    return new Uint8Array(dec).buffer;\n  }\n  static async encryptDesEDE3CBC(algorithm, key, data) {\n    const cipher = import_crypto.default.createCipheriv(`des-ede3-cbc`, key.data, Buffer.from(algorithm.iv));\n    let enc = cipher.update(data);\n    enc = Buffer.concat([enc, cipher.final()]);\n    const res = new Uint8Array(enc).buffer;\n    return res;\n  }\n  static async decryptDesEDE3CBC(algorithm, key, data) {\n    const decipher = import_crypto.default.createDecipheriv(`des-ede3-cbc`, key.data, new Uint8Array(algorithm.iv));\n    let dec = decipher.update(data);\n    dec = Buffer.concat([dec, decipher.final()]);\n    return new Uint8Array(dec).buffer;\n  }\n};\n__name(DesCrypto, "DesCrypto");\nvar DesCbcProvider = class extends DesProvider {\n  constructor() {\n    super(...arguments);\n    this.keySizeBits = 64;\n    this.ivSize = 8;\n    this.name = "DES-CBC";\n  }\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const key = await DesCrypto.generateKey({\n      name: this.name,\n      length: this.keySizeBits\n    }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  async onEncrypt(algorithm, key, data) {\n    return DesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onDecrypt(algorithm, key, data) {\n    return DesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return DesCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await DesCrypto.importKey(format, keyData, { name: this.name, length: this.keySizeBits }, extractable, keyUsages);\n    if (key.data.length !== this.keySizeBits >> 3) {\n      throw new OperationError("keyData: Wrong key size");\n    }\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof DesCryptoKey)) {\n      throw new TypeError("key: Is not a DesCryptoKey");\n    }\n  }\n};\n__name(DesCbcProvider, "DesCbcProvider");\nvar DesEde3CbcProvider = class extends DesProvider {\n  constructor() {\n    super(...arguments);\n    this.keySizeBits = 192;\n    this.ivSize = 8;\n    this.name = "DES-EDE3-CBC";\n  }\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const key = await DesCrypto.generateKey({\n      name: this.name,\n      length: this.keySizeBits\n    }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  async onEncrypt(algorithm, key, data) {\n    return DesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onDecrypt(algorithm, key, data) {\n    return DesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return DesCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await DesCrypto.importKey(format, keyData, { name: this.name, length: this.keySizeBits }, extractable, keyUsages);\n    if (key.data.length !== this.keySizeBits >> 3) {\n      throw new OperationError("keyData: Wrong key size");\n    }\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof DesCryptoKey)) {\n      throw new TypeError("key: Is not a DesCryptoKey");\n    }\n  }\n};\n__name(DesEde3CbcProvider, "DesEde3CbcProvider");\nfunction getJwkAlgorithm(algorithm) {\n  switch (algorithm.name.toUpperCase()) {\n    case "RSA-OAEP": {\n      const mdSize = /(\\d+)$/.exec(algorithm.hash.name)[1];\n      return `RSA-OAEP${mdSize !== "1" ? `-${mdSize}` : ""}`;\n    }\n    case "RSASSA-PKCS1-V1_5":\n      return `RS${/(\\d+)$/.exec(algorithm.hash.name)[1]}`;\n    case "RSA-PSS":\n      return `PS${/(\\d+)$/.exec(algorithm.hash.name)[1]}`;\n    case "RSA-PKCS1":\n      return `RS1`;\n    default:\n      throw new OperationError("algorithm: Is not recognized");\n  }\n}\n__name(getJwkAlgorithm, "getJwkAlgorithm");\nvar RsaPrivateKey2 = class extends AsymmetricKey {\n  constructor() {\n    super(...arguments);\n    this.type = "private";\n  }\n  getKey() {\n    const keyInfo = AsnParser.parse(this.data, index$1.PrivateKeyInfo);\n    return AsnParser.parse(keyInfo.privateKey, index$1.RsaPrivateKey);\n  }\n  toJSON() {\n    const key = this.getKey();\n    const json = {\n      kty: "RSA",\n      alg: getJwkAlgorithm(this.algorithm),\n      key_ops: this.usages,\n      ext: this.extractable\n    };\n    return Object.assign(json, JsonSerializer.toJSON(key));\n  }\n  fromJSON(json) {\n    const key = JsonParser.fromJSON(json, { targetSchema: index$1.RsaPrivateKey });\n    const keyInfo = new index$1.PrivateKeyInfo();\n    keyInfo.privateKeyAlgorithm.algorithm = "1.2.840.113549.1.1.1";\n    keyInfo.privateKeyAlgorithm.parameters = null;\n    keyInfo.privateKey = AsnSerializer.serialize(key);\n    this.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n  }\n};\n__name(RsaPrivateKey2, "RsaPrivateKey");\nvar RsaPublicKey2 = class extends AsymmetricKey {\n  constructor() {\n    super(...arguments);\n    this.type = "public";\n  }\n  getKey() {\n    const keyInfo = AsnParser.parse(this.data, index$1.PublicKeyInfo);\n    return AsnParser.parse(keyInfo.publicKey, index$1.RsaPublicKey);\n  }\n  toJSON() {\n    const key = this.getKey();\n    const json = {\n      kty: "RSA",\n      alg: getJwkAlgorithm(this.algorithm),\n      key_ops: this.usages,\n      ext: this.extractable\n    };\n    return Object.assign(json, JsonSerializer.toJSON(key));\n  }\n  fromJSON(json) {\n    const key = JsonParser.fromJSON(json, { targetSchema: index$1.RsaPublicKey });\n    const keyInfo = new index$1.PublicKeyInfo();\n    keyInfo.publicKeyAlgorithm.algorithm = "1.2.840.113549.1.1.1";\n    keyInfo.publicKeyAlgorithm.parameters = null;\n    keyInfo.publicKey = AsnSerializer.serialize(key);\n    this.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n  }\n};\n__name(RsaPublicKey2, "RsaPublicKey");\nvar RsaCrypto = class {\n  static async generateKey(algorithm, extractable, keyUsages) {\n    const privateKey = new RsaPrivateKey2();\n    privateKey.algorithm = algorithm;\n    privateKey.extractable = extractable;\n    privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n    const publicKey = new RsaPublicKey2();\n    publicKey.algorithm = algorithm;\n    publicKey.extractable = true;\n    publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n    const publicExponent = Buffer.concat([\n      Buffer.alloc(4 - algorithm.publicExponent.byteLength, 0),\n      Buffer.from(algorithm.publicExponent)\n    ]).readInt32BE(0);\n    const keys = import_crypto.default.generateKeyPairSync("rsa", {\n      modulusLength: algorithm.modulusLength,\n      publicExponent,\n      publicKeyEncoding: {\n        format: "der",\n        type: "spki"\n      },\n      privateKeyEncoding: {\n        format: "der",\n        type: "pkcs8"\n      }\n    });\n    privateKey.data = keys.privateKey;\n    publicKey.data = keys.publicKey;\n    const res = {\n      privateKey,\n      publicKey\n    };\n    return res;\n  }\n  static async exportKey(format, key) {\n    switch (format.toLowerCase()) {\n      case "jwk":\n        return JsonSerializer.toJSON(key);\n      case "pkcs8":\n      case "spki":\n        return new Uint8Array(key.data).buffer;\n      default:\n        throw new OperationError("format: Must be \'jwk\', \'pkcs8\' or \'spki\'");\n    }\n  }\n  static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n    switch (format.toLowerCase()) {\n      case "jwk": {\n        const jwk = keyData;\n        if (jwk.d) {\n          const asnKey = JsonParser.fromJSON(keyData, { targetSchema: index$1.RsaPrivateKey });\n          return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n        } else {\n          const asnKey = JsonParser.fromJSON(keyData, { targetSchema: index$1.RsaPublicKey });\n          return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n        }\n      }\n      case "spki": {\n        const keyInfo = AsnParser.parse(new Uint8Array(keyData), index$1.PublicKeyInfo);\n        const asnKey = AsnParser.parse(keyInfo.publicKey, index$1.RsaPublicKey);\n        return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n      }\n      case "pkcs8": {\n        const keyInfo = AsnParser.parse(new Uint8Array(keyData), index$1.PrivateKeyInfo);\n        const asnKey = AsnParser.parse(keyInfo.privateKey, index$1.RsaPrivateKey);\n        return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n      }\n      default:\n        throw new OperationError("format: Must be \'jwk\', \'pkcs8\' or \'spki\'");\n    }\n  }\n  static async sign(algorithm, key, data) {\n    switch (algorithm.name.toUpperCase()) {\n      case "RSA-PSS":\n      case "RSASSA-PKCS1-V1_5":\n        return this.signRsa(algorithm, key, data);\n      default:\n        throw new OperationError("algorithm: Is not recognized");\n    }\n  }\n  static async verify(algorithm, key, signature, data) {\n    switch (algorithm.name.toUpperCase()) {\n      case "RSA-PSS":\n      case "RSASSA-PKCS1-V1_5":\n        return this.verifySSA(algorithm, key, data, signature);\n      default:\n        throw new OperationError("algorithm: Is not recognized");\n    }\n  }\n  static async encrypt(algorithm, key, data) {\n    switch (algorithm.name.toUpperCase()) {\n      case "RSA-OAEP":\n        return this.encryptOAEP(algorithm, key, data);\n      default:\n        throw new OperationError("algorithm: Is not recognized");\n    }\n  }\n  static async decrypt(algorithm, key, data) {\n    switch (algorithm.name.toUpperCase()) {\n      case "RSA-OAEP":\n        return this.decryptOAEP(algorithm, key, data);\n      default:\n        throw new OperationError("algorithm: Is not recognized");\n    }\n  }\n  static importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n    const keyInfo = new index$1.PrivateKeyInfo();\n    keyInfo.privateKeyAlgorithm.algorithm = "1.2.840.113549.1.1.1";\n    keyInfo.privateKeyAlgorithm.parameters = null;\n    keyInfo.privateKey = AsnSerializer.serialize(asnKey);\n    const key = new RsaPrivateKey2();\n    key.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n    key.algorithm = Object.assign({}, algorithm);\n    key.algorithm.publicExponent = new Uint8Array(asnKey.publicExponent);\n    key.algorithm.modulusLength = asnKey.modulus.byteLength << 3;\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return key;\n  }\n  static importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n    const keyInfo = new index$1.PublicKeyInfo();\n    keyInfo.publicKeyAlgorithm.algorithm = "1.2.840.113549.1.1.1";\n    keyInfo.publicKeyAlgorithm.parameters = null;\n    keyInfo.publicKey = AsnSerializer.serialize(asnKey);\n    const key = new RsaPublicKey2();\n    key.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n    key.algorithm = Object.assign({}, algorithm);\n    key.algorithm.publicExponent = new Uint8Array(asnKey.publicExponent);\n    key.algorithm.modulusLength = asnKey.modulus.byteLength << 3;\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return key;\n  }\n  static getCryptoAlgorithm(alg) {\n    switch (alg.hash.name.toUpperCase()) {\n      case "SHA-1":\n        return "RSA-SHA1";\n      case "SHA-256":\n        return "RSA-SHA256";\n      case "SHA-384":\n        return "RSA-SHA384";\n      case "SHA-512":\n        return "RSA-SHA512";\n      case "SHA3-256":\n        return "RSA-SHA3-256";\n      case "SHA3-384":\n        return "RSA-SHA3-384";\n      case "SHA3-512":\n        return "RSA-SHA3-512";\n      default:\n        throw new OperationError("algorithm.hash: Is not recognized");\n    }\n  }\n  static signRsa(algorithm, key, data) {\n    const cryptoAlg = this.getCryptoAlgorithm(key.algorithm);\n    const signer = import_crypto.default.createSign(cryptoAlg);\n    signer.update(Buffer.from(data));\n    if (!key.pem) {\n      key.pem = `-----BEGIN PRIVATE KEY-----\n${key.data.toString("base64")}\n-----END PRIVATE KEY-----`;\n    }\n    const options = {\n      key: key.pem\n    };\n    if (algorithm.name.toUpperCase() === "RSA-PSS") {\n      options.padding = import_crypto.default.constants.RSA_PKCS1_PSS_PADDING;\n      options.saltLength = algorithm.saltLength;\n    }\n    const signature = signer.sign(options);\n    return new Uint8Array(signature).buffer;\n  }\n  static verifySSA(algorithm, key, data, signature) {\n    const cryptoAlg = this.getCryptoAlgorithm(key.algorithm);\n    const signer = import_crypto.default.createVerify(cryptoAlg);\n    signer.update(Buffer.from(data));\n    if (!key.pem) {\n      key.pem = `-----BEGIN PUBLIC KEY-----\n${key.data.toString("base64")}\n-----END PUBLIC KEY-----`;\n    }\n    const options = {\n      key: key.pem\n    };\n    if (algorithm.name.toUpperCase() === "RSA-PSS") {\n      options.padding = import_crypto.default.constants.RSA_PKCS1_PSS_PADDING;\n      options.saltLength = algorithm.saltLength;\n    }\n    const ok = signer.verify(options, signature);\n    return ok;\n  }\n  static encryptOAEP(algorithm, key, data) {\n    const options = {\n      key: `-----BEGIN PUBLIC KEY-----\n${key.data.toString("base64")}\n-----END PUBLIC KEY-----`,\n      padding: import_crypto.default.constants.RSA_PKCS1_OAEP_PADDING\n    };\n    if (algorithm.label)\n      ;\n    return new Uint8Array(import_crypto.default.publicEncrypt(options, data)).buffer;\n  }\n  static decryptOAEP(algorithm, key, data) {\n    const options = {\n      key: `-----BEGIN PRIVATE KEY-----\n${key.data.toString("base64")}\n-----END PRIVATE KEY-----`,\n      padding: import_crypto.default.constants.RSA_PKCS1_OAEP_PADDING\n    };\n    if (algorithm.label)\n      ;\n    return new Uint8Array(import_crypto.default.privateDecrypt(options, data)).buffer;\n  }\n};\n__name(RsaCrypto, "RsaCrypto");\nRsaCrypto.publicKeyUsages = ["verify", "encrypt", "wrapKey"];\nRsaCrypto.privateKeyUsages = ["sign", "decrypt", "unwrapKey"];\nvar RsaSsaProvider2 = class extends RsaSsaProvider {\n  constructor() {\n    super(...arguments);\n    this.hashAlgorithms = [\n      "SHA-1",\n      "SHA-256",\n      "SHA-384",\n      "SHA-512",\n      "shake128",\n      "shake256",\n      "SHA3-256",\n      "SHA3-384",\n      "SHA3-512"\n    ];\n  }\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const keys = await RsaCrypto.generateKey({\n      ...algorithm,\n      name: this.name\n    }, extractable, keyUsages);\n    return {\n      privateKey: setCryptoKey(keys.privateKey),\n      publicKey: setCryptoKey(keys.publicKey)\n    };\n  }\n  async onSign(algorithm, key, data) {\n    return RsaCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onVerify(algorithm, key, signature, data) {\n    return RsaCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return RsaCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    const internalKey = getCryptoKey(key);\n    if (!(internalKey instanceof RsaPrivateKey2 || internalKey instanceof RsaPublicKey2)) {\n      throw new TypeError("key: Is not RSA CryptoKey");\n    }\n  }\n};\n__name(RsaSsaProvider2, "RsaSsaProvider");\nvar RsaPssProvider2 = class extends RsaPssProvider {\n  constructor() {\n    super(...arguments);\n    this.hashAlgorithms = [\n      "SHA-1",\n      "SHA-256",\n      "SHA-384",\n      "SHA-512",\n      "shake128",\n      "shake256",\n      "SHA3-256",\n      "SHA3-384",\n      "SHA3-512"\n    ];\n  }\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const keys = await RsaCrypto.generateKey({\n      ...algorithm,\n      name: this.name\n    }, extractable, keyUsages);\n    return {\n      privateKey: setCryptoKey(keys.privateKey),\n      publicKey: setCryptoKey(keys.publicKey)\n    };\n  }\n  async onSign(algorithm, key, data) {\n    return RsaCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onVerify(algorithm, key, signature, data) {\n    return RsaCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return RsaCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    const internalKey = getCryptoKey(key);\n    if (!(internalKey instanceof RsaPrivateKey2 || internalKey instanceof RsaPublicKey2)) {\n      throw new TypeError("key: Is not RSA CryptoKey");\n    }\n  }\n};\n__name(RsaPssProvider2, "RsaPssProvider");\nvar ShaCrypto = class {\n  static size(algorithm) {\n    switch (algorithm.name.toUpperCase()) {\n      case "SHA-1":\n        return 160;\n      case "SHA-256":\n      case "SHA3-256":\n        return 256;\n      case "SHA-384":\n      case "SHA3-384":\n        return 384;\n      case "SHA-512":\n      case "SHA3-512":\n        return 512;\n      default:\n        throw new Error("Unrecognized name");\n    }\n  }\n  static getAlgorithmName(algorithm) {\n    switch (algorithm.name.toUpperCase()) {\n      case "SHA-1":\n        return "sha1";\n      case "SHA-256":\n        return "sha256";\n      case "SHA-384":\n        return "sha384";\n      case "SHA-512":\n        return "sha512";\n      case "SHA3-256":\n        return "sha3-256";\n      case "SHA3-384":\n        return "sha3-384";\n      case "SHA3-512":\n        return "sha3-512";\n      default:\n        throw new Error("Unrecognized name");\n    }\n  }\n  static digest(algorithm, data) {\n    const hashAlg = this.getAlgorithmName(algorithm);\n    const hash = import_crypto.default.createHash(hashAlg).update(Buffer.from(data)).digest();\n    return new Uint8Array(hash).buffer;\n  }\n};\n__name(ShaCrypto, "ShaCrypto");\nvar RsaOaepProvider2 = class extends RsaOaepProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const keys = await RsaCrypto.generateKey({\n      ...algorithm,\n      name: this.name\n    }, extractable, keyUsages);\n    return {\n      privateKey: setCryptoKey(keys.privateKey),\n      publicKey: setCryptoKey(keys.publicKey)\n    };\n  }\n  async onEncrypt(algorithm, key, data) {\n    const internalKey = getCryptoKey(key);\n    const dataView = new Uint8Array(data);\n    const keySize = Math.ceil(internalKey.algorithm.modulusLength >> 3);\n    const hashSize = ShaCrypto.size(internalKey.algorithm.hash) >> 3;\n    const dataLength = dataView.byteLength;\n    const psLength = keySize - dataLength - 2 * hashSize - 2;\n    if (dataLength > keySize - 2 * hashSize - 2) {\n      throw new Error("Data too large");\n    }\n    const message = new Uint8Array(keySize);\n    const seed = message.subarray(1, hashSize + 1);\n    const dataBlock = message.subarray(hashSize + 1);\n    dataBlock.set(dataView, hashSize + psLength + 1);\n    const labelHash = import_crypto.default.createHash(internalKey.algorithm.hash.name.replace("-", "")).update(BufferSourceConverter.toUint8Array(algorithm.label || new Uint8Array(0))).digest();\n    dataBlock.set(labelHash, 0);\n    dataBlock[hashSize + psLength] = 1;\n    import_crypto.default.randomFillSync(seed);\n    const dataBlockMask = this.mgf1(internalKey.algorithm.hash, seed, dataBlock.length);\n    for (let i = 0; i < dataBlock.length; i++) {\n      dataBlock[i] ^= dataBlockMask[i];\n    }\n    const seedMask = this.mgf1(internalKey.algorithm.hash, dataBlock, seed.length);\n    for (let i = 0; i < seed.length; i++) {\n      seed[i] ^= seedMask[i];\n    }\n    if (!internalKey.pem) {\n      internalKey.pem = `-----BEGIN PUBLIC KEY-----\n${internalKey.data.toString("base64")}\n-----END PUBLIC KEY-----`;\n    }\n    const pkcs0 = import_crypto.default.publicEncrypt({\n      key: internalKey.pem,\n      padding: import_crypto.default.constants.RSA_NO_PADDING\n    }, Buffer.from(message));\n    return new Uint8Array(pkcs0).buffer;\n  }\n  async onDecrypt(algorithm, key, data) {\n    const internalKey = getCryptoKey(key);\n    const keySize = Math.ceil(internalKey.algorithm.modulusLength >> 3);\n    const hashSize = ShaCrypto.size(internalKey.algorithm.hash) >> 3;\n    const dataLength = data.byteLength;\n    if (dataLength !== keySize) {\n      throw new Error("Bad data");\n    }\n    if (!internalKey.pem) {\n      internalKey.pem = `-----BEGIN PRIVATE KEY-----\n${internalKey.data.toString("base64")}\n-----END PRIVATE KEY-----`;\n    }\n    let pkcs0 = import_crypto.default.privateDecrypt({\n      key: internalKey.pem,\n      padding: import_crypto.default.constants.RSA_NO_PADDING\n    }, Buffer.from(data));\n    const z = pkcs0[0];\n    const seed = pkcs0.subarray(1, hashSize + 1);\n    const dataBlock = pkcs0.subarray(hashSize + 1);\n    if (z !== 0) {\n      throw new Error("Decryption failed");\n    }\n    const seedMask = this.mgf1(internalKey.algorithm.hash, dataBlock, seed.length);\n    for (let i = 0; i < seed.length; i++) {\n      seed[i] ^= seedMask[i];\n    }\n    const dataBlockMask = this.mgf1(internalKey.algorithm.hash, seed, dataBlock.length);\n    for (let i = 0; i < dataBlock.length; i++) {\n      dataBlock[i] ^= dataBlockMask[i];\n    }\n    const labelHash = import_crypto.default.createHash(internalKey.algorithm.hash.name.replace("-", "")).update(BufferSourceConverter.toUint8Array(algorithm.label || new Uint8Array(0))).digest();\n    for (let i = 0; i < hashSize; i++) {\n      if (labelHash[i] !== dataBlock[i]) {\n        throw new Error("Decryption failed");\n      }\n    }\n    let psEnd = hashSize;\n    for (; psEnd < dataBlock.length; psEnd++) {\n      const psz = dataBlock[psEnd];\n      if (psz === 1) {\n        break;\n      }\n      if (psz !== 0) {\n        throw new Error("Decryption failed");\n      }\n    }\n    if (psEnd === dataBlock.length) {\n      throw new Error("Decryption failed");\n    }\n    pkcs0 = dataBlock.subarray(psEnd + 1);\n    return new Uint8Array(pkcs0).buffer;\n  }\n  async onExportKey(format, key) {\n    return RsaCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    const internalKey = getCryptoKey(key);\n    if (!(internalKey instanceof RsaPrivateKey2 || internalKey instanceof RsaPublicKey2)) {\n      throw new TypeError("key: Is not RSA CryptoKey");\n    }\n  }\n  mgf1(algorithm, seed, length = 0) {\n    const hashSize = ShaCrypto.size(algorithm) >> 3;\n    const mask = new Uint8Array(length);\n    const counter = new Uint8Array(4);\n    const chunks = Math.ceil(length / hashSize);\n    for (let i = 0; i < chunks; i++) {\n      counter[0] = i >>> 24;\n      counter[1] = i >>> 16 & 255;\n      counter[2] = i >>> 8 & 255;\n      counter[3] = i & 255;\n      const submask = mask.subarray(i * hashSize);\n      let chunk = import_crypto.default.createHash(algorithm.name.replace("-", "")).update(seed).update(counter).digest();\n      if (chunk.length > submask.length) {\n        chunk = chunk.subarray(0, submask.length);\n      }\n      submask.set(chunk);\n    }\n    return mask;\n  }\n};\n__name(RsaOaepProvider2, "RsaOaepProvider");\nvar RsaEsProvider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "RSAES-PKCS1-v1_5";\n    this.usages = {\n      publicKey: ["encrypt", "wrapKey"],\n      privateKey: ["decrypt", "unwrapKey"]\n    };\n  }\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const keys = await RsaCrypto.generateKey({\n      ...algorithm,\n      name: this.name\n    }, extractable, keyUsages);\n    return {\n      privateKey: setCryptoKey(keys.privateKey),\n      publicKey: setCryptoKey(keys.publicKey)\n    };\n  }\n  checkGenerateKeyParams(algorithm) {\n    this.checkRequiredProperty(algorithm, "publicExponent");\n    if (!(algorithm.publicExponent && algorithm.publicExponent instanceof Uint8Array)) {\n      throw new TypeError("publicExponent: Missing or not a Uint8Array");\n    }\n    const publicExponent = Convert.ToBase64(algorithm.publicExponent);\n    if (!(publicExponent === "Aw==" || publicExponent === "AQAB")) {\n      throw new TypeError("publicExponent: Must be [3] or [1,0,1]");\n    }\n    this.checkRequiredProperty(algorithm, "modulusLength");\n    switch (algorithm.modulusLength) {\n      case 1024:\n      case 2048:\n      case 4096:\n        break;\n      default:\n        throw new TypeError("modulusLength: Must be 1024, 2048, or 4096");\n    }\n  }\n  async onEncrypt(algorithm, key, data) {\n    const options = this.toCryptoOptions(key);\n    const enc = crypto.publicEncrypt(options, new Uint8Array(data));\n    return new Uint8Array(enc).buffer;\n  }\n  async onDecrypt(algorithm, key, data) {\n    const options = this.toCryptoOptions(key);\n    const dec = crypto.privateDecrypt(options, new Uint8Array(data));\n    return new Uint8Array(dec).buffer;\n  }\n  async onExportKey(format, key) {\n    return RsaCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    const internalKey = getCryptoKey(key);\n    if (!(internalKey instanceof RsaPrivateKey2 || internalKey instanceof RsaPublicKey2)) {\n      throw new TypeError("key: Is not RSA CryptoKey");\n    }\n  }\n  toCryptoOptions(key) {\n    const type = key.type.toUpperCase();\n    return {\n      key: `-----BEGIN ${type} KEY-----\n${getCryptoKey(key).data.toString("base64")}\n-----END ${type} KEY-----`,\n      padding: crypto.constants.RSA_PKCS1_PADDING\n    };\n  }\n};\n__name(RsaEsProvider, "RsaEsProvider");\nvar namedOIDs = {\n  "1.2.840.10045.3.1.7": "P-256",\n  "P-256": "1.2.840.10045.3.1.7",\n  "1.3.132.0.34": "P-384",\n  "P-384": "1.3.132.0.34",\n  "1.3.132.0.35": "P-521",\n  "P-521": "1.3.132.0.35",\n  "1.3.132.0.10": "K-256",\n  "K-256": "1.3.132.0.10",\n  "brainpoolP160r1": "1.3.36.3.3.2.8.1.1.1",\n  "1.3.36.3.3.2.8.1.1.1": "brainpoolP160r1",\n  "brainpoolP160t1": "1.3.36.3.3.2.8.1.1.2",\n  "1.3.36.3.3.2.8.1.1.2": "brainpoolP160t1",\n  "brainpoolP192r1": "1.3.36.3.3.2.8.1.1.3",\n  "1.3.36.3.3.2.8.1.1.3": "brainpoolP192r1",\n  "brainpoolP192t1": "1.3.36.3.3.2.8.1.1.4",\n  "1.3.36.3.3.2.8.1.1.4": "brainpoolP192t1",\n  "brainpoolP224r1": "1.3.36.3.3.2.8.1.1.5",\n  "1.3.36.3.3.2.8.1.1.5": "brainpoolP224r1",\n  "brainpoolP224t1": "1.3.36.3.3.2.8.1.1.6",\n  "1.3.36.3.3.2.8.1.1.6": "brainpoolP224t1",\n  "brainpoolP256r1": "1.3.36.3.3.2.8.1.1.7",\n  "1.3.36.3.3.2.8.1.1.7": "brainpoolP256r1",\n  "brainpoolP256t1": "1.3.36.3.3.2.8.1.1.8",\n  "1.3.36.3.3.2.8.1.1.8": "brainpoolP256t1",\n  "brainpoolP320r1": "1.3.36.3.3.2.8.1.1.9",\n  "1.3.36.3.3.2.8.1.1.9": "brainpoolP320r1",\n  "brainpoolP320t1": "1.3.36.3.3.2.8.1.1.10",\n  "1.3.36.3.3.2.8.1.1.10": "brainpoolP320t1",\n  "brainpoolP384r1": "1.3.36.3.3.2.8.1.1.11",\n  "1.3.36.3.3.2.8.1.1.11": "brainpoolP384r1",\n  "brainpoolP384t1": "1.3.36.3.3.2.8.1.1.12",\n  "1.3.36.3.3.2.8.1.1.12": "brainpoolP384t1",\n  "brainpoolP512r1": "1.3.36.3.3.2.8.1.1.13",\n  "1.3.36.3.3.2.8.1.1.13": "brainpoolP512r1",\n  "brainpoolP512t1": "1.3.36.3.3.2.8.1.1.14",\n  "1.3.36.3.3.2.8.1.1.14": "brainpoolP512t1"\n};\nfunction getOidByNamedCurve$1(namedCurve) {\n  const oid = namedOIDs[namedCurve];\n  if (!oid) {\n    throw new OperationError(`Cannot convert WebCrypto named curve \'${namedCurve}\' to OID`);\n  }\n  return oid;\n}\n__name(getOidByNamedCurve$1, "getOidByNamedCurve$1");\nvar EcPrivateKey2 = class extends AsymmetricKey {\n  constructor() {\n    super(...arguments);\n    this.type = "private";\n  }\n  getKey() {\n    const keyInfo = AsnParser.parse(this.data, index$1.PrivateKeyInfo);\n    return AsnParser.parse(keyInfo.privateKey, index$1.EcPrivateKey);\n  }\n  toJSON() {\n    const key = this.getKey();\n    const json = {\n      kty: "EC",\n      crv: this.algorithm.namedCurve,\n      key_ops: this.usages,\n      ext: this.extractable\n    };\n    return Object.assign(json, JsonSerializer.toJSON(key));\n  }\n  fromJSON(json) {\n    if (!json.crv) {\n      throw new OperationError(`Cannot get named curve from JWK. Property \'crv\' is required`);\n    }\n    const keyInfo = new index$1.PrivateKeyInfo();\n    keyInfo.privateKeyAlgorithm.algorithm = "1.2.840.10045.2.1";\n    keyInfo.privateKeyAlgorithm.parameters = AsnSerializer.serialize(new index$1.ObjectIdentifier(getOidByNamedCurve$1(json.crv)));\n    const key = JsonParser.fromJSON(json, { targetSchema: index$1.EcPrivateKey });\n    keyInfo.privateKey = AsnSerializer.serialize(key);\n    this.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n    return this;\n  }\n};\n__name(EcPrivateKey2, "EcPrivateKey");\nvar EcPublicKey3 = class extends AsymmetricKey {\n  constructor() {\n    super(...arguments);\n    this.type = "public";\n  }\n  getKey() {\n    const keyInfo = AsnParser.parse(this.data, index$1.PublicKeyInfo);\n    return new index$1.EcPublicKey(keyInfo.publicKey);\n  }\n  toJSON() {\n    const key = this.getKey();\n    const json = {\n      kty: "EC",\n      crv: this.algorithm.namedCurve,\n      key_ops: this.usages,\n      ext: this.extractable\n    };\n    return Object.assign(json, JsonSerializer.toJSON(key));\n  }\n  fromJSON(json) {\n    if (!json.crv) {\n      throw new OperationError(`Cannot get named curve from JWK. Property \'crv\' is required`);\n    }\n    const key = JsonParser.fromJSON(json, { targetSchema: index$1.EcPublicKey });\n    const keyInfo = new index$1.PublicKeyInfo();\n    keyInfo.publicKeyAlgorithm.algorithm = "1.2.840.10045.2.1";\n    keyInfo.publicKeyAlgorithm.parameters = AsnSerializer.serialize(new index$1.ObjectIdentifier(getOidByNamedCurve$1(json.crv)));\n    keyInfo.publicKey = AsnSerializer.toASN(key).valueHex;\n    this.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n    return this;\n  }\n};\n__name(EcPublicKey3, "EcPublicKey");\nvar Sha1Provider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "SHA-1";\n    this.usages = [];\n  }\n  async onDigest(algorithm, data) {\n    return ShaCrypto.digest(algorithm, data);\n  }\n};\n__name(Sha1Provider, "Sha1Provider");\nvar Sha256Provider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "SHA-256";\n    this.usages = [];\n  }\n  async onDigest(algorithm, data) {\n    return ShaCrypto.digest(algorithm, data);\n  }\n};\n__name(Sha256Provider, "Sha256Provider");\nvar Sha384Provider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "SHA-384";\n    this.usages = [];\n  }\n  async onDigest(algorithm, data) {\n    return ShaCrypto.digest(algorithm, data);\n  }\n};\n__name(Sha384Provider, "Sha384Provider");\nvar Sha512Provider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "SHA-512";\n    this.usages = [];\n  }\n  async onDigest(algorithm, data) {\n    return ShaCrypto.digest(algorithm, data);\n  }\n};\n__name(Sha512Provider, "Sha512Provider");\nvar Sha3256Provider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "SHA3-256";\n    this.usages = [];\n  }\n  async onDigest(algorithm, data) {\n    return ShaCrypto.digest(algorithm, data);\n  }\n};\n__name(Sha3256Provider, "Sha3256Provider");\nvar Sha3384Provider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "SHA3-384";\n    this.usages = [];\n  }\n  async onDigest(algorithm, data) {\n    return ShaCrypto.digest(algorithm, data);\n  }\n};\n__name(Sha3384Provider, "Sha3384Provider");\nvar Sha3512Provider = class extends ProviderCrypto {\n  constructor() {\n    super(...arguments);\n    this.name = "SHA3-512";\n    this.usages = [];\n  }\n  async onDigest(algorithm, data) {\n    return ShaCrypto.digest(algorithm, data);\n  }\n};\n__name(Sha3512Provider, "Sha3512Provider");\nvar EcCrypto = class {\n  static async generateKey(algorithm, extractable, keyUsages) {\n    const privateKey = new EcPrivateKey2();\n    privateKey.algorithm = algorithm;\n    privateKey.extractable = extractable;\n    privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n    const publicKey = new EcPublicKey3();\n    publicKey.algorithm = algorithm;\n    publicKey.extractable = true;\n    publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n    const keys = import_crypto.default.generateKeyPairSync("ec", {\n      namedCurve: this.getOpenSSLNamedCurve(algorithm.namedCurve),\n      publicKeyEncoding: {\n        format: "der",\n        type: "spki"\n      },\n      privateKeyEncoding: {\n        format: "der",\n        type: "pkcs8"\n      }\n    });\n    privateKey.data = keys.privateKey;\n    publicKey.data = keys.publicKey;\n    const res = {\n      privateKey,\n      publicKey\n    };\n    return res;\n  }\n  static async sign(algorithm, key, data) {\n    const cryptoAlg = ShaCrypto.getAlgorithmName(algorithm.hash);\n    const signer = import_crypto.default.createSign(cryptoAlg);\n    signer.update(Buffer.from(data));\n    if (!key.pem) {\n      key.pem = `-----BEGIN PRIVATE KEY-----\n${key.data.toString("base64")}\n-----END PRIVATE KEY-----`;\n    }\n    const options = {\n      key: key.pem\n    };\n    const signature = signer.sign(options);\n    const ecSignature = AsnParser.parse(signature, index$1.EcDsaSignature);\n    const signatureRaw = EcUtils.encodeSignature(ecSignature, EcCurves.get(key.algorithm.namedCurve).size);\n    return signatureRaw.buffer;\n  }\n  static async verify(algorithm, key, signature, data) {\n    const cryptoAlg = ShaCrypto.getAlgorithmName(algorithm.hash);\n    const signer = import_crypto.default.createVerify(cryptoAlg);\n    signer.update(Buffer.from(data));\n    if (!key.pem) {\n      key.pem = `-----BEGIN PUBLIC KEY-----\n${key.data.toString("base64")}\n-----END PUBLIC KEY-----`;\n    }\n    const options = {\n      key: key.pem\n    };\n    const ecSignature = new index$1.EcDsaSignature();\n    const namedCurve = EcCurves.get(key.algorithm.namedCurve);\n    const signaturePoint = EcUtils.decodeSignature(signature, namedCurve.size);\n    ecSignature.r = BufferSourceConverter.toArrayBuffer(signaturePoint.r);\n    ecSignature.s = BufferSourceConverter.toArrayBuffer(signaturePoint.s);\n    const ecSignatureRaw = Buffer.from(AsnSerializer.serialize(ecSignature));\n    const ok = signer.verify(options, ecSignatureRaw);\n    return ok;\n  }\n  static async deriveBits(algorithm, baseKey, length) {\n    const cryptoAlg = this.getOpenSSLNamedCurve(baseKey.algorithm.namedCurve);\n    const ecdh = import_crypto.default.createECDH(cryptoAlg);\n    const asnPrivateKey = AsnParser.parse(baseKey.data, index$1.PrivateKeyInfo);\n    const asnEcPrivateKey = AsnParser.parse(asnPrivateKey.privateKey, index$1.EcPrivateKey);\n    ecdh.setPrivateKey(Buffer.from(asnEcPrivateKey.privateKey));\n    const asnPublicKey = AsnParser.parse(algorithm.public.data, index$1.PublicKeyInfo);\n    const bits = ecdh.computeSecret(Buffer.from(asnPublicKey.publicKey));\n    if (length === null) {\n      return bits;\n    }\n    return new Uint8Array(bits).buffer.slice(0, length >> 3);\n  }\n  static async exportKey(format, key) {\n    switch (format.toLowerCase()) {\n      case "jwk":\n        return JsonSerializer.toJSON(key);\n      case "pkcs8":\n      case "spki":\n        return new Uint8Array(key.data).buffer;\n      case "raw": {\n        const publicKeyInfo = AsnParser.parse(key.data, index$1.PublicKeyInfo);\n        return publicKeyInfo.publicKey;\n      }\n      default:\n        throw new OperationError("format: Must be \'jwk\', \'raw\', pkcs8\' or \'spki\'");\n    }\n  }\n  static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n    switch (format.toLowerCase()) {\n      case "jwk": {\n        const jwk = keyData;\n        if (jwk.d) {\n          const asnKey = JsonParser.fromJSON(keyData, { targetSchema: index$1.EcPrivateKey });\n          return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n        } else {\n          const asnKey = JsonParser.fromJSON(keyData, { targetSchema: index$1.EcPublicKey });\n          return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n        }\n      }\n      case "raw": {\n        const asnKey = new index$1.EcPublicKey(keyData);\n        return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n      }\n      case "spki": {\n        const keyInfo = AsnParser.parse(new Uint8Array(keyData), index$1.PublicKeyInfo);\n        const asnKey = new index$1.EcPublicKey(keyInfo.publicKey);\n        this.assertKeyParameters(keyInfo.publicKeyAlgorithm.parameters, algorithm.namedCurve);\n        return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n      }\n      case "pkcs8": {\n        const keyInfo = AsnParser.parse(new Uint8Array(keyData), index$1.PrivateKeyInfo);\n        const asnKey = AsnParser.parse(keyInfo.privateKey, index$1.EcPrivateKey);\n        this.assertKeyParameters(keyInfo.privateKeyAlgorithm.parameters, algorithm.namedCurve);\n        return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n      }\n      default:\n        throw new OperationError("format: Must be \'jwk\', \'raw\', \'pkcs8\' or \'spki\'");\n    }\n  }\n  static assertKeyParameters(parameters, namedCurve) {\n    if (!parameters) {\n      throw new CryptoError("Key info doesn\'t have required parameters");\n    }\n    let namedCurveIdentifier = "";\n    try {\n      namedCurveIdentifier = AsnParser.parse(parameters, index$1.ObjectIdentifier).value;\n    } catch (e) {\n      throw new CryptoError("Cannot read key info parameters");\n    }\n    if (getOidByNamedCurve$1(namedCurve) !== namedCurveIdentifier) {\n      throw new CryptoError("Key info parameter doesn\'t match to named curve");\n    }\n  }\n  static async importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n    const keyInfo = new index$1.PrivateKeyInfo();\n    keyInfo.privateKeyAlgorithm.algorithm = "1.2.840.10045.2.1";\n    keyInfo.privateKeyAlgorithm.parameters = AsnSerializer.serialize(new index$1.ObjectIdentifier(getOidByNamedCurve$1(algorithm.namedCurve)));\n    keyInfo.privateKey = AsnSerializer.serialize(asnKey);\n    const key = new EcPrivateKey2();\n    key.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n    key.algorithm = Object.assign({}, algorithm);\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return key;\n  }\n  static async importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n    const keyInfo = new index$1.PublicKeyInfo();\n    keyInfo.publicKeyAlgorithm.algorithm = "1.2.840.10045.2.1";\n    const namedCurve = getOidByNamedCurve$1(algorithm.namedCurve);\n    keyInfo.publicKeyAlgorithm.parameters = AsnSerializer.serialize(new index$1.ObjectIdentifier(namedCurve));\n    keyInfo.publicKey = asnKey.value;\n    const key = new EcPublicKey3();\n    key.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n    key.algorithm = Object.assign({}, algorithm);\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return key;\n  }\n  static getOpenSSLNamedCurve(curve) {\n    switch (curve.toUpperCase()) {\n      case "P-256":\n        return "prime256v1";\n      case "K-256":\n        return "secp256k1";\n      case "P-384":\n        return "secp384r1";\n      case "P-521":\n        return "secp521r1";\n      default:\n        return curve;\n    }\n  }\n};\n__name(EcCrypto, "EcCrypto");\nEcCrypto.publicKeyUsages = ["verify"];\nEcCrypto.privateKeyUsages = ["sign", "deriveKey", "deriveBits"];\nvar EcdsaProvider2 = class extends EcdsaProvider {\n  constructor() {\n    super(...arguments);\n    this.namedCurves = EcCurves.names;\n    this.hashAlgorithms = [\n      "SHA-1",\n      "SHA-256",\n      "SHA-384",\n      "SHA-512",\n      "shake128",\n      "shake256",\n      "SHA3-256",\n      "SHA3-384",\n      "SHA3-512"\n    ];\n  }\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const keys = await EcCrypto.generateKey({\n      ...algorithm,\n      name: this.name\n    }, extractable, keyUsages);\n    return {\n      privateKey: setCryptoKey(keys.privateKey),\n      publicKey: setCryptoKey(keys.publicKey)\n    };\n  }\n  async onSign(algorithm, key, data) {\n    return EcCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onVerify(algorithm, key, signature, data) {\n    return EcCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return EcCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await EcCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    const internalKey = getCryptoKey(key);\n    if (!(internalKey instanceof EcPrivateKey2 || internalKey instanceof EcPublicKey3)) {\n      throw new TypeError("key: Is not EC CryptoKey");\n    }\n  }\n};\n__name(EcdsaProvider2, "EcdsaProvider");\nvar EcdhProvider2 = class extends EcdhProvider {\n  constructor() {\n    super(...arguments);\n    this.namedCurves = EcCurves.names;\n  }\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const keys = await EcCrypto.generateKey({\n      ...algorithm,\n      name: this.name\n    }, extractable, keyUsages);\n    return {\n      privateKey: setCryptoKey(keys.privateKey),\n      publicKey: setCryptoKey(keys.publicKey)\n    };\n  }\n  async onExportKey(format, key) {\n    return EcCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await EcCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    const internalKey = getCryptoKey(key);\n    if (!(internalKey instanceof EcPrivateKey2 || internalKey instanceof EcPublicKey3)) {\n      throw new TypeError("key: Is not EC CryptoKey");\n    }\n  }\n  async onDeriveBits(algorithm, baseKey, length) {\n    const bits = await EcCrypto.deriveBits({ ...algorithm, public: getCryptoKey(algorithm.public) }, getCryptoKey(baseKey), length);\n    return bits;\n  }\n};\n__name(EcdhProvider2, "EcdhProvider");\nvar edOIDs = {\n  [index$1.idEd448]: "Ed448",\n  "ed448": index$1.idEd448,\n  [index$1.idX448]: "X448",\n  "x448": index$1.idX448,\n  [index$1.idEd25519]: "Ed25519",\n  "ed25519": index$1.idEd25519,\n  [index$1.idX25519]: "X25519",\n  "x25519": index$1.idX25519\n};\nfunction getOidByNamedCurve(namedCurve) {\n  const oid = edOIDs[namedCurve.toLowerCase()];\n  if (!oid) {\n    throw new OperationError(`Cannot convert WebCrypto named curve \'${namedCurve}\' to OID`);\n  }\n  return oid;\n}\n__name(getOidByNamedCurve, "getOidByNamedCurve");\nvar EdPrivateKey3 = class extends AsymmetricKey {\n  constructor() {\n    super(...arguments);\n    this.type = "private";\n  }\n  getKey() {\n    const keyInfo = AsnParser.parse(this.data, index$1.PrivateKeyInfo);\n    return AsnParser.parse(keyInfo.privateKey, index$1.CurvePrivateKey);\n  }\n  toJSON() {\n    const key = this.getKey();\n    const json = {\n      kty: "OKP",\n      crv: this.algorithm.namedCurve,\n      key_ops: this.usages,\n      ext: this.extractable\n    };\n    return Object.assign(json, JsonSerializer.toJSON(key));\n  }\n  fromJSON(json) {\n    if (!json.crv) {\n      throw new OperationError(`Cannot get named curve from JWK. Property \'crv\' is required`);\n    }\n    const keyInfo = new index$1.PrivateKeyInfo();\n    keyInfo.privateKeyAlgorithm.algorithm = getOidByNamedCurve(json.crv);\n    const key = JsonParser.fromJSON(json, { targetSchema: index$1.CurvePrivateKey });\n    keyInfo.privateKey = AsnSerializer.serialize(key);\n    this.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n    return this;\n  }\n};\n__name(EdPrivateKey3, "EdPrivateKey");\nvar EdPublicKey3 = class extends AsymmetricKey {\n  constructor() {\n    super(...arguments);\n    this.type = "public";\n  }\n  getKey() {\n    const keyInfo = AsnParser.parse(this.data, index$1.PublicKeyInfo);\n    return keyInfo.publicKey;\n  }\n  toJSON() {\n    const key = this.getKey();\n    const json = {\n      kty: "OKP",\n      crv: this.algorithm.namedCurve,\n      key_ops: this.usages,\n      ext: this.extractable\n    };\n    return Object.assign(json, {\n      x: Convert.ToBase64Url(key)\n    });\n  }\n  fromJSON(json) {\n    if (!json.crv) {\n      throw new OperationError(`Cannot get named curve from JWK. Property \'crv\' is required`);\n    }\n    if (!json.x) {\n      throw new OperationError(`Cannot get property from JWK. Property \'x\' is required`);\n    }\n    const keyInfo = new index$1.PublicKeyInfo();\n    keyInfo.publicKeyAlgorithm.algorithm = getOidByNamedCurve(json.crv);\n    keyInfo.publicKey = Convert.FromBase64Url(json.x);\n    this.data = Buffer.from(AsnSerializer.serialize(keyInfo));\n    return this;\n  }\n};\n__name(EdPublicKey3, "EdPublicKey");\nvar EdCrypto = class {\n  static async generateKey(algorithm, extractable, keyUsages) {\n    const privateKey = new EdPrivateKey3();\n    privateKey.algorithm = algorithm;\n    privateKey.extractable = extractable;\n    privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n    const publicKey = new EdPublicKey3();\n    publicKey.algorithm = algorithm;\n    publicKey.extractable = true;\n    publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n    const type = algorithm.namedCurve.toLowerCase();\n    const keys = import_crypto.default.generateKeyPairSync(type, {\n      publicKeyEncoding: {\n        format: "der",\n        type: "spki"\n      },\n      privateKeyEncoding: {\n        format: "der",\n        type: "pkcs8"\n      }\n    });\n    privateKey.data = keys.privateKey;\n    publicKey.data = keys.publicKey;\n    const res = {\n      privateKey,\n      publicKey\n    };\n    return res;\n  }\n  static async sign(algorithm, key, data) {\n    if (!key.pem) {\n      key.pem = `-----BEGIN PRIVATE KEY-----\n${key.data.toString("base64")}\n-----END PRIVATE KEY-----`;\n    }\n    const options = {\n      key: key.pem\n    };\n    const signature = import_crypto.default.sign(null, Buffer.from(data), options);\n    return BufferSourceConverter.toArrayBuffer(signature);\n  }\n  static async verify(algorithm, key, signature, data) {\n    if (!key.pem) {\n      key.pem = `-----BEGIN PUBLIC KEY-----\n${key.data.toString("base64")}\n-----END PUBLIC KEY-----`;\n    }\n    const options = {\n      key: key.pem\n    };\n    const ok = import_crypto.default.verify(null, Buffer.from(data), options, Buffer.from(signature));\n    return ok;\n  }\n  static async deriveBits(algorithm, baseKey, length) {\n    const publicKey = import_crypto.default.createPublicKey({\n      key: algorithm.public.data,\n      format: "der",\n      type: "spki"\n    });\n    const privateKey = import_crypto.default.createPrivateKey({\n      key: baseKey.data,\n      format: "der",\n      type: "pkcs8"\n    });\n    const bits = import_crypto.default.diffieHellman({\n      publicKey,\n      privateKey\n    });\n    return new Uint8Array(bits).buffer.slice(0, length >> 3);\n  }\n  static async exportKey(format, key) {\n    switch (format.toLowerCase()) {\n      case "jwk":\n        return JsonSerializer.toJSON(key);\n      case "pkcs8":\n      case "spki":\n        return new Uint8Array(key.data).buffer;\n      case "raw": {\n        const publicKeyInfo = AsnParser.parse(key.data, index$1.PublicKeyInfo);\n        return publicKeyInfo.publicKey;\n      }\n      default:\n        throw new OperationError("format: Must be \'jwk\', \'raw\', pkcs8\' or \'spki\'");\n    }\n  }\n  static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n    switch (format.toLowerCase()) {\n      case "jwk": {\n        const jwk = keyData;\n        if (jwk.d) {\n          const asnKey = JsonParser.fromJSON(keyData, { targetSchema: index$1.CurvePrivateKey });\n          return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n        } else {\n          if (!jwk.x) {\n            throw new TypeError("keyData: Cannot get required \'x\' filed");\n          }\n          return this.importPublicKey(Convert.FromBase64Url(jwk.x), algorithm, extractable, keyUsages);\n        }\n      }\n      case "raw": {\n        return this.importPublicKey(keyData, algorithm, extractable, keyUsages);\n      }\n      case "spki": {\n        const keyInfo = AsnParser.parse(new Uint8Array(keyData), index$1.PublicKeyInfo);\n        return this.importPublicKey(keyInfo.publicKey, algorithm, extractable, keyUsages);\n      }\n      case "pkcs8": {\n        const keyInfo = AsnParser.parse(new Uint8Array(keyData), index$1.PrivateKeyInfo);\n        const asnKey = AsnParser.parse(keyInfo.privateKey, index$1.CurvePrivateKey);\n        return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n      }\n      default:\n        throw new OperationError("format: Must be \'jwk\', \'raw\', \'pkcs8\' or \'spki\'");\n    }\n  }\n  static importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n    const key = new EdPrivateKey3();\n    key.fromJSON({\n      crv: algorithm.namedCurve,\n      d: Convert.ToBase64Url(asnKey.d)\n    });\n    key.algorithm = Object.assign({}, algorithm);\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return key;\n  }\n  static async importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n    const key = new EdPublicKey3();\n    key.fromJSON({\n      crv: algorithm.namedCurve,\n      x: Convert.ToBase64Url(asnKey)\n    });\n    key.algorithm = Object.assign({}, algorithm);\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return key;\n  }\n};\n__name(EdCrypto, "EdCrypto");\nEdCrypto.publicKeyUsages = ["verify"];\nEdCrypto.privateKeyUsages = ["sign", "deriveKey", "deriveBits"];\nvar EdDsaProvider2 = class extends EdDsaProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const keys = await EdCrypto.generateKey({\n      name: this.name,\n      namedCurve: algorithm.namedCurve.replace(/^ed/i, "Ed")\n    }, extractable, keyUsages);\n    return {\n      privateKey: setCryptoKey(keys.privateKey),\n      publicKey: setCryptoKey(keys.publicKey)\n    };\n  }\n  async onSign(algorithm, key, data) {\n    return EdCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n  }\n  async onVerify(algorithm, key, signature, data) {\n    return EdCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n  }\n  async onExportKey(format, key) {\n    return EdCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await EdCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n};\n__name(EdDsaProvider2, "EdDsaProvider");\nvar EcdhEsProvider2 = class extends EcdhEsProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const keys = await EdCrypto.generateKey({\n      name: this.name,\n      namedCurve: algorithm.namedCurve.toUpperCase()\n    }, extractable, keyUsages);\n    return {\n      privateKey: setCryptoKey(keys.privateKey),\n      publicKey: setCryptoKey(keys.publicKey)\n    };\n  }\n  async onDeriveBits(algorithm, baseKey, length) {\n    const bits = await EdCrypto.deriveBits({ ...algorithm, public: getCryptoKey(algorithm.public) }, getCryptoKey(baseKey), length);\n    return bits;\n  }\n  async onExportKey(format, key) {\n    return EdCrypto.exportKey(format, getCryptoKey(key));\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    const key = await EdCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n    return setCryptoKey(key);\n  }\n};\n__name(EcdhEsProvider2, "EcdhEsProvider");\nvar PbkdfCryptoKey = class extends CryptoKey2 {\n};\n__name(PbkdfCryptoKey, "PbkdfCryptoKey");\nvar Pbkdf2Provider2 = class extends Pbkdf2Provider {\n  async onDeriveBits(algorithm, baseKey, length) {\n    return new Promise((resolve, reject) => {\n      const salt = BufferSourceConverter.toArrayBuffer(algorithm.salt);\n      const hash = algorithm.hash.name.replace("-", "");\n      import_crypto.default.pbkdf2(getCryptoKey(baseKey).data, Buffer.from(salt), algorithm.iterations, length >> 3, hash, (err, derivedBits) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new Uint8Array(derivedBits).buffer);\n        }\n      });\n    });\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    if (format === "raw") {\n      const key = new PbkdfCryptoKey();\n      key.data = Buffer.from(keyData);\n      key.algorithm = { name: this.name };\n      key.extractable = false;\n      key.usages = keyUsages;\n      return setCryptoKey(key);\n    }\n    throw new OperationError("format: Must be \'raw\'");\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof PbkdfCryptoKey)) {\n      throw new TypeError("key: Is not PBKDF CryptoKey");\n    }\n  }\n};\n__name(Pbkdf2Provider2, "Pbkdf2Provider");\nvar HmacCryptoKey = class extends CryptoKey2 {\n  get alg() {\n    const hash = this.algorithm.hash.name.toUpperCase();\n    return `HS${hash.replace("SHA-", "")}`;\n  }\n  set alg(value) {\n  }\n};\n__name(HmacCryptoKey, "HmacCryptoKey");\n__decorate([\n  JsonProp({ name: "k", converter: JsonBase64UrlConverter })\n], HmacCryptoKey.prototype, "data", void 0);\nvar HmacProvider2 = class extends HmacProvider {\n  async onGenerateKey(algorithm, extractable, keyUsages) {\n    const length = (algorithm.length || this.getDefaultLength(algorithm.hash.name)) >> 3 << 3;\n    const key = new HmacCryptoKey();\n    key.algorithm = {\n      ...algorithm,\n      length,\n      name: this.name\n    };\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    key.data = import_crypto.default.randomBytes(length >> 3);\n    return setCryptoKey(key);\n  }\n  async onSign(algorithm, key, data) {\n    const cryptoAlg = ShaCrypto.getAlgorithmName(key.algorithm.hash);\n    const hmac = import_crypto.default.createHmac(cryptoAlg, getCryptoKey(key).data).update(Buffer.from(data)).digest();\n    return new Uint8Array(hmac).buffer;\n  }\n  async onVerify(algorithm, key, signature, data) {\n    const cryptoAlg = ShaCrypto.getAlgorithmName(key.algorithm.hash);\n    const hmac = import_crypto.default.createHmac(cryptoAlg, getCryptoKey(key).data).update(Buffer.from(data)).digest();\n    return hmac.compare(Buffer.from(signature)) === 0;\n  }\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    let key;\n    switch (format.toLowerCase()) {\n      case "jwk":\n        key = JsonParser.fromJSON(keyData, { targetSchema: HmacCryptoKey });\n        break;\n      case "raw":\n        key = new HmacCryptoKey();\n        key.data = Buffer.from(keyData);\n        break;\n      default:\n        throw new OperationError("format: Must be \'jwk\' or \'raw\'");\n    }\n    key.algorithm = {\n      hash: { name: algorithm.hash.name },\n      name: this.name,\n      length: key.data.length << 3\n    };\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return setCryptoKey(key);\n  }\n  async onExportKey(format, key) {\n    switch (format.toLowerCase()) {\n      case "jwk":\n        return JsonSerializer.toJSON(getCryptoKey(key));\n      case "raw":\n        return new Uint8Array(getCryptoKey(key).data).buffer;\n      default:\n        throw new OperationError("format: Must be \'jwk\' or \'raw\'");\n    }\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof HmacCryptoKey)) {\n      throw new TypeError("key: Is not HMAC CryptoKey");\n    }\n  }\n};\n__name(HmacProvider2, "HmacProvider");\nvar HkdfCryptoKey = class extends CryptoKey2 {\n};\n__name(HkdfCryptoKey, "HkdfCryptoKey");\nvar HkdfProvider2 = class extends HkdfProvider {\n  async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n    if (format.toLowerCase() !== "raw") {\n      throw new OperationError("Operation not supported");\n    }\n    const key = new HkdfCryptoKey();\n    key.data = Buffer.from(keyData);\n    key.algorithm = { name: this.name };\n    key.extractable = extractable;\n    key.usages = keyUsages;\n    return setCryptoKey(key);\n  }\n  async onDeriveBits(params, baseKey, length) {\n    const hash = params.hash.name.replace("-", "");\n    const hashLength = import_crypto.default.createHash(hash).digest().length;\n    const byteLength = length / 8;\n    const info = BufferSourceConverter.toUint8Array(params.info);\n    const PRK = import_crypto.default.createHmac(hash, BufferSourceConverter.toUint8Array(params.salt)).update(BufferSourceConverter.toUint8Array(getCryptoKey(baseKey).data)).digest();\n    const blocks = [Buffer.alloc(0)];\n    const blockCount = Math.ceil(byteLength / hashLength) + 1;\n    for (let i = 1; i < blockCount; ++i) {\n      blocks.push(import_crypto.default.createHmac(hash, PRK).update(Buffer.concat([blocks[i - 1], info, Buffer.from([i])])).digest());\n    }\n    return Buffer.concat(blocks).slice(0, byteLength);\n  }\n  checkCryptoKey(key, keyUsage) {\n    super.checkCryptoKey(key, keyUsage);\n    if (!(getCryptoKey(key) instanceof HkdfCryptoKey)) {\n      throw new TypeError("key: Is not HKDF CryptoKey");\n    }\n  }\n};\n__name(HkdfProvider2, "HkdfProvider");\nvar ShakeCrypto = class {\n  static digest(algorithm, data) {\n    const hash = import_crypto.default.createHash(algorithm.name.toLowerCase(), { outputLength: algorithm.length }).update(Buffer.from(data)).digest();\n    return new Uint8Array(hash).buffer;\n  }\n};\n__name(ShakeCrypto, "ShakeCrypto");\nvar Shake128Provider2 = class extends Shake128Provider {\n  async onDigest(algorithm, data) {\n    return ShakeCrypto.digest(algorithm, data);\n  }\n};\n__name(Shake128Provider2, "Shake128Provider");\nvar Shake256Provider2 = class extends Shake256Provider {\n  async onDigest(algorithm, data) {\n    return ShakeCrypto.digest(algorithm, data);\n  }\n};\n__name(Shake256Provider2, "Shake256Provider");\nvar SubtleCrypto2 = class extends SubtleCrypto {\n  constructor() {\n    var _a2;\n    super();\n    this.providers.set(new AesCbcProvider2());\n    this.providers.set(new AesCtrProvider2());\n    this.providers.set(new AesGcmProvider2());\n    this.providers.set(new AesCmacProvider2());\n    this.providers.set(new AesKwProvider2());\n    this.providers.set(new AesEcbProvider2());\n    const ciphers = crypto.getCiphers();\n    if (ciphers.includes("des-cbc")) {\n      this.providers.set(new DesCbcProvider());\n    }\n    this.providers.set(new DesEde3CbcProvider());\n    this.providers.set(new RsaSsaProvider2());\n    this.providers.set(new RsaPssProvider2());\n    this.providers.set(new RsaOaepProvider2());\n    this.providers.set(new RsaEsProvider());\n    this.providers.set(new EcdsaProvider2());\n    this.providers.set(new EcdhProvider2());\n    this.providers.set(new Sha1Provider());\n    this.providers.set(new Sha256Provider());\n    this.providers.set(new Sha384Provider());\n    this.providers.set(new Sha512Provider());\n    this.providers.set(new Pbkdf2Provider2());\n    this.providers.set(new HmacProvider2());\n    this.providers.set(new HkdfProvider2());\n    const nodeMajorVersion = (_a2 = /^v(\\d+)/.exec(process.version)) === null || _a2 === void 0 ? void 0 : _a2[1];\n    if (nodeMajorVersion && parseInt(nodeMajorVersion, 10) >= 12) {\n      this.providers.set(new Shake128Provider2());\n      this.providers.set(new Shake256Provider2());\n    }\n    const hashes = crypto.getHashes();\n    if (hashes.includes("sha3-256")) {\n      this.providers.set(new Sha3256Provider());\n    }\n    if (hashes.includes("sha3-384")) {\n      this.providers.set(new Sha3384Provider());\n    }\n    if (hashes.includes("sha3-512")) {\n      this.providers.set(new Sha3512Provider());\n    }\n    if (nodeMajorVersion && parseInt(nodeMajorVersion, 10) >= 14) {\n      this.providers.set(new EdDsaProvider2());\n      this.providers.set(new EcdhEsProvider2());\n    }\n  }\n};\n__name(SubtleCrypto2, "SubtleCrypto");\nvar Crypto2 = class extends Crypto {\n  constructor() {\n    super(...arguments);\n    this.subtle = new SubtleCrypto2();\n  }\n  getRandomValues(array) {\n    if (!ArrayBuffer.isView(array)) {\n      throw new TypeError("Failed to execute \'getRandomValues\' on \'Crypto\': parameter 1 is not of type \'ArrayBufferView\'");\n    }\n    const buffer = Buffer.from(array.buffer, array.byteOffset, array.byteLength);\n    import_crypto.default.randomFillSync(buffer);\n    return array;\n  }\n};\n__name(Crypto2, "Crypto");\n\n// src/primitives/crypto.js\nfunction SubtleCrypto3() {\n  if (!(this instanceof SubtleCrypto3))\n    return new SubtleCrypto3();\n  throw TypeError("Illegal constructor");\n}\n__name(SubtleCrypto3, "SubtleCrypto");\nvar crypto2 = new Crypto2();\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Crypto,\n  CryptoKey,\n  SubtleCrypto,\n  crypto\n});\n'},799:e=>{e.exports='"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/encoding.js\nvar encoding_exports = {};\n__export(encoding_exports, {\n  TextDecoder: () => TD,\n  TextEncoder: () => TE,\n  atob: () => atob,\n  btoa: () => btoa\n});\nmodule.exports = __toCommonJS(encoding_exports);\nvar atob = /* @__PURE__ */ __name((enc) => Buffer.from(enc, "base64").toString("binary"), "atob");\nvar btoa = /* @__PURE__ */ __name((str) => Buffer.from(str, "binary").toString("base64"), "btoa");\nvar TE = TextEncoder;\nvar TD = TextDecoder;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  TextDecoder,\n  TextEncoder,\n  atob,\n  btoa\n});\n'},945:e=>{e.exports='"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/events.js\nvar events_exports = {};\n__export(events_exports, {\n  Event: () => Event,\n  EventTarget: () => EventTarget,\n  FetchEvent: () => FetchEvent,\n  PromiseRejectionEvent: () => PromiseRejectionEvent\n});\nmodule.exports = __toCommonJS(events_exports);\n\n// <define:process>\nvar define_process_default = { env: {}, versions: { node: "16.6.0" } };\n\n// ../../node_modules/.pnpm/event-target-shim@6.0.2/node_modules/event-target-shim/index.mjs\nfunction assertType(condition, message, ...args) {\n  if (!condition) {\n    throw new TypeError(format(message, args));\n  }\n}\n__name(assertType, "assertType");\nfunction format(message, args) {\n  let i = 0;\n  return message.replace(/%[os]/gu, () => anyToString(args[i++]));\n}\n__name(format, "format");\nfunction anyToString(x) {\n  if (typeof x !== "object" || x === null) {\n    return String(x);\n  }\n  return Object.prototype.toString.call(x);\n}\n__name(anyToString, "anyToString");\nvar currentErrorHandler;\nfunction reportError(maybeError) {\n  try {\n    const error = maybeError instanceof Error ? maybeError : new Error(anyToString(maybeError));\n    if (currentErrorHandler) {\n      currentErrorHandler(error);\n      return;\n    }\n    if (typeof dispatchEvent === "function" && typeof ErrorEvent === "function") {\n      dispatchEvent(new ErrorEvent("error", { error, message: error.message }));\n    } else if (typeof define_process_default !== "undefined" && typeof define_process_default.emit === "function") {\n      define_process_default.emit("uncaughtException", error);\n      return;\n    }\n    console.error(error);\n  } catch (_a) {\n  }\n}\n__name(reportError, "reportError");\nvar Global = typeof window !== "undefined" ? window : typeof self !== "undefined" ? self : typeof global !== "undefined" ? global : typeof globalThis !== "undefined" ? globalThis : void 0;\nvar currentWarnHandler;\nvar Warning = class {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n  /**\n   * Report this warning.\n   * @param args The arguments of the warning.\n   */\n  warn(...args) {\n    var _a;\n    try {\n      if (currentWarnHandler) {\n        currentWarnHandler({ ...this, args });\n        return;\n      }\n      const stack = ((_a = new Error().stack) !== null && _a !== void 0 ? _a : "").replace(/^(?:.+?\\n){2}/gu, "\\n");\n      console.warn(this.message, ...args, stack);\n    } catch (_b) {\n    }\n  }\n};\n__name(Warning, "Warning");\nvar InitEventWasCalledWhileDispatching = new Warning("W01", "Unable to initialize event under dispatching.");\nvar FalsyWasAssignedToCancelBubble = new Warning("W02", "Assigning any falsy value to \'cancelBubble\' property has no effect.");\nvar TruthyWasAssignedToReturnValue = new Warning("W03", "Assigning any truthy value to \'returnValue\' property has no effect.");\nvar NonCancelableEventWasCanceled = new Warning("W04", "Unable to preventDefault on non-cancelable events.");\nvar CanceledInPassiveListener = new Warning("W05", "Unable to preventDefault inside passive event listener invocation.");\nvar EventListenerWasDuplicated = new Warning("W06", "An event listener wasn\'t added because it has been added already: %o, %o");\nvar OptionWasIgnored = new Warning("W07", "The %o option value was abandoned because the event listener wasn\'t added as duplicated.");\nvar InvalidEventListener = new Warning("W08", "The \'callback\' argument must be a function or an object that has \'handleEvent\' method: %o");\nvar InvalidAttributeHandler = new Warning("W09", "Event attribute handler must be a function: %o");\nvar Event = class {\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-none\n   */\n  static get NONE() {\n    return NONE;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-capturing_phase\n   */\n  static get CAPTURING_PHASE() {\n    return CAPTURING_PHASE;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-at_target\n   */\n  static get AT_TARGET() {\n    return AT_TARGET;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-bubbling_phase\n   */\n  static get BUBBLING_PHASE() {\n    return BUBBLING_PHASE;\n  }\n  /**\n   * Initialize this event instance.\n   * @param type The type of this event.\n   * @param eventInitDict Options to initialize.\n   * @see https://dom.spec.whatwg.org/#dom-event-event\n   */\n  constructor(type, eventInitDict) {\n    Object.defineProperty(this, "isTrusted", {\n      value: false,\n      enumerable: true\n    });\n    const opts = eventInitDict !== null && eventInitDict !== void 0 ? eventInitDict : {};\n    internalDataMap.set(this, {\n      type: String(type),\n      bubbles: Boolean(opts.bubbles),\n      cancelable: Boolean(opts.cancelable),\n      composed: Boolean(opts.composed),\n      target: null,\n      currentTarget: null,\n      stopPropagationFlag: false,\n      stopImmediatePropagationFlag: false,\n      canceledFlag: false,\n      inPassiveListenerFlag: false,\n      dispatchFlag: false,\n      timeStamp: Date.now()\n    });\n  }\n  /**\n   * The type of this event.\n   * @see https://dom.spec.whatwg.org/#dom-event-type\n   */\n  get type() {\n    return $(this).type;\n  }\n  /**\n   * The event target of the current dispatching.\n   * @see https://dom.spec.whatwg.org/#dom-event-target\n   */\n  get target() {\n    return $(this).target;\n  }\n  /**\n   * The event target of the current dispatching.\n   * @deprecated Use the `target` property instead.\n   * @see https://dom.spec.whatwg.org/#dom-event-srcelement\n   */\n  get srcElement() {\n    return $(this).target;\n  }\n  /**\n   * The event target of the current dispatching.\n   * @see https://dom.spec.whatwg.org/#dom-event-currenttarget\n   */\n  get currentTarget() {\n    return $(this).currentTarget;\n  }\n  /**\n   * The event target of the current dispatching.\n   * This doesn\'t support node tree.\n   * @see https://dom.spec.whatwg.org/#dom-event-composedpath\n   */\n  composedPath() {\n    const currentTarget = $(this).currentTarget;\n    if (currentTarget) {\n      return [currentTarget];\n    }\n    return [];\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-none\n   */\n  get NONE() {\n    return NONE;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-capturing_phase\n   */\n  get CAPTURING_PHASE() {\n    return CAPTURING_PHASE;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-at_target\n   */\n  get AT_TARGET() {\n    return AT_TARGET;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-bubbling_phase\n   */\n  get BUBBLING_PHASE() {\n    return BUBBLING_PHASE;\n  }\n  /**\n   * The current event phase.\n   * @see https://dom.spec.whatwg.org/#dom-event-eventphase\n   */\n  get eventPhase() {\n    return $(this).dispatchFlag ? 2 : 0;\n  }\n  /**\n   * Stop event bubbling.\n   * Because this shim doesn\'t support node tree, this merely changes the `cancelBubble` property value.\n   * @see https://dom.spec.whatwg.org/#dom-event-stoppropagation\n   */\n  stopPropagation() {\n    $(this).stopPropagationFlag = true;\n  }\n  /**\n   * `true` if event bubbling was stopped.\n   * @deprecated\n   * @see https://dom.spec.whatwg.org/#dom-event-cancelbubble\n   */\n  get cancelBubble() {\n    return $(this).stopPropagationFlag;\n  }\n  /**\n   * Stop event bubbling if `true` is set.\n   * @deprecated Use the `stopPropagation()` method instead.\n   * @see https://dom.spec.whatwg.org/#dom-event-cancelbubble\n   */\n  set cancelBubble(value) {\n    if (value) {\n      $(this).stopPropagationFlag = true;\n    } else {\n      FalsyWasAssignedToCancelBubble.warn();\n    }\n  }\n  /**\n   * Stop event bubbling and subsequent event listener callings.\n   * @see https://dom.spec.whatwg.org/#dom-event-stopimmediatepropagation\n   */\n  stopImmediatePropagation() {\n    const data = $(this);\n    data.stopPropagationFlag = data.stopImmediatePropagationFlag = true;\n  }\n  /**\n   * `true` if this event will bubble.\n   * @see https://dom.spec.whatwg.org/#dom-event-bubbles\n   */\n  get bubbles() {\n    return $(this).bubbles;\n  }\n  /**\n   * `true` if this event can be canceled by the `preventDefault()` method.\n   * @see https://dom.spec.whatwg.org/#dom-event-cancelable\n   */\n  get cancelable() {\n    return $(this).cancelable;\n  }\n  /**\n   * `true` if the default behavior will act.\n   * @deprecated Use the `defaultPrevented` proeprty instead.\n   * @see https://dom.spec.whatwg.org/#dom-event-returnvalue\n   */\n  get returnValue() {\n    return !$(this).canceledFlag;\n  }\n  /**\n   * Cancel the default behavior if `false` is set.\n   * @deprecated Use the `preventDefault()` method instead.\n   * @see https://dom.spec.whatwg.org/#dom-event-returnvalue\n   */\n  set returnValue(value) {\n    if (!value) {\n      setCancelFlag($(this));\n    } else {\n      TruthyWasAssignedToReturnValue.warn();\n    }\n  }\n  /**\n   * Cancel the default behavior.\n   * @see https://dom.spec.whatwg.org/#dom-event-preventdefault\n   */\n  preventDefault() {\n    setCancelFlag($(this));\n  }\n  /**\n   * `true` if the default behavior was canceled.\n   * @see https://dom.spec.whatwg.org/#dom-event-defaultprevented\n   */\n  get defaultPrevented() {\n    return $(this).canceledFlag;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-composed\n   */\n  get composed() {\n    return $(this).composed;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-istrusted\n   */\n  //istanbul ignore next\n  get isTrusted() {\n    return false;\n  }\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-timestamp\n   */\n  get timeStamp() {\n    return $(this).timeStamp;\n  }\n  /**\n   * @deprecated Don\'t use this method. The constructor did initialization.\n   */\n  initEvent(type, bubbles = false, cancelable = false) {\n    const data = $(this);\n    if (data.dispatchFlag) {\n      InitEventWasCalledWhileDispatching.warn();\n      return;\n    }\n    internalDataMap.set(this, {\n      ...data,\n      type: String(type),\n      bubbles: Boolean(bubbles),\n      cancelable: Boolean(cancelable),\n      target: null,\n      currentTarget: null,\n      stopPropagationFlag: false,\n      stopImmediatePropagationFlag: false,\n      canceledFlag: false\n    });\n  }\n};\n__name(Event, "Event");\nvar NONE = 0;\nvar CAPTURING_PHASE = 1;\nvar AT_TARGET = 2;\nvar BUBBLING_PHASE = 3;\nvar internalDataMap = /* @__PURE__ */ new WeakMap();\nfunction $(event, name = "this") {\n  const retv = internalDataMap.get(event);\n  assertType(retv != null, "\'%s\' must be an object that Event constructor created, but got another one: %o", name, event);\n  return retv;\n}\n__name($, "$");\nfunction setCancelFlag(data) {\n  if (data.inPassiveListenerFlag) {\n    CanceledInPassiveListener.warn();\n    return;\n  }\n  if (!data.cancelable) {\n    NonCancelableEventWasCanceled.warn();\n    return;\n  }\n  data.canceledFlag = true;\n}\n__name(setCancelFlag, "setCancelFlag");\nObject.defineProperty(Event, "NONE", { enumerable: true });\nObject.defineProperty(Event, "CAPTURING_PHASE", { enumerable: true });\nObject.defineProperty(Event, "AT_TARGET", { enumerable: true });\nObject.defineProperty(Event, "BUBBLING_PHASE", { enumerable: true });\nvar keys = Object.getOwnPropertyNames(Event.prototype);\nfor (let i = 0; i < keys.length; ++i) {\n  if (keys[i] === "constructor") {\n    continue;\n  }\n  Object.defineProperty(Event.prototype, keys[i], { enumerable: true });\n}\nif (typeof Global !== "undefined" && typeof Global.Event !== "undefined") {\n  Object.setPrototypeOf(Event.prototype, Global.Event.prototype);\n}\nfunction createInvalidStateError(message) {\n  if (Global.DOMException) {\n    return new Global.DOMException(message, "InvalidStateError");\n  }\n  if (DOMException == null) {\n    DOMException = /* @__PURE__ */ __name(class DOMException2 extends Error {\n      constructor(msg) {\n        super(msg);\n        if (Error.captureStackTrace) {\n          Error.captureStackTrace(this, DOMException2);\n        }\n      }\n      // eslint-disable-next-line class-methods-use-this\n      get code() {\n        return 11;\n      }\n      // eslint-disable-next-line class-methods-use-this\n      get name() {\n        return "InvalidStateError";\n      }\n    }, "DOMException");\n    Object.defineProperties(DOMException.prototype, {\n      code: { enumerable: true },\n      name: { enumerable: true }\n    });\n    defineErrorCodeProperties(DOMException);\n    defineErrorCodeProperties(DOMException.prototype);\n  }\n  return new DOMException(message);\n}\n__name(createInvalidStateError, "createInvalidStateError");\nvar DOMException;\nvar ErrorCodeMap = {\n  INDEX_SIZE_ERR: 1,\n  DOMSTRING_SIZE_ERR: 2,\n  HIERARCHY_REQUEST_ERR: 3,\n  WRONG_DOCUMENT_ERR: 4,\n  INVALID_CHARACTER_ERR: 5,\n  NO_DATA_ALLOWED_ERR: 6,\n  NO_MODIFICATION_ALLOWED_ERR: 7,\n  NOT_FOUND_ERR: 8,\n  NOT_SUPPORTED_ERR: 9,\n  INUSE_ATTRIBUTE_ERR: 10,\n  INVALID_STATE_ERR: 11,\n  SYNTAX_ERR: 12,\n  INVALID_MODIFICATION_ERR: 13,\n  NAMESPACE_ERR: 14,\n  INVALID_ACCESS_ERR: 15,\n  VALIDATION_ERR: 16,\n  TYPE_MISMATCH_ERR: 17,\n  SECURITY_ERR: 18,\n  NETWORK_ERR: 19,\n  ABORT_ERR: 20,\n  URL_MISMATCH_ERR: 21,\n  QUOTA_EXCEEDED_ERR: 22,\n  TIMEOUT_ERR: 23,\n  INVALID_NODE_TYPE_ERR: 24,\n  DATA_CLONE_ERR: 25\n};\nfunction defineErrorCodeProperties(obj) {\n  const keys2 = Object.keys(ErrorCodeMap);\n  for (let i = 0; i < keys2.length; ++i) {\n    const key = keys2[i];\n    const value = ErrorCodeMap[key];\n    Object.defineProperty(obj, key, {\n      get() {\n        return value;\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n}\n__name(defineErrorCodeProperties, "defineErrorCodeProperties");\nvar EventWrapper = class extends Event {\n  /**\n   * Wrap a given event object to control states.\n   * @param event The event-like object to wrap.\n   */\n  static wrap(event) {\n    return new (getWrapperClassOf(event))(event);\n  }\n  constructor(event) {\n    super(event.type, {\n      bubbles: event.bubbles,\n      cancelable: event.cancelable,\n      composed: event.composed\n    });\n    if (event.cancelBubble) {\n      super.stopPropagation();\n    }\n    if (event.defaultPrevented) {\n      super.preventDefault();\n    }\n    internalDataMap$1.set(this, { original: event });\n    const keys2 = Object.keys(event);\n    for (let i = 0; i < keys2.length; ++i) {\n      const key = keys2[i];\n      if (!(key in this)) {\n        Object.defineProperty(this, key, defineRedirectDescriptor(event, key));\n      }\n    }\n  }\n  stopPropagation() {\n    super.stopPropagation();\n    const { original } = $$1(this);\n    if ("stopPropagation" in original) {\n      original.stopPropagation();\n    }\n  }\n  get cancelBubble() {\n    return super.cancelBubble;\n  }\n  set cancelBubble(value) {\n    super.cancelBubble = value;\n    const { original } = $$1(this);\n    if ("cancelBubble" in original) {\n      original.cancelBubble = value;\n    }\n  }\n  stopImmediatePropagation() {\n    super.stopImmediatePropagation();\n    const { original } = $$1(this);\n    if ("stopImmediatePropagation" in original) {\n      original.stopImmediatePropagation();\n    }\n  }\n  get returnValue() {\n    return super.returnValue;\n  }\n  set returnValue(value) {\n    super.returnValue = value;\n    const { original } = $$1(this);\n    if ("returnValue" in original) {\n      original.returnValue = value;\n    }\n  }\n  preventDefault() {\n    super.preventDefault();\n    const { original } = $$1(this);\n    if ("preventDefault" in original) {\n      original.preventDefault();\n    }\n  }\n  get timeStamp() {\n    const { original } = $$1(this);\n    if ("timeStamp" in original) {\n      return original.timeStamp;\n    }\n    return super.timeStamp;\n  }\n};\n__name(EventWrapper, "EventWrapper");\nvar internalDataMap$1 = /* @__PURE__ */ new WeakMap();\nfunction $$1(event) {\n  const retv = internalDataMap$1.get(event);\n  assertType(retv != null, "\'this\' is expected an Event object, but got", event);\n  return retv;\n}\n__name($$1, "$$1");\nvar wrapperClassCache = /* @__PURE__ */ new WeakMap();\nwrapperClassCache.set(Object.prototype, EventWrapper);\nif (typeof Global !== "undefined" && typeof Global.Event !== "undefined") {\n  wrapperClassCache.set(Global.Event.prototype, EventWrapper);\n}\nfunction getWrapperClassOf(originalEvent) {\n  const prototype = Object.getPrototypeOf(originalEvent);\n  if (prototype == null) {\n    return EventWrapper;\n  }\n  let wrapper = wrapperClassCache.get(prototype);\n  if (wrapper == null) {\n    wrapper = defineWrapper(getWrapperClassOf(prototype), prototype);\n    wrapperClassCache.set(prototype, wrapper);\n  }\n  return wrapper;\n}\n__name(getWrapperClassOf, "getWrapperClassOf");\nfunction defineWrapper(BaseEventWrapper, originalPrototype) {\n  class CustomEventWrapper extends BaseEventWrapper {\n  }\n  __name(CustomEventWrapper, "CustomEventWrapper");\n  const keys2 = Object.keys(originalPrototype);\n  for (let i = 0; i < keys2.length; ++i) {\n    Object.defineProperty(CustomEventWrapper.prototype, keys2[i], defineRedirectDescriptor(originalPrototype, keys2[i]));\n  }\n  return CustomEventWrapper;\n}\n__name(defineWrapper, "defineWrapper");\nfunction defineRedirectDescriptor(obj, key) {\n  const d = Object.getOwnPropertyDescriptor(obj, key);\n  return {\n    get() {\n      const original = $$1(this).original;\n      const value = original[key];\n      if (typeof value === "function") {\n        return value.bind(original);\n      }\n      return value;\n    },\n    set(value) {\n      const original = $$1(this).original;\n      original[key] = value;\n    },\n    configurable: d.configurable,\n    enumerable: d.enumerable\n  };\n}\n__name(defineRedirectDescriptor, "defineRedirectDescriptor");\nfunction createListener(callback, capture, passive, once, signal, signalListener) {\n  return {\n    callback,\n    flags: (capture ? 1 : 0) | (passive ? 2 : 0) | (once ? 4 : 0),\n    signal,\n    signalListener\n  };\n}\n__name(createListener, "createListener");\nfunction setRemoved(listener) {\n  listener.flags |= 8;\n}\n__name(setRemoved, "setRemoved");\nfunction isCapture(listener) {\n  return (listener.flags & 1) === 1;\n}\n__name(isCapture, "isCapture");\nfunction isPassive(listener) {\n  return (listener.flags & 2) === 2;\n}\n__name(isPassive, "isPassive");\nfunction isOnce(listener) {\n  return (listener.flags & 4) === 4;\n}\n__name(isOnce, "isOnce");\nfunction isRemoved(listener) {\n  return (listener.flags & 8) === 8;\n}\n__name(isRemoved, "isRemoved");\nfunction invokeCallback({ callback }, target, event) {\n  try {\n    if (typeof callback === "function") {\n      callback.call(target, event);\n    } else if (typeof callback.handleEvent === "function") {\n      callback.handleEvent(event);\n    }\n  } catch (thrownError) {\n    reportError(thrownError);\n  }\n}\n__name(invokeCallback, "invokeCallback");\nfunction findIndexOfListener({ listeners }, callback, capture) {\n  for (let i = 0; i < listeners.length; ++i) {\n    if (listeners[i].callback === callback && isCapture(listeners[i]) === capture) {\n      return i;\n    }\n  }\n  return -1;\n}\n__name(findIndexOfListener, "findIndexOfListener");\nfunction addListener(list, callback, capture, passive, once, signal) {\n  let signalListener;\n  if (signal) {\n    signalListener = removeListener.bind(null, list, callback, capture);\n    signal.addEventListener("abort", signalListener);\n  }\n  const listener = createListener(callback, capture, passive, once, signal, signalListener);\n  if (list.cow) {\n    list.cow = false;\n    list.listeners = [...list.listeners, listener];\n  } else {\n    list.listeners.push(listener);\n  }\n  return listener;\n}\n__name(addListener, "addListener");\nfunction removeListener(list, callback, capture) {\n  const index = findIndexOfListener(list, callback, capture);\n  if (index !== -1) {\n    return removeListenerAt(list, index);\n  }\n  return false;\n}\n__name(removeListener, "removeListener");\nfunction removeListenerAt(list, index, disableCow = false) {\n  const listener = list.listeners[index];\n  setRemoved(listener);\n  if (listener.signal) {\n    listener.signal.removeEventListener("abort", listener.signalListener);\n  }\n  if (list.cow && !disableCow) {\n    list.cow = false;\n    list.listeners = list.listeners.filter((_, i) => i !== index);\n    return false;\n  }\n  list.listeners.splice(index, 1);\n  return true;\n}\n__name(removeListenerAt, "removeListenerAt");\nfunction createListenerListMap() {\n  return /* @__PURE__ */ Object.create(null);\n}\n__name(createListenerListMap, "createListenerListMap");\nfunction ensureListenerList(listenerMap, type) {\n  var _a;\n  return (_a = listenerMap[type]) !== null && _a !== void 0 ? _a : listenerMap[type] = {\n    attrCallback: void 0,\n    attrListener: void 0,\n    cow: false,\n    listeners: []\n  };\n}\n__name(ensureListenerList, "ensureListenerList");\nvar EventTarget = class {\n  /**\n   * Initialize this instance.\n   */\n  constructor() {\n    internalDataMap$2.set(this, createListenerListMap());\n  }\n  // Implementation\n  addEventListener(type0, callback0, options0) {\n    const listenerMap = $$2(this);\n    const { callback, capture, once, passive, signal, type } = normalizeAddOptions(type0, callback0, options0);\n    if (callback == null || (signal === null || signal === void 0 ? void 0 : signal.aborted)) {\n      return;\n    }\n    const list = ensureListenerList(listenerMap, type);\n    const i = findIndexOfListener(list, callback, capture);\n    if (i !== -1) {\n      warnDuplicate(list.listeners[i], passive, once, signal);\n      return;\n    }\n    addListener(list, callback, capture, passive, once, signal);\n  }\n  // Implementation\n  removeEventListener(type0, callback0, options0) {\n    const listenerMap = $$2(this);\n    const { callback, capture, type } = normalizeOptions(type0, callback0, options0);\n    const list = listenerMap[type];\n    if (callback != null && list) {\n      removeListener(list, callback, capture);\n    }\n  }\n  // Implementation\n  dispatchEvent(e) {\n    const list = $$2(this)[String(e.type)];\n    if (list == null) {\n      return true;\n    }\n    const event = e instanceof Event ? e : EventWrapper.wrap(e);\n    const eventData = $(event, "event");\n    if (eventData.dispatchFlag) {\n      throw createInvalidStateError("This event has been in dispatching.");\n    }\n    eventData.dispatchFlag = true;\n    eventData.target = eventData.currentTarget = this;\n    if (!eventData.stopPropagationFlag) {\n      const { cow, listeners } = list;\n      list.cow = true;\n      for (let i = 0; i < listeners.length; ++i) {\n        const listener = listeners[i];\n        if (isRemoved(listener)) {\n          continue;\n        }\n        if (isOnce(listener) && removeListenerAt(list, i, !cow)) {\n          i -= 1;\n        }\n        eventData.inPassiveListenerFlag = isPassive(listener);\n        invokeCallback(listener, this, event);\n        eventData.inPassiveListenerFlag = false;\n        if (eventData.stopImmediatePropagationFlag) {\n          break;\n        }\n      }\n      if (!cow) {\n        list.cow = false;\n      }\n    }\n    eventData.target = null;\n    eventData.currentTarget = null;\n    eventData.stopImmediatePropagationFlag = false;\n    eventData.stopPropagationFlag = false;\n    eventData.dispatchFlag = false;\n    return !eventData.canceledFlag;\n  }\n};\n__name(EventTarget, "EventTarget");\nvar internalDataMap$2 = /* @__PURE__ */ new WeakMap();\nfunction $$2(target, name = "this") {\n  const retv = internalDataMap$2.get(target);\n  assertType(retv != null, "\'%s\' must be an object that EventTarget constructor created, but got another one: %o", name, target);\n  return retv;\n}\n__name($$2, "$$2");\nfunction normalizeAddOptions(type, callback, options) {\n  var _a;\n  assertCallback(callback);\n  if (typeof options === "object" && options !== null) {\n    return {\n      type: String(type),\n      callback: callback !== null && callback !== void 0 ? callback : void 0,\n      capture: Boolean(options.capture),\n      passive: Boolean(options.passive),\n      once: Boolean(options.once),\n      signal: (_a = options.signal) !== null && _a !== void 0 ? _a : void 0\n    };\n  }\n  return {\n    type: String(type),\n    callback: callback !== null && callback !== void 0 ? callback : void 0,\n    capture: Boolean(options),\n    passive: false,\n    once: false,\n    signal: void 0\n  };\n}\n__name(normalizeAddOptions, "normalizeAddOptions");\nfunction normalizeOptions(type, callback, options) {\n  assertCallback(callback);\n  if (typeof options === "object" && options !== null) {\n    return {\n      type: String(type),\n      callback: callback !== null && callback !== void 0 ? callback : void 0,\n      capture: Boolean(options.capture)\n    };\n  }\n  return {\n    type: String(type),\n    callback: callback !== null && callback !== void 0 ? callback : void 0,\n    capture: Boolean(options)\n  };\n}\n__name(normalizeOptions, "normalizeOptions");\nfunction assertCallback(callback) {\n  if (typeof callback === "function" || typeof callback === "object" && callback !== null && typeof callback.handleEvent === "function") {\n    return;\n  }\n  if (callback == null || typeof callback === "object") {\n    InvalidEventListener.warn(callback);\n    return;\n  }\n  throw new TypeError(format(InvalidEventListener.message, [callback]));\n}\n__name(assertCallback, "assertCallback");\nfunction warnDuplicate(listener, passive, once, signal) {\n  EventListenerWasDuplicated.warn(isCapture(listener) ? "capture" : "bubble", listener.callback);\n  if (isPassive(listener) !== passive) {\n    OptionWasIgnored.warn("passive");\n  }\n  if (isOnce(listener) !== once) {\n    OptionWasIgnored.warn("once");\n  }\n  if (listener.signal !== signal) {\n    OptionWasIgnored.warn("signal");\n  }\n}\n__name(warnDuplicate, "warnDuplicate");\nvar keys$1 = Object.getOwnPropertyNames(EventTarget.prototype);\nfor (let i = 0; i < keys$1.length; ++i) {\n  if (keys$1[i] === "constructor") {\n    continue;\n  }\n  Object.defineProperty(EventTarget.prototype, keys$1[i], { enumerable: true });\n}\nif (typeof Global !== "undefined" && typeof Global.EventTarget !== "undefined") {\n  Object.setPrototypeOf(EventTarget.prototype, Global.EventTarget.prototype);\n}\n\n// src/primitives/events.js\nvar FetchEvent = class extends Event {\n  constructor(request) {\n    super("fetch");\n    this.request = request;\n    this.response = null;\n    this.awaiting = /* @__PURE__ */ new Set();\n  }\n  respondWith(response) {\n    this.response = response;\n  }\n  waitUntil(promise) {\n    this.awaiting.add(promise);\n    promise.finally(() => this.awaiting.delete(promise));\n  }\n};\n__name(FetchEvent, "FetchEvent");\nvar PromiseRejectionEvent = class extends Event {\n  constructor(type, init) {\n    super(type, { cancelable: true });\n    this.promise = init.promise;\n    this.reason = init.reason;\n  }\n};\n__name(PromiseRejectionEvent, "PromiseRejectionEvent");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Event,\n  EventTarget,\n  FetchEvent,\n  PromiseRejectionEvent\n});\n'},413:e=>{e.exports='"use strict";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. "__esModule" has not been set), then set\n  // "default" to the CommonJS "module.exports" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// <define:process>\nvar define_process_default;\nvar init_define_process = __esm({\n  "<define:process>"() {\n    define_process_default = { env: {}, versions: { node: "16.6.0" } };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/symbols.js\nvar require_symbols = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/symbols.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports = {\n      kUrl: Symbol("url"),\n      kHeaders: Symbol("headers"),\n      kSignal: Symbol("signal"),\n      kState: Symbol("state"),\n      kGuard: Symbol("guard"),\n      kRealm: Symbol("realm")\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/core/symbols.js\nvar require_symbols2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/core/symbols.js"(exports, module2) {\n    init_define_process();\n    module2.exports = {\n      kClose: Symbol("close"),\n      kDestroy: Symbol("destroy"),\n      kDispatch: Symbol("dispatch"),\n      kUrl: Symbol("url"),\n      kWriting: Symbol("writing"),\n      kResuming: Symbol("resuming"),\n      kQueue: Symbol("queue"),\n      kConnect: Symbol("connect"),\n      kConnecting: Symbol("connecting"),\n      kHeadersList: Symbol("headers list"),\n      kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),\n      kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),\n      kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),\n      kKeepAliveTimeoutValue: Symbol("keep alive timeout"),\n      kKeepAlive: Symbol("keep alive"),\n      kHeadersTimeout: Symbol("headers timeout"),\n      kBodyTimeout: Symbol("body timeout"),\n      kServerName: Symbol("server name"),\n      kLocalAddress: Symbol("local address"),\n      kHost: Symbol("host"),\n      kNoRef: Symbol("no ref"),\n      kBodyUsed: Symbol("used"),\n      kRunning: Symbol("running"),\n      kBlocking: Symbol("blocking"),\n      kPending: Symbol("pending"),\n      kSize: Symbol("size"),\n      kBusy: Symbol("busy"),\n      kQueued: Symbol("queued"),\n      kFree: Symbol("free"),\n      kConnected: Symbol("connected"),\n      kClosed: Symbol("closed"),\n      kNeedDrain: Symbol("need drain"),\n      kReset: Symbol("reset"),\n      kDestroyed: Symbol.for("nodejs.stream.destroyed"),\n      kMaxHeadersSize: Symbol("max headers size"),\n      kRunningIdx: Symbol("running index"),\n      kPendingIdx: Symbol("pending index"),\n      kError: Symbol("error"),\n      kClients: Symbol("clients"),\n      kClient: Symbol("client"),\n      kParser: Symbol("parser"),\n      kOnDestroyed: Symbol("destroy callbacks"),\n      kPipelining: Symbol("pipelining"),\n      kSocket: Symbol("socket"),\n      kHostHeader: Symbol("host header"),\n      kConnector: Symbol("connector"),\n      kStrictContentLength: Symbol("strict content length"),\n      kMaxRedirections: Symbol("maxRedirections"),\n      kMaxRequests: Symbol("maxRequestsPerClient"),\n      kProxy: Symbol("proxy agent options"),\n      kCounter: Symbol("socket request counter"),\n      kInterceptors: Symbol("dispatch interceptors"),\n      kMaxResponseSize: Symbol("max response size")\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/core/errors.js\nvar require_errors = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/core/errors.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var UndiciError = class extends Error {\n      constructor(message) {\n        super(message);\n        this.name = "UndiciError";\n        this.code = "UND_ERR";\n      }\n    };\n    __name(UndiciError, "UndiciError");\n    var ConnectTimeoutError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, ConnectTimeoutError);\n        this.name = "ConnectTimeoutError";\n        this.message = message || "Connect Timeout Error";\n        this.code = "UND_ERR_CONNECT_TIMEOUT";\n      }\n    };\n    __name(ConnectTimeoutError, "ConnectTimeoutError");\n    var HeadersTimeoutError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, HeadersTimeoutError);\n        this.name = "HeadersTimeoutError";\n        this.message = message || "Headers Timeout Error";\n        this.code = "UND_ERR_HEADERS_TIMEOUT";\n      }\n    };\n    __name(HeadersTimeoutError, "HeadersTimeoutError");\n    var HeadersOverflowError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, HeadersOverflowError);\n        this.name = "HeadersOverflowError";\n        this.message = message || "Headers Overflow Error";\n        this.code = "UND_ERR_HEADERS_OVERFLOW";\n      }\n    };\n    __name(HeadersOverflowError, "HeadersOverflowError");\n    var BodyTimeoutError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, BodyTimeoutError);\n        this.name = "BodyTimeoutError";\n        this.message = message || "Body Timeout Error";\n        this.code = "UND_ERR_BODY_TIMEOUT";\n      }\n    };\n    __name(BodyTimeoutError, "BodyTimeoutError");\n    var ResponseStatusCodeError = class extends UndiciError {\n      constructor(message, statusCode, headers, body) {\n        super(message);\n        Error.captureStackTrace(this, ResponseStatusCodeError);\n        this.name = "ResponseStatusCodeError";\n        this.message = message || "Response Status Code Error";\n        this.code = "UND_ERR_RESPONSE_STATUS_CODE";\n        this.body = body;\n        this.status = statusCode;\n        this.statusCode = statusCode;\n        this.headers = headers;\n      }\n    };\n    __name(ResponseStatusCodeError, "ResponseStatusCodeError");\n    var InvalidArgumentError2 = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, InvalidArgumentError2);\n        this.name = "InvalidArgumentError";\n        this.message = message || "Invalid Argument Error";\n        this.code = "UND_ERR_INVALID_ARG";\n      }\n    };\n    __name(InvalidArgumentError2, "InvalidArgumentError");\n    var InvalidReturnValueError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, InvalidReturnValueError);\n        this.name = "InvalidReturnValueError";\n        this.message = message || "Invalid Return Value Error";\n        this.code = "UND_ERR_INVALID_RETURN_VALUE";\n      }\n    };\n    __name(InvalidReturnValueError, "InvalidReturnValueError");\n    var RequestAbortedError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, RequestAbortedError);\n        this.name = "AbortError";\n        this.message = message || "Request aborted";\n        this.code = "UND_ERR_ABORTED";\n      }\n    };\n    __name(RequestAbortedError, "RequestAbortedError");\n    var InformationalError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, InformationalError);\n        this.name = "InformationalError";\n        this.message = message || "Request information";\n        this.code = "UND_ERR_INFO";\n      }\n    };\n    __name(InformationalError, "InformationalError");\n    var RequestContentLengthMismatchError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, RequestContentLengthMismatchError);\n        this.name = "RequestContentLengthMismatchError";\n        this.message = message || "Request body length does not match content-length header";\n        this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";\n      }\n    };\n    __name(RequestContentLengthMismatchError, "RequestContentLengthMismatchError");\n    var ResponseContentLengthMismatchError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, ResponseContentLengthMismatchError);\n        this.name = "ResponseContentLengthMismatchError";\n        this.message = message || "Response body length does not match content-length header";\n        this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";\n      }\n    };\n    __name(ResponseContentLengthMismatchError, "ResponseContentLengthMismatchError");\n    var ClientDestroyedError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, ClientDestroyedError);\n        this.name = "ClientDestroyedError";\n        this.message = message || "The client is destroyed";\n        this.code = "UND_ERR_DESTROYED";\n      }\n    };\n    __name(ClientDestroyedError, "ClientDestroyedError");\n    var ClientClosedError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, ClientClosedError);\n        this.name = "ClientClosedError";\n        this.message = message || "The client is closed";\n        this.code = "UND_ERR_CLOSED";\n      }\n    };\n    __name(ClientClosedError, "ClientClosedError");\n    var SocketError = class extends UndiciError {\n      constructor(message, socket) {\n        super(message);\n        Error.captureStackTrace(this, SocketError);\n        this.name = "SocketError";\n        this.message = message || "Socket error";\n        this.code = "UND_ERR_SOCKET";\n        this.socket = socket;\n      }\n    };\n    __name(SocketError, "SocketError");\n    var NotSupportedError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, NotSupportedError);\n        this.name = "NotSupportedError";\n        this.message = message || "Not supported error";\n        this.code = "UND_ERR_NOT_SUPPORTED";\n      }\n    };\n    __name(NotSupportedError, "NotSupportedError");\n    var BalancedPoolMissingUpstreamError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, NotSupportedError);\n        this.name = "MissingUpstreamError";\n        this.message = message || "No upstream has been added to the BalancedPool";\n        this.code = "UND_ERR_BPL_MISSING_UPSTREAM";\n      }\n    };\n    __name(BalancedPoolMissingUpstreamError, "BalancedPoolMissingUpstreamError");\n    var HTTPParserError = class extends Error {\n      constructor(message, code, data) {\n        super(message);\n        Error.captureStackTrace(this, HTTPParserError);\n        this.name = "HTTPParserError";\n        this.code = code ? `HPE_${code}` : void 0;\n        this.data = data ? data.toString() : void 0;\n      }\n    };\n    __name(HTTPParserError, "HTTPParserError");\n    var ResponseExceededMaxSizeError = class extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, ResponseExceededMaxSizeError);\n        this.name = "ResponseExceededMaxSizeError";\n        this.message = message || "Response content exceeded max size";\n        this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";\n      }\n    };\n    __name(ResponseExceededMaxSizeError, "ResponseExceededMaxSizeError");\n    module2.exports = {\n      HTTPParserError,\n      UndiciError,\n      HeadersTimeoutError,\n      HeadersOverflowError,\n      BodyTimeoutError,\n      RequestContentLengthMismatchError,\n      ConnectTimeoutError,\n      ResponseStatusCodeError,\n      InvalidArgumentError: InvalidArgumentError2,\n      InvalidReturnValueError,\n      RequestAbortedError,\n      ClientDestroyedError,\n      ClientClosedError,\n      InformationalError,\n      SocketError,\n      NotSupportedError,\n      ResponseContentLengthMismatchError,\n      BalancedPoolMissingUpstreamError,\n      ResponseExceededMaxSizeError\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/core/util.js\nvar require_util = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/core/util.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var assert = require("assert");\n    var { kDestroyed, kBodyUsed } = require_symbols2();\n    var { IncomingMessage } = require("http");\n    var stream = require("stream");\n    var net = require("net");\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var { Blob: Blob2 } = require("buffer");\n    var nodeUtil = require("util");\n    var { stringify } = require("querystring");\n    var [nodeMajor, nodeMinor] = define_process_default.versions.node.split(".").map((v) => Number(v));\n    function nop() {\n    }\n    __name(nop, "nop");\n    function isStream(obj) {\n      return obj && typeof obj === "object" && typeof obj.pipe === "function" && typeof obj.on === "function";\n    }\n    __name(isStream, "isStream");\n    function isBlobLike(object) {\n      return Blob2 && object instanceof Blob2 || object && typeof object === "object" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);\n    }\n    __name(isBlobLike, "isBlobLike");\n    function buildURL(url, queryParams) {\n      if (url.includes("?") || url.includes("#")) {\n        throw new Error(\'Query params cannot be passed when url already contains "?" or "#".\');\n      }\n      const stringified = stringify(queryParams);\n      if (stringified) {\n        url += "?" + stringified;\n      }\n      return url;\n    }\n    __name(buildURL, "buildURL");\n    function parseURL(url) {\n      if (typeof url === "string") {\n        url = new URL(url);\n        if (!/^https?:/.test(url.origin || url.protocol)) {\n          throw new InvalidArgumentError2("Invalid URL protocol: the URL must start with `http:` or `https:`.");\n        }\n        return url;\n      }\n      if (!url || typeof url !== "object") {\n        throw new InvalidArgumentError2("Invalid URL: The URL argument must be a non-null object.");\n      }\n      if (url.port != null && url.port !== "" && !Number.isFinite(parseInt(url.port))) {\n        throw new InvalidArgumentError2("Invalid URL: port must be a valid integer or a string representation of an integer.");\n      }\n      if (url.path != null && typeof url.path !== "string") {\n        throw new InvalidArgumentError2("Invalid URL path: the path must be a string or null/undefined.");\n      }\n      if (url.pathname != null && typeof url.pathname !== "string") {\n        throw new InvalidArgumentError2("Invalid URL pathname: the pathname must be a string or null/undefined.");\n      }\n      if (url.hostname != null && typeof url.hostname !== "string") {\n        throw new InvalidArgumentError2("Invalid URL hostname: the hostname must be a string or null/undefined.");\n      }\n      if (url.origin != null && typeof url.origin !== "string") {\n        throw new InvalidArgumentError2("Invalid URL origin: the origin must be a string or null/undefined.");\n      }\n      if (!/^https?:/.test(url.origin || url.protocol)) {\n        throw new InvalidArgumentError2("Invalid URL protocol: the URL must start with `http:` or `https:`.");\n      }\n      if (!(url instanceof URL)) {\n        const port = url.port != null ? url.port : url.protocol === "https:" ? 443 : 80;\n        let origin = url.origin != null ? url.origin : `${url.protocol}//${url.hostname}:${port}`;\n        let path = url.path != null ? url.path : `${url.pathname || ""}${url.search || ""}`;\n        if (origin.endsWith("/")) {\n          origin = origin.substring(0, origin.length - 1);\n        }\n        if (path && !path.startsWith("/")) {\n          path = `/${path}`;\n        }\n        url = new URL(origin + path);\n      }\n      return url;\n    }\n    __name(parseURL, "parseURL");\n    function parseOrigin(url) {\n      url = parseURL(url);\n      if (url.pathname !== "/" || url.search || url.hash) {\n        throw new InvalidArgumentError2("invalid url");\n      }\n      return url;\n    }\n    __name(parseOrigin, "parseOrigin");\n    function getHostname(host) {\n      if (host[0] === "[") {\n        const idx2 = host.indexOf("]");\n        assert(idx2 !== -1);\n        return host.substr(1, idx2 - 1);\n      }\n      const idx = host.indexOf(":");\n      if (idx === -1)\n        return host;\n      return host.substr(0, idx);\n    }\n    __name(getHostname, "getHostname");\n    function getServerName(host) {\n      if (!host) {\n        return null;\n      }\n      assert.strictEqual(typeof host, "string");\n      const servername = getHostname(host);\n      if (net.isIP(servername)) {\n        return "";\n      }\n      return servername;\n    }\n    __name(getServerName, "getServerName");\n    function deepClone(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n    __name(deepClone, "deepClone");\n    function isAsyncIterable(obj) {\n      return !!(obj != null && typeof obj[Symbol.asyncIterator] === "function");\n    }\n    __name(isAsyncIterable, "isAsyncIterable");\n    function isIterable(obj) {\n      return !!(obj != null && (typeof obj[Symbol.iterator] === "function" || typeof obj[Symbol.asyncIterator] === "function"));\n    }\n    __name(isIterable, "isIterable");\n    function bodyLength(body) {\n      if (body == null) {\n        return 0;\n      } else if (isStream(body)) {\n        const state = body._readableState;\n        return state && state.ended === true && Number.isFinite(state.length) ? state.length : null;\n      } else if (isBlobLike(body)) {\n        return body.size != null ? body.size : null;\n      } else if (isBuffer(body)) {\n        return body.byteLength;\n      }\n      return null;\n    }\n    __name(bodyLength, "bodyLength");\n    function isDestroyed(stream2) {\n      return !stream2 || !!(stream2.destroyed || stream2[kDestroyed]);\n    }\n    __name(isDestroyed, "isDestroyed");\n    function isReadableAborted(stream2) {\n      const state = stream2 && stream2._readableState;\n      return isDestroyed(stream2) && state && !state.endEmitted;\n    }\n    __name(isReadableAborted, "isReadableAborted");\n    function destroy(stream2, err) {\n      if (!isStream(stream2) || isDestroyed(stream2)) {\n        return;\n      }\n      if (typeof stream2.destroy === "function") {\n        if (Object.getPrototypeOf(stream2).constructor === IncomingMessage) {\n          stream2.socket = null;\n        }\n        stream2.destroy(err);\n      } else if (err) {\n        define_process_default.nextTick((stream3, err2) => {\n          stream3.emit("error", err2);\n        }, stream2, err);\n      }\n      if (stream2.destroyed !== true) {\n        stream2[kDestroyed] = true;\n      }\n    }\n    __name(destroy, "destroy");\n    var KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/;\n    function parseKeepAliveTimeout(val) {\n      const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR);\n      return m ? parseInt(m[1], 10) * 1e3 : null;\n    }\n    __name(parseKeepAliveTimeout, "parseKeepAliveTimeout");\n    function parseHeaders(headers, obj = {}) {\n      for (let i = 0; i < headers.length; i += 2) {\n        const key = headers[i].toString().toLowerCase();\n        let val = obj[key];\n        if (!val) {\n          if (Array.isArray(headers[i + 1])) {\n            obj[key] = headers[i + 1];\n          } else {\n            obj[key] = headers[i + 1].toString("utf8");\n          }\n        } else {\n          if (!Array.isArray(val)) {\n            val = [val];\n            obj[key] = val;\n          }\n          val.push(headers[i + 1].toString("utf8"));\n        }\n      }\n      if ("content-length" in obj && "content-disposition" in obj) {\n        obj["content-disposition"] = Buffer.from(obj["content-disposition"]).toString("latin1");\n      }\n      return obj;\n    }\n    __name(parseHeaders, "parseHeaders");\n    function parseRawHeaders(headers) {\n      const ret = [];\n      let hasContentLength = false;\n      let contentDispositionIdx = -1;\n      for (let n = 0; n < headers.length; n += 2) {\n        const key = headers[n + 0].toString();\n        const val = headers[n + 1].toString("utf8");\n        if (key.length === 14 && (key === "content-length" || key.toLowerCase() === "content-length")) {\n          ret.push(key, val);\n          hasContentLength = true;\n        } else if (key.length === 19 && (key === "content-disposition" || key.toLowerCase() === "content-disposition")) {\n          contentDispositionIdx = ret.push(key, val) - 1;\n        } else {\n          ret.push(key, val);\n        }\n      }\n      if (hasContentLength && contentDispositionIdx !== -1) {\n        ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString("latin1");\n      }\n      return ret;\n    }\n    __name(parseRawHeaders, "parseRawHeaders");\n    function isBuffer(buffer) {\n      return buffer instanceof Uint8Array || Buffer.isBuffer(buffer);\n    }\n    __name(isBuffer, "isBuffer");\n    function validateHandler(handler, method, upgrade) {\n      if (!handler || typeof handler !== "object") {\n        throw new InvalidArgumentError2("handler must be an object");\n      }\n      if (typeof handler.onConnect !== "function") {\n        throw new InvalidArgumentError2("invalid onConnect method");\n      }\n      if (typeof handler.onError !== "function") {\n        throw new InvalidArgumentError2("invalid onError method");\n      }\n      if (typeof handler.onBodySent !== "function" && handler.onBodySent !== void 0) {\n        throw new InvalidArgumentError2("invalid onBodySent method");\n      }\n      if (upgrade || method === "CONNECT") {\n        if (typeof handler.onUpgrade !== "function") {\n          throw new InvalidArgumentError2("invalid onUpgrade method");\n        }\n      } else {\n        if (typeof handler.onHeaders !== "function") {\n          throw new InvalidArgumentError2("invalid onHeaders method");\n        }\n        if (typeof handler.onData !== "function") {\n          throw new InvalidArgumentError2("invalid onData method");\n        }\n        if (typeof handler.onComplete !== "function") {\n          throw new InvalidArgumentError2("invalid onComplete method");\n        }\n      }\n    }\n    __name(validateHandler, "validateHandler");\n    function isDisturbed(body) {\n      return !!(body && (stream.isDisturbed ? stream.isDisturbed(body) || body[kBodyUsed] : body[kBodyUsed] || body.readableDidRead || body._readableState && body._readableState.dataEmitted || isReadableAborted(body)));\n    }\n    __name(isDisturbed, "isDisturbed");\n    function isErrored(body) {\n      return !!(body && (stream.isErrored ? stream.isErrored(body) : /state: \'errored\'/.test(\n        nodeUtil.inspect(body)\n      )));\n    }\n    __name(isErrored, "isErrored");\n    function isReadable(body) {\n      return !!(body && (stream.isReadable ? stream.isReadable(body) : /state: \'readable\'/.test(\n        nodeUtil.inspect(body)\n      )));\n    }\n    __name(isReadable, "isReadable");\n    function getSocketInfo(socket) {\n      return {\n        localAddress: socket.localAddress,\n        localPort: socket.localPort,\n        remoteAddress: socket.remoteAddress,\n        remotePort: socket.remotePort,\n        remoteFamily: socket.remoteFamily,\n        timeout: socket.timeout,\n        bytesWritten: socket.bytesWritten,\n        bytesRead: socket.bytesRead\n      };\n    }\n    __name(getSocketInfo, "getSocketInfo");\n    var ReadableStream;\n    function ReadableStreamFrom(iterable) {\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      if (ReadableStream.from) {\n        return ReadableStream.from(iterable);\n      }\n      let iterator;\n      return new ReadableStream(\n        {\n          async start() {\n            iterator = iterable[Symbol.asyncIterator]();\n          },\n          async pull(controller) {\n            const { done, value } = await iterator.next();\n            if (done) {\n              queueMicrotask(() => {\n                controller.close();\n              });\n            } else {\n              const buf = Buffer.isBuffer(value) ? value : Buffer.from(value);\n              controller.enqueue(new Uint8Array(buf));\n            }\n            return controller.desiredSize > 0;\n          },\n          async cancel(reason) {\n            await iterator.return();\n          }\n        },\n        0\n      );\n    }\n    __name(ReadableStreamFrom, "ReadableStreamFrom");\n    function isFormDataLike(object) {\n      return object && typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && object[Symbol.toStringTag] === "FormData";\n    }\n    __name(isFormDataLike, "isFormDataLike");\n    function throwIfAborted(signal) {\n      if (!signal) {\n        return;\n      }\n      if (typeof signal.throwIfAborted === "function") {\n        signal.throwIfAborted();\n      } else {\n        if (signal.aborted) {\n          const err = new Error("The operation was aborted");\n          err.name = "AbortError";\n          throw err;\n        }\n      }\n    }\n    __name(throwIfAborted, "throwIfAborted");\n    var hasToWellFormed = !!String.prototype.toWellFormed;\n    function toUSVString(val) {\n      if (hasToWellFormed) {\n        return `${val}`.toWellFormed();\n      } else if (nodeUtil.toUSVString) {\n        return nodeUtil.toUSVString(val);\n      }\n      return `${val}`;\n    }\n    __name(toUSVString, "toUSVString");\n    var kEnumerableProperty = /* @__PURE__ */ Object.create(null);\n    kEnumerableProperty.enumerable = true;\n    module2.exports = {\n      kEnumerableProperty,\n      nop,\n      isDisturbed,\n      isErrored,\n      isReadable,\n      toUSVString,\n      isReadableAborted,\n      isBlobLike,\n      parseOrigin,\n      parseURL,\n      getServerName,\n      isStream,\n      isIterable,\n      isAsyncIterable,\n      isDestroyed,\n      parseRawHeaders,\n      parseHeaders,\n      parseKeepAliveTimeout,\n      destroy,\n      bodyLength,\n      deepClone,\n      ReadableStreamFrom,\n      isBuffer,\n      validateHandler,\n      getSocketInfo,\n      isFormDataLike,\n      buildURL,\n      throwIfAborted,\n      nodeMajor,\n      nodeMinor,\n      nodeHasAutoSelectFamily: nodeMajor > 18 || nodeMajor === 18 && nodeMinor >= 13\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/constants.js\nvar require_constants = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/constants.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { MessageChannel, receiveMessageOnPort } = require("worker_threads");\n    var corsSafeListedMethods = ["GET", "HEAD", "POST"];\n    var nullBodyStatus = [101, 204, 205, 304];\n    var redirectStatus = [301, 302, 303, 307, 308];\n    var badPorts = [\n      "1",\n      "7",\n      "9",\n      "11",\n      "13",\n      "15",\n      "17",\n      "19",\n      "20",\n      "21",\n      "22",\n      "23",\n      "25",\n      "37",\n      "42",\n      "43",\n      "53",\n      "69",\n      "77",\n      "79",\n      "87",\n      "95",\n      "101",\n      "102",\n      "103",\n      "104",\n      "109",\n      "110",\n      "111",\n      "113",\n      "115",\n      "117",\n      "119",\n      "123",\n      "135",\n      "137",\n      "139",\n      "143",\n      "161",\n      "179",\n      "389",\n      "427",\n      "465",\n      "512",\n      "513",\n      "514",\n      "515",\n      "526",\n      "530",\n      "531",\n      "532",\n      "540",\n      "548",\n      "554",\n      "556",\n      "563",\n      "587",\n      "601",\n      "636",\n      "989",\n      "990",\n      "993",\n      "995",\n      "1719",\n      "1720",\n      "1723",\n      "2049",\n      "3659",\n      "4045",\n      "5060",\n      "5061",\n      "6000",\n      "6566",\n      "6665",\n      "6666",\n      "6667",\n      "6668",\n      "6669",\n      "6697",\n      "10080"\n    ];\n    var referrerPolicy = [\n      "",\n      "no-referrer",\n      "no-referrer-when-downgrade",\n      "same-origin",\n      "origin",\n      "strict-origin",\n      "origin-when-cross-origin",\n      "strict-origin-when-cross-origin",\n      "unsafe-url"\n    ];\n    var requestRedirect = ["follow", "manual", "error"];\n    var safeMethods = ["GET", "HEAD", "OPTIONS", "TRACE"];\n    var requestMode = ["navigate", "same-origin", "no-cors", "cors"];\n    var requestCredentials = ["omit", "same-origin", "include"];\n    var requestCache = [\n      "default",\n      "no-store",\n      "reload",\n      "no-cache",\n      "force-cache",\n      "only-if-cached"\n    ];\n    var requestBodyHeader = [\n      "content-encoding",\n      "content-language",\n      "content-location",\n      "content-type",\n      // See https://github.com/nodejs/undici/issues/2021\n      // \'Content-Length\' is a forbidden header name, which is typically\n      // removed in the Headers implementation. However, undici doesn\'t\n      // filter out headers, so we add it here.\n      "content-length"\n    ];\n    var requestDuplex = [\n      "half"\n    ];\n    var forbiddenMethods = ["CONNECT", "TRACE", "TRACK"];\n    var subresource = [\n      "audio",\n      "audioworklet",\n      "font",\n      "image",\n      "manifest",\n      "paintworklet",\n      "script",\n      "style",\n      "track",\n      "video",\n      "xslt",\n      ""\n    ];\n    var DOMException = globalThis.DOMException ?? (() => {\n      try {\n        atob("~");\n      } catch (err) {\n        return Object.getPrototypeOf(err).constructor;\n      }\n    })();\n    var channel;\n    var structuredClone = globalThis.structuredClone ?? // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js\n    // structuredClone was added in v17.0.0, but fetch supports v16.8\n    /* @__PURE__ */ __name(function structuredClone2(value, options = void 0) {\n      if (arguments.length === 0) {\n        throw new TypeError("missing argument");\n      }\n      if (!channel) {\n        channel = new MessageChannel();\n      }\n      channel.port1.unref();\n      channel.port2.unref();\n      channel.port1.postMessage(value, options == null ? void 0 : options.transfer);\n      return receiveMessageOnPort(channel.port2).message;\n    }, "structuredClone");\n    module2.exports = {\n      DOMException,\n      structuredClone,\n      subresource,\n      forbiddenMethods,\n      requestBodyHeader,\n      referrerPolicy,\n      requestRedirect,\n      requestMode,\n      requestCredentials,\n      requestCache,\n      redirectStatus,\n      corsSafeListedMethods,\n      nullBodyStatus,\n      safeMethods,\n      badPorts,\n      requestDuplex\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/global.js\nvar require_global = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/global.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var globalOrigin = Symbol.for("undici.globalOrigin.1");\n    function getGlobalOrigin() {\n      return globalThis[globalOrigin];\n    }\n    __name(getGlobalOrigin, "getGlobalOrigin");\n    function setGlobalOrigin(newOrigin) {\n      if (newOrigin !== void 0 && typeof newOrigin !== "string" && !(newOrigin instanceof URL)) {\n        throw new Error("Invalid base url");\n      }\n      if (newOrigin === void 0) {\n        Object.defineProperty(globalThis, globalOrigin, {\n          value: void 0,\n          writable: true,\n          enumerable: false,\n          configurable: false\n        });\n        return;\n      }\n      const parsedURL = new URL(newOrigin);\n      if (parsedURL.protocol !== "http:" && parsedURL.protocol !== "https:") {\n        throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`);\n      }\n      Object.defineProperty(globalThis, globalOrigin, {\n        value: parsedURL,\n        writable: true,\n        enumerable: false,\n        configurable: false\n      });\n    }\n    __name(setGlobalOrigin, "setGlobalOrigin");\n    module2.exports = {\n      getGlobalOrigin,\n      setGlobalOrigin\n    };\n  }\n});\n\n// src/patches/util-types.js\nvar require_util_types = __commonJS({\n  "src/patches/util-types.js"(exports, module2) {\n    init_define_process();\n    module2.exports = require("util").types;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/util.js\nvar require_util2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/util.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { redirectStatus, badPorts, referrerPolicy: referrerPolicyTokens } = require_constants();\n    var { getGlobalOrigin } = require_global();\n    var { performance: performance2 } = require("perf_hooks");\n    var { isBlobLike, toUSVString, ReadableStreamFrom } = require_util();\n    var assert = require("assert");\n    var { isUint8Array } = require_util_types();\n    var crypto;\n    try {\n      crypto = require("crypto");\n    } catch {\n    }\n    function responseURL(response) {\n      const urlList = response.urlList;\n      const length = urlList.length;\n      return length === 0 ? null : urlList[length - 1].toString();\n    }\n    __name(responseURL, "responseURL");\n    function responseLocationURL(response, requestFragment) {\n      if (!redirectStatus.includes(response.status)) {\n        return null;\n      }\n      let location = response.headersList.get("location");\n      if (location !== null && isValidHeaderValue2(location)) {\n        location = new URL(location, responseURL(response));\n      }\n      if (location && !location.hash) {\n        location.hash = requestFragment;\n      }\n      return location;\n    }\n    __name(responseLocationURL, "responseLocationURL");\n    function requestCurrentURL(request) {\n      return request.urlList[request.urlList.length - 1];\n    }\n    __name(requestCurrentURL, "requestCurrentURL");\n    function requestBadPort(request) {\n      const url = requestCurrentURL(request);\n      if (urlIsHttpHttpsScheme(url) && badPorts.includes(url.port)) {\n        return "blocked";\n      }\n      return "allowed";\n    }\n    __name(requestBadPort, "requestBadPort");\n    function isErrorLike(object) {\n      var _a, _b;\n      return object instanceof Error || (((_a = object == null ? void 0 : object.constructor) == null ? void 0 : _a.name) === "Error" || ((_b = object == null ? void 0 : object.constructor) == null ? void 0 : _b.name) === "DOMException");\n    }\n    __name(isErrorLike, "isErrorLike");\n    function isValidReasonPhrase(statusText) {\n      for (let i = 0; i < statusText.length; ++i) {\n        const c = statusText.charCodeAt(i);\n        if (!(c === 9 || // HTAB\n        c >= 32 && c <= 126 || // SP / VCHAR\n        c >= 128 && c <= 255)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidReasonPhrase, "isValidReasonPhrase");\n    function isTokenChar(c) {\n      return !(c >= 127 || c <= 32 || c === "(" || c === ")" || c === "<" || c === ">" || c === "@" || c === "," || c === ";" || c === ":" || c === "\\\\" || c === \'"\' || c === "/" || c === "[" || c === "]" || c === "?" || c === "=" || c === "{" || c === "}");\n    }\n    __name(isTokenChar, "isTokenChar");\n    function isValidHTTPToken(characters) {\n      if (!characters || typeof characters !== "string") {\n        return false;\n      }\n      for (let i = 0; i < characters.length; ++i) {\n        const c = characters.charCodeAt(i);\n        if (c > 127 || !isTokenChar(c)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidHTTPToken, "isValidHTTPToken");\n    function isValidHeaderName2(potentialValue) {\n      if (potentialValue.length === 0) {\n        return false;\n      }\n      return isValidHTTPToken(potentialValue);\n    }\n    __name(isValidHeaderName2, "isValidHeaderName");\n    function isValidHeaderValue2(potentialValue) {\n      if (potentialValue.startsWith("\t") || potentialValue.startsWith(" ") || potentialValue.endsWith("\t") || potentialValue.endsWith(" ")) {\n        return false;\n      }\n      if (potentialValue.includes("\\0") || potentialValue.includes("\\r") || potentialValue.includes("\\n")) {\n        return false;\n      }\n      return true;\n    }\n    __name(isValidHeaderValue2, "isValidHeaderValue");\n    function setRequestReferrerPolicyOnRedirect(request, actualResponse) {\n      const { headersList } = actualResponse;\n      const policyHeader = (headersList.get("referrer-policy") ?? "").split(",");\n      let policy = "";\n      if (policyHeader.length > 0) {\n        for (let i = policyHeader.length; i !== 0; i--) {\n          const token = policyHeader[i - 1].trim();\n          if (referrerPolicyTokens.includes(token)) {\n            policy = token;\n            break;\n          }\n        }\n      }\n      if (policy !== "") {\n        request.referrerPolicy = policy;\n      }\n    }\n    __name(setRequestReferrerPolicyOnRedirect, "setRequestReferrerPolicyOnRedirect");\n    function crossOriginResourcePolicyCheck() {\n      return "allowed";\n    }\n    __name(crossOriginResourcePolicyCheck, "crossOriginResourcePolicyCheck");\n    function corsCheck() {\n      return "success";\n    }\n    __name(corsCheck, "corsCheck");\n    function TAOCheck() {\n      return "success";\n    }\n    __name(TAOCheck, "TAOCheck");\n    function appendFetchMetadata(httpRequest) {\n      let header = null;\n      header = httpRequest.mode;\n      httpRequest.headersList.set("sec-fetch-mode", header);\n    }\n    __name(appendFetchMetadata, "appendFetchMetadata");\n    function appendRequestOriginHeader(request) {\n      let serializedOrigin = request.origin;\n      if (request.responseTainting === "cors" || request.mode === "websocket") {\n        if (serializedOrigin) {\n          request.headersList.append("origin", serializedOrigin);\n        }\n      } else if (request.method !== "GET" && request.method !== "HEAD") {\n        switch (request.referrerPolicy) {\n          case "no-referrer":\n            serializedOrigin = null;\n            break;\n          case "no-referrer-when-downgrade":\n          case "strict-origin":\n          case "strict-origin-when-cross-origin":\n            if (request.origin && urlHasHttpsScheme(request.origin) && !urlHasHttpsScheme(requestCurrentURL(request))) {\n              serializedOrigin = null;\n            }\n            break;\n          case "same-origin":\n            if (!sameOrigin(request, requestCurrentURL(request))) {\n              serializedOrigin = null;\n            }\n            break;\n          default:\n        }\n        if (serializedOrigin) {\n          request.headersList.append("origin", serializedOrigin);\n        }\n      }\n    }\n    __name(appendRequestOriginHeader, "appendRequestOriginHeader");\n    function coarsenedSharedCurrentTime(crossOriginIsolatedCapability) {\n      return performance2.now();\n    }\n    __name(coarsenedSharedCurrentTime, "coarsenedSharedCurrentTime");\n    function createOpaqueTimingInfo(timingInfo) {\n      return {\n        startTime: timingInfo.startTime ?? 0,\n        redirectStartTime: 0,\n        redirectEndTime: 0,\n        postRedirectStartTime: timingInfo.startTime ?? 0,\n        finalServiceWorkerStartTime: 0,\n        finalNetworkResponseStartTime: 0,\n        finalNetworkRequestStartTime: 0,\n        endTime: 0,\n        encodedBodySize: 0,\n        decodedBodySize: 0,\n        finalConnectionTimingInfo: null\n      };\n    }\n    __name(createOpaqueTimingInfo, "createOpaqueTimingInfo");\n    function makePolicyContainer() {\n      return {\n        referrerPolicy: "strict-origin-when-cross-origin"\n      };\n    }\n    __name(makePolicyContainer, "makePolicyContainer");\n    function clonePolicyContainer(policyContainer) {\n      return {\n        referrerPolicy: policyContainer.referrerPolicy\n      };\n    }\n    __name(clonePolicyContainer, "clonePolicyContainer");\n    function determineRequestsReferrer(request) {\n      const policy = request.referrerPolicy;\n      assert(policy);\n      let referrerSource = null;\n      if (request.referrer === "client") {\n        const globalOrigin = getGlobalOrigin();\n        if (!globalOrigin || globalOrigin.origin === "null") {\n          return "no-referrer";\n        }\n        referrerSource = new URL(globalOrigin);\n      } else if (request.referrer instanceof URL) {\n        referrerSource = request.referrer;\n      }\n      let referrerURL = stripURLForReferrer(referrerSource);\n      const referrerOrigin = stripURLForReferrer(referrerSource, true);\n      if (referrerURL.toString().length > 4096) {\n        referrerURL = referrerOrigin;\n      }\n      const areSameOrigin = sameOrigin(request, referrerURL);\n      const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(request.url);\n      switch (policy) {\n        case "origin":\n          return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true);\n        case "unsafe-url":\n          return referrerURL;\n        case "same-origin":\n          return areSameOrigin ? referrerOrigin : "no-referrer";\n        case "origin-when-cross-origin":\n          return areSameOrigin ? referrerURL : referrerOrigin;\n        case "strict-origin-when-cross-origin": {\n          const currentURL = requestCurrentURL(request);\n          if (sameOrigin(referrerURL, currentURL)) {\n            return referrerURL;\n          }\n          if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {\n            return "no-referrer";\n          }\n          return referrerOrigin;\n        }\n        case "strict-origin":\n        case "no-referrer-when-downgrade":\n        default:\n          return isNonPotentiallyTrustWorthy ? "no-referrer" : referrerOrigin;\n      }\n    }\n    __name(determineRequestsReferrer, "determineRequestsReferrer");\n    function stripURLForReferrer(url, originOnly) {\n      assert(url instanceof URL);\n      if (url.protocol === "file:" || url.protocol === "about:" || url.protocol === "blank:") {\n        return "no-referrer";\n      }\n      url.username = "";\n      url.password = "";\n      url.hash = "";\n      if (originOnly) {\n        url.pathname = "";\n        url.search = "";\n      }\n      return url;\n    }\n    __name(stripURLForReferrer, "stripURLForReferrer");\n    function isURLPotentiallyTrustworthy(url) {\n      if (!(url instanceof URL)) {\n        return false;\n      }\n      if (url.href === "about:blank" || url.href === "about:srcdoc") {\n        return true;\n      }\n      if (url.protocol === "data:")\n        return true;\n      if (url.protocol === "file:")\n        return true;\n      return isOriginPotentiallyTrustworthy(url.origin);\n      function isOriginPotentiallyTrustworthy(origin) {\n        if (origin == null || origin === "null")\n          return false;\n        const originAsURL = new URL(origin);\n        if (originAsURL.protocol === "https:" || originAsURL.protocol === "wss:") {\n          return true;\n        }\n        if (/^127(?:\\.[0-9]+){0,2}\\.[0-9]+$|^\\[(?:0*:)*?:?0*1\\]$/.test(originAsURL.hostname) || (originAsURL.hostname === "localhost" || originAsURL.hostname.includes("localhost.")) || originAsURL.hostname.endsWith(".localhost")) {\n          return true;\n        }\n        return false;\n      }\n      __name(isOriginPotentiallyTrustworthy, "isOriginPotentiallyTrustworthy");\n    }\n    __name(isURLPotentiallyTrustworthy, "isURLPotentiallyTrustworthy");\n    function bytesMatch(bytes, metadataList) {\n      if (crypto === void 0) {\n        return true;\n      }\n      const parsedMetadata = parseMetadata(metadataList);\n      if (parsedMetadata === "no metadata") {\n        return true;\n      }\n      if (parsedMetadata.length === 0) {\n        return true;\n      }\n      const list = parsedMetadata.sort((c, d) => d.algo.localeCompare(c.algo));\n      const strongest = list[0].algo;\n      const metadata = list.filter((item) => item.algo === strongest);\n      for (const item of metadata) {\n        const algorithm = item.algo;\n        const expectedValue = item.hash;\n        const actualValue = crypto.createHash(algorithm).update(bytes).digest("base64");\n        if (actualValue === expectedValue) {\n          return true;\n        }\n      }\n      return false;\n    }\n    __name(bytesMatch, "bytesMatch");\n    var parseHashWithOptions = /((?<algo>sha256|sha384|sha512)-(?<hash>[A-z0-9+/]{1}.*={0,2}))( +[\\x21-\\x7e]?)?/i;\n    function parseMetadata(metadata) {\n      const result = [];\n      let empty = true;\n      const supportedHashes = crypto.getHashes();\n      for (const token of metadata.split(" ")) {\n        empty = false;\n        const parsedToken = parseHashWithOptions.exec(token);\n        if (parsedToken === null || parsedToken.groups === void 0) {\n          continue;\n        }\n        const algorithm = parsedToken.groups.algo;\n        if (supportedHashes.includes(algorithm.toLowerCase())) {\n          result.push(parsedToken.groups);\n        }\n      }\n      if (empty === true) {\n        return "no metadata";\n      }\n      return result;\n    }\n    __name(parseMetadata, "parseMetadata");\n    function tryUpgradeRequestToAPotentiallyTrustworthyURL(request) {\n    }\n    __name(tryUpgradeRequestToAPotentiallyTrustworthyURL, "tryUpgradeRequestToAPotentiallyTrustworthyURL");\n    function sameOrigin(A, B) {\n      if (A.origin === B.origin && A.origin === "null") {\n        return true;\n      }\n      if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {\n        return true;\n      }\n      return false;\n    }\n    __name(sameOrigin, "sameOrigin");\n    function createDeferredPromise() {\n      let res;\n      let rej;\n      const promise = new Promise((resolve, reject) => {\n        res = resolve;\n        rej = reject;\n      });\n      return { promise, resolve: res, reject: rej };\n    }\n    __name(createDeferredPromise, "createDeferredPromise");\n    function isAborted(fetchParams) {\n      return fetchParams.controller.state === "aborted";\n    }\n    __name(isAborted, "isAborted");\n    function isCancelled(fetchParams) {\n      return fetchParams.controller.state === "aborted" || fetchParams.controller.state === "terminated";\n    }\n    __name(isCancelled, "isCancelled");\n    function normalizeMethod(method) {\n      return /^(DELETE|GET|HEAD|OPTIONS|POST|PUT)$/i.test(method) ? method.toUpperCase() : method;\n    }\n    __name(normalizeMethod, "normalizeMethod");\n    function serializeJavascriptValueToJSONString(value) {\n      const result = JSON.stringify(value);\n      if (result === void 0) {\n        throw new TypeError("Value is not JSON serializable");\n      }\n      assert(typeof result === "string");\n      return result;\n    }\n    __name(serializeJavascriptValueToJSONString, "serializeJavascriptValueToJSONString");\n    var esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\n    function makeIterator(iterator, name, kind) {\n      const object = {\n        index: 0,\n        kind,\n        target: iterator\n      };\n      const i = {\n        next() {\n          if (Object.getPrototypeOf(this) !== i) {\n            throw new TypeError(\n              `\'next\' called on an object that does not implement interface ${name} Iterator.`\n            );\n          }\n          const { index, kind: kind2, target } = object;\n          const values = target();\n          const len = values.length;\n          if (index >= len) {\n            return { value: void 0, done: true };\n          }\n          const pair = values[index];\n          object.index = index + 1;\n          return iteratorResult(pair, kind2);\n        },\n        // The class string of an iterator prototype object for a given interface is the\n        // result of concatenating the identifier of the interface and the string " Iterator".\n        [Symbol.toStringTag]: `${name} Iterator`\n      };\n      Object.setPrototypeOf(i, esIteratorPrototype);\n      return Object.setPrototypeOf({}, i);\n    }\n    __name(makeIterator, "makeIterator");\n    function iteratorResult(pair, kind) {\n      let result;\n      switch (kind) {\n        case "key": {\n          result = pair[0];\n          break;\n        }\n        case "value": {\n          result = pair[1];\n          break;\n        }\n        case "key+value": {\n          result = pair;\n          break;\n        }\n      }\n      return { value: result, done: false };\n    }\n    __name(iteratorResult, "iteratorResult");\n    function fullyReadBody(body, processBody, processBodyError) {\n      const successSteps = /* @__PURE__ */ __name((bytes) => queueMicrotask(() => processBody(bytes)), "successSteps");\n      const errorSteps = /* @__PURE__ */ __name((error) => queueMicrotask(() => processBodyError(error)), "errorSteps");\n      let reader;\n      try {\n        reader = body.stream.getReader();\n      } catch (e) {\n        errorSteps(e);\n        return;\n      }\n      readAllBytes(reader, successSteps, errorSteps);\n    }\n    __name(fullyReadBody, "fullyReadBody");\n    var ReadableStream = globalThis.ReadableStream;\n    function isReadableStreamLike(stream) {\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      return stream instanceof ReadableStream || stream[Symbol.toStringTag] === "ReadableStream" && typeof stream.tee === "function";\n    }\n    __name(isReadableStreamLike, "isReadableStreamLike");\n    var MAXIMUM_ARGUMENT_LENGTH = 65535;\n    function isomorphicDecode(input) {\n      if (input.length < MAXIMUM_ARGUMENT_LENGTH) {\n        return String.fromCharCode(...input);\n      }\n      return input.reduce((previous, current) => previous + String.fromCharCode(current), "");\n    }\n    __name(isomorphicDecode, "isomorphicDecode");\n    function readableStreamClose(controller) {\n      try {\n        controller.close();\n      } catch (err) {\n        if (!err.message.includes("Controller is already closed")) {\n          throw err;\n        }\n      }\n    }\n    __name(readableStreamClose, "readableStreamClose");\n    function isomorphicEncode(input) {\n      for (let i = 0; i < input.length; i++) {\n        assert(input.charCodeAt(i) <= 255);\n      }\n      return input;\n    }\n    __name(isomorphicEncode, "isomorphicEncode");\n    async function readAllBytes(reader, successSteps, failureSteps) {\n      const bytes = [];\n      let byteLength = 0;\n      while (true) {\n        let done;\n        let chunk;\n        try {\n          ({ done, value: chunk } = await reader.read());\n        } catch (e) {\n          failureSteps(e);\n          return;\n        }\n        if (done) {\n          successSteps(Buffer.concat(bytes, byteLength));\n          return;\n        }\n        if (!isUint8Array(chunk)) {\n          failureSteps(new TypeError("Received non-Uint8Array chunk"));\n          return;\n        }\n        bytes.push(chunk);\n        byteLength += chunk.length;\n      }\n    }\n    __name(readAllBytes, "readAllBytes");\n    function urlIsLocal(url) {\n      assert("protocol" in url);\n      const protocol = url.protocol;\n      return protocol === "about:" || protocol === "blob:" || protocol === "data:";\n    }\n    __name(urlIsLocal, "urlIsLocal");\n    function urlHasHttpsScheme(url) {\n      if (typeof url === "string") {\n        return url.startsWith("https:");\n      }\n      return url.protocol === "https:";\n    }\n    __name(urlHasHttpsScheme, "urlHasHttpsScheme");\n    function urlIsHttpHttpsScheme(url) {\n      assert("protocol" in url);\n      const protocol = url.protocol;\n      return protocol === "http:" || protocol === "https:";\n    }\n    __name(urlIsHttpHttpsScheme, "urlIsHttpHttpsScheme");\n    var hasOwn = Object.hasOwn || ((dict, key) => Object.prototype.hasOwnProperty.call(dict, key));\n    module2.exports = {\n      isAborted,\n      isCancelled,\n      createDeferredPromise,\n      ReadableStreamFrom,\n      toUSVString,\n      tryUpgradeRequestToAPotentiallyTrustworthyURL,\n      coarsenedSharedCurrentTime,\n      determineRequestsReferrer,\n      makePolicyContainer,\n      clonePolicyContainer,\n      appendFetchMetadata,\n      appendRequestOriginHeader,\n      TAOCheck,\n      corsCheck,\n      crossOriginResourcePolicyCheck,\n      createOpaqueTimingInfo,\n      setRequestReferrerPolicyOnRedirect,\n      isValidHTTPToken,\n      requestBadPort,\n      requestCurrentURL,\n      responseURL,\n      responseLocationURL,\n      isBlobLike,\n      isURLPotentiallyTrustworthy,\n      isValidReasonPhrase,\n      sameOrigin,\n      normalizeMethod,\n      serializeJavascriptValueToJSONString,\n      makeIterator,\n      isValidHeaderName: isValidHeaderName2,\n      isValidHeaderValue: isValidHeaderValue2,\n      hasOwn,\n      isErrorLike,\n      fullyReadBody,\n      bytesMatch,\n      isReadableStreamLike,\n      readableStreamClose,\n      isomorphicEncode,\n      isomorphicDecode,\n      urlIsLocal,\n      urlHasHttpsScheme,\n      urlIsHttpHttpsScheme,\n      readAllBytes\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/webidl.js\nvar require_webidl = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/webidl.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { types } = require("util");\n    var { hasOwn, toUSVString } = require_util2();\n    var webidl = {};\n    webidl.converters = {};\n    webidl.util = {};\n    webidl.errors = {};\n    webidl.errors.exception = function(message) {\n      return new TypeError(`${message.header}: ${message.message}`);\n    };\n    webidl.errors.conversionFailed = function(context) {\n      const plural = context.types.length === 1 ? "" : " one of";\n      const message = `${context.argument} could not be converted to${plural}: ${context.types.join(", ")}.`;\n      return webidl.errors.exception({\n        header: context.prefix,\n        message\n      });\n    };\n    webidl.errors.invalidArgument = function(context) {\n      return webidl.errors.exception({\n        header: context.prefix,\n        message: `"${context.value}" is an invalid ${context.type}.`\n      });\n    };\n    webidl.brandCheck = function(V, I, opts = void 0) {\n      if ((opts == null ? void 0 : opts.strict) !== false && !(V instanceof I)) {\n        throw new TypeError("Illegal invocation");\n      } else {\n        return (V == null ? void 0 : V[Symbol.toStringTag]) === I.prototype[Symbol.toStringTag];\n      }\n    };\n    webidl.argumentLengthCheck = function({ length }, min, ctx) {\n      if (length < min) {\n        throw webidl.errors.exception({\n          message: `${min} argument${min !== 1 ? "s" : ""} required, but${length ? " only" : ""} ${length} found.`,\n          ...ctx\n        });\n      }\n    };\n    webidl.illegalConstructor = function() {\n      throw webidl.errors.exception({\n        header: "TypeError",\n        message: "Illegal constructor"\n      });\n    };\n    webidl.util.Type = function(V) {\n      switch (typeof V) {\n        case "undefined":\n          return "Undefined";\n        case "boolean":\n          return "Boolean";\n        case "string":\n          return "String";\n        case "symbol":\n          return "Symbol";\n        case "number":\n          return "Number";\n        case "bigint":\n          return "BigInt";\n        case "function":\n        case "object": {\n          if (V === null) {\n            return "Null";\n          }\n          return "Object";\n        }\n      }\n    };\n    webidl.util.ConvertToInt = function(V, bitLength, signedness, opts = {}) {\n      let upperBound;\n      let lowerBound;\n      if (bitLength === 64) {\n        upperBound = Math.pow(2, 53) - 1;\n        if (signedness === "unsigned") {\n          lowerBound = 0;\n        } else {\n          lowerBound = Math.pow(-2, 53) + 1;\n        }\n      } else if (signedness === "unsigned") {\n        lowerBound = 0;\n        upperBound = Math.pow(2, bitLength) - 1;\n      } else {\n        lowerBound = Math.pow(-2, bitLength) - 1;\n        upperBound = Math.pow(2, bitLength - 1) - 1;\n      }\n      let x = Number(V);\n      if (x === 0) {\n        x = 0;\n      }\n      if (opts.enforceRange === true) {\n        if (Number.isNaN(x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {\n          throw webidl.errors.exception({\n            header: "Integer conversion",\n            message: `Could not convert ${V} to an integer.`\n          });\n        }\n        x = webidl.util.IntegerPart(x);\n        if (x < lowerBound || x > upperBound) {\n          throw webidl.errors.exception({\n            header: "Integer conversion",\n            message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`\n          });\n        }\n        return x;\n      }\n      if (!Number.isNaN(x) && opts.clamp === true) {\n        x = Math.min(Math.max(x, lowerBound), upperBound);\n        if (Math.floor(x) % 2 === 0) {\n          x = Math.floor(x);\n        } else {\n          x = Math.ceil(x);\n        }\n        return x;\n      }\n      if (Number.isNaN(x) || x === 0 && Object.is(0, x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {\n        return 0;\n      }\n      x = webidl.util.IntegerPart(x);\n      x = x % Math.pow(2, bitLength);\n      if (signedness === "signed" && x >= Math.pow(2, bitLength) - 1) {\n        return x - Math.pow(2, bitLength);\n      }\n      return x;\n    };\n    webidl.util.IntegerPart = function(n) {\n      const r = Math.floor(Math.abs(n));\n      if (n < 0) {\n        return -1 * r;\n      }\n      return r;\n    };\n    webidl.sequenceConverter = function(converter) {\n      return (V) => {\n        var _a;\n        if (webidl.util.Type(V) !== "Object") {\n          throw webidl.errors.exception({\n            header: "Sequence",\n            message: `Value of type ${webidl.util.Type(V)} is not an Object.`\n          });\n        }\n        const method = (_a = V == null ? void 0 : V[Symbol.iterator]) == null ? void 0 : _a.call(V);\n        const seq = [];\n        if (method === void 0 || typeof method.next !== "function") {\n          throw webidl.errors.exception({\n            header: "Sequence",\n            message: "Object is not an iterator."\n          });\n        }\n        while (true) {\n          const { done, value } = method.next();\n          if (done) {\n            break;\n          }\n          seq.push(converter(value));\n        }\n        return seq;\n      };\n    };\n    webidl.recordConverter = function(keyConverter, valueConverter) {\n      return (O) => {\n        if (webidl.util.Type(O) !== "Object") {\n          throw webidl.errors.exception({\n            header: "Record",\n            message: `Value of type ${webidl.util.Type(O)} is not an Object.`\n          });\n        }\n        const result = {};\n        if (!types.isProxy(O)) {\n          const keys2 = Object.keys(O);\n          for (const key of keys2) {\n            const typedKey = keyConverter(key);\n            const typedValue = valueConverter(O[key]);\n            result[typedKey] = typedValue;\n          }\n          return result;\n        }\n        const keys = Reflect.ownKeys(O);\n        for (const key of keys) {\n          const desc = Reflect.getOwnPropertyDescriptor(O, key);\n          if (desc == null ? void 0 : desc.enumerable) {\n            const typedKey = keyConverter(key);\n            const typedValue = valueConverter(O[key]);\n            result[typedKey] = typedValue;\n          }\n        }\n        return result;\n      };\n    };\n    webidl.interfaceConverter = function(i) {\n      return (V, opts = {}) => {\n        if (opts.strict !== false && !(V instanceof i)) {\n          throw webidl.errors.exception({\n            header: i.name,\n            message: `Expected ${V} to be an instance of ${i.name}.`\n          });\n        }\n        return V;\n      };\n    };\n    webidl.dictionaryConverter = function(converters) {\n      return (dictionary) => {\n        const type = webidl.util.Type(dictionary);\n        const dict = {};\n        if (type === "Null" || type === "Undefined") {\n          return dict;\n        } else if (type !== "Object") {\n          throw webidl.errors.exception({\n            header: "Dictionary",\n            message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`\n          });\n        }\n        for (const options of converters) {\n          const { key, defaultValue, required, converter } = options;\n          if (required === true) {\n            if (!hasOwn(dictionary, key)) {\n              throw webidl.errors.exception({\n                header: "Dictionary",\n                message: `Missing required key "${key}".`\n              });\n            }\n          }\n          let value = dictionary[key];\n          const hasDefault = hasOwn(options, "defaultValue");\n          if (hasDefault && value !== null) {\n            value = value ?? defaultValue;\n          }\n          if (required || hasDefault || value !== void 0) {\n            value = converter(value);\n            if (options.allowedValues && !options.allowedValues.includes(value)) {\n              throw webidl.errors.exception({\n                header: "Dictionary",\n                message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join(", ")}.`\n              });\n            }\n            dict[key] = value;\n          }\n        }\n        return dict;\n      };\n    };\n    webidl.nullableConverter = function(converter) {\n      return (V) => {\n        if (V === null) {\n          return V;\n        }\n        return converter(V);\n      };\n    };\n    webidl.converters.DOMString = function(V, opts = {}) {\n      if (V === null && opts.legacyNullToEmptyString) {\n        return "";\n      }\n      if (typeof V === "symbol") {\n        throw new TypeError("Could not convert argument of type symbol to string.");\n      }\n      return String(V);\n    };\n    webidl.converters.ByteString = function(V) {\n      const x = webidl.converters.DOMString(V);\n      for (let index = 0; index < x.length; index++) {\n        const charCode = x.charCodeAt(index);\n        if (charCode > 255) {\n          throw new TypeError(\n            `Cannot convert argument to a ByteString because the character at index ${index} has a value of ${charCode} which is greater than 255.`\n          );\n        }\n      }\n      return x;\n    };\n    webidl.converters.USVString = toUSVString;\n    webidl.converters.boolean = function(V) {\n      const x = Boolean(V);\n      return x;\n    };\n    webidl.converters.any = function(V) {\n      return V;\n    };\n    webidl.converters["long long"] = function(V) {\n      const x = webidl.util.ConvertToInt(V, 64, "signed");\n      return x;\n    };\n    webidl.converters["unsigned long long"] = function(V) {\n      const x = webidl.util.ConvertToInt(V, 64, "unsigned");\n      return x;\n    };\n    webidl.converters["unsigned long"] = function(V) {\n      const x = webidl.util.ConvertToInt(V, 32, "unsigned");\n      return x;\n    };\n    webidl.converters["unsigned short"] = function(V, opts) {\n      const x = webidl.util.ConvertToInt(V, 16, "unsigned", opts);\n      return x;\n    };\n    webidl.converters.ArrayBuffer = function(V, opts = {}) {\n      if (webidl.util.Type(V) !== "Object" || !types.isAnyArrayBuffer(V)) {\n        throw webidl.errors.conversionFailed({\n          prefix: `${V}`,\n          argument: `${V}`,\n          types: ["ArrayBuffer"]\n        });\n      }\n      if (opts.allowShared === false && types.isSharedArrayBuffer(V)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer",\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      return V;\n    };\n    webidl.converters.TypedArray = function(V, T, opts = {}) {\n      if (webidl.util.Type(V) !== "Object" || !types.isTypedArray(V) || V.constructor.name !== T.name) {\n        throw webidl.errors.conversionFailed({\n          prefix: `${T.name}`,\n          argument: `${V}`,\n          types: [T.name]\n        });\n      }\n      if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer",\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      return V;\n    };\n    webidl.converters.DataView = function(V, opts = {}) {\n      if (webidl.util.Type(V) !== "Object" || !types.isDataView(V)) {\n        throw webidl.errors.exception({\n          header: "DataView",\n          message: "Object is not a DataView."\n        });\n      }\n      if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer",\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      return V;\n    };\n    webidl.converters.BufferSource = function(V, opts = {}) {\n      if (types.isAnyArrayBuffer(V)) {\n        return webidl.converters.ArrayBuffer(V, opts);\n      }\n      if (types.isTypedArray(V)) {\n        return webidl.converters.TypedArray(V, V.constructor);\n      }\n      if (types.isDataView(V)) {\n        return webidl.converters.DataView(V, opts);\n      }\n      throw new TypeError(`Could not convert ${V} to a BufferSource.`);\n    };\n    webidl.converters["sequence<ByteString>"] = webidl.sequenceConverter(\n      webidl.converters.ByteString\n    );\n    webidl.converters["sequence<sequence<ByteString>>"] = webidl.sequenceConverter(\n      webidl.converters["sequence<ByteString>"]\n    );\n    webidl.converters["record<ByteString, ByteString>"] = webidl.recordConverter(\n      webidl.converters.ByteString,\n      webidl.converters.ByteString\n    );\n    module2.exports = {\n      webidl\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/headers.js\nvar require_headers = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/headers.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { kHeadersList } = require_symbols2();\n    var { kGuard: kGuard2 } = require_symbols();\n    var { kEnumerableProperty } = require_util();\n    var {\n      makeIterator,\n      isValidHeaderName: isValidHeaderName2,\n      isValidHeaderValue: isValidHeaderValue2\n    } = require_util2();\n    var { webidl } = require_webidl();\n    var assert = require("assert");\n    var kHeadersMap = Symbol("headers map");\n    var kHeadersSortedMap = Symbol("headers map sorted");\n    function headerValueNormalize(potentialValue) {\n      let i = potentialValue.length;\n      while (/[\\r\\n\\t ]/.test(potentialValue.charAt(--i)))\n        ;\n      return potentialValue.slice(0, i + 1).replace(/^[\\r\\n\\t ]+/, "");\n    }\n    __name(headerValueNormalize, "headerValueNormalize");\n    function fill(headers, object) {\n      if (Array.isArray(object)) {\n        for (const header of object) {\n          if (header.length !== 2) {\n            throw webidl.errors.exception({\n              header: "Headers constructor",\n              message: `expected name/value pair to be length 2, found ${header.length}.`\n            });\n          }\n          headers.append(header[0], header[1]);\n        }\n      } else if (typeof object === "object" && object !== null) {\n        for (const [key, value] of Object.entries(object)) {\n          headers.append(key, value);\n        }\n      } else {\n        throw webidl.errors.conversionFailed({\n          prefix: "Headers constructor",\n          argument: "Argument 1",\n          types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]\n        });\n      }\n    }\n    __name(fill, "fill");\n    var HeadersList = class {\n      /** @type {[string, string][]|null} */\n      cookies = null;\n      constructor(init) {\n        if (init instanceof HeadersList) {\n          this[kHeadersMap] = new Map(init[kHeadersMap]);\n          this[kHeadersSortedMap] = init[kHeadersSortedMap];\n          this.cookies = init.cookies;\n        } else {\n          this[kHeadersMap] = new Map(init);\n          this[kHeadersSortedMap] = null;\n        }\n      }\n      // https://fetch.spec.whatwg.org/#header-list-contains\n      contains(name) {\n        name = name.toLowerCase();\n        return this[kHeadersMap].has(name);\n      }\n      clear() {\n        this[kHeadersMap].clear();\n        this[kHeadersSortedMap] = null;\n        this.cookies = null;\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-append\n      append(name, value) {\n        this[kHeadersSortedMap] = null;\n        const lowercaseName = name.toLowerCase();\n        const exists = this[kHeadersMap].get(lowercaseName);\n        if (exists) {\n          const delimiter = lowercaseName === "cookie" ? "; " : ", ";\n          this[kHeadersMap].set(lowercaseName, {\n            name: exists.name,\n            value: `${exists.value}${delimiter}${value}`\n          });\n        } else {\n          this[kHeadersMap].set(lowercaseName, { name, value });\n        }\n        if (lowercaseName === "set-cookie") {\n          this.cookies ?? (this.cookies = []);\n          this.cookies.push(value);\n        }\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-set\n      set(name, value) {\n        this[kHeadersSortedMap] = null;\n        const lowercaseName = name.toLowerCase();\n        if (lowercaseName === "set-cookie") {\n          this.cookies = [value];\n        }\n        return this[kHeadersMap].set(lowercaseName, { name, value });\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-delete\n      delete(name) {\n        this[kHeadersSortedMap] = null;\n        name = name.toLowerCase();\n        if (name === "set-cookie") {\n          this.cookies = null;\n        }\n        return this[kHeadersMap].delete(name);\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-get\n      get(name) {\n        var _a;\n        if (!this.contains(name)) {\n          return null;\n        }\n        return ((_a = this[kHeadersMap].get(name.toLowerCase())) == null ? void 0 : _a.value) ?? null;\n      }\n      *[Symbol.iterator]() {\n        for (const [name, { value }] of this[kHeadersMap]) {\n          yield [name, value];\n        }\n      }\n      get entries() {\n        const headers = {};\n        if (this[kHeadersMap].size) {\n          for (const { name, value } of this[kHeadersMap].values()) {\n            headers[name] = value;\n          }\n        }\n        return headers;\n      }\n    };\n    __name(HeadersList, "HeadersList");\n    var Headers3 = class {\n      constructor(init = void 0) {\n        this[kHeadersList] = new HeadersList();\n        this[kGuard2] = "none";\n        if (init !== void 0) {\n          init = webidl.converters.HeadersInit(init);\n          fill(this, init);\n        }\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-append\n      append(name, value) {\n        webidl.brandCheck(this, Headers3);\n        webidl.argumentLengthCheck(arguments, 2, { header: "Headers.append" });\n        name = webidl.converters.ByteString(name);\n        value = webidl.converters.ByteString(value);\n        value = headerValueNormalize(value);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.append",\n            value: name,\n            type: "header name"\n          });\n        } else if (!isValidHeaderValue2(value)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.append",\n            value,\n            type: "header value"\n          });\n        }\n        if (this[kGuard2] === "immutable") {\n          throw new TypeError("immutable");\n        } else if (this[kGuard2] === "request-no-cors") {\n        }\n        return this[kHeadersList].append(name, value);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-delete\n      delete(name) {\n        webidl.brandCheck(this, Headers3);\n        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.delete" });\n        name = webidl.converters.ByteString(name);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.delete",\n            value: name,\n            type: "header name"\n          });\n        }\n        if (this[kGuard2] === "immutable") {\n          throw new TypeError("immutable");\n        } else if (this[kGuard2] === "request-no-cors") {\n        }\n        if (!this[kHeadersList].contains(name)) {\n          return;\n        }\n        return this[kHeadersList].delete(name);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-get\n      get(name) {\n        webidl.brandCheck(this, Headers3);\n        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.get" });\n        name = webidl.converters.ByteString(name);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.get",\n            value: name,\n            type: "header name"\n          });\n        }\n        return this[kHeadersList].get(name);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-has\n      has(name) {\n        webidl.brandCheck(this, Headers3);\n        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.has" });\n        name = webidl.converters.ByteString(name);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.has",\n            value: name,\n            type: "header name"\n          });\n        }\n        return this[kHeadersList].contains(name);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-set\n      set(name, value) {\n        webidl.brandCheck(this, Headers3);\n        webidl.argumentLengthCheck(arguments, 2, { header: "Headers.set" });\n        name = webidl.converters.ByteString(name);\n        value = webidl.converters.ByteString(value);\n        value = headerValueNormalize(value);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.set",\n            value: name,\n            type: "header name"\n          });\n        } else if (!isValidHeaderValue2(value)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.set",\n            value,\n            type: "header value"\n          });\n        }\n        if (this[kGuard2] === "immutable") {\n          throw new TypeError("immutable");\n        } else if (this[kGuard2] === "request-no-cors") {\n        }\n        return this[kHeadersList].set(name, value);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie\n      getSetCookie() {\n        webidl.brandCheck(this, Headers3);\n        const list = this[kHeadersList].cookies;\n        if (list) {\n          return [...list];\n        }\n        return [];\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n      get [kHeadersSortedMap]() {\n        if (this[kHeadersList][kHeadersSortedMap]) {\n          return this[kHeadersList][kHeadersSortedMap];\n        }\n        const headers = [];\n        const names = [...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1);\n        const cookies = this[kHeadersList].cookies;\n        for (const [name, value] of names) {\n          if (name === "set-cookie") {\n            for (const value2 of cookies) {\n              headers.push([name, value2]);\n            }\n          } else {\n            assert(value !== null);\n            headers.push([name, value]);\n          }\n        }\n        this[kHeadersList][kHeadersSortedMap] = headers;\n        return headers;\n      }\n      keys() {\n        webidl.brandCheck(this, Headers3);\n        return makeIterator(\n          () => [...this[kHeadersSortedMap].values()],\n          "Headers",\n          "key"\n        );\n      }\n      values() {\n        webidl.brandCheck(this, Headers3);\n        return makeIterator(\n          () => [...this[kHeadersSortedMap].values()],\n          "Headers",\n          "value"\n        );\n      }\n      entries() {\n        webidl.brandCheck(this, Headers3);\n        return makeIterator(\n          () => [...this[kHeadersSortedMap].values()],\n          "Headers",\n          "key+value"\n        );\n      }\n      /**\n       * @param {(value: string, key: string, self: Headers) => void} callbackFn\n       * @param {unknown} thisArg\n       */\n      forEach(callbackFn, thisArg = globalThis) {\n        webidl.brandCheck(this, Headers3);\n        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.forEach" });\n        if (typeof callbackFn !== "function") {\n          throw new TypeError(\n            "Failed to execute \'forEach\' on \'Headers\': parameter 1 is not of type \'Function\'."\n          );\n        }\n        for (const [key, value] of this) {\n          callbackFn.apply(thisArg, [value, key, this]);\n        }\n      }\n      [Symbol.for("nodejs.util.inspect.custom")]() {\n        webidl.brandCheck(this, Headers3);\n        return this[kHeadersList];\n      }\n    };\n    __name(Headers3, "Headers");\n    Headers3.prototype[Symbol.iterator] = Headers3.prototype.entries;\n    Object.defineProperties(Headers3.prototype, {\n      append: kEnumerableProperty,\n      delete: kEnumerableProperty,\n      get: kEnumerableProperty,\n      has: kEnumerableProperty,\n      set: kEnumerableProperty,\n      getSetCookie: kEnumerableProperty,\n      keys: kEnumerableProperty,\n      values: kEnumerableProperty,\n      entries: kEnumerableProperty,\n      forEach: kEnumerableProperty,\n      [Symbol.iterator]: { enumerable: false },\n      [Symbol.toStringTag]: {\n        value: "Headers",\n        configurable: true\n      }\n    });\n    webidl.converters.HeadersInit = function(V) {\n      if (webidl.util.Type(V) === "Object") {\n        if (V[Symbol.iterator]) {\n          return webidl.converters["sequence<sequence<ByteString>>"](V);\n        }\n        return webidl.converters["record<ByteString, ByteString>"](V);\n      }\n      throw webidl.errors.conversionFailed({\n        prefix: "Headers constructor",\n        argument: "Argument 1",\n        types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]\n      });\n    };\n    module2.exports = {\n      fill,\n      Headers: Headers3,\n      HeadersList\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/utils.js\nvar require_utils = __commonJS({\n  "../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/utils.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    function parseContentType(str) {\n      if (str.length === 0)\n        return;\n      const params = /* @__PURE__ */ Object.create(null);\n      let i = 0;\n      for (; i < str.length; ++i) {\n        const code = str.charCodeAt(i);\n        if (TOKEN[code] !== 1) {\n          if (code !== 47 || i === 0)\n            return;\n          break;\n        }\n      }\n      if (i === str.length)\n        return;\n      const type = str.slice(0, i).toLowerCase();\n      const subtypeStart = ++i;\n      for (; i < str.length; ++i) {\n        const code = str.charCodeAt(i);\n        if (TOKEN[code] !== 1) {\n          if (i === subtypeStart)\n            return;\n          if (parseContentTypeParams(str, i, params) === void 0)\n            return;\n          break;\n        }\n      }\n      if (i === subtypeStart)\n        return;\n      const subtype = str.slice(subtypeStart, i).toLowerCase();\n      return { type, subtype, params };\n    }\n    __name(parseContentType, "parseContentType");\n    function parseContentTypeParams(str, i, params) {\n      while (i < str.length) {\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (code !== 32 && code !== 9)\n            break;\n        }\n        if (i === str.length)\n          break;\n        if (str.charCodeAt(i++) !== 59)\n          return;\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (code !== 32 && code !== 9)\n            break;\n        }\n        if (i === str.length)\n          return;\n        let name;\n        const nameStart = i;\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (TOKEN[code] !== 1) {\n            if (code !== 61)\n              return;\n            break;\n          }\n        }\n        if (i === str.length)\n          return;\n        name = str.slice(nameStart, i);\n        ++i;\n        if (i === str.length)\n          return;\n        let value = "";\n        let valueStart;\n        if (str.charCodeAt(i) === 34) {\n          valueStart = ++i;\n          let escaping = false;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (code === 92) {\n              if (escaping) {\n                valueStart = i;\n                escaping = false;\n              } else {\n                value += str.slice(valueStart, i);\n                escaping = true;\n              }\n              continue;\n            }\n            if (code === 34) {\n              if (escaping) {\n                valueStart = i;\n                escaping = false;\n                continue;\n              }\n              value += str.slice(valueStart, i);\n              break;\n            }\n            if (escaping) {\n              valueStart = i - 1;\n              escaping = false;\n            }\n            if (QDTEXT[code] !== 1)\n              return;\n          }\n          if (i === str.length)\n            return;\n          ++i;\n        } else {\n          valueStart = i;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (TOKEN[code] !== 1) {\n              if (i === valueStart)\n                return;\n              break;\n            }\n          }\n          value = str.slice(valueStart, i);\n        }\n        name = name.toLowerCase();\n        if (params[name] === void 0)\n          params[name] = value;\n      }\n      return params;\n    }\n    __name(parseContentTypeParams, "parseContentTypeParams");\n    function parseDisposition(str, defDecoder) {\n      if (str.length === 0)\n        return;\n      const params = /* @__PURE__ */ Object.create(null);\n      let i = 0;\n      for (; i < str.length; ++i) {\n        const code = str.charCodeAt(i);\n        if (TOKEN[code] !== 1) {\n          if (parseDispositionParams(str, i, params, defDecoder) === void 0)\n            return;\n          break;\n        }\n      }\n      const type = str.slice(0, i).toLowerCase();\n      return { type, params };\n    }\n    __name(parseDisposition, "parseDisposition");\n    function parseDispositionParams(str, i, params, defDecoder) {\n      while (i < str.length) {\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (code !== 32 && code !== 9)\n            break;\n        }\n        if (i === str.length)\n          break;\n        if (str.charCodeAt(i++) !== 59)\n          return;\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (code !== 32 && code !== 9)\n            break;\n        }\n        if (i === str.length)\n          return;\n        let name;\n        const nameStart = i;\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (TOKEN[code] !== 1) {\n            if (code === 61)\n              break;\n            return;\n          }\n        }\n        if (i === str.length)\n          return;\n        let value = "";\n        let valueStart;\n        let charset;\n        name = str.slice(nameStart, i);\n        if (name.charCodeAt(name.length - 1) === 42) {\n          const charsetStart = ++i;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (CHARSET[code] !== 1) {\n              if (code !== 39)\n                return;\n              break;\n            }\n          }\n          if (i === str.length)\n            return;\n          charset = str.slice(charsetStart, i);\n          ++i;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (code === 39)\n              break;\n          }\n          if (i === str.length)\n            return;\n          ++i;\n          if (i === str.length)\n            return;\n          valueStart = i;\n          let encode = 0;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (EXTENDED_VALUE[code] !== 1) {\n              if (code === 37) {\n                let hexUpper;\n                let hexLower;\n                if (i + 2 < str.length && (hexUpper = HEX_VALUES[str.charCodeAt(i + 1)]) !== -1 && (hexLower = HEX_VALUES[str.charCodeAt(i + 2)]) !== -1) {\n                  const byteVal = (hexUpper << 4) + hexLower;\n                  value += str.slice(valueStart, i);\n                  value += String.fromCharCode(byteVal);\n                  i += 2;\n                  valueStart = i + 1;\n                  if (byteVal >= 128)\n                    encode = 2;\n                  else if (encode === 0)\n                    encode = 1;\n                  continue;\n                }\n                return;\n              }\n              break;\n            }\n          }\n          value += str.slice(valueStart, i);\n          value = convertToUTF8(value, charset, encode);\n          if (value === void 0)\n            return;\n        } else {\n          ++i;\n          if (i === str.length)\n            return;\n          if (str.charCodeAt(i) === 34) {\n            valueStart = ++i;\n            let escaping = false;\n            for (; i < str.length; ++i) {\n              const code = str.charCodeAt(i);\n              if (code === 92) {\n                if (escaping) {\n                  valueStart = i;\n                  escaping = false;\n                } else {\n                  value += str.slice(valueStart, i);\n                  escaping = true;\n                }\n                continue;\n              }\n              if (code === 34) {\n                if (escaping) {\n                  valueStart = i;\n                  escaping = false;\n                  continue;\n                }\n                value += str.slice(valueStart, i);\n                break;\n              }\n              if (escaping) {\n                valueStart = i - 1;\n                escaping = false;\n              }\n              if (QDTEXT[code] !== 1)\n                return;\n            }\n            if (i === str.length)\n              return;\n            ++i;\n          } else {\n            valueStart = i;\n            for (; i < str.length; ++i) {\n              const code = str.charCodeAt(i);\n              if (TOKEN[code] !== 1) {\n                if (i === valueStart)\n                  return;\n                break;\n              }\n            }\n            value = str.slice(valueStart, i);\n          }\n          value = defDecoder(value, 2);\n          if (value === void 0)\n            return;\n        }\n        name = name.toLowerCase();\n        if (params[name] === void 0)\n          params[name] = value;\n      }\n      return params;\n    }\n    __name(parseDispositionParams, "parseDispositionParams");\n    function getDecoder(charset) {\n      let lc;\n      while (true) {\n        switch (charset) {\n          case "utf-8":\n          case "utf8":\n            return decoders.utf8;\n          case "latin1":\n          case "ascii":\n          case "us-ascii":\n          case "iso-8859-1":\n          case "iso8859-1":\n          case "iso88591":\n          case "iso_8859-1":\n          case "windows-1252":\n          case "iso_8859-1:1987":\n          case "cp1252":\n          case "x-cp1252":\n            return decoders.latin1;\n          case "utf16le":\n          case "utf-16le":\n          case "ucs2":\n          case "ucs-2":\n            return decoders.utf16le;\n          case "base64":\n            return decoders.base64;\n          default:\n            if (lc === void 0) {\n              lc = true;\n              charset = charset.toLowerCase();\n              continue;\n            }\n            return decoders.other.bind(charset);\n        }\n      }\n    }\n    __name(getDecoder, "getDecoder");\n    var decoders = {\n      utf8: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string") {\n          if (hint < 2)\n            return data;\n          data = Buffer.from(data, "latin1");\n        }\n        return data.utf8Slice(0, data.length);\n      },\n      latin1: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string")\n          return data;\n        return data.latin1Slice(0, data.length);\n      },\n      utf16le: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string")\n          data = Buffer.from(data, "latin1");\n        return data.ucs2Slice(0, data.length);\n      },\n      base64: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string")\n          data = Buffer.from(data, "latin1");\n        return data.base64Slice(0, data.length);\n      },\n      other: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string")\n          data = Buffer.from(data, "latin1");\n        try {\n          const decoder = new TextDecoder(exports);\n          return decoder.decode(data);\n        } catch {\n        }\n      }\n    };\n    function convertToUTF8(data, charset, hint) {\n      const decode = getDecoder(charset);\n      if (decode)\n        return decode(data, hint);\n    }\n    __name(convertToUTF8, "convertToUTF8");\n    function basename(path) {\n      if (typeof path !== "string")\n        return "";\n      for (let i = path.length - 1; i >= 0; --i) {\n        switch (path.charCodeAt(i)) {\n          case 47:\n          case 92:\n            path = path.slice(i + 1);\n            return path === ".." || path === "." ? "" : path;\n        }\n      }\n      return path === ".." || path === "." ? "" : path;\n    }\n    __name(basename, "basename");\n    var TOKEN = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ];\n    var QDTEXT = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1\n    ];\n    var CHARSET = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ];\n    var EXTENDED_VALUE = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ];\n    var HEX_VALUES = [\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      0,\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1\n    ];\n    module2.exports = {\n      basename,\n      convertToUTF8,\n      getDecoder,\n      parseContentType,\n      parseDisposition\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/streamsearch@1.1.0/node_modules/streamsearch/lib/sbmh.js\nvar require_sbmh = __commonJS({\n  "../../node_modules/.pnpm/streamsearch@1.1.0/node_modules/streamsearch/lib/sbmh.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    function memcmp(buf1, pos1, buf2, pos2, num) {\n      for (let i = 0; i < num; ++i) {\n        if (buf1[pos1 + i] !== buf2[pos2 + i])\n          return false;\n      }\n      return true;\n    }\n    __name(memcmp, "memcmp");\n    var SBMH = class {\n      constructor(needle, cb) {\n        if (typeof cb !== "function")\n          throw new Error("Missing match callback");\n        if (typeof needle === "string")\n          needle = Buffer.from(needle);\n        else if (!Buffer.isBuffer(needle))\n          throw new Error(`Expected Buffer for needle, got ${typeof needle}`);\n        const needleLen = needle.length;\n        this.maxMatches = Infinity;\n        this.matches = 0;\n        this._cb = cb;\n        this._lookbehindSize = 0;\n        this._needle = needle;\n        this._bufPos = 0;\n        this._lookbehind = Buffer.allocUnsafe(needleLen);\n        this._occ = [\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen\n        ];\n        if (needleLen > 1) {\n          for (let i = 0; i < needleLen - 1; ++i)\n            this._occ[needle[i]] = needleLen - 1 - i;\n        }\n      }\n      reset() {\n        this.matches = 0;\n        this._lookbehindSize = 0;\n        this._bufPos = 0;\n      }\n      push(chunk, pos) {\n        let result;\n        if (!Buffer.isBuffer(chunk))\n          chunk = Buffer.from(chunk, "latin1");\n        const chunkLen = chunk.length;\n        this._bufPos = pos || 0;\n        while (result !== chunkLen && this.matches < this.maxMatches)\n          result = feed(this, chunk);\n        return result;\n      }\n      destroy() {\n        const lbSize = this._lookbehindSize;\n        if (lbSize)\n          this._cb(false, this._lookbehind, 0, lbSize, false);\n        this.reset();\n      }\n    };\n    __name(SBMH, "SBMH");\n    function feed(self, data) {\n      const len = data.length;\n      const needle = self._needle;\n      const needleLen = needle.length;\n      let pos = -self._lookbehindSize;\n      const lastNeedleCharPos = needleLen - 1;\n      const lastNeedleChar = needle[lastNeedleCharPos];\n      const end = len - needleLen;\n      const occ = self._occ;\n      const lookbehind = self._lookbehind;\n      if (pos < 0) {\n        while (pos < 0 && pos <= end) {\n          const nextPos = pos + lastNeedleCharPos;\n          const ch = nextPos < 0 ? lookbehind[self._lookbehindSize + nextPos] : data[nextPos];\n          if (ch === lastNeedleChar && matchNeedle(self, data, pos, lastNeedleCharPos)) {\n            self._lookbehindSize = 0;\n            ++self.matches;\n            if (pos > -self._lookbehindSize)\n              self._cb(true, lookbehind, 0, self._lookbehindSize + pos, false);\n            else\n              self._cb(true, void 0, 0, 0, true);\n            return self._bufPos = pos + needleLen;\n          }\n          pos += occ[ch];\n        }\n        while (pos < 0 && !matchNeedle(self, data, pos, len - pos))\n          ++pos;\n        if (pos < 0) {\n          const bytesToCutOff = self._lookbehindSize + pos;\n          if (bytesToCutOff > 0) {\n            self._cb(false, lookbehind, 0, bytesToCutOff, false);\n          }\n          self._lookbehindSize -= bytesToCutOff;\n          lookbehind.copy(lookbehind, 0, bytesToCutOff, self._lookbehindSize);\n          lookbehind.set(data, self._lookbehindSize);\n          self._lookbehindSize += len;\n          self._bufPos = len;\n          return len;\n        }\n        self._cb(false, lookbehind, 0, self._lookbehindSize, false);\n        self._lookbehindSize = 0;\n      }\n      pos += self._bufPos;\n      const firstNeedleChar = needle[0];\n      while (pos <= end) {\n        const ch = data[pos + lastNeedleCharPos];\n        if (ch === lastNeedleChar && data[pos] === firstNeedleChar && memcmp(needle, 0, data, pos, lastNeedleCharPos)) {\n          ++self.matches;\n          if (pos > 0)\n            self._cb(true, data, self._bufPos, pos, true);\n          else\n            self._cb(true, void 0, 0, 0, true);\n          return self._bufPos = pos + needleLen;\n        }\n        pos += occ[ch];\n      }\n      while (pos < len) {\n        if (data[pos] !== firstNeedleChar || !memcmp(data, pos, needle, 0, len - pos)) {\n          ++pos;\n          continue;\n        }\n        data.copy(lookbehind, 0, pos, len);\n        self._lookbehindSize = len - pos;\n        break;\n      }\n      if (pos > 0)\n        self._cb(false, data, self._bufPos, pos < len ? pos : len, true);\n      self._bufPos = len;\n      return len;\n    }\n    __name(feed, "feed");\n    function matchNeedle(self, data, pos, len) {\n      const lb = self._lookbehind;\n      const lbSize = self._lookbehindSize;\n      const needle = self._needle;\n      for (let i = 0; i < len; ++i, ++pos) {\n        const ch = pos < 0 ? lb[lbSize + pos] : data[pos];\n        if (ch !== needle[i])\n          return false;\n      }\n      return true;\n    }\n    __name(matchNeedle, "matchNeedle");\n    module2.exports = SBMH;\n  }\n});\n\n// ../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/types/multipart.js\nvar require_multipart = __commonJS({\n  "../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/types/multipart.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Readable, Writable } = require("stream");\n    var StreamSearch = require_sbmh();\n    var {\n      basename,\n      convertToUTF8,\n      getDecoder,\n      parseContentType,\n      parseDisposition\n    } = require_utils();\n    var BUF_CRLF = Buffer.from("\\r\\n");\n    var BUF_CR = Buffer.from("\\r");\n    var BUF_DASH = Buffer.from("-");\n    function noop() {\n    }\n    __name(noop, "noop");\n    var MAX_HEADER_PAIRS = 2e3;\n    var MAX_HEADER_SIZE = 16 * 1024;\n    var HPARSER_NAME = 0;\n    var HPARSER_PRE_OWS = 1;\n    var HPARSER_VALUE = 2;\n    var HeaderParser = class {\n      constructor(cb) {\n        this.header = /* @__PURE__ */ Object.create(null);\n        this.pairCount = 0;\n        this.byteCount = 0;\n        this.state = HPARSER_NAME;\n        this.name = "";\n        this.value = "";\n        this.crlf = 0;\n        this.cb = cb;\n      }\n      reset() {\n        this.header = /* @__PURE__ */ Object.create(null);\n        this.pairCount = 0;\n        this.byteCount = 0;\n        this.state = HPARSER_NAME;\n        this.name = "";\n        this.value = "";\n        this.crlf = 0;\n      }\n      push(chunk, pos, end) {\n        let start = pos;\n        while (pos < end) {\n          switch (this.state) {\n            case HPARSER_NAME: {\n              let done = false;\n              for (; pos < end; ++pos) {\n                if (this.byteCount === MAX_HEADER_SIZE)\n                  return -1;\n                ++this.byteCount;\n                const code = chunk[pos];\n                if (TOKEN[code] !== 1) {\n                  if (code !== 58)\n                    return -1;\n                  this.name += chunk.latin1Slice(start, pos);\n                  if (this.name.length === 0)\n                    return -1;\n                  ++pos;\n                  done = true;\n                  this.state = HPARSER_PRE_OWS;\n                  break;\n                }\n              }\n              if (!done) {\n                this.name += chunk.latin1Slice(start, pos);\n                break;\n              }\n            }\n            case HPARSER_PRE_OWS: {\n              let done = false;\n              for (; pos < end; ++pos) {\n                if (this.byteCount === MAX_HEADER_SIZE)\n                  return -1;\n                ++this.byteCount;\n                const code = chunk[pos];\n                if (code !== 32 && code !== 9) {\n                  start = pos;\n                  done = true;\n                  this.state = HPARSER_VALUE;\n                  break;\n                }\n              }\n              if (!done)\n                break;\n            }\n            case HPARSER_VALUE:\n              switch (this.crlf) {\n                case 0:\n                  for (; pos < end; ++pos) {\n                    if (this.byteCount === MAX_HEADER_SIZE)\n                      return -1;\n                    ++this.byteCount;\n                    const code = chunk[pos];\n                    if (FIELD_VCHAR[code] !== 1) {\n                      if (code !== 13)\n                        return -1;\n                      ++this.crlf;\n                      break;\n                    }\n                  }\n                  this.value += chunk.latin1Slice(start, pos++);\n                  break;\n                case 1:\n                  if (this.byteCount === MAX_HEADER_SIZE)\n                    return -1;\n                  ++this.byteCount;\n                  if (chunk[pos++] !== 10)\n                    return -1;\n                  ++this.crlf;\n                  break;\n                case 2: {\n                  if (this.byteCount === MAX_HEADER_SIZE)\n                    return -1;\n                  ++this.byteCount;\n                  const code = chunk[pos];\n                  if (code === 32 || code === 9) {\n                    start = pos;\n                    this.crlf = 0;\n                  } else {\n                    if (++this.pairCount < MAX_HEADER_PAIRS) {\n                      this.name = this.name.toLowerCase();\n                      if (this.header[this.name] === void 0)\n                        this.header[this.name] = [this.value];\n                      else\n                        this.header[this.name].push(this.value);\n                    }\n                    if (code === 13) {\n                      ++this.crlf;\n                      ++pos;\n                    } else {\n                      start = pos;\n                      this.crlf = 0;\n                      this.state = HPARSER_NAME;\n                      this.name = "";\n                      this.value = "";\n                    }\n                  }\n                  break;\n                }\n                case 3: {\n                  if (this.byteCount === MAX_HEADER_SIZE)\n                    return -1;\n                  ++this.byteCount;\n                  if (chunk[pos++] !== 10)\n                    return -1;\n                  const header = this.header;\n                  this.reset();\n                  this.cb(header);\n                  return pos;\n                }\n              }\n              break;\n          }\n        }\n        return pos;\n      }\n    };\n    __name(HeaderParser, "HeaderParser");\n    var FileStream = class extends Readable {\n      constructor(opts, owner) {\n        super(opts);\n        this.truncated = false;\n        this._readcb = null;\n        this.once("end", () => {\n          this._read();\n          if (--owner._fileEndsLeft === 0 && owner._finalcb) {\n            const cb = owner._finalcb;\n            owner._finalcb = null;\n            define_process_default.nextTick(cb);\n          }\n        });\n      }\n      _read(n) {\n        const cb = this._readcb;\n        if (cb) {\n          this._readcb = null;\n          cb();\n        }\n      }\n    };\n    __name(FileStream, "FileStream");\n    var ignoreData = {\n      push: (chunk, pos) => {\n      },\n      destroy: () => {\n      }\n    };\n    function callAndUnsetCb(self, err) {\n      const cb = self._writecb;\n      self._writecb = null;\n      if (err)\n        self.destroy(err);\n      else if (cb)\n        cb();\n    }\n    __name(callAndUnsetCb, "callAndUnsetCb");\n    function nullDecoder(val, hint) {\n      return val;\n    }\n    __name(nullDecoder, "nullDecoder");\n    var Multipart = class extends Writable {\n      constructor(cfg) {\n        const streamOpts = {\n          autoDestroy: true,\n          emitClose: true,\n          highWaterMark: typeof cfg.highWaterMark === "number" ? cfg.highWaterMark : void 0\n        };\n        super(streamOpts);\n        if (!cfg.conType.params || typeof cfg.conType.params.boundary !== "string")\n          throw new Error("Multipart: Boundary not found");\n        const boundary = cfg.conType.params.boundary;\n        const paramDecoder = typeof cfg.defParamCharset === "string" && cfg.defParamCharset ? getDecoder(cfg.defParamCharset) : nullDecoder;\n        const defCharset = cfg.defCharset || "utf8";\n        const preservePath = cfg.preservePath;\n        const fileOpts = {\n          autoDestroy: true,\n          emitClose: true,\n          highWaterMark: typeof cfg.fileHwm === "number" ? cfg.fileHwm : void 0\n        };\n        const limits = cfg.limits;\n        const fieldSizeLimit = limits && typeof limits.fieldSize === "number" ? limits.fieldSize : 1 * 1024 * 1024;\n        const fileSizeLimit = limits && typeof limits.fileSize === "number" ? limits.fileSize : Infinity;\n        const filesLimit = limits && typeof limits.files === "number" ? limits.files : Infinity;\n        const fieldsLimit = limits && typeof limits.fields === "number" ? limits.fields : Infinity;\n        const partsLimit = limits && typeof limits.parts === "number" ? limits.parts : Infinity;\n        let parts = -1;\n        let fields = 0;\n        let files = 0;\n        let skipPart = false;\n        this._fileEndsLeft = 0;\n        this._fileStream = void 0;\n        this._complete = false;\n        let fileSize = 0;\n        let field;\n        let fieldSize = 0;\n        let partCharset;\n        let partEncoding;\n        let partType;\n        let partName;\n        let partTruncated = false;\n        let hitFilesLimit = false;\n        let hitFieldsLimit = false;\n        this._hparser = null;\n        const hparser = new HeaderParser((header) => {\n          this._hparser = null;\n          skipPart = false;\n          partType = "text/plain";\n          partCharset = defCharset;\n          partEncoding = "7bit";\n          partName = void 0;\n          partTruncated = false;\n          let filename;\n          if (!header["content-disposition"]) {\n            skipPart = true;\n            return;\n          }\n          const disp = parseDisposition(\n            header["content-disposition"][0],\n            paramDecoder\n          );\n          if (!disp || disp.type !== "form-data") {\n            skipPart = true;\n            return;\n          }\n          if (disp.params) {\n            if (disp.params.name)\n              partName = disp.params.name;\n            if (disp.params["filename*"])\n              filename = disp.params["filename*"];\n            else if (disp.params.filename)\n              filename = disp.params.filename;\n            if (filename !== void 0 && !preservePath)\n              filename = basename(filename);\n          }\n          if (header["content-type"]) {\n            const conType = parseContentType(header["content-type"][0]);\n            if (conType) {\n              partType = `${conType.type}/${conType.subtype}`;\n              if (conType.params && typeof conType.params.charset === "string")\n                partCharset = conType.params.charset.toLowerCase();\n            }\n          }\n          if (header["content-transfer-encoding"])\n            partEncoding = header["content-transfer-encoding"][0].toLowerCase();\n          if (partType === "application/octet-stream" || filename !== void 0) {\n            if (files === filesLimit) {\n              if (!hitFilesLimit) {\n                hitFilesLimit = true;\n                this.emit("filesLimit");\n              }\n              skipPart = true;\n              return;\n            }\n            ++files;\n            if (this.listenerCount("file") === 0) {\n              skipPart = true;\n              return;\n            }\n            fileSize = 0;\n            this._fileStream = new FileStream(fileOpts, this);\n            ++this._fileEndsLeft;\n            this.emit(\n              "file",\n              partName,\n              this._fileStream,\n              {\n                filename,\n                encoding: partEncoding,\n                mimeType: partType\n              }\n            );\n          } else {\n            if (fields === fieldsLimit) {\n              if (!hitFieldsLimit) {\n                hitFieldsLimit = true;\n                this.emit("fieldsLimit");\n              }\n              skipPart = true;\n              return;\n            }\n            ++fields;\n            if (this.listenerCount("field") === 0) {\n              skipPart = true;\n              return;\n            }\n            field = [];\n            fieldSize = 0;\n          }\n        });\n        let matchPostBoundary = 0;\n        const ssCb = /* @__PURE__ */ __name((isMatch, data, start, end, isDataSafe) => {\n          retrydata:\n            while (data) {\n              if (this._hparser !== null) {\n                const ret = this._hparser.push(data, start, end);\n                if (ret === -1) {\n                  this._hparser = null;\n                  hparser.reset();\n                  this.emit("error", new Error("Malformed part header"));\n                  break;\n                }\n                start = ret;\n              }\n              if (start === end)\n                break;\n              if (matchPostBoundary !== 0) {\n                if (matchPostBoundary === 1) {\n                  switch (data[start]) {\n                    case 45:\n                      matchPostBoundary = 2;\n                      ++start;\n                      break;\n                    case 13:\n                      matchPostBoundary = 3;\n                      ++start;\n                      break;\n                    default:\n                      matchPostBoundary = 0;\n                  }\n                  if (start === end)\n                    return;\n                }\n                if (matchPostBoundary === 2) {\n                  matchPostBoundary = 0;\n                  if (data[start] === 45) {\n                    this._complete = true;\n                    this._bparser = ignoreData;\n                    return;\n                  }\n                  const writecb = this._writecb;\n                  this._writecb = noop;\n                  ssCb(false, BUF_DASH, 0, 1, false);\n                  this._writecb = writecb;\n                } else if (matchPostBoundary === 3) {\n                  matchPostBoundary = 0;\n                  if (data[start] === 10) {\n                    ++start;\n                    if (parts >= partsLimit)\n                      break;\n                    this._hparser = hparser;\n                    if (start === end)\n                      break;\n                    continue retrydata;\n                  } else {\n                    const writecb = this._writecb;\n                    this._writecb = noop;\n                    ssCb(false, BUF_CR, 0, 1, false);\n                    this._writecb = writecb;\n                  }\n                }\n              }\n              if (!skipPart) {\n                if (this._fileStream) {\n                  let chunk;\n                  const actualLen = Math.min(end - start, fileSizeLimit - fileSize);\n                  if (!isDataSafe) {\n                    chunk = Buffer.allocUnsafe(actualLen);\n                    data.copy(chunk, 0, start, start + actualLen);\n                  } else {\n                    chunk = data.slice(start, start + actualLen);\n                  }\n                  fileSize += chunk.length;\n                  if (fileSize === fileSizeLimit) {\n                    if (chunk.length > 0)\n                      this._fileStream.push(chunk);\n                    this._fileStream.emit("limit");\n                    this._fileStream.truncated = true;\n                    skipPart = true;\n                  } else if (!this._fileStream.push(chunk)) {\n                    if (this._writecb)\n                      this._fileStream._readcb = this._writecb;\n                    this._writecb = null;\n                  }\n                } else if (field !== void 0) {\n                  let chunk;\n                  const actualLen = Math.min(\n                    end - start,\n                    fieldSizeLimit - fieldSize\n                  );\n                  if (!isDataSafe) {\n                    chunk = Buffer.allocUnsafe(actualLen);\n                    data.copy(chunk, 0, start, start + actualLen);\n                  } else {\n                    chunk = data.slice(start, start + actualLen);\n                  }\n                  fieldSize += actualLen;\n                  field.push(chunk);\n                  if (fieldSize === fieldSizeLimit) {\n                    skipPart = true;\n                    partTruncated = true;\n                  }\n                }\n              }\n              break;\n            }\n          if (isMatch) {\n            matchPostBoundary = 1;\n            if (this._fileStream) {\n              this._fileStream.push(null);\n              this._fileStream = null;\n            } else if (field !== void 0) {\n              let data2;\n              switch (field.length) {\n                case 0:\n                  data2 = "";\n                  break;\n                case 1:\n                  data2 = convertToUTF8(field[0], partCharset, 0);\n                  break;\n                default:\n                  data2 = convertToUTF8(\n                    Buffer.concat(field, fieldSize),\n                    partCharset,\n                    0\n                  );\n              }\n              field = void 0;\n              fieldSize = 0;\n              this.emit(\n                "field",\n                partName,\n                data2,\n                {\n                  nameTruncated: false,\n                  valueTruncated: partTruncated,\n                  encoding: partEncoding,\n                  mimeType: partType\n                }\n              );\n            }\n            if (++parts === partsLimit)\n              this.emit("partsLimit");\n          }\n        }, "ssCb");\n        this._bparser = new StreamSearch(`\\r\n--${boundary}`, ssCb);\n        this._writecb = null;\n        this._finalcb = null;\n        this.write(BUF_CRLF);\n      }\n      static detect(conType) {\n        return conType.type === "multipart" && conType.subtype === "form-data";\n      }\n      _write(chunk, enc, cb) {\n        this._writecb = cb;\n        this._bparser.push(chunk, 0);\n        if (this._writecb)\n          callAndUnsetCb(this);\n      }\n      _destroy(err, cb) {\n        this._hparser = null;\n        this._bparser = ignoreData;\n        if (!err)\n          err = checkEndState(this);\n        const fileStream = this._fileStream;\n        if (fileStream) {\n          this._fileStream = null;\n          fileStream.destroy(err);\n        }\n        cb(err);\n      }\n      _final(cb) {\n        this._bparser.destroy();\n        if (!this._complete)\n          return cb(new Error("Unexpected end of form"));\n        if (this._fileEndsLeft)\n          this._finalcb = finalcb.bind(null, this, cb);\n        else\n          finalcb(this, cb);\n      }\n    };\n    __name(Multipart, "Multipart");\n    function finalcb(self, cb, err) {\n      if (err)\n        return cb(err);\n      err = checkEndState(self);\n      cb(err);\n    }\n    __name(finalcb, "finalcb");\n    function checkEndState(self) {\n      if (self._hparser)\n        return new Error("Malformed part header");\n      const fileStream = self._fileStream;\n      if (fileStream) {\n        self._fileStream = null;\n        fileStream.destroy(new Error("Unexpected end of file"));\n      }\n      if (!self._complete)\n        return new Error("Unexpected end of form");\n    }\n    __name(checkEndState, "checkEndState");\n    var TOKEN = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ];\n    var FIELD_VCHAR = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1\n    ];\n    module2.exports = Multipart;\n  }\n});\n\n// ../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/types/urlencoded.js\nvar require_urlencoded = __commonJS({\n  "../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/types/urlencoded.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Writable } = require("stream");\n    var { getDecoder } = require_utils();\n    var URLEncoded = class extends Writable {\n      constructor(cfg) {\n        const streamOpts = {\n          autoDestroy: true,\n          emitClose: true,\n          highWaterMark: typeof cfg.highWaterMark === "number" ? cfg.highWaterMark : void 0\n        };\n        super(streamOpts);\n        let charset = cfg.defCharset || "utf8";\n        if (cfg.conType.params && typeof cfg.conType.params.charset === "string")\n          charset = cfg.conType.params.charset;\n        this.charset = charset;\n        const limits = cfg.limits;\n        this.fieldSizeLimit = limits && typeof limits.fieldSize === "number" ? limits.fieldSize : 1 * 1024 * 1024;\n        this.fieldsLimit = limits && typeof limits.fields === "number" ? limits.fields : Infinity;\n        this.fieldNameSizeLimit = limits && typeof limits.fieldNameSize === "number" ? limits.fieldNameSize : 100;\n        this._inKey = true;\n        this._keyTrunc = false;\n        this._valTrunc = false;\n        this._bytesKey = 0;\n        this._bytesVal = 0;\n        this._fields = 0;\n        this._key = "";\n        this._val = "";\n        this._byte = -2;\n        this._lastPos = 0;\n        this._encode = 0;\n        this._decoder = getDecoder(charset);\n      }\n      static detect(conType) {\n        return conType.type === "application" && conType.subtype === "x-www-form-urlencoded";\n      }\n      _write(chunk, enc, cb) {\n        if (this._fields >= this.fieldsLimit)\n          return cb();\n        let i = 0;\n        const len = chunk.length;\n        this._lastPos = 0;\n        if (this._byte !== -2) {\n          i = readPctEnc(this, chunk, i, len);\n          if (i === -1)\n            return cb(new Error("Malformed urlencoded form"));\n          if (i >= len)\n            return cb();\n          if (this._inKey)\n            ++this._bytesKey;\n          else\n            ++this._bytesVal;\n        }\n        main:\n          while (i < len) {\n            if (this._inKey) {\n              i = skipKeyBytes(this, chunk, i, len);\n              while (i < len) {\n                switch (chunk[i]) {\n                  case 61:\n                    if (this._lastPos < i)\n                      this._key += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = ++i;\n                    this._key = this._decoder(this._key, this._encode);\n                    this._encode = 0;\n                    this._inKey = false;\n                    continue main;\n                  case 38:\n                    if (this._lastPos < i)\n                      this._key += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = ++i;\n                    this._key = this._decoder(this._key, this._encode);\n                    this._encode = 0;\n                    if (this._bytesKey > 0) {\n                      this.emit(\n                        "field",\n                        this._key,\n                        "",\n                        {\n                          nameTruncated: this._keyTrunc,\n                          valueTruncated: false,\n                          encoding: this.charset,\n                          mimeType: "text/plain"\n                        }\n                      );\n                    }\n                    this._key = "";\n                    this._val = "";\n                    this._keyTrunc = false;\n                    this._valTrunc = false;\n                    this._bytesKey = 0;\n                    this._bytesVal = 0;\n                    if (++this._fields >= this.fieldsLimit) {\n                      this.emit("fieldsLimit");\n                      return cb();\n                    }\n                    continue;\n                  case 43:\n                    if (this._lastPos < i)\n                      this._key += chunk.latin1Slice(this._lastPos, i);\n                    this._key += " ";\n                    this._lastPos = i + 1;\n                    break;\n                  case 37:\n                    if (this._encode === 0)\n                      this._encode = 1;\n                    if (this._lastPos < i)\n                      this._key += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = i + 1;\n                    this._byte = -1;\n                    i = readPctEnc(this, chunk, i + 1, len);\n                    if (i === -1)\n                      return cb(new Error("Malformed urlencoded form"));\n                    if (i >= len)\n                      return cb();\n                    ++this._bytesKey;\n                    i = skipKeyBytes(this, chunk, i, len);\n                    continue;\n                }\n                ++i;\n                ++this._bytesKey;\n                i = skipKeyBytes(this, chunk, i, len);\n              }\n              if (this._lastPos < i)\n                this._key += chunk.latin1Slice(this._lastPos, i);\n            } else {\n              i = skipValBytes(this, chunk, i, len);\n              while (i < len) {\n                switch (chunk[i]) {\n                  case 38:\n                    if (this._lastPos < i)\n                      this._val += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = ++i;\n                    this._inKey = true;\n                    this._val = this._decoder(this._val, this._encode);\n                    this._encode = 0;\n                    if (this._bytesKey > 0 || this._bytesVal > 0) {\n                      this.emit(\n                        "field",\n                        this._key,\n                        this._val,\n                        {\n                          nameTruncated: this._keyTrunc,\n                          valueTruncated: this._valTrunc,\n                          encoding: this.charset,\n                          mimeType: "text/plain"\n                        }\n                      );\n                    }\n                    this._key = "";\n                    this._val = "";\n                    this._keyTrunc = false;\n                    this._valTrunc = false;\n                    this._bytesKey = 0;\n                    this._bytesVal = 0;\n                    if (++this._fields >= this.fieldsLimit) {\n                      this.emit("fieldsLimit");\n                      return cb();\n                    }\n                    continue main;\n                  case 43:\n                    if (this._lastPos < i)\n                      this._val += chunk.latin1Slice(this._lastPos, i);\n                    this._val += " ";\n                    this._lastPos = i + 1;\n                    break;\n                  case 37:\n                    if (this._encode === 0)\n                      this._encode = 1;\n                    if (this._lastPos < i)\n                      this._val += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = i + 1;\n                    this._byte = -1;\n                    i = readPctEnc(this, chunk, i + 1, len);\n                    if (i === -1)\n                      return cb(new Error("Malformed urlencoded form"));\n                    if (i >= len)\n                      return cb();\n                    ++this._bytesVal;\n                    i = skipValBytes(this, chunk, i, len);\n                    continue;\n                }\n                ++i;\n                ++this._bytesVal;\n                i = skipValBytes(this, chunk, i, len);\n              }\n              if (this._lastPos < i)\n                this._val += chunk.latin1Slice(this._lastPos, i);\n            }\n          }\n        cb();\n      }\n      _final(cb) {\n        if (this._byte !== -2)\n          return cb(new Error("Malformed urlencoded form"));\n        if (!this._inKey || this._bytesKey > 0 || this._bytesVal > 0) {\n          if (this._inKey)\n            this._key = this._decoder(this._key, this._encode);\n          else\n            this._val = this._decoder(this._val, this._encode);\n          this.emit(\n            "field",\n            this._key,\n            this._val,\n            {\n              nameTruncated: this._keyTrunc,\n              valueTruncated: this._valTrunc,\n              encoding: this.charset,\n              mimeType: "text/plain"\n            }\n          );\n        }\n        cb();\n      }\n    };\n    __name(URLEncoded, "URLEncoded");\n    function readPctEnc(self, chunk, pos, len) {\n      if (pos >= len)\n        return len;\n      if (self._byte === -1) {\n        const hexUpper = HEX_VALUES[chunk[pos++]];\n        if (hexUpper === -1)\n          return -1;\n        if (hexUpper >= 8)\n          self._encode = 2;\n        if (pos < len) {\n          const hexLower = HEX_VALUES[chunk[pos++]];\n          if (hexLower === -1)\n            return -1;\n          if (self._inKey)\n            self._key += String.fromCharCode((hexUpper << 4) + hexLower);\n          else\n            self._val += String.fromCharCode((hexUpper << 4) + hexLower);\n          self._byte = -2;\n          self._lastPos = pos;\n        } else {\n          self._byte = hexUpper;\n        }\n      } else {\n        const hexLower = HEX_VALUES[chunk[pos++]];\n        if (hexLower === -1)\n          return -1;\n        if (self._inKey)\n          self._key += String.fromCharCode((self._byte << 4) + hexLower);\n        else\n          self._val += String.fromCharCode((self._byte << 4) + hexLower);\n        self._byte = -2;\n        self._lastPos = pos;\n      }\n      return pos;\n    }\n    __name(readPctEnc, "readPctEnc");\n    function skipKeyBytes(self, chunk, pos, len) {\n      if (self._bytesKey > self.fieldNameSizeLimit) {\n        if (!self._keyTrunc) {\n          if (self._lastPos < pos)\n            self._key += chunk.latin1Slice(self._lastPos, pos - 1);\n        }\n        self._keyTrunc = true;\n        for (; pos < len; ++pos) {\n          const code = chunk[pos];\n          if (code === 61 || code === 38)\n            break;\n          ++self._bytesKey;\n        }\n        self._lastPos = pos;\n      }\n      return pos;\n    }\n    __name(skipKeyBytes, "skipKeyBytes");\n    function skipValBytes(self, chunk, pos, len) {\n      if (self._bytesVal > self.fieldSizeLimit) {\n        if (!self._valTrunc) {\n          if (self._lastPos < pos)\n            self._val += chunk.latin1Slice(self._lastPos, pos - 1);\n        }\n        self._valTrunc = true;\n        for (; pos < len; ++pos) {\n          if (chunk[pos] === 38)\n            break;\n          ++self._bytesVal;\n        }\n        self._lastPos = pos;\n      }\n      return pos;\n    }\n    __name(skipValBytes, "skipValBytes");\n    var HEX_VALUES = [\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      0,\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1\n    ];\n    module2.exports = URLEncoded;\n  }\n});\n\n// ../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/index.js\nvar require_lib = __commonJS({\n  "../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/index.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { parseContentType } = require_utils();\n    function getInstance(cfg) {\n      const headers = cfg.headers;\n      const conType = parseContentType(headers["content-type"]);\n      if (!conType)\n        throw new Error("Malformed content type");\n      for (const type of TYPES) {\n        const matched = type.detect(conType);\n        if (!matched)\n          continue;\n        const instanceCfg = {\n          limits: cfg.limits,\n          headers,\n          conType,\n          highWaterMark: void 0,\n          fileHwm: void 0,\n          defCharset: void 0,\n          defParamCharset: void 0,\n          preservePath: false\n        };\n        if (cfg.highWaterMark)\n          instanceCfg.highWaterMark = cfg.highWaterMark;\n        if (cfg.fileHwm)\n          instanceCfg.fileHwm = cfg.fileHwm;\n        instanceCfg.defCharset = cfg.defCharset;\n        instanceCfg.defParamCharset = cfg.defParamCharset;\n        instanceCfg.preservePath = cfg.preservePath;\n        return new type(instanceCfg);\n      }\n      throw new Error(`Unsupported content type: ${headers["content-type"]}`);\n    }\n    __name(getInstance, "getInstance");\n    var TYPES = [\n      require_multipart(),\n      require_urlencoded()\n    ].filter(function(typemod) {\n      return typeof typemod.detect === "function";\n    });\n    module2.exports = (cfg) => {\n      if (typeof cfg !== "object" || cfg === null)\n        cfg = {};\n      if (typeof cfg.headers !== "object" || cfg.headers === null || typeof cfg.headers["content-type"] !== "string") {\n        throw new Error("Missing Content-Type");\n      }\n      return getInstance(cfg);\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/dataURL.js\nvar require_dataURL = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/dataURL.js"(exports, module2) {\n    init_define_process();\n    var assert = require("assert");\n    var { atob: atob2 } = require("buffer");\n    var { isomorphicDecode } = require_util2();\n    var encoder = new TextEncoder();\n    var HTTP_TOKEN_CODEPOINTS = /^[!#$%&\'*+-.^_|~A-Za-z0-9]+$/;\n    var HTTP_WHITESPACE_REGEX = /(\\u000A|\\u000D|\\u0009|\\u0020)/;\n    var HTTP_QUOTED_STRING_TOKENS = /[\\u0009|\\u0020-\\u007E|\\u0080-\\u00FF]/;\n    function dataURLProcessor(dataURL) {\n      assert(dataURL.protocol === "data:");\n      let input = URLSerializer(dataURL, true);\n      input = input.slice(5);\n      const position = { position: 0 };\n      let mimeType = collectASequenceOfCodePointsFast(\n        ",",\n        input,\n        position\n      );\n      const mimeTypeLength = mimeType.length;\n      mimeType = removeASCIIWhitespace(mimeType, true, true);\n      if (position.position >= input.length) {\n        return "failure";\n      }\n      position.position++;\n      const encodedBody = input.slice(mimeTypeLength + 1);\n      let body = stringPercentDecode(encodedBody);\n      if (/;(\\u0020){0,}base64$/i.test(mimeType)) {\n        const stringBody = isomorphicDecode(body);\n        body = forgivingBase64(stringBody);\n        if (body === "failure") {\n          return "failure";\n        }\n        mimeType = mimeType.slice(0, -6);\n        mimeType = mimeType.replace(/(\\u0020)+$/, "");\n        mimeType = mimeType.slice(0, -1);\n      }\n      if (mimeType.startsWith(";")) {\n        mimeType = "text/plain" + mimeType;\n      }\n      let mimeTypeRecord = parseMIMEType(mimeType);\n      if (mimeTypeRecord === "failure") {\n        mimeTypeRecord = parseMIMEType("text/plain;charset=US-ASCII");\n      }\n      return { mimeType: mimeTypeRecord, body };\n    }\n    __name(dataURLProcessor, "dataURLProcessor");\n    function URLSerializer(url, excludeFragment = false) {\n      const href = url.href;\n      if (!excludeFragment) {\n        return href;\n      }\n      const hash = href.lastIndexOf("#");\n      if (hash === -1) {\n        return href;\n      }\n      return href.slice(0, hash);\n    }\n    __name(URLSerializer, "URLSerializer");\n    function collectASequenceOfCodePoints(condition, input, position) {\n      let result = "";\n      while (position.position < input.length && condition(input[position.position])) {\n        result += input[position.position];\n        position.position++;\n      }\n      return result;\n    }\n    __name(collectASequenceOfCodePoints, "collectASequenceOfCodePoints");\n    function collectASequenceOfCodePointsFast(char, input, position) {\n      const idx = input.indexOf(char, position.position);\n      const start = position.position;\n      if (idx === -1) {\n        position.position = input.length;\n        return input.slice(start);\n      }\n      position.position = idx;\n      return input.slice(start, position.position);\n    }\n    __name(collectASequenceOfCodePointsFast, "collectASequenceOfCodePointsFast");\n    function stringPercentDecode(input) {\n      const bytes = encoder.encode(input);\n      return percentDecode(bytes);\n    }\n    __name(stringPercentDecode, "stringPercentDecode");\n    function percentDecode(input) {\n      const output = [];\n      for (let i = 0; i < input.length; i++) {\n        const byte = input[i];\n        if (byte !== 37) {\n          output.push(byte);\n        } else if (byte === 37 && !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(input[i + 1], input[i + 2]))) {\n          output.push(37);\n        } else {\n          const nextTwoBytes = String.fromCharCode(input[i + 1], input[i + 2]);\n          const bytePoint = Number.parseInt(nextTwoBytes, 16);\n          output.push(bytePoint);\n          i += 2;\n        }\n      }\n      return Uint8Array.from(output);\n    }\n    __name(percentDecode, "percentDecode");\n    function parseMIMEType(input) {\n      input = removeHTTPWhitespace(input, true, true);\n      const position = { position: 0 };\n      const type = collectASequenceOfCodePointsFast(\n        "/",\n        input,\n        position\n      );\n      if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {\n        return "failure";\n      }\n      if (position.position > input.length) {\n        return "failure";\n      }\n      position.position++;\n      let subtype = collectASequenceOfCodePointsFast(\n        ";",\n        input,\n        position\n      );\n      subtype = removeHTTPWhitespace(subtype, false, true);\n      if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {\n        return "failure";\n      }\n      const typeLowercase = type.toLowerCase();\n      const subtypeLowercase = subtype.toLowerCase();\n      const mimeType = {\n        type: typeLowercase,\n        subtype: subtypeLowercase,\n        /** @type {Map<string, string>} */\n        parameters: /* @__PURE__ */ new Map(),\n        // https://mimesniff.spec.whatwg.org/#mime-type-essence\n        essence: `${typeLowercase}/${subtypeLowercase}`\n      };\n      while (position.position < input.length) {\n        position.position++;\n        collectASequenceOfCodePoints(\n          // https://fetch.spec.whatwg.org/#http-whitespace\n          (char) => HTTP_WHITESPACE_REGEX.test(char),\n          input,\n          position\n        );\n        let parameterName = collectASequenceOfCodePoints(\n          (char) => char !== ";" && char !== "=",\n          input,\n          position\n        );\n        parameterName = parameterName.toLowerCase();\n        if (position.position < input.length) {\n          if (input[position.position] === ";") {\n            continue;\n          }\n          position.position++;\n        }\n        if (position.position > input.length) {\n          break;\n        }\n        let parameterValue = null;\n        if (input[position.position] === \'"\') {\n          parameterValue = collectAnHTTPQuotedString(input, position, true);\n          collectASequenceOfCodePointsFast(\n            ";",\n            input,\n            position\n          );\n        } else {\n          parameterValue = collectASequenceOfCodePointsFast(\n            ";",\n            input,\n            position\n          );\n          parameterValue = removeHTTPWhitespace(parameterValue, false, true);\n          if (parameterValue.length === 0) {\n            continue;\n          }\n        }\n        if (parameterName.length !== 0 && HTTP_TOKEN_CODEPOINTS.test(parameterName) && (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) && !mimeType.parameters.has(parameterName)) {\n          mimeType.parameters.set(parameterName, parameterValue);\n        }\n      }\n      return mimeType;\n    }\n    __name(parseMIMEType, "parseMIMEType");\n    function forgivingBase64(data) {\n      data = data.replace(/[\\u0009\\u000A\\u000C\\u000D\\u0020]/g, "");\n      if (data.length % 4 === 0) {\n        data = data.replace(/=?=$/, "");\n      }\n      if (data.length % 4 === 1) {\n        return "failure";\n      }\n      if (/[^+/0-9A-Za-z]/.test(data)) {\n        return "failure";\n      }\n      const binary = atob2(data);\n      const bytes = new Uint8Array(binary.length);\n      for (let byte = 0; byte < binary.length; byte++) {\n        bytes[byte] = binary.charCodeAt(byte);\n      }\n      return bytes;\n    }\n    __name(forgivingBase64, "forgivingBase64");\n    function collectAnHTTPQuotedString(input, position, extractValue) {\n      const positionStart = position.position;\n      let value = "";\n      assert(input[position.position] === \'"\');\n      position.position++;\n      while (true) {\n        value += collectASequenceOfCodePoints(\n          (char) => char !== \'"\' && char !== "\\\\",\n          input,\n          position\n        );\n        if (position.position >= input.length) {\n          break;\n        }\n        const quoteOrBackslash = input[position.position];\n        position.position++;\n        if (quoteOrBackslash === "\\\\") {\n          if (position.position >= input.length) {\n            value += "\\\\";\n            break;\n          }\n          value += input[position.position];\n          position.position++;\n        } else {\n          assert(quoteOrBackslash === \'"\');\n          break;\n        }\n      }\n      if (extractValue) {\n        return value;\n      }\n      return input.slice(positionStart, position.position);\n    }\n    __name(collectAnHTTPQuotedString, "collectAnHTTPQuotedString");\n    function serializeAMimeType(mimeType) {\n      assert(mimeType !== "failure");\n      const { parameters, essence } = mimeType;\n      let serialization = essence;\n      for (let [name, value] of parameters.entries()) {\n        serialization += ";";\n        serialization += name;\n        serialization += "=";\n        if (!HTTP_TOKEN_CODEPOINTS.test(value)) {\n          value = value.replace(/(\\\\|")/g, "\\\\$1");\n          value = \'"\' + value;\n          value += \'"\';\n        }\n        serialization += value;\n      }\n      return serialization;\n    }\n    __name(serializeAMimeType, "serializeAMimeType");\n    function isHTTPWhiteSpace(char) {\n      return char === "\\r" || char === "\\n" || char === "\t" || char === " ";\n    }\n    __name(isHTTPWhiteSpace, "isHTTPWhiteSpace");\n    function removeHTTPWhitespace(str, leading = true, trailing = true) {\n      let lead = 0;\n      let trail = str.length - 1;\n      if (leading) {\n        for (; lead < str.length && isHTTPWhiteSpace(str[lead]); lead++)\n          ;\n      }\n      if (trailing) {\n        for (; trail > 0 && isHTTPWhiteSpace(str[trail]); trail--)\n          ;\n      }\n      return str.slice(lead, trail + 1);\n    }\n    __name(removeHTTPWhitespace, "removeHTTPWhitespace");\n    function isASCIIWhitespace(char) {\n      return char === "\\r" || char === "\\n" || char === "\t" || char === "\\f" || char === " ";\n    }\n    __name(isASCIIWhitespace, "isASCIIWhitespace");\n    function removeASCIIWhitespace(str, leading = true, trailing = true) {\n      let lead = 0;\n      let trail = str.length - 1;\n      if (leading) {\n        for (; lead < str.length && isASCIIWhitespace(str[lead]); lead++)\n          ;\n      }\n      if (trailing) {\n        for (; trail > 0 && isASCIIWhitespace(str[trail]); trail--)\n          ;\n      }\n      return str.slice(lead, trail + 1);\n    }\n    __name(removeASCIIWhitespace, "removeASCIIWhitespace");\n    module2.exports = {\n      dataURLProcessor,\n      URLSerializer,\n      collectASequenceOfCodePoints,\n      collectASequenceOfCodePointsFast,\n      stringPercentDecode,\n      parseMIMEType,\n      collectAnHTTPQuotedString,\n      serializeAMimeType\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/file.js\nvar require_file = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/file.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Blob: Blob2, File: NativeFile } = require("buffer");\n    var { types } = require("util");\n    var { kState } = require_symbols();\n    var { isBlobLike } = require_util2();\n    var { webidl } = require_webidl();\n    var { parseMIMEType, serializeAMimeType } = require_dataURL();\n    var { kEnumerableProperty } = require_util();\n    var File2 = class extends Blob2 {\n      constructor(fileBits, fileName, options = {}) {\n        webidl.argumentLengthCheck(arguments, 2, { header: "File constructor" });\n        fileBits = webidl.converters["sequence<BlobPart>"](fileBits);\n        fileName = webidl.converters.USVString(fileName);\n        options = webidl.converters.FilePropertyBag(options);\n        const n = fileName;\n        let t = options.type;\n        let d;\n        substep: {\n          if (t) {\n            t = parseMIMEType(t);\n            if (t === "failure") {\n              t = "";\n              break substep;\n            }\n            t = serializeAMimeType(t).toLowerCase();\n          }\n          d = options.lastModified;\n        }\n        super(processBlobParts(fileBits, options), { type: t });\n        this[kState] = {\n          name: n,\n          lastModified: d,\n          type: t\n        };\n      }\n      get name() {\n        webidl.brandCheck(this, File2);\n        return this[kState].name;\n      }\n      get lastModified() {\n        webidl.brandCheck(this, File2);\n        return this[kState].lastModified;\n      }\n      get type() {\n        webidl.brandCheck(this, File2);\n        return this[kState].type;\n      }\n    };\n    __name(File2, "File");\n    var FileLike = class {\n      constructor(blobLike, fileName, options = {}) {\n        const n = fileName;\n        const t = options.type;\n        const d = options.lastModified ?? Date.now();\n        this[kState] = {\n          blobLike,\n          name: n,\n          type: t,\n          lastModified: d\n        };\n      }\n      stream(...args) {\n        webidl.brandCheck(this, FileLike);\n        return this[kState].blobLike.stream(...args);\n      }\n      arrayBuffer(...args) {\n        webidl.brandCheck(this, FileLike);\n        return this[kState].blobLike.arrayBuffer(...args);\n      }\n      slice(...args) {\n        webidl.brandCheck(this, FileLike);\n        return this[kState].blobLike.slice(...args);\n      }\n      text(...args) {\n        webidl.brandCheck(this, FileLike);\n        return this[kState].blobLike.text(...args);\n      }\n      get size() {\n        webidl.brandCheck(this, FileLike);\n        return this[kState].blobLike.size;\n      }\n      get type() {\n        webidl.brandCheck(this, FileLike);\n        return this[kState].blobLike.type;\n      }\n      get name() {\n        webidl.brandCheck(this, FileLike);\n        return this[kState].name;\n      }\n      get lastModified() {\n        webidl.brandCheck(this, FileLike);\n        return this[kState].lastModified;\n      }\n      get [Symbol.toStringTag]() {\n        return "File";\n      }\n    };\n    __name(FileLike, "FileLike");\n    Object.defineProperties(File2.prototype, {\n      [Symbol.toStringTag]: {\n        value: "File",\n        configurable: true\n      },\n      name: kEnumerableProperty,\n      lastModified: kEnumerableProperty\n    });\n    webidl.converters.Blob = webidl.interfaceConverter(Blob2);\n    webidl.converters.BlobPart = function(V, opts) {\n      if (webidl.util.Type(V) === "Object") {\n        if (isBlobLike(V)) {\n          return webidl.converters.Blob(V, { strict: false });\n        }\n        if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {\n          return webidl.converters.BufferSource(V, opts);\n        }\n      }\n      return webidl.converters.USVString(V, opts);\n    };\n    webidl.converters["sequence<BlobPart>"] = webidl.sequenceConverter(\n      webidl.converters.BlobPart\n    );\n    webidl.converters.FilePropertyBag = webidl.dictionaryConverter([\n      {\n        key: "lastModified",\n        converter: webidl.converters["long long"],\n        get defaultValue() {\n          return Date.now();\n        }\n      },\n      {\n        key: "type",\n        converter: webidl.converters.DOMString,\n        defaultValue: ""\n      },\n      {\n        key: "endings",\n        converter: (value) => {\n          value = webidl.converters.DOMString(value);\n          value = value.toLowerCase();\n          if (value !== "native") {\n            value = "transparent";\n          }\n          return value;\n        },\n        defaultValue: "transparent"\n      }\n    ]);\n    function processBlobParts(parts, options) {\n      const bytes = [];\n      for (const element of parts) {\n        if (typeof element === "string") {\n          let s = element;\n          if (options.endings === "native") {\n            s = convertLineEndingsNative(s);\n          }\n          bytes.push(new TextEncoder().encode(s));\n        } else if (types.isAnyArrayBuffer(element) || types.isTypedArray(element)) {\n          if (!element.buffer) {\n            bytes.push(new Uint8Array(element));\n          } else {\n            bytes.push(\n              new Uint8Array(element.buffer, element.byteOffset, element.byteLength)\n            );\n          }\n        } else if (isBlobLike(element)) {\n          bytes.push(element);\n        }\n      }\n      return bytes;\n    }\n    __name(processBlobParts, "processBlobParts");\n    function convertLineEndingsNative(s) {\n      let nativeLineEnding = "\\n";\n      if (define_process_default.platform === "win32") {\n        nativeLineEnding = "\\r\\n";\n      }\n      return s.replace(/\\r?\\n/g, nativeLineEnding);\n    }\n    __name(convertLineEndingsNative, "convertLineEndingsNative");\n    function isFileLike(object) {\n      return NativeFile && object instanceof NativeFile || object instanceof File2 || object && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && object[Symbol.toStringTag] === "File";\n    }\n    __name(isFileLike, "isFileLike");\n    module2.exports = { File: File2, FileLike, isFileLike };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/formdata.js\nvar require_formdata = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/formdata.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { isBlobLike, toUSVString, makeIterator } = require_util2();\n    var { kState } = require_symbols();\n    var { File: UndiciFile, FileLike, isFileLike } = require_file();\n    var { webidl } = require_webidl();\n    var { Blob: Blob2, File: NativeFile } = require("buffer");\n    var File2 = NativeFile ?? UndiciFile;\n    var FormData2 = class {\n      constructor(form) {\n        if (form !== void 0) {\n          throw webidl.errors.conversionFailed({\n            prefix: "FormData constructor",\n            argument: "Argument 1",\n            types: ["undefined"]\n          });\n        }\n        this[kState] = [];\n      }\n      append(name, value, filename = void 0) {\n        webidl.brandCheck(this, FormData2);\n        webidl.argumentLengthCheck(arguments, 2, { header: "FormData.append" });\n        if (arguments.length === 3 && !isBlobLike(value)) {\n          throw new TypeError(\n            "Failed to execute \'append\' on \'FormData\': parameter 2 is not of type \'Blob\'"\n          );\n        }\n        name = webidl.converters.USVString(name);\n        value = isBlobLike(value) ? webidl.converters.Blob(value, { strict: false }) : webidl.converters.USVString(value);\n        filename = arguments.length === 3 ? webidl.converters.USVString(filename) : void 0;\n        const entry = makeEntry(name, value, filename);\n        this[kState].push(entry);\n      }\n      delete(name) {\n        webidl.brandCheck(this, FormData2);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.delete" });\n        name = webidl.converters.USVString(name);\n        this[kState] = this[kState].filter((entry) => entry.name !== name);\n      }\n      get(name) {\n        webidl.brandCheck(this, FormData2);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.get" });\n        name = webidl.converters.USVString(name);\n        const idx = this[kState].findIndex((entry) => entry.name === name);\n        if (idx === -1) {\n          return null;\n        }\n        return this[kState][idx].value;\n      }\n      getAll(name) {\n        webidl.brandCheck(this, FormData2);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.getAll" });\n        name = webidl.converters.USVString(name);\n        return this[kState].filter((entry) => entry.name === name).map((entry) => entry.value);\n      }\n      has(name) {\n        webidl.brandCheck(this, FormData2);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.has" });\n        name = webidl.converters.USVString(name);\n        return this[kState].findIndex((entry) => entry.name === name) !== -1;\n      }\n      set(name, value, filename = void 0) {\n        webidl.brandCheck(this, FormData2);\n        webidl.argumentLengthCheck(arguments, 2, { header: "FormData.set" });\n        if (arguments.length === 3 && !isBlobLike(value)) {\n          throw new TypeError(\n            "Failed to execute \'set\' on \'FormData\': parameter 2 is not of type \'Blob\'"\n          );\n        }\n        name = webidl.converters.USVString(name);\n        value = isBlobLike(value) ? webidl.converters.Blob(value, { strict: false }) : webidl.converters.USVString(value);\n        filename = arguments.length === 3 ? toUSVString(filename) : void 0;\n        const entry = makeEntry(name, value, filename);\n        const idx = this[kState].findIndex((entry2) => entry2.name === name);\n        if (idx !== -1) {\n          this[kState] = [\n            ...this[kState].slice(0, idx),\n            entry,\n            ...this[kState].slice(idx + 1).filter((entry2) => entry2.name !== name)\n          ];\n        } else {\n          this[kState].push(entry);\n        }\n      }\n      entries() {\n        webidl.brandCheck(this, FormData2);\n        return makeIterator(\n          () => this[kState].map((pair) => [pair.name, pair.value]),\n          "FormData",\n          "key+value"\n        );\n      }\n      keys() {\n        webidl.brandCheck(this, FormData2);\n        return makeIterator(\n          () => this[kState].map((pair) => [pair.name, pair.value]),\n          "FormData",\n          "key"\n        );\n      }\n      values() {\n        webidl.brandCheck(this, FormData2);\n        return makeIterator(\n          () => this[kState].map((pair) => [pair.name, pair.value]),\n          "FormData",\n          "value"\n        );\n      }\n      /**\n       * @param {(value: string, key: string, self: FormData) => void} callbackFn\n       * @param {unknown} thisArg\n       */\n      forEach(callbackFn, thisArg = globalThis) {\n        webidl.brandCheck(this, FormData2);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.forEach" });\n        if (typeof callbackFn !== "function") {\n          throw new TypeError(\n            "Failed to execute \'forEach\' on \'FormData\': parameter 1 is not of type \'Function\'."\n          );\n        }\n        for (const [key, value] of this) {\n          callbackFn.apply(thisArg, [value, key, this]);\n        }\n      }\n    };\n    __name(FormData2, "FormData");\n    FormData2.prototype[Symbol.iterator] = FormData2.prototype.entries;\n    Object.defineProperties(FormData2.prototype, {\n      [Symbol.toStringTag]: {\n        value: "FormData",\n        configurable: true\n      }\n    });\n    function makeEntry(name, value, filename) {\n      name = Buffer.from(name).toString("utf8");\n      if (typeof value === "string") {\n        value = Buffer.from(value).toString("utf8");\n      } else {\n        if (!isFileLike(value)) {\n          value = value instanceof Blob2 ? new File2([value], "blob", { type: value.type }) : new FileLike(value, "blob", { type: value.type });\n        }\n        if (filename !== void 0) {\n          const options = {\n            type: value.type,\n            lastModified: value.lastModified\n          };\n          value = NativeFile && value instanceof NativeFile || value instanceof UndiciFile ? new File2([value], filename, options) : new FileLike(value, filename, options);\n        }\n      }\n      return { name, value };\n    }\n    __name(makeEntry, "makeEntry");\n    module2.exports = { FormData: FormData2 };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/body.js\nvar require_body = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/body.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var Busboy = require_lib();\n    var util = require_util();\n    var {\n      ReadableStreamFrom,\n      isBlobLike,\n      isReadableStreamLike,\n      readableStreamClose,\n      createDeferredPromise,\n      fullyReadBody\n    } = require_util2();\n    var { FormData: FormData2 } = require_formdata();\n    var { kState } = require_symbols();\n    var { webidl } = require_webidl();\n    var { DOMException, structuredClone } = require_constants();\n    var { Blob: Blob2, File: NativeFile } = require("buffer");\n    var { kBodyUsed } = require_symbols2();\n    var assert = require("assert");\n    var { isErrored } = require_util();\n    var { isUint8Array, isArrayBuffer } = require_util_types();\n    var { File: UndiciFile } = require_file();\n    var { parseMIMEType, serializeAMimeType } = require_dataURL();\n    var ReadableStream = globalThis.ReadableStream;\n    var File2 = NativeFile ?? UndiciFile;\n    function extractBody(object, keepalive = false) {\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      let stream = null;\n      if (object instanceof ReadableStream) {\n        stream = object;\n      } else if (isBlobLike(object)) {\n        stream = object.stream();\n      } else {\n        stream = new ReadableStream({\n          async pull(controller) {\n            controller.enqueue(\n              typeof source === "string" ? new TextEncoder().encode(source) : source\n            );\n            queueMicrotask(() => readableStreamClose(controller));\n          },\n          start() {\n          },\n          type: void 0\n        });\n      }\n      assert(isReadableStreamLike(stream));\n      let action = null;\n      let source = null;\n      let length = null;\n      let type = null;\n      if (typeof object === "string") {\n        source = object;\n        type = "text/plain;charset=UTF-8";\n      } else if (object instanceof URLSearchParams) {\n        source = object.toString();\n        type = "application/x-www-form-urlencoded;charset=UTF-8";\n      } else if (isArrayBuffer(object)) {\n        source = new Uint8Array(object.slice());\n      } else if (ArrayBuffer.isView(object)) {\n        source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength));\n      } else if (util.isFormDataLike(object)) {\n        const boundary = `----formdata-undici-${Math.random()}`.replace(".", "").slice(0, 32);\n        const prefix = `--${boundary}\\r\nContent-Disposition: form-data`;\n        const escape = /* @__PURE__ */ __name((str) => str.replace(/\\n/g, "%0A").replace(/\\r/g, "%0D").replace(/"/g, "%22"), "escape");\n        const normalizeLinefeeds = /* @__PURE__ */ __name((value) => value.replace(/\\r?\\n|\\r/g, "\\r\\n"), "normalizeLinefeeds");\n        const enc = new TextEncoder();\n        const blobParts = [];\n        const rn = new Uint8Array([13, 10]);\n        length = 0;\n        let hasUnknownSizeValue = false;\n        for (const [name, value] of object) {\n          if (typeof value === "string") {\n            const chunk2 = enc.encode(prefix + `; name="${escape(normalizeLinefeeds(name))}"\\r\n\\r\n${normalizeLinefeeds(value)}\\r\n`);\n            blobParts.push(chunk2);\n            length += chunk2.byteLength;\n          } else {\n            const chunk2 = enc.encode(`${prefix}; name="${escape(normalizeLinefeeds(name))}"` + (value.name ? `; filename="${escape(value.name)}"` : "") + `\\r\nContent-Type: ${value.type || "application/octet-stream"}\\r\n\\r\n`);\n            blobParts.push(chunk2, value, rn);\n            if (typeof value.size === "number") {\n              length += chunk2.byteLength + value.size + rn.byteLength;\n            } else {\n              hasUnknownSizeValue = true;\n            }\n          }\n        }\n        const chunk = enc.encode(`--${boundary}--`);\n        blobParts.push(chunk);\n        length += chunk.byteLength;\n        if (hasUnknownSizeValue) {\n          length = null;\n        }\n        source = object;\n        action = /* @__PURE__ */ __name(async function* () {\n          for (const part of blobParts) {\n            if (part.stream) {\n              yield* part.stream();\n            } else {\n              yield part;\n            }\n          }\n        }, "action");\n        type = "multipart/form-data; boundary=" + boundary;\n      } else if (isBlobLike(object)) {\n        source = object;\n        length = object.size;\n        if (object.type) {\n          type = object.type;\n        }\n      } else if (typeof object[Symbol.asyncIterator] === "function") {\n        if (keepalive) {\n          throw new TypeError("keepalive");\n        }\n        if (util.isDisturbed(object) || object.locked) {\n          throw new TypeError(\n            "Response body object should not be disturbed or locked"\n          );\n        }\n        stream = object instanceof ReadableStream ? object : ReadableStreamFrom(object);\n      }\n      if (typeof source === "string" || util.isBuffer(source)) {\n        length = Buffer.byteLength(source);\n      }\n      if (action != null) {\n        let iterator;\n        stream = new ReadableStream({\n          async start() {\n            iterator = action(object)[Symbol.asyncIterator]();\n          },\n          async pull(controller) {\n            const { value, done } = await iterator.next();\n            if (done) {\n              queueMicrotask(() => {\n                controller.close();\n              });\n            } else {\n              if (!isErrored(stream)) {\n                controller.enqueue(new Uint8Array(value));\n              }\n            }\n            return controller.desiredSize > 0;\n          },\n          async cancel(reason) {\n            await iterator.return();\n          },\n          type: void 0\n        });\n      }\n      const body = { stream, source, length };\n      return [body, type];\n    }\n    __name(extractBody, "extractBody");\n    function safelyExtractBody(object, keepalive = false) {\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      if (object instanceof ReadableStream) {\n        assert(!util.isDisturbed(object), "The body has already been consumed.");\n        assert(!object.locked, "The stream is locked.");\n      }\n      return extractBody(object, keepalive);\n    }\n    __name(safelyExtractBody, "safelyExtractBody");\n    function cloneBody(body) {\n      const [out1, out2] = body.stream.tee();\n      const out2Clone = structuredClone(out2, { transfer: [out2] });\n      const [, finalClone] = out2Clone.tee();\n      body.stream = out1;\n      return {\n        stream: finalClone,\n        length: body.length,\n        source: body.source\n      };\n    }\n    __name(cloneBody, "cloneBody");\n    async function* consumeBody(body) {\n      if (body) {\n        if (isUint8Array(body)) {\n          yield body;\n        } else {\n          const stream = body.stream;\n          if (util.isDisturbed(stream)) {\n            throw new TypeError("The body has already been consumed.");\n          }\n          if (stream.locked) {\n            throw new TypeError("The stream is locked.");\n          }\n          stream[kBodyUsed] = true;\n          yield* stream;\n        }\n      }\n    }\n    __name(consumeBody, "consumeBody");\n    function throwIfAborted(state) {\n      if (state.aborted) {\n        throw new DOMException("The operation was aborted.", "AbortError");\n      }\n    }\n    __name(throwIfAborted, "throwIfAborted");\n    function bodyMixinMethods(instance) {\n      const methods = {\n        blob() {\n          return specConsumeBody(this, (bytes) => {\n            let mimeType = bodyMimeType(this);\n            if (mimeType === "failure") {\n              mimeType = "";\n            } else if (mimeType) {\n              mimeType = serializeAMimeType(mimeType);\n            }\n            return new Blob2([bytes], { type: mimeType });\n          }, instance);\n        },\n        arrayBuffer() {\n          return specConsumeBody(this, (bytes) => {\n            return new Uint8Array(bytes).buffer;\n          }, instance);\n        },\n        text() {\n          return specConsumeBody(this, utf8DecodeBytes, instance);\n        },\n        json() {\n          return specConsumeBody(this, parseJSONFromBytes, instance);\n        },\n        async formData() {\n          webidl.brandCheck(this, instance);\n          throwIfAborted(this[kState]);\n          const contentType = this.headers.get("Content-Type");\n          if (/multipart\\/form-data/.test(contentType)) {\n            const headers = {};\n            for (const [key, value] of this.headers)\n              headers[key.toLowerCase()] = value;\n            const responseFormData = new FormData2();\n            let busboy;\n            try {\n              busboy = Busboy({\n                headers,\n                defParamCharset: "utf8"\n              });\n            } catch (err) {\n              throw new DOMException(`${err}`, "AbortError");\n            }\n            busboy.on("field", (name, value) => {\n              responseFormData.append(name, value);\n            });\n            busboy.on("file", (name, value, info) => {\n              const { filename, encoding, mimeType } = info;\n              const chunks = [];\n              if (encoding === "base64" || encoding.toLowerCase() === "base64") {\n                let base64chunk = "";\n                value.on("data", (chunk) => {\n                  base64chunk += chunk.toString().replace(/[\\r\\n]/gm, "");\n                  const end = base64chunk.length - base64chunk.length % 4;\n                  chunks.push(Buffer.from(base64chunk.slice(0, end), "base64"));\n                  base64chunk = base64chunk.slice(end);\n                });\n                value.on("end", () => {\n                  chunks.push(Buffer.from(base64chunk, "base64"));\n                  responseFormData.append(name, new File2(chunks, filename, { type: mimeType }));\n                });\n              } else {\n                value.on("data", (chunk) => {\n                  chunks.push(chunk);\n                });\n                value.on("end", () => {\n                  responseFormData.append(name, new File2(chunks, filename, { type: mimeType }));\n                });\n              }\n            });\n            const busboyResolve = new Promise((resolve, reject) => {\n              busboy.on("finish", resolve);\n              busboy.on("error", (err) => reject(new TypeError(err)));\n            });\n            if (this.body !== null)\n              for await (const chunk of consumeBody(this[kState].body))\n                busboy.write(chunk);\n            busboy.end();\n            await busboyResolve;\n            return responseFormData;\n          } else if (/application\\/x-www-form-urlencoded/.test(contentType)) {\n            let entries;\n            try {\n              let text = "";\n              const textDecoder = new TextDecoder("utf-8", { ignoreBOM: true });\n              for await (const chunk of consumeBody(this[kState].body)) {\n                if (!isUint8Array(chunk)) {\n                  throw new TypeError("Expected Uint8Array chunk");\n                }\n                text += textDecoder.decode(chunk, { stream: true });\n              }\n              text += textDecoder.decode();\n              entries = new URLSearchParams(text);\n            } catch (err) {\n              throw Object.assign(new TypeError(), { cause: err });\n            }\n            const formData = new FormData2();\n            for (const [name, value] of entries) {\n              formData.append(name, value);\n            }\n            return formData;\n          } else {\n            await Promise.resolve();\n            throwIfAborted(this[kState]);\n            throw webidl.errors.exception({\n              header: `${instance.name}.formData`,\n              message: "Could not parse content as FormData."\n            });\n          }\n        }\n      };\n      return methods;\n    }\n    __name(bodyMixinMethods, "bodyMixinMethods");\n    function mixinBody(prototype) {\n      Object.assign(prototype.prototype, bodyMixinMethods(prototype));\n    }\n    __name(mixinBody, "mixinBody");\n    async function specConsumeBody(object, convertBytesToJSValue, instance) {\n      webidl.brandCheck(object, instance);\n      throwIfAborted(object[kState]);\n      if (bodyUnusable(object[kState].body)) {\n        throw new TypeError("Body is unusable");\n      }\n      const promise = createDeferredPromise();\n      const errorSteps = /* @__PURE__ */ __name((error) => promise.reject(error), "errorSteps");\n      const successSteps = /* @__PURE__ */ __name((data) => {\n        try {\n          promise.resolve(convertBytesToJSValue(data));\n        } catch (e) {\n          errorSteps(e);\n        }\n      }, "successSteps");\n      if (object[kState].body == null) {\n        successSteps(new Uint8Array());\n        return promise.promise;\n      }\n      fullyReadBody(object[kState].body, successSteps, errorSteps);\n      return promise.promise;\n    }\n    __name(specConsumeBody, "specConsumeBody");\n    function bodyUnusable(body) {\n      return body != null && (body.stream.locked || util.isDisturbed(body.stream));\n    }\n    __name(bodyUnusable, "bodyUnusable");\n    function utf8DecodeBytes(buffer) {\n      if (buffer.length === 0) {\n        return "";\n      }\n      if (buffer[0] === 239 && buffer[1] === 187 && buffer[2] === 191) {\n        buffer = buffer.subarray(3);\n      }\n      const output = new TextDecoder().decode(buffer);\n      return output;\n    }\n    __name(utf8DecodeBytes, "utf8DecodeBytes");\n    function parseJSONFromBytes(bytes) {\n      return JSON.parse(utf8DecodeBytes(bytes));\n    }\n    __name(parseJSONFromBytes, "parseJSONFromBytes");\n    function bodyMimeType(object) {\n      const { headersList } = object[kState];\n      const contentType = headersList.get("content-type");\n      if (contentType === null) {\n        return "failure";\n      }\n      return parseMIMEType(contentType);\n    }\n    __name(bodyMimeType, "bodyMimeType");\n    module2.exports = {\n      extractBody,\n      safelyExtractBody,\n      cloneBody,\n      mixinBody\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/response.js\nvar require_response = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/response.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Headers: Headers3, HeadersList, fill } = require_headers();\n    var { extractBody, cloneBody, mixinBody } = require_body();\n    var util = require_util();\n    var { kEnumerableProperty } = util;\n    var {\n      isValidReasonPhrase,\n      isCancelled,\n      isAborted,\n      isBlobLike,\n      serializeJavascriptValueToJSONString,\n      isErrorLike,\n      isomorphicEncode\n    } = require_util2();\n    var {\n      redirectStatus,\n      nullBodyStatus,\n      DOMException\n    } = require_constants();\n    var { kState, kHeaders: kHeaders2, kGuard: kGuard2, kRealm } = require_symbols();\n    var { webidl } = require_webidl();\n    var { FormData: FormData2 } = require_formdata();\n    var { getGlobalOrigin } = require_global();\n    var { URLSerializer } = require_dataURL();\n    var { kHeadersList } = require_symbols2();\n    var assert = require("assert");\n    var { types } = require("util");\n    var ReadableStream = globalThis.ReadableStream || require("./streams").ReadableStream;\n    var Response3 = class {\n      // Creates network error Response.\n      static error() {\n        const relevantRealm = { settingsObject: {} };\n        const responseObject = new Response3();\n        responseObject[kState] = makeNetworkError();\n        responseObject[kRealm] = relevantRealm;\n        responseObject[kHeaders2][kHeadersList] = responseObject[kState].headersList;\n        responseObject[kHeaders2][kGuard2] = "immutable";\n        responseObject[kHeaders2][kRealm] = relevantRealm;\n        return responseObject;\n      }\n      // https://fetch.spec.whatwg.org/#dom-response-json\n      static json(data = void 0, init = {}) {\n        webidl.argumentLengthCheck(arguments, 1, { header: "Response.json" });\n        if (init !== null) {\n          init = webidl.converters.ResponseInit(init);\n        }\n        const bytes = new TextEncoder("utf-8").encode(\n          serializeJavascriptValueToJSONString(data)\n        );\n        const body = extractBody(bytes);\n        const relevantRealm = { settingsObject: {} };\n        const responseObject = new Response3();\n        responseObject[kRealm] = relevantRealm;\n        responseObject[kHeaders2][kGuard2] = "response";\n        responseObject[kHeaders2][kRealm] = relevantRealm;\n        initializeResponse(responseObject, init, { body: body[0], type: "application/json" });\n        return responseObject;\n      }\n      // Creates a redirect Response that redirects to url with status status.\n      static redirect(url, status = 302) {\n        const relevantRealm = { settingsObject: {} };\n        webidl.argumentLengthCheck(arguments, 1, { header: "Response.redirect" });\n        url = webidl.converters.USVString(url);\n        status = webidl.converters["unsigned short"](status);\n        let parsedURL;\n        try {\n          parsedURL = new URL(url, getGlobalOrigin());\n        } catch (err) {\n          throw Object.assign(new TypeError("Failed to parse URL from " + url), {\n            cause: err\n          });\n        }\n        if (!redirectStatus.includes(status)) {\n          throw new RangeError("Invalid status code " + status);\n        }\n        const responseObject = new Response3();\n        responseObject[kRealm] = relevantRealm;\n        responseObject[kHeaders2][kGuard2] = "immutable";\n        responseObject[kHeaders2][kRealm] = relevantRealm;\n        responseObject[kState].status = status;\n        const value = isomorphicEncode(URLSerializer(parsedURL));\n        responseObject[kState].headersList.append("location", value);\n        return responseObject;\n      }\n      // https://fetch.spec.whatwg.org/#dom-response\n      constructor(body = null, init = {}) {\n        if (body !== null) {\n          body = webidl.converters.BodyInit(body);\n        }\n        init = webidl.converters.ResponseInit(init);\n        this[kRealm] = { settingsObject: {} };\n        this[kState] = makeResponse({});\n        this[kHeaders2] = new Headers3();\n        this[kHeaders2][kGuard2] = "response";\n        this[kHeaders2][kHeadersList] = this[kState].headersList;\n        this[kHeaders2][kRealm] = this[kRealm];\n        let bodyWithType = null;\n        if (body != null) {\n          const [extractedBody, type] = extractBody(body);\n          bodyWithType = { body: extractedBody, type };\n        }\n        initializeResponse(this, init, bodyWithType);\n      }\n      // Returns response’s type, e.g., "cors".\n      get type() {\n        webidl.brandCheck(this, Response3);\n        return this[kState].type;\n      }\n      // Returns response’s URL, if it has one; otherwise the empty string.\n      get url() {\n        webidl.brandCheck(this, Response3);\n        const urlList = this[kState].urlList;\n        const url = urlList[urlList.length - 1] ?? null;\n        if (url === null) {\n          return "";\n        }\n        return URLSerializer(url, true);\n      }\n      // Returns whether response was obtained through a redirect.\n      get redirected() {\n        webidl.brandCheck(this, Response3);\n        return this[kState].urlList.length > 1;\n      }\n      // Returns response’s status.\n      get status() {\n        webidl.brandCheck(this, Response3);\n        return this[kState].status;\n      }\n      // Returns whether response’s status is an ok status.\n      get ok() {\n        webidl.brandCheck(this, Response3);\n        return this[kState].status >= 200 && this[kState].status <= 299;\n      }\n      // Returns response’s status message.\n      get statusText() {\n        webidl.brandCheck(this, Response3);\n        return this[kState].statusText;\n      }\n      // Returns response’s headers as Headers.\n      get headers() {\n        webidl.brandCheck(this, Response3);\n        return this[kHeaders2];\n      }\n      get body() {\n        webidl.brandCheck(this, Response3);\n        return this[kState].body ? this[kState].body.stream : null;\n      }\n      get bodyUsed() {\n        webidl.brandCheck(this, Response3);\n        return !!this[kState].body && util.isDisturbed(this[kState].body.stream);\n      }\n      // Returns a clone of response.\n      clone() {\n        webidl.brandCheck(this, Response3);\n        if (this.bodyUsed || this.body && this.body.locked) {\n          throw webidl.errors.exception({\n            header: "Response.clone",\n            message: "Body has already been consumed."\n          });\n        }\n        const clonedResponse = cloneResponse(this[kState]);\n        const clonedResponseObject = new Response3();\n        clonedResponseObject[kState] = clonedResponse;\n        clonedResponseObject[kRealm] = this[kRealm];\n        clonedResponseObject[kHeaders2][kHeadersList] = clonedResponse.headersList;\n        clonedResponseObject[kHeaders2][kGuard2] = this[kHeaders2][kGuard2];\n        clonedResponseObject[kHeaders2][kRealm] = this[kHeaders2][kRealm];\n        return clonedResponseObject;\n      }\n    };\n    __name(Response3, "Response");\n    mixinBody(Response3);\n    Object.defineProperties(Response3.prototype, {\n      type: kEnumerableProperty,\n      url: kEnumerableProperty,\n      status: kEnumerableProperty,\n      ok: kEnumerableProperty,\n      redirected: kEnumerableProperty,\n      statusText: kEnumerableProperty,\n      headers: kEnumerableProperty,\n      clone: kEnumerableProperty,\n      body: kEnumerableProperty,\n      bodyUsed: kEnumerableProperty,\n      [Symbol.toStringTag]: {\n        value: "Response",\n        configurable: true\n      }\n    });\n    Object.defineProperties(Response3, {\n      json: kEnumerableProperty,\n      redirect: kEnumerableProperty,\n      error: kEnumerableProperty\n    });\n    function cloneResponse(response) {\n      if (response.internalResponse) {\n        return filterResponse(\n          cloneResponse(response.internalResponse),\n          response.type\n        );\n      }\n      const newResponse = makeResponse({ ...response, body: null });\n      if (response.body != null) {\n        newResponse.body = cloneBody(response.body);\n      }\n      return newResponse;\n    }\n    __name(cloneResponse, "cloneResponse");\n    function makeResponse(init) {\n      return {\n        aborted: false,\n        rangeRequested: false,\n        timingAllowPassed: false,\n        requestIncludesCredentials: false,\n        type: "default",\n        status: 200,\n        timingInfo: null,\n        cacheState: "",\n        statusText: "",\n        ...init,\n        headersList: init.headersList ? new HeadersList(init.headersList) : new HeadersList(),\n        urlList: init.urlList ? [...init.urlList] : []\n      };\n    }\n    __name(makeResponse, "makeResponse");\n    function makeNetworkError(reason) {\n      const isError = isErrorLike(reason);\n      return makeResponse({\n        type: "error",\n        status: 0,\n        error: isError ? reason : new Error(reason ? String(reason) : reason),\n        aborted: reason && reason.name === "AbortError"\n      });\n    }\n    __name(makeNetworkError, "makeNetworkError");\n    function makeFilteredResponse(response, state) {\n      state = {\n        internalResponse: response,\n        ...state\n      };\n      return new Proxy(response, {\n        get(target, p) {\n          return p in state ? state[p] : target[p];\n        },\n        set(target, p, value) {\n          assert(!(p in state));\n          target[p] = value;\n          return true;\n        }\n      });\n    }\n    __name(makeFilteredResponse, "makeFilteredResponse");\n    function filterResponse(response, type) {\n      if (type === "basic") {\n        return makeFilteredResponse(response, {\n          type: "basic",\n          headersList: response.headersList\n        });\n      } else if (type === "cors") {\n        return makeFilteredResponse(response, {\n          type: "cors",\n          headersList: response.headersList\n        });\n      } else if (type === "opaque") {\n        return makeFilteredResponse(response, {\n          type: "opaque",\n          urlList: Object.freeze([]),\n          status: 0,\n          statusText: "",\n          body: null\n        });\n      } else if (type === "opaqueredirect") {\n        return makeFilteredResponse(response, {\n          type: "opaqueredirect",\n          status: 0,\n          statusText: "",\n          headersList: [],\n          body: null\n        });\n      } else {\n        assert(false);\n      }\n    }\n    __name(filterResponse, "filterResponse");\n    function makeAppropriateNetworkError(fetchParams) {\n      assert(isCancelled(fetchParams));\n      return isAborted(fetchParams) ? makeNetworkError(new DOMException("The operation was aborted.", "AbortError")) : makeNetworkError("Request was cancelled.");\n    }\n    __name(makeAppropriateNetworkError, "makeAppropriateNetworkError");\n    function initializeResponse(response, init, body) {\n      if (init.status !== null && (init.status < 200 || init.status > 599)) {\n        throw new RangeError(\'init["status"] must be in the range of 200 to 599, inclusive.\');\n      }\n      if ("statusText" in init && init.statusText != null) {\n        if (!isValidReasonPhrase(String(init.statusText))) {\n          throw new TypeError("Invalid statusText");\n        }\n      }\n      if ("status" in init && init.status != null) {\n        response[kState].status = init.status;\n      }\n      if ("statusText" in init && init.statusText != null) {\n        response[kState].statusText = init.statusText;\n      }\n      if ("headers" in init && init.headers != null) {\n        fill(response[kHeaders2], init.headers);\n      }\n      if (body) {\n        if (nullBodyStatus.includes(response.status)) {\n          throw webidl.errors.exception({\n            header: "Response constructor",\n            message: "Invalid response status code " + response.status\n          });\n        }\n        response[kState].body = body.body;\n        if (body.type != null && !response[kState].headersList.contains("Content-Type")) {\n          response[kState].headersList.append("content-type", body.type);\n        }\n      }\n    }\n    __name(initializeResponse, "initializeResponse");\n    webidl.converters.ReadableStream = webidl.interfaceConverter(\n      ReadableStream\n    );\n    webidl.converters.FormData = webidl.interfaceConverter(\n      FormData2\n    );\n    webidl.converters.URLSearchParams = webidl.interfaceConverter(\n      URLSearchParams\n    );\n    webidl.converters.XMLHttpRequestBodyInit = function(V) {\n      if (typeof V === "string") {\n        return webidl.converters.USVString(V);\n      }\n      if (isBlobLike(V)) {\n        return webidl.converters.Blob(V, { strict: false });\n      }\n      if (types.isAnyArrayBuffer(V) || types.isTypedArray(V) || types.isDataView(V)) {\n        return webidl.converters.BufferSource(V);\n      }\n      if (util.isFormDataLike(V)) {\n        return webidl.converters.FormData(V, { strict: false });\n      }\n      if (V instanceof URLSearchParams) {\n        return webidl.converters.URLSearchParams(V);\n      }\n      return webidl.converters.DOMString(V);\n    };\n    webidl.converters.BodyInit = function(V) {\n      if (V instanceof ReadableStream) {\n        return webidl.converters.ReadableStream(V);\n      }\n      if (V == null ? void 0 : V[Symbol.asyncIterator]) {\n        return V;\n      }\n      return webidl.converters.XMLHttpRequestBodyInit(V);\n    };\n    webidl.converters.ResponseInit = webidl.dictionaryConverter([\n      {\n        key: "status",\n        converter: webidl.converters["unsigned short"],\n        defaultValue: 200\n      },\n      {\n        key: "statusText",\n        converter: webidl.converters.ByteString,\n        defaultValue: ""\n      },\n      {\n        key: "headers",\n        converter: webidl.converters.HeadersInit\n      }\n    ]);\n    module2.exports = {\n      makeNetworkError,\n      makeResponse,\n      makeAppropriateNetworkError,\n      filterResponse,\n      Response: Response3,\n      cloneResponse\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/compat/dispatcher-weakref.js\nvar require_dispatcher_weakref = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/compat/dispatcher-weakref.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { kConnected, kSize } = require_symbols2();\n    var CompatWeakRef = class {\n      constructor(value) {\n        this.value = value;\n      }\n      deref() {\n        return this.value[kConnected] === 0 && this.value[kSize] === 0 ? void 0 : this.value;\n      }\n    };\n    __name(CompatWeakRef, "CompatWeakRef");\n    var CompatFinalizer = class {\n      constructor(finalizer) {\n        this.finalizer = finalizer;\n      }\n      register(dispatcher, key) {\n        dispatcher.on("disconnect", () => {\n          if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n            this.finalizer(key);\n          }\n        });\n      }\n    };\n    __name(CompatFinalizer, "CompatFinalizer");\n    module2.exports = function() {\n      return {\n        WeakRef: global.WeakRef || CompatWeakRef,\n        FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer\n      };\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/request.js\nvar require_request = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/request.js"(exports, module2) {\n    init_define_process();\n    global.FinalizationRegistry = function() {\n      return { register: function() {\n      } };\n    };\n    var { extractBody, mixinBody, cloneBody } = require_body();\n    var { Headers: Headers3, fill: fillHeaders, HeadersList } = require_headers();\n    var { FinalizationRegistry } = require_dispatcher_weakref()();\n    var util = require_util();\n    var {\n      isValidHTTPToken,\n      sameOrigin,\n      normalizeMethod,\n      makePolicyContainer\n    } = require_util2();\n    var {\n      forbiddenMethods,\n      corsSafeListedMethods,\n      referrerPolicy,\n      requestRedirect,\n      requestMode,\n      requestCredentials,\n      requestCache,\n      requestDuplex\n    } = require_constants();\n    var { kEnumerableProperty } = util;\n    var { kHeaders: kHeaders2, kSignal, kState, kGuard: kGuard2, kRealm } = require_symbols();\n    var { webidl } = require_webidl();\n    var { getGlobalOrigin } = require_global();\n    var { URLSerializer } = require_dataURL();\n    var { kHeadersList } = require_symbols2();\n    var assert = require("assert");\n    var { getMaxListeners, setMaxListeners, getEventListeners, defaultMaxListeners } = require("events");\n    var TransformStream = globalThis.TransformStream;\n    var kInit = Symbol("init");\n    var kAbortController = Symbol("abortController");\n    var requestFinalizer = new FinalizationRegistry(({ signal, abort }) => {\n      signal.removeEventListener("abort", abort);\n    });\n    var Request2 = class {\n      // https://fetch.spec.whatwg.org/#dom-request\n      constructor(input, init = {}) {\n        var _a, _b;\n        if (input === kInit) {\n          return;\n        }\n        webidl.argumentLengthCheck(arguments, 1, { header: "Request constructor" });\n        input = webidl.converters.RequestInfo(input);\n        init = webidl.converters.RequestInit(init);\n        this[kRealm] = {\n          settingsObject: {\n            baseUrl: getGlobalOrigin(),\n            get origin() {\n              var _a2;\n              return (_a2 = this.baseUrl) == null ? void 0 : _a2.origin;\n            },\n            policyContainer: makePolicyContainer()\n          }\n        };\n        let request = null;\n        let fallbackMode = null;\n        const baseUrl = this[kRealm].settingsObject.baseUrl;\n        let signal = null;\n        if (typeof input === "string") {\n          let parsedURL;\n          try {\n            parsedURL = new URL(input, baseUrl);\n          } catch (err) {\n            throw new TypeError("Failed to parse URL from " + input, { cause: err });\n          }\n          if (parsedURL.username || parsedURL.password) {\n            throw new TypeError(\n              "Request cannot be constructed from a URL that includes credentials: " + input\n            );\n          }\n          request = makeRequest({ urlList: [parsedURL] });\n          fallbackMode = "cors";\n        } else {\n          assert(input instanceof Request2);\n          request = input[kState];\n          signal = input[kSignal];\n        }\n        const origin = this[kRealm].settingsObject.origin;\n        let window = "client";\n        if (((_b = (_a = request.window) == null ? void 0 : _a.constructor) == null ? void 0 : _b.name) === "EnvironmentSettingsObject" && sameOrigin(request.window, origin)) {\n          window = request.window;\n        }\n        if (init.window != null) {\n          throw new TypeError(`\'window\' option \'${window}\' must be null`);\n        }\n        if ("window" in init) {\n          window = "no-window";\n        }\n        request = makeRequest({\n          // URL request’s URL.\n          // undici implementation note: this is set as the first item in request\'s urlList in makeRequest\n          // method request’s method.\n          method: request.method,\n          // header list A copy of request’s header list.\n          // undici implementation note: headersList is cloned in makeRequest\n          headersList: request.headersList,\n          // unsafe-request flag Set.\n          unsafeRequest: request.unsafeRequest,\n          // client This’s relevant settings object.\n          client: this[kRealm].settingsObject,\n          // window window.\n          window,\n          // priority request’s priority.\n          priority: request.priority,\n          // origin request’s origin. The propagation of the origin is only significant for navigation requests\n          // being handled by a service worker. In this scenario a request can have an origin that is different\n          // from the current client.\n          origin: request.origin,\n          // referrer request’s referrer.\n          referrer: request.referrer,\n          // referrer policy request’s referrer policy.\n          referrerPolicy: request.referrerPolicy,\n          // mode request’s mode.\n          mode: request.mode,\n          // credentials mode request’s credentials mode.\n          credentials: request.credentials,\n          // cache mode request’s cache mode.\n          cache: request.cache,\n          // redirect mode request’s redirect mode.\n          redirect: request.redirect,\n          // integrity metadata request’s integrity metadata.\n          integrity: request.integrity,\n          // keepalive request’s keepalive.\n          keepalive: request.keepalive,\n          // reload-navigation flag request’s reload-navigation flag.\n          reloadNavigation: request.reloadNavigation,\n          // history-navigation flag request’s history-navigation flag.\n          historyNavigation: request.historyNavigation,\n          // URL list A clone of request’s URL list.\n          urlList: [...request.urlList]\n        });\n        if (Object.keys(init).length > 0) {\n          if (request.mode === "navigate") {\n            request.mode = "same-origin";\n          }\n          request.reloadNavigation = false;\n          request.historyNavigation = false;\n          request.origin = "client";\n          request.referrer = "client";\n          request.referrerPolicy = "";\n          request.url = request.urlList[request.urlList.length - 1];\n          request.urlList = [request.url];\n        }\n        if (init.referrer !== void 0) {\n          const referrer = init.referrer;\n          if (referrer === "") {\n            request.referrer = "no-referrer";\n          } else {\n            let parsedReferrer;\n            try {\n              parsedReferrer = new URL(referrer, baseUrl);\n            } catch (err) {\n              throw new TypeError(`Referrer "${referrer}" is not a valid URL.`, { cause: err });\n            }\n            request.referrer = parsedReferrer;\n          }\n        }\n        if (init.referrerPolicy !== void 0) {\n          request.referrerPolicy = init.referrerPolicy;\n        }\n        let mode;\n        if (init.mode !== void 0) {\n          mode = init.mode;\n        } else {\n          mode = fallbackMode;\n        }\n        if (mode === "navigate") {\n          throw webidl.errors.exception({\n            header: "Request constructor",\n            message: "invalid request mode navigate."\n          });\n        }\n        if (mode != null) {\n          request.mode = mode;\n        }\n        if (init.credentials !== void 0) {\n          request.credentials = init.credentials;\n        }\n        if (init.cache !== void 0) {\n          request.cache = init.cache;\n        }\n        if (request.cache === "only-if-cached" && request.mode !== "same-origin") {\n          throw new TypeError(\n            "\'only-if-cached\' can be set only with \'same-origin\' mode"\n          );\n        }\n        if (init.redirect !== void 0) {\n          request.redirect = init.redirect;\n        }\n        if (init.integrity !== void 0 && init.integrity != null) {\n          request.integrity = String(init.integrity);\n        }\n        if (init.keepalive !== void 0) {\n          request.keepalive = Boolean(init.keepalive);\n        }\n        if (init.method !== void 0) {\n          let method = init.method;\n          if (!isValidHTTPToken(init.method)) {\n            throw TypeError(`\'${init.method}\' is not a valid HTTP method.`);\n          }\n          if (forbiddenMethods.indexOf(method.toUpperCase()) !== -1) {\n            throw TypeError(`\'${init.method}\' HTTP method is unsupported.`);\n          }\n          method = normalizeMethod(init.method);\n          request.method = method;\n        }\n        if (init.signal !== void 0) {\n          signal = init.signal;\n        }\n        this[kState] = request;\n        const ac = new AbortController();\n        this[kSignal] = ac.signal;\n        this[kSignal][kRealm] = this[kRealm];\n        if (signal != null) {\n          if (!signal || typeof signal.aborted !== "boolean" || typeof signal.addEventListener !== "function") {\n            throw new TypeError(\n              "Failed to construct \'Request\': member signal is not of type AbortSignal."\n            );\n          }\n          if (signal.aborted) {\n            ac.abort(signal.reason);\n          } else {\n            this[kAbortController] = ac;\n            const acRef = new WeakRef(ac);\n            const abort = /* @__PURE__ */ __name(function() {\n              const ac2 = acRef.deref();\n              if (ac2 !== void 0) {\n                ac2.abort(this.reason);\n              }\n            }, "abort");\n            try {\n              if (typeof getMaxListeners === "function" && getMaxListeners(signal) === defaultMaxListeners) {\n                setMaxListeners(100, signal);\n              } else if (getEventListeners(signal, "abort").length >= defaultMaxListeners) {\n                setMaxListeners(100, signal);\n              }\n            } catch {\n            }\n            signal.addEventListener("abort", abort, { once: true });\n            requestFinalizer.register(ac, { signal, abort });\n          }\n        }\n        this[kHeaders2] = new Headers3();\n        this[kHeaders2][kHeadersList] = request.headersList;\n        this[kHeaders2][kGuard2] = "request";\n        this[kHeaders2][kRealm] = this[kRealm];\n        if (mode === "no-cors") {\n          if (!corsSafeListedMethods.includes(request.method)) {\n            throw new TypeError(\n              `\'${request.method} is unsupported in no-cors mode.`\n            );\n          }\n          this[kHeaders2][kGuard2] = "request-no-cors";\n        }\n        if (Object.keys(init).length !== 0) {\n          let headers = new Headers3(this[kHeaders2]);\n          if (init.headers !== void 0) {\n            headers = init.headers;\n          }\n          this[kHeaders2][kHeadersList].clear();\n          if (headers.constructor.name === "Headers") {\n            for (const [key, val] of headers) {\n              this[kHeaders2].append(key, val);\n            }\n          } else {\n            fillHeaders(this[kHeaders2], headers);\n          }\n        }\n        const inputBody = input instanceof Request2 ? input[kState].body : null;\n        if ((init.body != null || inputBody != null) && (request.method === "GET" || request.method === "HEAD")) {\n          throw new TypeError("Request with GET/HEAD method cannot have body.");\n        }\n        let initBody = null;\n        if (init.body != null) {\n          const [extractedBody, contentType] = extractBody(\n            init.body,\n            request.keepalive\n          );\n          initBody = extractedBody;\n          if (contentType && !this[kHeaders2][kHeadersList].contains("content-type")) {\n            this[kHeaders2].append("content-type", contentType);\n          }\n        }\n        const inputOrInitBody = initBody ?? inputBody;\n        if (inputOrInitBody != null && inputOrInitBody.source == null) {\n          if (initBody != null && init.duplex == null) {\n            throw new TypeError("RequestInit: duplex option is required when sending a body.");\n          }\n          if (request.mode !== "same-origin" && request.mode !== "cors") {\n            throw new TypeError(\n              \'If request is made from ReadableStream, mode should be "same-origin" or "cors"\'\n            );\n          }\n          request.useCORSPreflightFlag = true;\n        }\n        let finalBody = inputOrInitBody;\n        if (initBody == null && inputBody != null) {\n          if (util.isDisturbed(inputBody.stream) || inputBody.stream.locked) {\n            throw new TypeError(\n              "Cannot construct a Request with a Request object that has already been used."\n            );\n          }\n          if (!TransformStream) {\n            TransformStream = require("./streams").TransformStream;\n          }\n          const identityTransform = new TransformStream();\n          inputBody.stream.pipeThrough(identityTransform);\n          finalBody = {\n            source: inputBody.source,\n            length: inputBody.length,\n            stream: identityTransform.readable\n          };\n        }\n        this[kState].body = finalBody;\n      }\n      // Returns request’s HTTP method, which is "GET" by default.\n      get method() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].method;\n      }\n      // Returns the URL of request as a string.\n      get url() {\n        webidl.brandCheck(this, Request2);\n        return URLSerializer(this[kState].url);\n      }\n      // Returns a Headers object consisting of the headers associated with request.\n      // Note that headers added in the network layer by the user agent will not\n      // be accounted for in this object, e.g., the "Host" header.\n      get headers() {\n        webidl.brandCheck(this, Request2);\n        return this[kHeaders2];\n      }\n      // Returns the kind of resource requested by request, e.g., "document"\n      // or "script".\n      get destination() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].destination;\n      }\n      // Returns the referrer of request. Its value can be a same-origin URL if\n      // explicitly set in init, the empty string to indicate no referrer, and\n      // "about:client" when defaulting to the global’s default. This is used\n      // during fetching to determine the value of the `Referer` header of the\n      // request being made.\n      get referrer() {\n        webidl.brandCheck(this, Request2);\n        if (this[kState].referrer === "no-referrer") {\n          return "";\n        }\n        if (this[kState].referrer === "client") {\n          return "about:client";\n        }\n        return this[kState].referrer.toString();\n      }\n      // Returns the referrer policy associated with request.\n      // This is used during fetching to compute the value of the request’s\n      // referrer.\n      get referrerPolicy() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].referrerPolicy;\n      }\n      // Returns the mode associated with request, which is a string indicating\n      // whether the request will use CORS, or will be restricted to same-origin\n      // URLs.\n      get mode() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].mode;\n      }\n      // Returns the credentials mode associated with request,\n      // which is a string indicating whether credentials will be sent with the\n      // request always, never, or only when sent to a same-origin URL.\n      get credentials() {\n        return this[kState].credentials;\n      }\n      // Returns the cache mode associated with request,\n      // which is a string indicating how the request will\n      // interact with the browser’s cache when fetching.\n      get cache() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].cache;\n      }\n      // Returns the redirect mode associated with request,\n      // which is a string indicating how redirects for the\n      // request will be handled during fetching. A request\n      // will follow redirects by default.\n      get redirect() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].redirect;\n      }\n      // Returns request’s subresource integrity metadata, which is a\n      // cryptographic hash of the resource being fetched. Its value\n      // consists of multiple hashes separated by whitespace. [SRI]\n      get integrity() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].integrity;\n      }\n      // Returns a boolean indicating whether or not request can outlive the\n      // global in which it was created.\n      get keepalive() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].keepalive;\n      }\n      // Returns a boolean indicating whether or not request is for a reload\n      // navigation.\n      get isReloadNavigation() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].reloadNavigation;\n      }\n      // Returns a boolean indicating whether or not request is for a history\n      // navigation (a.k.a. back-foward navigation).\n      get isHistoryNavigation() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].historyNavigation;\n      }\n      // Returns the signal associated with request, which is an AbortSignal\n      // object indicating whether or not request has been aborted, and its\n      // abort event handler.\n      get signal() {\n        webidl.brandCheck(this, Request2);\n        return this[kSignal];\n      }\n      get body() {\n        webidl.brandCheck(this, Request2);\n        return this[kState].body ? this[kState].body.stream : null;\n      }\n      get bodyUsed() {\n        webidl.brandCheck(this, Request2);\n        return !!this[kState].body && util.isDisturbed(this[kState].body.stream);\n      }\n      get duplex() {\n        webidl.brandCheck(this, Request2);\n        return "half";\n      }\n      // Returns a clone of request.\n      clone() {\n        var _a;\n        webidl.brandCheck(this, Request2);\n        if (this.bodyUsed || ((_a = this.body) == null ? void 0 : _a.locked)) {\n          throw new TypeError("unusable");\n        }\n        const clonedRequest = cloneRequest(this[kState]);\n        const clonedRequestObject = new Request2(kInit);\n        clonedRequestObject[kState] = clonedRequest;\n        clonedRequestObject[kRealm] = this[kRealm];\n        clonedRequestObject[kHeaders2] = new Headers3();\n        clonedRequestObject[kHeaders2][kHeadersList] = clonedRequest.headersList;\n        clonedRequestObject[kHeaders2][kGuard2] = this[kHeaders2][kGuard2];\n        clonedRequestObject[kHeaders2][kRealm] = this[kHeaders2][kRealm];\n        const ac = new AbortController();\n        if (this.signal.aborted) {\n          ac.abort(this.signal.reason);\n        } else {\n          this.signal.addEventListener(\n            "abort",\n            () => {\n              ac.abort(this.signal.reason);\n            },\n            { once: true }\n          );\n        }\n        clonedRequestObject[kSignal] = ac.signal;\n        return clonedRequestObject;\n      }\n    };\n    __name(Request2, "Request");\n    mixinBody(Request2);\n    function makeRequest(init) {\n      const request = {\n        method: "GET",\n        localURLsOnly: false,\n        unsafeRequest: false,\n        body: null,\n        client: null,\n        reservedClient: null,\n        replacesClientId: "",\n        window: "client",\n        keepalive: false,\n        serviceWorkers: "all",\n        initiator: "",\n        destination: "",\n        priority: null,\n        origin: "client",\n        policyContainer: "client",\n        referrer: "client",\n        referrerPolicy: "",\n        mode: "no-cors",\n        useCORSPreflightFlag: false,\n        credentials: "same-origin",\n        useCredentials: false,\n        cache: "default",\n        redirect: "follow",\n        integrity: "",\n        cryptoGraphicsNonceMetadata: "",\n        parserMetadata: "",\n        reloadNavigation: false,\n        historyNavigation: false,\n        userActivation: false,\n        taintedOrigin: false,\n        redirectCount: 0,\n        responseTainting: "basic",\n        preventNoCacheCacheControlHeaderModification: false,\n        done: false,\n        timingAllowFailed: false,\n        ...init,\n        headersList: init.headersList ? new HeadersList(init.headersList) : new HeadersList()\n      };\n      request.url = request.urlList[0];\n      return request;\n    }\n    __name(makeRequest, "makeRequest");\n    function cloneRequest(request) {\n      const newRequest = makeRequest({ ...request, body: null });\n      if (request.body != null) {\n        newRequest.body = cloneBody(request.body);\n      }\n      return newRequest;\n    }\n    __name(cloneRequest, "cloneRequest");\n    Object.defineProperties(Request2.prototype, {\n      method: kEnumerableProperty,\n      url: kEnumerableProperty,\n      headers: kEnumerableProperty,\n      redirect: kEnumerableProperty,\n      clone: kEnumerableProperty,\n      signal: kEnumerableProperty,\n      duplex: kEnumerableProperty,\n      destination: kEnumerableProperty,\n      body: kEnumerableProperty,\n      bodyUsed: kEnumerableProperty,\n      isHistoryNavigation: kEnumerableProperty,\n      isReloadNavigation: kEnumerableProperty,\n      keepalive: kEnumerableProperty,\n      integrity: kEnumerableProperty,\n      cache: kEnumerableProperty,\n      credentials: kEnumerableProperty,\n      attribute: kEnumerableProperty,\n      referrerPolicy: kEnumerableProperty,\n      referrer: kEnumerableProperty,\n      mode: kEnumerableProperty,\n      [Symbol.toStringTag]: {\n        value: "Request",\n        configurable: true\n      }\n    });\n    webidl.converters.Request = webidl.interfaceConverter(\n      Request2\n    );\n    webidl.converters.RequestInfo = function(V) {\n      if (typeof V === "string") {\n        return webidl.converters.USVString(V);\n      }\n      if (V instanceof Request2) {\n        return webidl.converters.Request(V);\n      }\n      return webidl.converters.USVString(V);\n    };\n    webidl.converters.AbortSignal = webidl.interfaceConverter(\n      AbortSignal\n    );\n    webidl.converters.RequestInit = webidl.dictionaryConverter([\n      {\n        key: "method",\n        converter: webidl.converters.ByteString\n      },\n      {\n        key: "headers",\n        converter: webidl.converters.HeadersInit\n      },\n      {\n        key: "body",\n        converter: webidl.nullableConverter(\n          webidl.converters.BodyInit\n        )\n      },\n      {\n        key: "referrer",\n        converter: webidl.converters.USVString\n      },\n      {\n        key: "referrerPolicy",\n        converter: webidl.converters.DOMString,\n        // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy\n        allowedValues: referrerPolicy\n      },\n      {\n        key: "mode",\n        converter: webidl.converters.DOMString,\n        // https://fetch.spec.whatwg.org/#concept-request-mode\n        allowedValues: requestMode\n      },\n      {\n        key: "credentials",\n        converter: webidl.converters.DOMString,\n        // https://fetch.spec.whatwg.org/#requestcredentials\n        allowedValues: requestCredentials\n      },\n      {\n        key: "cache",\n        converter: webidl.converters.DOMString,\n        // https://fetch.spec.whatwg.org/#requestcache\n        allowedValues: requestCache\n      },\n      {\n        key: "redirect",\n        converter: webidl.converters.DOMString,\n        // https://fetch.spec.whatwg.org/#requestredirect\n        allowedValues: requestRedirect\n      },\n      {\n        key: "integrity",\n        converter: webidl.converters.DOMString\n      },\n      {\n        key: "keepalive",\n        converter: webidl.converters.boolean\n      },\n      {\n        key: "signal",\n        converter: webidl.nullableConverter(\n          (signal) => webidl.converters.AbortSignal(\n            signal,\n            { strict: false }\n          )\n        )\n      },\n      {\n        key: "window",\n        converter: webidl.converters.any\n      },\n      {\n        key: "duplex",\n        converter: webidl.converters.DOMString,\n        allowedValues: requestDuplex\n      }\n    ]);\n    module2.exports = { Request: Request2, makeRequest };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/dispatcher.js\nvar require_dispatcher = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/dispatcher.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var EventEmitter = require("events");\n    var Dispatcher = class extends EventEmitter {\n      dispatch() {\n        throw new Error("not implemented");\n      }\n      close() {\n        throw new Error("not implemented");\n      }\n      destroy() {\n        throw new Error("not implemented");\n      }\n    };\n    __name(Dispatcher, "Dispatcher");\n    module2.exports = Dispatcher;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/dispatcher-base.js\nvar require_dispatcher_base = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/dispatcher-base.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var Dispatcher = require_dispatcher();\n    var {\n      ClientDestroyedError,\n      ClientClosedError,\n      InvalidArgumentError: InvalidArgumentError2\n    } = require_errors();\n    var { kDestroy, kClose, kDispatch, kInterceptors } = require_symbols2();\n    var kDestroyed = Symbol("destroyed");\n    var kClosed = Symbol("closed");\n    var kOnDestroyed = Symbol("onDestroyed");\n    var kOnClosed = Symbol("onClosed");\n    var kInterceptedDispatch = Symbol("Intercepted Dispatch");\n    var DispatcherBase = class extends Dispatcher {\n      constructor() {\n        super();\n        this[kDestroyed] = false;\n        this[kOnDestroyed] = null;\n        this[kClosed] = false;\n        this[kOnClosed] = [];\n      }\n      get destroyed() {\n        return this[kDestroyed];\n      }\n      get closed() {\n        return this[kClosed];\n      }\n      get interceptors() {\n        return this[kInterceptors];\n      }\n      set interceptors(newInterceptors) {\n        if (newInterceptors) {\n          for (let i = newInterceptors.length - 1; i >= 0; i--) {\n            const interceptor = this[kInterceptors][i];\n            if (typeof interceptor !== "function") {\n              throw new InvalidArgumentError2("interceptor must be an function");\n            }\n          }\n        }\n        this[kInterceptors] = newInterceptors;\n      }\n      close(callback) {\n        if (callback === void 0) {\n          return new Promise((resolve, reject) => {\n            this.close((err, data) => {\n              return err ? reject(err) : resolve(data);\n            });\n          });\n        }\n        if (typeof callback !== "function") {\n          throw new InvalidArgumentError2("invalid callback");\n        }\n        if (this[kDestroyed]) {\n          queueMicrotask(() => callback(new ClientDestroyedError(), null));\n          return;\n        }\n        if (this[kClosed]) {\n          if (this[kOnClosed]) {\n            this[kOnClosed].push(callback);\n          } else {\n            queueMicrotask(() => callback(null, null));\n          }\n          return;\n        }\n        this[kClosed] = true;\n        this[kOnClosed].push(callback);\n        const onClosed = /* @__PURE__ */ __name(() => {\n          const callbacks = this[kOnClosed];\n          this[kOnClosed] = null;\n          for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i](null, null);\n          }\n        }, "onClosed");\n        this[kClose]().then(() => this.destroy()).then(() => {\n          queueMicrotask(onClosed);\n        });\n      }\n      destroy(err, callback) {\n        if (typeof err === "function") {\n          callback = err;\n          err = null;\n        }\n        if (callback === void 0) {\n          return new Promise((resolve, reject) => {\n            this.destroy(err, (err2, data) => {\n              return err2 ? (\n                /* istanbul ignore next: should never error */\n                reject(err2)\n              ) : resolve(data);\n            });\n          });\n        }\n        if (typeof callback !== "function") {\n          throw new InvalidArgumentError2("invalid callback");\n        }\n        if (this[kDestroyed]) {\n          if (this[kOnDestroyed]) {\n            this[kOnDestroyed].push(callback);\n          } else {\n            queueMicrotask(() => callback(null, null));\n          }\n          return;\n        }\n        if (!err) {\n          err = new ClientDestroyedError();\n        }\n        this[kDestroyed] = true;\n        this[kOnDestroyed] = this[kOnDestroyed] || [];\n        this[kOnDestroyed].push(callback);\n        const onDestroyed = /* @__PURE__ */ __name(() => {\n          const callbacks = this[kOnDestroyed];\n          this[kOnDestroyed] = null;\n          for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i](null, null);\n          }\n        }, "onDestroyed");\n        this[kDestroy](err).then(() => {\n          queueMicrotask(onDestroyed);\n        });\n      }\n      [kInterceptedDispatch](opts, handler) {\n        if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n          this[kInterceptedDispatch] = this[kDispatch];\n          return this[kDispatch](opts, handler);\n        }\n        let dispatch = this[kDispatch].bind(this);\n        for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n          dispatch = this[kInterceptors][i](dispatch);\n        }\n        this[kInterceptedDispatch] = dispatch;\n        return dispatch(opts, handler);\n      }\n      dispatch(opts, handler) {\n        if (!handler || typeof handler !== "object") {\n          throw new InvalidArgumentError2("handler must be an object");\n        }\n        try {\n          if (!opts || typeof opts !== "object") {\n            throw new InvalidArgumentError2("opts must be an object.");\n          }\n          if (this[kDestroyed] || this[kOnDestroyed]) {\n            throw new ClientDestroyedError();\n          }\n          if (this[kClosed]) {\n            throw new ClientClosedError();\n          }\n          return this[kInterceptedDispatch](opts, handler);\n        } catch (err) {\n          if (typeof handler.onError !== "function") {\n            throw new InvalidArgumentError2("invalid onError method");\n          }\n          handler.onError(err);\n          return false;\n        }\n      }\n    };\n    __name(DispatcherBase, "DispatcherBase");\n    module2.exports = DispatcherBase;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/node/fixed-queue.js\nvar require_fixed_queue = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/node/fixed-queue.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var kSize = 2048;\n    var kMask = kSize - 1;\n    var FixedCircularBuffer = class {\n      constructor() {\n        this.bottom = 0;\n        this.top = 0;\n        this.list = new Array(kSize);\n        this.next = null;\n      }\n      isEmpty() {\n        return this.top === this.bottom;\n      }\n      isFull() {\n        return (this.top + 1 & kMask) === this.bottom;\n      }\n      push(data) {\n        this.list[this.top] = data;\n        this.top = this.top + 1 & kMask;\n      }\n      shift() {\n        const nextItem = this.list[this.bottom];\n        if (nextItem === void 0)\n          return null;\n        this.list[this.bottom] = void 0;\n        this.bottom = this.bottom + 1 & kMask;\n        return nextItem;\n      }\n    };\n    __name(FixedCircularBuffer, "FixedCircularBuffer");\n    module2.exports = /* @__PURE__ */ __name(class FixedQueue {\n      constructor() {\n        this.head = this.tail = new FixedCircularBuffer();\n      }\n      isEmpty() {\n        return this.head.isEmpty();\n      }\n      push(data) {\n        if (this.head.isFull()) {\n          this.head = this.head.next = new FixedCircularBuffer();\n        }\n        this.head.push(data);\n      }\n      shift() {\n        const tail = this.tail;\n        const next = tail.shift();\n        if (tail.isEmpty() && tail.next !== null) {\n          this.tail = tail.next;\n        }\n        return next;\n      }\n    }, "FixedQueue");\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/pool-stats.js\nvar require_pool_stats = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/pool-stats.js"(exports, module2) {\n    init_define_process();\n    var { kFree, kConnected, kPending, kQueued, kRunning, kSize } = require_symbols2();\n    var kPool = Symbol("pool");\n    var PoolStats = class {\n      constructor(pool) {\n        this[kPool] = pool;\n      }\n      get connected() {\n        return this[kPool][kConnected];\n      }\n      get free() {\n        return this[kPool][kFree];\n      }\n      get pending() {\n        return this[kPool][kPending];\n      }\n      get queued() {\n        return this[kPool][kQueued];\n      }\n      get running() {\n        return this[kPool][kRunning];\n      }\n      get size() {\n        return this[kPool][kSize];\n      }\n    };\n    __name(PoolStats, "PoolStats");\n    module2.exports = PoolStats;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/pool-base.js\nvar require_pool_base = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/pool-base.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var DispatcherBase = require_dispatcher_base();\n    var FixedQueue = require_fixed_queue();\n    var { kConnected, kSize, kRunning, kPending, kQueued, kBusy, kFree, kUrl, kClose, kDestroy, kDispatch } = require_symbols2();\n    var PoolStats = require_pool_stats();\n    var kClients = Symbol("clients");\n    var kNeedDrain = Symbol("needDrain");\n    var kQueue = Symbol("queue");\n    var kClosedResolve = Symbol("closed resolve");\n    var kOnDrain = Symbol("onDrain");\n    var kOnConnect = Symbol("onConnect");\n    var kOnDisconnect = Symbol("onDisconnect");\n    var kOnConnectionError = Symbol("onConnectionError");\n    var kGetDispatcher = Symbol("get dispatcher");\n    var kAddClient = Symbol("add client");\n    var kRemoveClient = Symbol("remove client");\n    var kStats = Symbol("stats");\n    var PoolBase = class extends DispatcherBase {\n      constructor() {\n        super();\n        this[kQueue] = new FixedQueue();\n        this[kClients] = [];\n        this[kQueued] = 0;\n        const pool = this;\n        this[kOnDrain] = /* @__PURE__ */ __name(function onDrain(origin, targets) {\n          const queue = pool[kQueue];\n          let needDrain = false;\n          while (!needDrain) {\n            const item = queue.shift();\n            if (!item) {\n              break;\n            }\n            pool[kQueued]--;\n            needDrain = !this.dispatch(item.opts, item.handler);\n          }\n          this[kNeedDrain] = needDrain;\n          if (!this[kNeedDrain] && pool[kNeedDrain]) {\n            pool[kNeedDrain] = false;\n            pool.emit("drain", origin, [pool, ...targets]);\n          }\n          if (pool[kClosedResolve] && queue.isEmpty()) {\n            Promise.all(pool[kClients].map((c) => c.close())).then(pool[kClosedResolve]);\n          }\n        }, "onDrain");\n        this[kOnConnect] = (origin, targets) => {\n          pool.emit("connect", origin, [pool, ...targets]);\n        };\n        this[kOnDisconnect] = (origin, targets, err) => {\n          pool.emit("disconnect", origin, [pool, ...targets], err);\n        };\n        this[kOnConnectionError] = (origin, targets, err) => {\n          pool.emit("connectionError", origin, [pool, ...targets], err);\n        };\n        this[kStats] = new PoolStats(this);\n      }\n      get [kBusy]() {\n        return this[kNeedDrain];\n      }\n      get [kConnected]() {\n        return this[kClients].filter((client) => client[kConnected]).length;\n      }\n      get [kFree]() {\n        return this[kClients].filter((client) => client[kConnected] && !client[kNeedDrain]).length;\n      }\n      get [kPending]() {\n        let ret = this[kQueued];\n        for (const { [kPending]: pending } of this[kClients]) {\n          ret += pending;\n        }\n        return ret;\n      }\n      get [kRunning]() {\n        let ret = 0;\n        for (const { [kRunning]: running } of this[kClients]) {\n          ret += running;\n        }\n        return ret;\n      }\n      get [kSize]() {\n        let ret = this[kQueued];\n        for (const { [kSize]: size } of this[kClients]) {\n          ret += size;\n        }\n        return ret;\n      }\n      get stats() {\n        return this[kStats];\n      }\n      async [kClose]() {\n        if (this[kQueue].isEmpty()) {\n          return Promise.all(this[kClients].map((c) => c.close()));\n        } else {\n          return new Promise((resolve) => {\n            this[kClosedResolve] = resolve;\n          });\n        }\n      }\n      async [kDestroy](err) {\n        while (true) {\n          const item = this[kQueue].shift();\n          if (!item) {\n            break;\n          }\n          item.handler.onError(err);\n        }\n        return Promise.all(this[kClients].map((c) => c.destroy(err)));\n      }\n      [kDispatch](opts, handler) {\n        const dispatcher = this[kGetDispatcher]();\n        if (!dispatcher) {\n          this[kNeedDrain] = true;\n          this[kQueue].push({ opts, handler });\n          this[kQueued]++;\n        } else if (!dispatcher.dispatch(opts, handler)) {\n          dispatcher[kNeedDrain] = true;\n          this[kNeedDrain] = !this[kGetDispatcher]();\n        }\n        return !this[kNeedDrain];\n      }\n      [kAddClient](client) {\n        client.on("drain", this[kOnDrain]).on("connect", this[kOnConnect]).on("disconnect", this[kOnDisconnect]).on("connectionError", this[kOnConnectionError]);\n        this[kClients].push(client);\n        if (this[kNeedDrain]) {\n          define_process_default.nextTick(() => {\n            if (this[kNeedDrain]) {\n              this[kOnDrain](client[kUrl], [this, client]);\n            }\n          });\n        }\n        return this;\n      }\n      [kRemoveClient](client) {\n        client.close(() => {\n          const idx = this[kClients].indexOf(client);\n          if (idx !== -1) {\n            this[kClients].splice(idx, 1);\n          }\n        });\n        this[kNeedDrain] = this[kClients].some((dispatcher) => !dispatcher[kNeedDrain] && dispatcher.closed !== true && dispatcher.destroyed !== true);\n      }\n    };\n    __name(PoolBase, "PoolBase");\n    module2.exports = {\n      PoolBase,\n      kClients,\n      kNeedDrain,\n      kAddClient,\n      kRemoveClient,\n      kGetDispatcher\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/timers.js\nvar require_timers = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/timers.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var fastNow = Date.now();\n    var fastNowTimeout;\n    var fastTimers = [];\n    function onTimeout() {\n      fastNow = Date.now();\n      let len = fastTimers.length;\n      let idx = 0;\n      while (idx < len) {\n        const timer = fastTimers[idx];\n        if (timer.state === 0) {\n          timer.state = fastNow + timer.delay;\n        } else if (timer.state > 0 && fastNow >= timer.state) {\n          timer.state = -1;\n          timer.callback(timer.opaque);\n        }\n        if (timer.state === -1) {\n          timer.state = -2;\n          if (idx !== len - 1) {\n            fastTimers[idx] = fastTimers.pop();\n          } else {\n            fastTimers.pop();\n          }\n          len -= 1;\n        } else {\n          idx += 1;\n        }\n      }\n      if (fastTimers.length > 0) {\n        refreshTimeout();\n      }\n    }\n    __name(onTimeout, "onTimeout");\n    function refreshTimeout() {\n      if (fastNowTimeout && fastNowTimeout.refresh) {\n        fastNowTimeout.refresh();\n      } else {\n        clearTimeout(fastNowTimeout);\n        fastNowTimeout = setTimeout(onTimeout, 1e3);\n        if (fastNowTimeout.unref) {\n          fastNowTimeout.unref();\n        }\n      }\n    }\n    __name(refreshTimeout, "refreshTimeout");\n    var Timeout = class {\n      constructor(callback, delay, opaque) {\n        this.callback = callback;\n        this.delay = delay;\n        this.opaque = opaque;\n        this.state = -2;\n        this.refresh();\n      }\n      refresh() {\n        if (this.state === -2) {\n          fastTimers.push(this);\n          if (!fastNowTimeout || fastTimers.length === 1) {\n            refreshTimeout();\n          }\n        }\n        this.state = 0;\n      }\n      clear() {\n        this.state = -1;\n      }\n    };\n    __name(Timeout, "Timeout");\n    module2.exports = {\n      setTimeout(callback, delay, opaque) {\n        return delay < 1e3 ? setTimeout(callback, delay, opaque) : new Timeout(callback, delay, opaque);\n      },\n      clearTimeout(timeout) {\n        if (timeout instanceof Timeout) {\n          timeout.clear();\n        } else {\n          clearTimeout(timeout);\n        }\n      }\n    };\n  }\n});\n\n// src/patches/undici-core-request.js\nvar require_undici_core_request = __commonJS({\n  "src/patches/undici-core-request.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var assert = require("assert");\n    var util = require_util();\n    var tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&\'*+.|~]+$/;\n    var headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n    var invalidPathRegex = /[^\\u0021-\\u00ff]/;\n    var kHandler = Symbol("handler");\n    var channels = {};\n    var extractBody;\n    try {\n      const diagnosticsChannel = require("diagnostics_channel");\n      channels.create = diagnosticsChannel.channel("undici:request:create");\n      channels.bodySent = diagnosticsChannel.channel("undici:request:bodySent");\n      channels.headers = diagnosticsChannel.channel("undici:request:headers");\n      channels.trailers = diagnosticsChannel.channel("undici:request:trailers");\n      channels.error = diagnosticsChannel.channel("undici:request:error");\n    } catch {\n      channels.create = { hasSubscribers: false };\n      channels.bodySent = { hasSubscribers: false };\n      channels.headers = { hasSubscribers: false };\n      channels.trailers = { hasSubscribers: false };\n      channels.error = { hasSubscribers: false };\n    }\n    var Request2 = class {\n      constructor(origin, {\n        path,\n        method,\n        body,\n        headers,\n        query,\n        idempotent,\n        blocking,\n        upgrade,\n        headersTimeout,\n        bodyTimeout,\n        reset,\n        throwOnError\n      }, handler) {\n        if (typeof path !== "string") {\n          throw new InvalidArgumentError2("path must be a string");\n        } else if (path[0] !== "/" && !(path.startsWith("http://") || path.startsWith("https://")) && method !== "CONNECT") {\n          throw new InvalidArgumentError2(\n            "path must be an absolute URL or start with a slash"\n          );\n        } else if (invalidPathRegex.exec(path) !== null) {\n          throw new InvalidArgumentError2("invalid request path");\n        }\n        if (typeof method !== "string") {\n          throw new InvalidArgumentError2("method must be a string");\n        } else if (tokenRegExp.exec(method) === null) {\n          throw new InvalidArgumentError2("invalid request method");\n        }\n        if (upgrade && typeof upgrade !== "string") {\n          throw new InvalidArgumentError2("upgrade must be a string");\n        }\n        if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n          throw new InvalidArgumentError2("invalid headersTimeout");\n        }\n        if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n          throw new InvalidArgumentError2("invalid bodyTimeout");\n        }\n        if (reset != null && typeof reset !== "boolean") {\n          throw new InvalidArgumentError2("invalid reset");\n        }\n        this.headersTimeout = headersTimeout;\n        this.bodyTimeout = bodyTimeout;\n        this.throwOnError = throwOnError === true;\n        this.method = method;\n        if (body == null) {\n          this.body = null;\n        } else if (util.isStream(body)) {\n          this.body = body;\n        } else if (util.isBuffer(body)) {\n          this.body = body.byteLength ? body : null;\n        } else if (ArrayBuffer.isView(body)) {\n          this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null;\n        } else if (body instanceof ArrayBuffer) {\n          this.body = body.byteLength ? Buffer.from(body) : null;\n        } else if (typeof body === "string") {\n          this.body = body.length ? Buffer.from(body) : null;\n        } else if (util.isFormDataLike(body) || util.isIterable(body) || util.isBlobLike(body)) {\n          this.body = body;\n        } else {\n          throw new InvalidArgumentError2(\n            "body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable"\n          );\n        }\n        this.completed = false;\n        this.aborted = false;\n        this.upgrade = upgrade || null;\n        this.path = query ? util.buildURL(path, query) : path;\n        this.origin = origin;\n        this.idempotent = idempotent == null ? method === "HEAD" || method === "GET" : idempotent;\n        this.blocking = blocking == null ? false : blocking;\n        this.reset = reset == null ? null : reset;\n        this.host = null;\n        this.contentLength = null;\n        this.contentType = null;\n        this.headers = "";\n        if (Array.isArray(headers)) {\n          if (headers.length % 2 !== 0) {\n            throw new InvalidArgumentError2("headers array must be even");\n          }\n          for (let i = 0; i < headers.length; i += 2) {\n            processHeader(this, headers[i], headers[i + 1]);\n          }\n        } else if (headers && typeof headers === "object") {\n          const keys = Object.keys(headers);\n          for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            processHeader(this, key, headers[key]);\n          }\n        } else if (headers != null) {\n          throw new InvalidArgumentError2("headers must be an object or an array");\n        }\n        if (util.isFormDataLike(this.body)) {\n          if (util.nodeMajor < 16 || util.nodeMajor === 16 && util.nodeMinor < 8) {\n            throw new InvalidArgumentError2(\n              "Form-Data bodies are only supported in node v16.8 and newer."\n            );\n          }\n          if (!extractBody) {\n            extractBody = require_body().extractBody;\n          }\n          const [bodyStream, contentType] = extractBody(body);\n          if (this.contentType == null) {\n            this.contentType = contentType;\n            this.headers += `content-type: ${contentType}\\r\n`;\n          }\n          this.body = bodyStream.stream;\n          this.contentLength = bodyStream.length;\n        } else if (util.isBlobLike(body) && this.contentType == null && body.type) {\n          this.contentType = body.type;\n          this.headers += `content-type: ${body.type}\\r\n`;\n        }\n        util.validateHandler(handler, method, upgrade);\n        this.servername = util.getServerName(this.host);\n        this[kHandler] = handler;\n        if (channels.create.hasSubscribers) {\n          channels.create.publish({ request: this });\n        }\n      }\n      onBodySent(chunk) {\n        if (this[kHandler].onBodySent) {\n          try {\n            this[kHandler].onBodySent(chunk);\n          } catch (err) {\n            this.onError(err);\n          }\n        }\n      }\n      onRequestSent() {\n        if (channels.bodySent.hasSubscribers) {\n          channels.bodySent.publish({ request: this });\n        }\n      }\n      onConnect(abort) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        return this[kHandler].onConnect(abort);\n      }\n      onHeaders(statusCode, headers, resume, statusText) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        if (channels.headers.hasSubscribers) {\n          channels.headers.publish({\n            request: this,\n            response: { statusCode, headers, statusText }\n          });\n        }\n        return this[kHandler].onHeaders(statusCode, headers, resume, statusText);\n      }\n      onData(chunk) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        return this[kHandler].onData(chunk);\n      }\n      onUpgrade(statusCode, headers, socket) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        return this[kHandler].onUpgrade(statusCode, headers, socket);\n      }\n      onComplete(trailers) {\n        assert(!this.aborted);\n        this.completed = true;\n        if (channels.trailers.hasSubscribers) {\n          channels.trailers.publish({ request: this, trailers });\n        }\n        return this[kHandler].onComplete(trailers);\n      }\n      onError(error) {\n        if (channels.error.hasSubscribers) {\n          channels.error.publish({ request: this, error });\n        }\n        if (this.aborted) {\n          return;\n        }\n        this.aborted = true;\n        return this[kHandler].onError(error);\n      }\n      addHeader(key, value) {\n        processHeader(this, key, value);\n        return this;\n      }\n    };\n    __name(Request2, "Request");\n    function processHeaderValue(key, val) {\n      if (val && typeof val === "object") {\n        throw new InvalidArgumentError2(`invalid ${key} header`);\n      }\n      val = val != null ? `${val}` : "";\n      if (headerCharRegex.exec(val) !== null) {\n        throw new InvalidArgumentError2(`invalid ${key} header`);\n      }\n      return `${key}: ${val}\\r\n`;\n    }\n    __name(processHeaderValue, "processHeaderValue");\n    function processHeader(request, key, val) {\n      if (val && typeof val === "object" && !Array.isArray(val)) {\n        throw new InvalidArgumentError2(`invalid ${key} header`);\n      } else if (val === void 0) {\n        return;\n      }\n      if (request.host === null && key.length === 4 && key.toLowerCase() === "host") {\n        request.host = val;\n      } else if (request.contentLength === null && key.length === 14 && key.toLowerCase() === "content-length") {\n        request.contentLength = parseInt(val, 10);\n        if (!Number.isFinite(request.contentLength)) {\n          throw new InvalidArgumentError2("invalid content-length header");\n        }\n      } else if (request.contentType === null && key.length === 12 && key.toLowerCase() === "content-type") {\n        request.contentType = val;\n        request.headers += processHeaderValue(key, val);\n      } else {\n        if (Array.isArray(val)) {\n          for (let i = 0; i < val.length; i++) {\n            request.headers += processHeaderValue(key, val[i]);\n          }\n        } else {\n          request.headers += processHeaderValue(key, val);\n        }\n      }\n    }\n    __name(processHeader, "processHeader");\n    module2.exports = Request2;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/core/connect.js\nvar require_connect = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/core/connect.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var net = require("net");\n    var assert = require("assert");\n    var util = require_util();\n    var { InvalidArgumentError: InvalidArgumentError2, ConnectTimeoutError } = require_errors();\n    var tls;\n    var SessionCache;\n    if (global.FinalizationRegistry) {\n      SessionCache = /* @__PURE__ */ __name(class WeakSessionCache {\n        constructor(maxCachedSessions) {\n          this._maxCachedSessions = maxCachedSessions;\n          this._sessionCache = /* @__PURE__ */ new Map();\n          this._sessionRegistry = new global.FinalizationRegistry((key) => {\n            if (this._sessionCache.size < this._maxCachedSessions) {\n              return;\n            }\n            const ref = this._sessionCache.get(key);\n            if (ref !== void 0 && ref.deref() === void 0) {\n              this._sessionCache.delete(key);\n            }\n          });\n        }\n        get(sessionKey) {\n          const ref = this._sessionCache.get(sessionKey);\n          return ref ? ref.deref() : null;\n        }\n        set(sessionKey, session) {\n          if (this._maxCachedSessions === 0) {\n            return;\n          }\n          this._sessionCache.set(sessionKey, new WeakRef(session));\n          this._sessionRegistry.register(session, sessionKey);\n        }\n      }, "WeakSessionCache");\n    } else {\n      SessionCache = /* @__PURE__ */ __name(class SimpleSessionCache {\n        constructor(maxCachedSessions) {\n          this._maxCachedSessions = maxCachedSessions;\n          this._sessionCache = /* @__PURE__ */ new Map();\n        }\n        get(sessionKey) {\n          return this._sessionCache.get(sessionKey);\n        }\n        set(sessionKey, session) {\n          if (this._maxCachedSessions === 0) {\n            return;\n          }\n          if (this._sessionCache.size >= this._maxCachedSessions) {\n            const { value: oldestKey } = this._sessionCache.keys().next();\n            this._sessionCache.delete(oldestKey);\n          }\n          this._sessionCache.set(sessionKey, session);\n        }\n      }, "SimpleSessionCache");\n    }\n    function buildConnector({ maxCachedSessions, socketPath, timeout, ...opts }) {\n      if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {\n        throw new InvalidArgumentError2("maxCachedSessions must be a positive integer or zero");\n      }\n      const options = { path: socketPath, ...opts };\n      const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions);\n      timeout = timeout == null ? 1e4 : timeout;\n      return /* @__PURE__ */ __name(function connect({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {\n        let socket;\n        if (protocol === "https:") {\n          if (!tls) {\n            tls = require("tls");\n          }\n          servername = servername || options.servername || util.getServerName(host) || null;\n          const sessionKey = servername || hostname;\n          const session = sessionCache.get(sessionKey) || null;\n          assert(sessionKey);\n          socket = tls.connect({\n            highWaterMark: 16384,\n            // TLS in node can\'t have bigger HWM anyway...\n            ...options,\n            servername,\n            session,\n            localAddress,\n            socket: httpSocket,\n            // upgrade socket connection\n            port: port || 443,\n            host: hostname\n          });\n          socket.on("session", function(session2) {\n            sessionCache.set(sessionKey, session2);\n          });\n        } else {\n          assert(!httpSocket, "httpSocket can only be sent on TLS update");\n          socket = net.connect({\n            highWaterMark: 64 * 1024,\n            // Same as nodejs fs streams.\n            ...options,\n            localAddress,\n            port: port || 80,\n            host: hostname\n          });\n        }\n        if (options.keepAlive == null || options.keepAlive) {\n          const keepAliveInitialDelay = options.keepAliveInitialDelay === void 0 ? 6e4 : options.keepAliveInitialDelay;\n          socket.setKeepAlive(true, keepAliveInitialDelay);\n        }\n        const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout);\n        socket.setNoDelay(true).once(protocol === "https:" ? "secureConnect" : "connect", function() {\n          cancelTimeout();\n          if (callback) {\n            const cb = callback;\n            callback = null;\n            cb(null, this);\n          }\n        }).on("error", function(err) {\n          cancelTimeout();\n          if (callback) {\n            const cb = callback;\n            callback = null;\n            cb(err);\n          }\n        });\n        return socket;\n      }, "connect");\n    }\n    __name(buildConnector, "buildConnector");\n    function setupTimeout(onConnectTimeout2, timeout) {\n      if (!timeout) {\n        return () => {\n        };\n      }\n      let s1 = null;\n      let s2 = null;\n      const timeoutId = setTimeout(() => {\n        s1 = setImmediate(() => {\n          if (define_process_default.platform === "win32") {\n            s2 = setImmediate(() => onConnectTimeout2());\n          } else {\n            onConnectTimeout2();\n          }\n        });\n      }, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n        clearImmediate(s1);\n        clearImmediate(s2);\n      };\n    }\n    __name(setupTimeout, "setupTimeout");\n    function onConnectTimeout(socket) {\n      util.destroy(socket, new ConnectTimeoutError());\n    }\n    __name(onConnectTimeout, "onConnectTimeout");\n    module2.exports = buildConnector;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/llhttp/utils.js\nvar require_utils2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/llhttp/utils.js"(exports) {\n    "use strict";\n    init_define_process();\n    Object.defineProperty(exports, "__esModule", { value: true });\n    exports.enumToMap = void 0;\n    function enumToMap(obj) {\n      const res = {};\n      Object.keys(obj).forEach((key) => {\n        const value = obj[key];\n        if (typeof value === "number") {\n          res[key] = value;\n        }\n      });\n      return res;\n    }\n    __name(enumToMap, "enumToMap");\n    exports.enumToMap = enumToMap;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/llhttp/constants.js\nvar require_constants2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/llhttp/constants.js"(exports) {\n    "use strict";\n    init_define_process();\n    Object.defineProperty(exports, "__esModule", { value: true });\n    exports.SPECIAL_HEADERS = exports.HEADER_STATE = exports.MINOR = exports.MAJOR = exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS = exports.TOKEN = exports.STRICT_TOKEN = exports.HEX = exports.URL_CHAR = exports.STRICT_URL_CHAR = exports.USERINFO_CHARS = exports.MARK = exports.ALPHANUM = exports.NUM = exports.HEX_MAP = exports.NUM_MAP = exports.ALPHA = exports.FINISH = exports.H_METHOD_MAP = exports.METHOD_MAP = exports.METHODS_RTSP = exports.METHODS_ICE = exports.METHODS_HTTP = exports.METHODS = exports.LENIENT_FLAGS = exports.FLAGS = exports.TYPE = exports.ERROR = void 0;\n    var utils_1 = require_utils2();\n    var ERROR;\n    (function(ERROR2) {\n      ERROR2[ERROR2["OK"] = 0] = "OK";\n      ERROR2[ERROR2["INTERNAL"] = 1] = "INTERNAL";\n      ERROR2[ERROR2["STRICT"] = 2] = "STRICT";\n      ERROR2[ERROR2["LF_EXPECTED"] = 3] = "LF_EXPECTED";\n      ERROR2[ERROR2["UNEXPECTED_CONTENT_LENGTH"] = 4] = "UNEXPECTED_CONTENT_LENGTH";\n      ERROR2[ERROR2["CLOSED_CONNECTION"] = 5] = "CLOSED_CONNECTION";\n      ERROR2[ERROR2["INVALID_METHOD"] = 6] = "INVALID_METHOD";\n      ERROR2[ERROR2["INVALID_URL"] = 7] = "INVALID_URL";\n      ERROR2[ERROR2["INVALID_CONSTANT"] = 8] = "INVALID_CONSTANT";\n      ERROR2[ERROR2["INVALID_VERSION"] = 9] = "INVALID_VERSION";\n      ERROR2[ERROR2["INVALID_HEADER_TOKEN"] = 10] = "INVALID_HEADER_TOKEN";\n      ERROR2[ERROR2["INVALID_CONTENT_LENGTH"] = 11] = "INVALID_CONTENT_LENGTH";\n      ERROR2[ERROR2["INVALID_CHUNK_SIZE"] = 12] = "INVALID_CHUNK_SIZE";\n      ERROR2[ERROR2["INVALID_STATUS"] = 13] = "INVALID_STATUS";\n      ERROR2[ERROR2["INVALID_EOF_STATE"] = 14] = "INVALID_EOF_STATE";\n      ERROR2[ERROR2["INVALID_TRANSFER_ENCODING"] = 15] = "INVALID_TRANSFER_ENCODING";\n      ERROR2[ERROR2["CB_MESSAGE_BEGIN"] = 16] = "CB_MESSAGE_BEGIN";\n      ERROR2[ERROR2["CB_HEADERS_COMPLETE"] = 17] = "CB_HEADERS_COMPLETE";\n      ERROR2[ERROR2["CB_MESSAGE_COMPLETE"] = 18] = "CB_MESSAGE_COMPLETE";\n      ERROR2[ERROR2["CB_CHUNK_HEADER"] = 19] = "CB_CHUNK_HEADER";\n      ERROR2[ERROR2["CB_CHUNK_COMPLETE"] = 20] = "CB_CHUNK_COMPLETE";\n      ERROR2[ERROR2["PAUSED"] = 21] = "PAUSED";\n      ERROR2[ERROR2["PAUSED_UPGRADE"] = 22] = "PAUSED_UPGRADE";\n      ERROR2[ERROR2["PAUSED_H2_UPGRADE"] = 23] = "PAUSED_H2_UPGRADE";\n      ERROR2[ERROR2["USER"] = 24] = "USER";\n    })(ERROR = exports.ERROR || (exports.ERROR = {}));\n    var TYPE;\n    (function(TYPE2) {\n      TYPE2[TYPE2["BOTH"] = 0] = "BOTH";\n      TYPE2[TYPE2["REQUEST"] = 1] = "REQUEST";\n      TYPE2[TYPE2["RESPONSE"] = 2] = "RESPONSE";\n    })(TYPE = exports.TYPE || (exports.TYPE = {}));\n    var FLAGS;\n    (function(FLAGS2) {\n      FLAGS2[FLAGS2["CONNECTION_KEEP_ALIVE"] = 1] = "CONNECTION_KEEP_ALIVE";\n      FLAGS2[FLAGS2["CONNECTION_CLOSE"] = 2] = "CONNECTION_CLOSE";\n      FLAGS2[FLAGS2["CONNECTION_UPGRADE"] = 4] = "CONNECTION_UPGRADE";\n      FLAGS2[FLAGS2["CHUNKED"] = 8] = "CHUNKED";\n      FLAGS2[FLAGS2["UPGRADE"] = 16] = "UPGRADE";\n      FLAGS2[FLAGS2["CONTENT_LENGTH"] = 32] = "CONTENT_LENGTH";\n      FLAGS2[FLAGS2["SKIPBODY"] = 64] = "SKIPBODY";\n      FLAGS2[FLAGS2["TRAILING"] = 128] = "TRAILING";\n      FLAGS2[FLAGS2["TRANSFER_ENCODING"] = 512] = "TRANSFER_ENCODING";\n    })(FLAGS = exports.FLAGS || (exports.FLAGS = {}));\n    var LENIENT_FLAGS;\n    (function(LENIENT_FLAGS2) {\n      LENIENT_FLAGS2[LENIENT_FLAGS2["HEADERS"] = 1] = "HEADERS";\n      LENIENT_FLAGS2[LENIENT_FLAGS2["CHUNKED_LENGTH"] = 2] = "CHUNKED_LENGTH";\n      LENIENT_FLAGS2[LENIENT_FLAGS2["KEEP_ALIVE"] = 4] = "KEEP_ALIVE";\n    })(LENIENT_FLAGS = exports.LENIENT_FLAGS || (exports.LENIENT_FLAGS = {}));\n    var METHODS;\n    (function(METHODS2) {\n      METHODS2[METHODS2["DELETE"] = 0] = "DELETE";\n      METHODS2[METHODS2["GET"] = 1] = "GET";\n      METHODS2[METHODS2["HEAD"] = 2] = "HEAD";\n      METHODS2[METHODS2["POST"] = 3] = "POST";\n      METHODS2[METHODS2["PUT"] = 4] = "PUT";\n      METHODS2[METHODS2["CONNECT"] = 5] = "CONNECT";\n      METHODS2[METHODS2["OPTIONS"] = 6] = "OPTIONS";\n      METHODS2[METHODS2["TRACE"] = 7] = "TRACE";\n      METHODS2[METHODS2["COPY"] = 8] = "COPY";\n      METHODS2[METHODS2["LOCK"] = 9] = "LOCK";\n      METHODS2[METHODS2["MKCOL"] = 10] = "MKCOL";\n      METHODS2[METHODS2["MOVE"] = 11] = "MOVE";\n      METHODS2[METHODS2["PROPFIND"] = 12] = "PROPFIND";\n      METHODS2[METHODS2["PROPPATCH"] = 13] = "PROPPATCH";\n      METHODS2[METHODS2["SEARCH"] = 14] = "SEARCH";\n      METHODS2[METHODS2["UNLOCK"] = 15] = "UNLOCK";\n      METHODS2[METHODS2["BIND"] = 16] = "BIND";\n      METHODS2[METHODS2["REBIND"] = 17] = "REBIND";\n      METHODS2[METHODS2["UNBIND"] = 18] = "UNBIND";\n      METHODS2[METHODS2["ACL"] = 19] = "ACL";\n      METHODS2[METHODS2["REPORT"] = 20] = "REPORT";\n      METHODS2[METHODS2["MKACTIVITY"] = 21] = "MKACTIVITY";\n      METHODS2[METHODS2["CHECKOUT"] = 22] = "CHECKOUT";\n      METHODS2[METHODS2["MERGE"] = 23] = "MERGE";\n      METHODS2[METHODS2["M-SEARCH"] = 24] = "M-SEARCH";\n      METHODS2[METHODS2["NOTIFY"] = 25] = "NOTIFY";\n      METHODS2[METHODS2["SUBSCRIBE"] = 26] = "SUBSCRIBE";\n      METHODS2[METHODS2["UNSUBSCRIBE"] = 27] = "UNSUBSCRIBE";\n      METHODS2[METHODS2["PATCH"] = 28] = "PATCH";\n      METHODS2[METHODS2["PURGE"] = 29] = "PURGE";\n      METHODS2[METHODS2["MKCALENDAR"] = 30] = "MKCALENDAR";\n      METHODS2[METHODS2["LINK"] = 31] = "LINK";\n      METHODS2[METHODS2["UNLINK"] = 32] = "UNLINK";\n      METHODS2[METHODS2["SOURCE"] = 33] = "SOURCE";\n      METHODS2[METHODS2["PRI"] = 34] = "PRI";\n      METHODS2[METHODS2["DESCRIBE"] = 35] = "DESCRIBE";\n      METHODS2[METHODS2["ANNOUNCE"] = 36] = "ANNOUNCE";\n      METHODS2[METHODS2["SETUP"] = 37] = "SETUP";\n      METHODS2[METHODS2["PLAY"] = 38] = "PLAY";\n      METHODS2[METHODS2["PAUSE"] = 39] = "PAUSE";\n      METHODS2[METHODS2["TEARDOWN"] = 40] = "TEARDOWN";\n      METHODS2[METHODS2["GET_PARAMETER"] = 41] = "GET_PARAMETER";\n      METHODS2[METHODS2["SET_PARAMETER"] = 42] = "SET_PARAMETER";\n      METHODS2[METHODS2["REDIRECT"] = 43] = "REDIRECT";\n      METHODS2[METHODS2["RECORD"] = 44] = "RECORD";\n      METHODS2[METHODS2["FLUSH"] = 45] = "FLUSH";\n    })(METHODS = exports.METHODS || (exports.METHODS = {}));\n    exports.METHODS_HTTP = [\n      METHODS.DELETE,\n      METHODS.GET,\n      METHODS.HEAD,\n      METHODS.POST,\n      METHODS.PUT,\n      METHODS.CONNECT,\n      METHODS.OPTIONS,\n      METHODS.TRACE,\n      METHODS.COPY,\n      METHODS.LOCK,\n      METHODS.MKCOL,\n      METHODS.MOVE,\n      METHODS.PROPFIND,\n      METHODS.PROPPATCH,\n      METHODS.SEARCH,\n      METHODS.UNLOCK,\n      METHODS.BIND,\n      METHODS.REBIND,\n      METHODS.UNBIND,\n      METHODS.ACL,\n      METHODS.REPORT,\n      METHODS.MKACTIVITY,\n      METHODS.CHECKOUT,\n      METHODS.MERGE,\n      METHODS["M-SEARCH"],\n      METHODS.NOTIFY,\n      METHODS.SUBSCRIBE,\n      METHODS.UNSUBSCRIBE,\n      METHODS.PATCH,\n      METHODS.PURGE,\n      METHODS.MKCALENDAR,\n      METHODS.LINK,\n      METHODS.UNLINK,\n      METHODS.PRI,\n      // TODO(indutny): should we allow it with HTTP?\n      METHODS.SOURCE\n    ];\n    exports.METHODS_ICE = [\n      METHODS.SOURCE\n    ];\n    exports.METHODS_RTSP = [\n      METHODS.OPTIONS,\n      METHODS.DESCRIBE,\n      METHODS.ANNOUNCE,\n      METHODS.SETUP,\n      METHODS.PLAY,\n      METHODS.PAUSE,\n      METHODS.TEARDOWN,\n      METHODS.GET_PARAMETER,\n      METHODS.SET_PARAMETER,\n      METHODS.REDIRECT,\n      METHODS.RECORD,\n      METHODS.FLUSH,\n      // For AirPlay\n      METHODS.GET,\n      METHODS.POST\n    ];\n    exports.METHOD_MAP = utils_1.enumToMap(METHODS);\n    exports.H_METHOD_MAP = {};\n    Object.keys(exports.METHOD_MAP).forEach((key) => {\n      if (/^H/.test(key)) {\n        exports.H_METHOD_MAP[key] = exports.METHOD_MAP[key];\n      }\n    });\n    var FINISH;\n    (function(FINISH2) {\n      FINISH2[FINISH2["SAFE"] = 0] = "SAFE";\n      FINISH2[FINISH2["SAFE_WITH_CB"] = 1] = "SAFE_WITH_CB";\n      FINISH2[FINISH2["UNSAFE"] = 2] = "UNSAFE";\n    })(FINISH = exports.FINISH || (exports.FINISH = {}));\n    exports.ALPHA = [];\n    for (let i = "A".charCodeAt(0); i <= "Z".charCodeAt(0); i++) {\n      exports.ALPHA.push(String.fromCharCode(i));\n      exports.ALPHA.push(String.fromCharCode(i + 32));\n    }\n    exports.NUM_MAP = {\n      0: 0,\n      1: 1,\n      2: 2,\n      3: 3,\n      4: 4,\n      5: 5,\n      6: 6,\n      7: 7,\n      8: 8,\n      9: 9\n    };\n    exports.HEX_MAP = {\n      0: 0,\n      1: 1,\n      2: 2,\n      3: 3,\n      4: 4,\n      5: 5,\n      6: 6,\n      7: 7,\n      8: 8,\n      9: 9,\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      a: 10,\n      b: 11,\n      c: 12,\n      d: 13,\n      e: 14,\n      f: 15\n    };\n    exports.NUM = [\n      "0",\n      "1",\n      "2",\n      "3",\n      "4",\n      "5",\n      "6",\n      "7",\n      "8",\n      "9"\n    ];\n    exports.ALPHANUM = exports.ALPHA.concat(exports.NUM);\n    exports.MARK = ["-", "_", ".", "!", "~", "*", "\'", "(", ")"];\n    exports.USERINFO_CHARS = exports.ALPHANUM.concat(exports.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]);\n    exports.STRICT_URL_CHAR = [\n      "!",\n      \'"\',\n      "$",\n      "%",\n      "&",\n      "\'",\n      "(",\n      ")",\n      "*",\n      "+",\n      ",",\n      "-",\n      ".",\n      "/",\n      ":",\n      ";",\n      "<",\n      "=",\n      ">",\n      "@",\n      "[",\n      "\\\\",\n      "]",\n      "^",\n      "_",\n      "`",\n      "{",\n      "|",\n      "}",\n      "~"\n    ].concat(exports.ALPHANUM);\n    exports.URL_CHAR = exports.STRICT_URL_CHAR.concat(["\t", "\\f"]);\n    for (let i = 128; i <= 255; i++) {\n      exports.URL_CHAR.push(i);\n    }\n    exports.HEX = exports.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]);\n    exports.STRICT_TOKEN = [\n      "!",\n      "#",\n      "$",\n      "%",\n      "&",\n      "\'",\n      "*",\n      "+",\n      "-",\n      ".",\n      "^",\n      "_",\n      "`",\n      "|",\n      "~"\n    ].concat(exports.ALPHANUM);\n    exports.TOKEN = exports.STRICT_TOKEN.concat([" "]);\n    exports.HEADER_CHARS = ["\t"];\n    for (let i = 32; i <= 255; i++) {\n      if (i !== 127) {\n        exports.HEADER_CHARS.push(i);\n      }\n    }\n    exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS.filter((c) => c !== 44);\n    exports.MAJOR = exports.NUM_MAP;\n    exports.MINOR = exports.MAJOR;\n    var HEADER_STATE;\n    (function(HEADER_STATE2) {\n      HEADER_STATE2[HEADER_STATE2["GENERAL"] = 0] = "GENERAL";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION"] = 1] = "CONNECTION";\n      HEADER_STATE2[HEADER_STATE2["CONTENT_LENGTH"] = 2] = "CONTENT_LENGTH";\n      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING"] = 3] = "TRANSFER_ENCODING";\n      HEADER_STATE2[HEADER_STATE2["UPGRADE"] = 4] = "UPGRADE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_KEEP_ALIVE"] = 5] = "CONNECTION_KEEP_ALIVE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_CLOSE"] = 6] = "CONNECTION_CLOSE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_UPGRADE"] = 7] = "CONNECTION_UPGRADE";\n      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING_CHUNKED"] = 8] = "TRANSFER_ENCODING_CHUNKED";\n    })(HEADER_STATE = exports.HEADER_STATE || (exports.HEADER_STATE = {}));\n    exports.SPECIAL_HEADERS = {\n      "connection": HEADER_STATE.CONNECTION,\n      "content-length": HEADER_STATE.CONTENT_LENGTH,\n      "proxy-connection": HEADER_STATE.CONNECTION,\n      "transfer-encoding": HEADER_STATE.TRANSFER_ENCODING,\n      "upgrade": HEADER_STATE.UPGRADE\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/handler/RedirectHandler.js\nvar require_RedirectHandler = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/handler/RedirectHandler.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var util = require_util();\n    var { kBodyUsed } = require_symbols2();\n    var assert = require("assert");\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var EE = require("events");\n    var redirectableStatusCodes = [300, 301, 302, 303, 307, 308];\n    var kBody = Symbol("body");\n    var BodyAsyncIterable = class {\n      constructor(body) {\n        this[kBody] = body;\n        this[kBodyUsed] = false;\n      }\n      async *[Symbol.asyncIterator]() {\n        assert(!this[kBodyUsed], "disturbed");\n        this[kBodyUsed] = true;\n        yield* this[kBody];\n      }\n    };\n    __name(BodyAsyncIterable, "BodyAsyncIterable");\n    var RedirectHandler = class {\n      constructor(dispatch, maxRedirections, opts, handler) {\n        if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n          throw new InvalidArgumentError2("maxRedirections must be a positive number");\n        }\n        util.validateHandler(handler, opts.method, opts.upgrade);\n        this.dispatch = dispatch;\n        this.location = null;\n        this.abort = null;\n        this.opts = { ...opts, maxRedirections: 0 };\n        this.maxRedirections = maxRedirections;\n        this.handler = handler;\n        this.history = [];\n        if (util.isStream(this.opts.body)) {\n          if (util.bodyLength(this.opts.body) === 0) {\n            this.opts.body.on("data", function() {\n              assert(false);\n            });\n          }\n          if (typeof this.opts.body.readableDidRead !== "boolean") {\n            this.opts.body[kBodyUsed] = false;\n            EE.prototype.on.call(this.opts.body, "data", function() {\n              this[kBodyUsed] = true;\n            });\n          }\n        } else if (this.opts.body && typeof this.opts.body.pipeTo === "function") {\n          this.opts.body = new BodyAsyncIterable(this.opts.body);\n        } else if (this.opts.body && typeof this.opts.body !== "string" && !ArrayBuffer.isView(this.opts.body) && util.isIterable(this.opts.body)) {\n          this.opts.body = new BodyAsyncIterable(this.opts.body);\n        }\n      }\n      onConnect(abort) {\n        this.abort = abort;\n        this.handler.onConnect(abort, { history: this.history });\n      }\n      onUpgrade(statusCode, headers, socket) {\n        this.handler.onUpgrade(statusCode, headers, socket);\n      }\n      onError(error) {\n        this.handler.onError(error);\n      }\n      onHeaders(statusCode, headers, resume, statusText) {\n        this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body) ? null : parseLocation(statusCode, headers);\n        if (this.opts.origin) {\n          this.history.push(new URL(this.opts.path, this.opts.origin));\n        }\n        if (!this.location) {\n          return this.handler.onHeaders(statusCode, headers, resume, statusText);\n        }\n        const { origin, pathname, search } = util.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)));\n        const path = search ? `${pathname}${search}` : pathname;\n        this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin);\n        this.opts.path = path;\n        this.opts.origin = origin;\n        this.opts.maxRedirections = 0;\n        this.opts.query = null;\n        if (statusCode === 303 && this.opts.method !== "HEAD") {\n          this.opts.method = "GET";\n          this.opts.body = null;\n        }\n      }\n      onData(chunk) {\n        if (this.location) {\n        } else {\n          return this.handler.onData(chunk);\n        }\n      }\n      onComplete(trailers) {\n        if (this.location) {\n          this.location = null;\n          this.abort = null;\n          this.dispatch(this.opts, this);\n        } else {\n          this.handler.onComplete(trailers);\n        }\n      }\n      onBodySent(chunk) {\n        if (this.handler.onBodySent) {\n          this.handler.onBodySent(chunk);\n        }\n      }\n    };\n    __name(RedirectHandler, "RedirectHandler");\n    function parseLocation(statusCode, headers) {\n      if (redirectableStatusCodes.indexOf(statusCode) === -1) {\n        return null;\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        if (headers[i].toString().toLowerCase() === "location") {\n          return headers[i + 1];\n        }\n      }\n    }\n    __name(parseLocation, "parseLocation");\n    function shouldRemoveHeader(header, removeContent, unknownOrigin) {\n      return header.length === 4 && header.toString().toLowerCase() === "host" || removeContent && header.toString().toLowerCase().indexOf("content-") === 0 || unknownOrigin && header.length === 13 && header.toString().toLowerCase() === "authorization" || unknownOrigin && header.length === 6 && header.toString().toLowerCase() === "cookie";\n    }\n    __name(shouldRemoveHeader, "shouldRemoveHeader");\n    function cleanRequestHeaders(headers, removeContent, unknownOrigin) {\n      const ret = [];\n      if (Array.isArray(headers)) {\n        for (let i = 0; i < headers.length; i += 2) {\n          if (!shouldRemoveHeader(headers[i], removeContent, unknownOrigin)) {\n            ret.push(headers[i], headers[i + 1]);\n          }\n        }\n      } else if (headers && typeof headers === "object") {\n        for (const key of Object.keys(headers)) {\n          if (!shouldRemoveHeader(key, removeContent, unknownOrigin)) {\n            ret.push(key, headers[key]);\n          }\n        }\n      } else {\n        assert(headers == null, "headers must be an object or an array");\n      }\n      return ret;\n    }\n    __name(cleanRequestHeaders, "cleanRequestHeaders");\n    module2.exports = RedirectHandler;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/interceptor/redirectInterceptor.js\nvar require_redirectInterceptor = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/interceptor/redirectInterceptor.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var RedirectHandler = require_RedirectHandler();\n    function createRedirectInterceptor({ maxRedirections: defaultMaxRedirections }) {\n      return (dispatch) => {\n        return /* @__PURE__ */ __name(function Intercept(opts, handler) {\n          const { maxRedirections = defaultMaxRedirections } = opts;\n          if (!maxRedirections) {\n            return dispatch(opts, handler);\n          }\n          const redirectHandler = new RedirectHandler(dispatch, maxRedirections, opts, handler);\n          opts = { ...opts, maxRedirections: 0 };\n          return dispatch(opts, redirectHandler);\n        }, "Intercept");\n      };\n    }\n    __name(createRedirectInterceptor, "createRedirectInterceptor");\n    module2.exports = createRedirectInterceptor;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/llhttp/llhttp-wasm.js\nvar require_llhttp_wasm = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/llhttp/llhttp-wasm.js"(exports, module2) {\n    init_define_process();\n    module2.exports = "";\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/llhttp/llhttp_simd-wasm.js\nvar require_llhttp_simd_wasm = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/llhttp/llhttp_simd-wasm.js"(exports, module2) {\n    init_define_process();\n    module2.exports = "";\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/client.js\nvar require_client = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/client.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var assert = require("assert");\n    var net = require("net");\n    var util = require_util();\n    var timers = require_timers();\n    var Request2 = require_undici_core_request();\n    var DispatcherBase = require_dispatcher_base();\n    var {\n      RequestContentLengthMismatchError,\n      ResponseContentLengthMismatchError,\n      InvalidArgumentError: InvalidArgumentError2,\n      RequestAbortedError,\n      HeadersTimeoutError,\n      HeadersOverflowError,\n      SocketError,\n      InformationalError,\n      BodyTimeoutError,\n      HTTPParserError,\n      ResponseExceededMaxSizeError,\n      ClientDestroyedError\n    } = require_errors();\n    var buildConnector = require_connect();\n    var {\n      kUrl,\n      kReset,\n      kServerName,\n      kClient,\n      kBusy,\n      kParser,\n      kConnect,\n      kBlocking,\n      kResuming,\n      kRunning,\n      kPending,\n      kSize,\n      kWriting,\n      kQueue,\n      kConnected,\n      kConnecting,\n      kNeedDrain,\n      kNoRef,\n      kKeepAliveDefaultTimeout,\n      kHostHeader,\n      kPendingIdx,\n      kRunningIdx,\n      kError,\n      kPipelining,\n      kSocket,\n      kKeepAliveTimeoutValue,\n      kMaxHeadersSize,\n      kKeepAliveMaxTimeout,\n      kKeepAliveTimeoutThreshold,\n      kHeadersTimeout,\n      kBodyTimeout,\n      kStrictContentLength,\n      kConnector,\n      kMaxRedirections,\n      kMaxRequests,\n      kCounter,\n      kClose,\n      kDestroy,\n      kDispatch,\n      kInterceptors,\n      kLocalAddress,\n      kMaxResponseSize\n    } = require_symbols2();\n    var FastBuffer = Buffer[Symbol.species];\n    var kClosedResolve = Symbol("kClosedResolve");\n    var channels = {};\n    try {\n      const diagnosticsChannel = require("diagnostics_channel");\n      channels.sendHeaders = diagnosticsChannel.channel("undici:client:sendHeaders");\n      channels.beforeConnect = diagnosticsChannel.channel("undici:client:beforeConnect");\n      channels.connectError = diagnosticsChannel.channel("undici:client:connectError");\n      channels.connected = diagnosticsChannel.channel("undici:client:connected");\n    } catch {\n      channels.sendHeaders = { hasSubscribers: false };\n      channels.beforeConnect = { hasSubscribers: false };\n      channels.connectError = { hasSubscribers: false };\n      channels.connected = { hasSubscribers: false };\n    }\n    var Client = class extends DispatcherBase {\n      /**\n       *\n       * @param {string|URL} url\n       * @param {import(\'../types/client\').Client.Options} options\n       */\n      constructor(url, {\n        interceptors,\n        maxHeaderSize,\n        headersTimeout,\n        socketTimeout,\n        requestTimeout,\n        connectTimeout,\n        bodyTimeout,\n        idleTimeout,\n        keepAlive,\n        keepAliveTimeout,\n        maxKeepAliveTimeout,\n        keepAliveMaxTimeout,\n        keepAliveTimeoutThreshold,\n        socketPath,\n        pipelining,\n        tls,\n        strictContentLength,\n        maxCachedSessions,\n        maxRedirections,\n        connect: connect2,\n        maxRequestsPerClient,\n        localAddress,\n        maxResponseSize,\n        autoSelectFamily,\n        autoSelectFamilyAttemptTimeout\n      } = {}) {\n        super();\n        if (keepAlive !== void 0) {\n          throw new InvalidArgumentError2("unsupported keepAlive, use pipelining=0 instead");\n        }\n        if (socketTimeout !== void 0) {\n          throw new InvalidArgumentError2("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");\n        }\n        if (requestTimeout !== void 0) {\n          throw new InvalidArgumentError2("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");\n        }\n        if (idleTimeout !== void 0) {\n          throw new InvalidArgumentError2("unsupported idleTimeout, use keepAliveTimeout instead");\n        }\n        if (maxKeepAliveTimeout !== void 0) {\n          throw new InvalidArgumentError2("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");\n        }\n        if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {\n          throw new InvalidArgumentError2("invalid maxHeaderSize");\n        }\n        if (socketPath != null && typeof socketPath !== "string") {\n          throw new InvalidArgumentError2("invalid socketPath");\n        }\n        if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {\n          throw new InvalidArgumentError2("invalid connectTimeout");\n        }\n        if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {\n          throw new InvalidArgumentError2("invalid keepAliveTimeout");\n        }\n        if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {\n          throw new InvalidArgumentError2("invalid keepAliveMaxTimeout");\n        }\n        if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {\n          throw new InvalidArgumentError2("invalid keepAliveTimeoutThreshold");\n        }\n        if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {\n          throw new InvalidArgumentError2("headersTimeout must be a positive integer or zero");\n        }\n        if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {\n          throw new InvalidArgumentError2("bodyTimeout must be a positive integer or zero");\n        }\n        if (connect2 != null && typeof connect2 !== "function" && typeof connect2 !== "object") {\n          throw new InvalidArgumentError2("connect must be a function or an object");\n        }\n        if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n          throw new InvalidArgumentError2("maxRedirections must be a positive number");\n        }\n        if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {\n          throw new InvalidArgumentError2("maxRequestsPerClient must be a positive number");\n        }\n        if (localAddress != null && (typeof localAddress !== "string" || net.isIP(localAddress) === 0)) {\n          throw new InvalidArgumentError2("localAddress must be valid string IP address");\n        }\n        if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {\n          throw new InvalidArgumentError2("maxResponseSize must be a positive number");\n        }\n        if (autoSelectFamilyAttemptTimeout != null && (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)) {\n          throw new InvalidArgumentError2("autoSelectFamilyAttemptTimeout must be a positive number");\n        }\n        if (typeof connect2 !== "function") {\n          connect2 = buildConnector({\n            ...tls,\n            maxCachedSessions,\n            socketPath,\n            timeout: connectTimeout,\n            ...util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : void 0,\n            ...connect2\n          });\n        }\n        this[kInterceptors] = interceptors && interceptors.Client && Array.isArray(interceptors.Client) ? interceptors.Client : [createRedirectInterceptor({ maxRedirections })];\n        this[kUrl] = util.parseOrigin(url);\n        this[kConnector] = connect2;\n        this[kSocket] = null;\n        this[kPipelining] = pipelining != null ? pipelining : 1;\n        this[kMaxHeadersSize] = maxHeaderSize || 16384;\n        this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout;\n        this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 6e5 : keepAliveMaxTimeout;\n        this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 1e3 : keepAliveTimeoutThreshold;\n        this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout];\n        this[kServerName] = null;\n        this[kLocalAddress] = localAddress != null ? localAddress : null;\n        this[kResuming] = 0;\n        this[kNeedDrain] = 0;\n        this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ""}\\r\n`;\n        this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 3e5;\n        this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 3e5;\n        this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength;\n        this[kMaxRedirections] = maxRedirections;\n        this[kMaxRequests] = maxRequestsPerClient;\n        this[kClosedResolve] = null;\n        this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1;\n        this[kQueue] = [];\n        this[kRunningIdx] = 0;\n        this[kPendingIdx] = 0;\n      }\n      get pipelining() {\n        return this[kPipelining];\n      }\n      set pipelining(value) {\n        this[kPipelining] = value;\n        resume(this, true);\n      }\n      get [kPending]() {\n        return this[kQueue].length - this[kPendingIdx];\n      }\n      get [kRunning]() {\n        return this[kPendingIdx] - this[kRunningIdx];\n      }\n      get [kSize]() {\n        return this[kQueue].length - this[kRunningIdx];\n      }\n      get [kConnected]() {\n        return !!this[kSocket] && !this[kConnecting] && !this[kSocket].destroyed;\n      }\n      get [kBusy]() {\n        const socket = this[kSocket];\n        return socket && (socket[kReset] || socket[kWriting] || socket[kBlocking]) || this[kSize] >= (this[kPipelining] || 1) || this[kPending] > 0;\n      }\n      /* istanbul ignore: only used for test */\n      [kConnect](cb) {\n        connect(this);\n        this.once("connect", cb);\n      }\n      [kDispatch](opts, handler) {\n        const origin = opts.origin || this[kUrl].origin;\n        const request = new Request2(origin, opts, handler);\n        this[kQueue].push(request);\n        if (this[kResuming]) {\n        } else if (util.bodyLength(request.body) == null && util.isIterable(request.body)) {\n          this[kResuming] = 1;\n          define_process_default.nextTick(resume, this);\n        } else {\n          resume(this, true);\n        }\n        if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {\n          this[kNeedDrain] = 2;\n        }\n        return this[kNeedDrain] < 2;\n      }\n      async [kClose]() {\n        return new Promise((resolve) => {\n          if (!this[kSize]) {\n            resolve(null);\n          } else {\n            this[kClosedResolve] = resolve;\n          }\n        });\n      }\n      async [kDestroy](err) {\n        return new Promise((resolve) => {\n          const requests = this[kQueue].splice(this[kPendingIdx]);\n          for (let i = 0; i < requests.length; i++) {\n            const request = requests[i];\n            errorRequest(this, request, err);\n          }\n          const callback = /* @__PURE__ */ __name(() => {\n            if (this[kClosedResolve]) {\n              this[kClosedResolve]();\n              this[kClosedResolve] = null;\n            }\n            resolve();\n          }, "callback");\n          if (!this[kSocket]) {\n            queueMicrotask(callback);\n          } else {\n            util.destroy(this[kSocket].on("close", callback), err);\n          }\n          resume(this);\n        });\n      }\n    };\n    __name(Client, "Client");\n    var constants = require_constants2();\n    var createRedirectInterceptor = require_redirectInterceptor();\n    var EMPTY_BUF = Buffer.alloc(0);\n    async function lazyllhttp() {\n      const llhttpWasmData = define_process_default.env.JEST_WORKER_ID ? require_llhttp_wasm() : void 0;\n      let mod;\n      try {\n        mod = await WebAssembly.compile(Buffer.from(require_llhttp_simd_wasm(), "base64"));\n      } catch (e) {\n        mod = await WebAssembly.compile(Buffer.from(llhttpWasmData || require_llhttp_wasm(), "base64"));\n      }\n      return await WebAssembly.instantiate(mod, {\n        env: {\n          /* eslint-disable camelcase */\n          wasm_on_url: (p, at, len) => {\n            return 0;\n          },\n          wasm_on_status: (p, at, len) => {\n            assert.strictEqual(currentParser.ptr, p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;\n          },\n          wasm_on_message_begin: (p) => {\n            assert.strictEqual(currentParser.ptr, p);\n            return currentParser.onMessageBegin() || 0;\n          },\n          wasm_on_header_field: (p, at, len) => {\n            assert.strictEqual(currentParser.ptr, p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;\n          },\n          wasm_on_header_value: (p, at, len) => {\n            assert.strictEqual(currentParser.ptr, p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;\n          },\n          wasm_on_headers_complete: (p, statusCode, upgrade, shouldKeepAlive) => {\n            assert.strictEqual(currentParser.ptr, p);\n            return currentParser.onHeadersComplete(statusCode, Boolean(upgrade), Boolean(shouldKeepAlive)) || 0;\n          },\n          wasm_on_body: (p, at, len) => {\n            assert.strictEqual(currentParser.ptr, p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onBody(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;\n          },\n          wasm_on_message_complete: (p) => {\n            assert.strictEqual(currentParser.ptr, p);\n            return currentParser.onMessageComplete() || 0;\n          }\n          /* eslint-enable camelcase */\n        }\n      });\n    }\n    __name(lazyllhttp, "lazyllhttp");\n    var llhttpInstance = null;\n    var llhttpPromise = lazyllhttp();\n    llhttpPromise.catch();\n    var currentParser = null;\n    var currentBufferRef = null;\n    var currentBufferSize = 0;\n    var currentBufferPtr = null;\n    var TIMEOUT_HEADERS = 1;\n    var TIMEOUT_BODY = 2;\n    var TIMEOUT_IDLE = 3;\n    var Parser = class {\n      constructor(client, socket, { exports: exports2 }) {\n        assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0);\n        this.llhttp = exports2;\n        this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE);\n        this.client = client;\n        this.socket = socket;\n        this.timeout = null;\n        this.timeoutValue = null;\n        this.timeoutType = null;\n        this.statusCode = null;\n        this.statusText = "";\n        this.upgrade = false;\n        this.headers = [];\n        this.headersSize = 0;\n        this.headersMaxSize = client[kMaxHeadersSize];\n        this.shouldKeepAlive = false;\n        this.paused = false;\n        this.resume = this.resume.bind(this);\n        this.bytesRead = 0;\n        this.keepAlive = "";\n        this.contentLength = "";\n        this.connection = "";\n        this.maxResponseSize = client[kMaxResponseSize];\n      }\n      setTimeout(value, type) {\n        this.timeoutType = type;\n        if (value !== this.timeoutValue) {\n          timers.clearTimeout(this.timeout);\n          if (value) {\n            this.timeout = timers.setTimeout(onParserTimeout, value, this);\n            if (this.timeout.unref) {\n              this.timeout.unref();\n            }\n          } else {\n            this.timeout = null;\n          }\n          this.timeoutValue = value;\n        } else if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n      }\n      resume() {\n        if (this.socket.destroyed || !this.paused) {\n          return;\n        }\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        this.llhttp.llhttp_resume(this.ptr);\n        assert(this.timeoutType === TIMEOUT_BODY);\n        if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        this.paused = false;\n        this.execute(this.socket.read() || EMPTY_BUF);\n        this.readMore();\n      }\n      readMore() {\n        while (!this.paused && this.ptr) {\n          const chunk = this.socket.read();\n          if (chunk === null) {\n            break;\n          }\n          this.execute(chunk);\n        }\n      }\n      execute(data) {\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        assert(!this.paused);\n        const { socket, llhttp } = this;\n        if (data.length > currentBufferSize) {\n          if (currentBufferPtr) {\n            llhttp.free(currentBufferPtr);\n          }\n          currentBufferSize = Math.ceil(data.length / 4096) * 4096;\n          currentBufferPtr = llhttp.malloc(currentBufferSize);\n        }\n        new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data);\n        try {\n          let ret;\n          try {\n            currentBufferRef = data;\n            currentParser = this;\n            ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length);\n          } catch (err) {\n            throw err;\n          } finally {\n            currentParser = null;\n            currentBufferRef = null;\n          }\n          const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr;\n          if (ret === constants.ERROR.PAUSED_UPGRADE) {\n            this.onUpgrade(data.slice(offset));\n          } else if (ret === constants.ERROR.PAUSED) {\n            this.paused = true;\n            socket.unshift(data.slice(offset));\n          } else if (ret !== constants.ERROR.OK) {\n            const ptr = llhttp.llhttp_get_error_reason(this.ptr);\n            let message = "";\n            if (ptr) {\n              const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0);\n              message = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(llhttp.memory.buffer, ptr, len).toString() + ")";\n            }\n            throw new HTTPParserError(message, constants.ERROR[ret], data.slice(offset));\n          }\n        } catch (err) {\n          util.destroy(socket, err);\n        }\n      }\n      destroy() {\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        this.llhttp.llhttp_free(this.ptr);\n        this.ptr = null;\n        timers.clearTimeout(this.timeout);\n        this.timeout = null;\n        this.timeoutValue = null;\n        this.timeoutType = null;\n        this.paused = false;\n      }\n      onStatus(buf) {\n        this.statusText = buf.toString();\n      }\n      onMessageBegin() {\n        const { socket, client } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        if (!request) {\n          return -1;\n        }\n      }\n      onHeaderField(buf) {\n        const len = this.headers.length;\n        if ((len & 1) === 0) {\n          this.headers.push(buf);\n        } else {\n          this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf]);\n        }\n        this.trackHeader(buf.length);\n      }\n      onHeaderValue(buf) {\n        let len = this.headers.length;\n        if ((len & 1) === 1) {\n          this.headers.push(buf);\n          len += 1;\n        } else {\n          this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf]);\n        }\n        const key = this.headers[len - 2];\n        if (key.length === 10 && key.toString().toLowerCase() === "keep-alive") {\n          this.keepAlive += buf.toString();\n        } else if (key.length === 10 && key.toString().toLowerCase() === "connection") {\n          this.connection += buf.toString();\n        } else if (key.length === 14 && key.toString().toLowerCase() === "content-length") {\n          this.contentLength += buf.toString();\n        }\n        this.trackHeader(buf.length);\n      }\n      trackHeader(len) {\n        this.headersSize += len;\n        if (this.headersSize >= this.headersMaxSize) {\n          util.destroy(this.socket, new HeadersOverflowError());\n        }\n      }\n      onUpgrade(head) {\n        const { upgrade, client, socket, headers, statusCode } = this;\n        assert(upgrade);\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        assert(!socket.destroyed);\n        assert(socket === client[kSocket]);\n        assert(!this.paused);\n        assert(request.upgrade || request.method === "CONNECT");\n        this.statusCode = null;\n        this.statusText = "";\n        this.shouldKeepAlive = null;\n        assert(this.headers.length % 2 === 0);\n        this.headers = [];\n        this.headersSize = 0;\n        socket.unshift(head);\n        socket[kParser].destroy();\n        socket[kParser] = null;\n        socket[kClient] = null;\n        socket[kError] = null;\n        socket.removeListener("error", onSocketError).removeListener("readable", onSocketReadable).removeListener("end", onSocketEnd).removeListener("close", onSocketClose);\n        client[kSocket] = null;\n        client[kQueue][client[kRunningIdx]++] = null;\n        client.emit("disconnect", client[kUrl], [client], new InformationalError("upgrade"));\n        try {\n          request.onUpgrade(statusCode, headers, socket);\n        } catch (err) {\n          util.destroy(socket, err);\n        }\n        resume(client);\n      }\n      onHeadersComplete(statusCode, upgrade, shouldKeepAlive) {\n        const { client, socket, headers, statusText } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        if (!request) {\n          return -1;\n        }\n        assert(!this.upgrade);\n        assert(this.statusCode < 200);\n        if (statusCode === 100) {\n          util.destroy(socket, new SocketError("bad response", util.getSocketInfo(socket)));\n          return -1;\n        }\n        if (upgrade && !request.upgrade) {\n          util.destroy(socket, new SocketError("bad upgrade", util.getSocketInfo(socket)));\n          return -1;\n        }\n        assert.strictEqual(this.timeoutType, TIMEOUT_HEADERS);\n        this.statusCode = statusCode;\n        this.shouldKeepAlive = shouldKeepAlive || // Override llhttp value which does not allow keepAlive for HEAD.\n        request.method === "HEAD" && !socket[kReset] && this.connection.toLowerCase() === "keep-alive";\n        if (this.statusCode >= 200) {\n          const bodyTimeout = request.bodyTimeout != null ? request.bodyTimeout : client[kBodyTimeout];\n          this.setTimeout(bodyTimeout, TIMEOUT_BODY);\n        } else if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        if (request.method === "CONNECT") {\n          assert(client[kRunning] === 1);\n          this.upgrade = true;\n          return 2;\n        }\n        if (upgrade) {\n          assert(client[kRunning] === 1);\n          this.upgrade = true;\n          return 2;\n        }\n        assert(this.headers.length % 2 === 0);\n        this.headers = [];\n        this.headersSize = 0;\n        if (this.shouldKeepAlive && client[kPipelining]) {\n          const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null;\n          if (keepAliveTimeout != null) {\n            const timeout = Math.min(\n              keepAliveTimeout - client[kKeepAliveTimeoutThreshold],\n              client[kKeepAliveMaxTimeout]\n            );\n            if (timeout <= 0) {\n              socket[kReset] = true;\n            } else {\n              client[kKeepAliveTimeoutValue] = timeout;\n            }\n          } else {\n            client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout];\n          }\n        } else {\n          socket[kReset] = true;\n        }\n        let pause;\n        try {\n          pause = request.onHeaders(statusCode, headers, this.resume, statusText) === false;\n        } catch (err) {\n          util.destroy(socket, err);\n          return -1;\n        }\n        if (request.method === "HEAD") {\n          return 1;\n        }\n        if (statusCode < 200) {\n          return 1;\n        }\n        if (socket[kBlocking]) {\n          socket[kBlocking] = false;\n          resume(client);\n        }\n        return pause ? constants.ERROR.PAUSED : 0;\n      }\n      onBody(buf) {\n        const { client, socket, statusCode, maxResponseSize } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        assert.strictEqual(this.timeoutType, TIMEOUT_BODY);\n        if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        assert(statusCode >= 200);\n        if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {\n          util.destroy(socket, new ResponseExceededMaxSizeError());\n          return -1;\n        }\n        this.bytesRead += buf.length;\n        try {\n          if (request.onData(buf) === false) {\n            return constants.ERROR.PAUSED;\n          }\n        } catch (err) {\n          util.destroy(socket, err);\n          return -1;\n        }\n      }\n      onMessageComplete() {\n        const { client, socket, statusCode, upgrade, headers, contentLength, bytesRead, shouldKeepAlive } = this;\n        if (socket.destroyed && (!statusCode || shouldKeepAlive)) {\n          return -1;\n        }\n        if (upgrade) {\n          return;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        assert(statusCode >= 100);\n        this.statusCode = null;\n        this.statusText = "";\n        this.bytesRead = 0;\n        this.contentLength = "";\n        this.keepAlive = "";\n        this.connection = "";\n        assert(this.headers.length % 2 === 0);\n        this.headers = [];\n        this.headersSize = 0;\n        if (statusCode < 200) {\n          return;\n        }\n        if (request.method !== "HEAD" && contentLength && bytesRead !== parseInt(contentLength, 10)) {\n          util.destroy(socket, new ResponseContentLengthMismatchError());\n          return -1;\n        }\n        try {\n          request.onComplete(headers);\n        } catch (err) {\n          errorRequest(client, request, err);\n        }\n        client[kQueue][client[kRunningIdx]++] = null;\n        if (socket[kWriting]) {\n          assert.strictEqual(client[kRunning], 0);\n          util.destroy(socket, new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (!shouldKeepAlive) {\n          util.destroy(socket, new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (socket[kReset] && client[kRunning] === 0) {\n          util.destroy(socket, new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (client[kPipelining] === 1) {\n          setImmediate(resume, client);\n        } else {\n          resume(client);\n        }\n      }\n    };\n    __name(Parser, "Parser");\n    function onParserTimeout(parser) {\n      const { socket, timeoutType, client } = parser;\n      if (timeoutType === TIMEOUT_HEADERS) {\n        if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {\n          assert(!parser.paused, "cannot be paused while waiting for headers");\n          util.destroy(socket, new HeadersTimeoutError());\n        }\n      } else if (timeoutType === TIMEOUT_BODY) {\n        if (!parser.paused) {\n          util.destroy(socket, new BodyTimeoutError());\n        }\n      } else if (timeoutType === TIMEOUT_IDLE) {\n        assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue]);\n        util.destroy(socket, new InformationalError("socket idle timeout"));\n      }\n    }\n    __name(onParserTimeout, "onParserTimeout");\n    function onSocketReadable() {\n      const { [kParser]: parser } = this;\n      parser.readMore();\n    }\n    __name(onSocketReadable, "onSocketReadable");\n    function onSocketError(err) {\n      const { [kParser]: parser } = this;\n      assert(err.code !== "ERR_TLS_CERT_ALTNAME_INVALID");\n      if (err.code === "ECONNRESET" && parser.statusCode && !parser.shouldKeepAlive) {\n        parser.onMessageComplete();\n        return;\n      }\n      this[kError] = err;\n      onError(this[kClient], err);\n    }\n    __name(onSocketError, "onSocketError");\n    function onError(client, err) {\n      if (client[kRunning] === 0 && err.code !== "UND_ERR_INFO" && err.code !== "UND_ERR_SOCKET") {\n        assert(client[kPendingIdx] === client[kRunningIdx]);\n        const requests = client[kQueue].splice(client[kRunningIdx]);\n        for (let i = 0; i < requests.length; i++) {\n          const request = requests[i];\n          errorRequest(client, request, err);\n        }\n        assert(client[kSize] === 0);\n      }\n    }\n    __name(onError, "onError");\n    function onSocketEnd() {\n      const { [kParser]: parser } = this;\n      if (parser.statusCode && !parser.shouldKeepAlive) {\n        parser.onMessageComplete();\n        return;\n      }\n      util.destroy(this, new SocketError("other side closed", util.getSocketInfo(this)));\n    }\n    __name(onSocketEnd, "onSocketEnd");\n    function onSocketClose() {\n      const { [kClient]: client } = this;\n      if (!this[kError] && this[kParser].statusCode && !this[kParser].shouldKeepAlive) {\n        this[kParser].onMessageComplete();\n      }\n      this[kParser].destroy();\n      this[kParser] = null;\n      const err = this[kError] || new SocketError("closed", util.getSocketInfo(this));\n      client[kSocket] = null;\n      if (client.destroyed) {\n        assert(client[kPending] === 0);\n        const requests = client[kQueue].splice(client[kRunningIdx]);\n        for (let i = 0; i < requests.length; i++) {\n          const request = requests[i];\n          errorRequest(client, request, err);\n        }\n      } else if (client[kRunning] > 0 && err.code !== "UND_ERR_INFO") {\n        const request = client[kQueue][client[kRunningIdx]];\n        client[kQueue][client[kRunningIdx]++] = null;\n        errorRequest(client, request, err);\n      }\n      client[kPendingIdx] = client[kRunningIdx];\n      assert(client[kRunning] === 0);\n      client.emit("disconnect", client[kUrl], [client], err);\n      resume(client);\n    }\n    __name(onSocketClose, "onSocketClose");\n    async function connect(client) {\n      assert(!client[kConnecting]);\n      assert(!client[kSocket]);\n      let { host, hostname, protocol, port } = client[kUrl];\n      if (hostname[0] === "[") {\n        const idx = hostname.indexOf("]");\n        assert(idx !== -1);\n        const ip = hostname.substr(1, idx - 1);\n        assert(net.isIP(ip));\n        hostname = ip;\n      }\n      client[kConnecting] = true;\n      if (channels.beforeConnect.hasSubscribers) {\n        channels.beforeConnect.publish({\n          connectParams: {\n            host,\n            hostname,\n            protocol,\n            port,\n            servername: client[kServerName],\n            localAddress: client[kLocalAddress]\n          },\n          connector: client[kConnector]\n        });\n      }\n      try {\n        const socket = await new Promise((resolve, reject) => {\n          client[kConnector]({\n            host,\n            hostname,\n            protocol,\n            port,\n            servername: client[kServerName],\n            localAddress: client[kLocalAddress]\n          }, (err, socket2) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(socket2);\n            }\n          });\n        });\n        if (client.destroyed) {\n          util.destroy(socket.on("error", () => {\n          }), new ClientDestroyedError());\n          return;\n        }\n        if (!llhttpInstance) {\n          llhttpInstance = await llhttpPromise;\n          llhttpPromise = null;\n        }\n        client[kConnecting] = false;\n        assert(socket);\n        socket[kNoRef] = false;\n        socket[kWriting] = false;\n        socket[kReset] = false;\n        socket[kBlocking] = false;\n        socket[kError] = null;\n        socket[kParser] = new Parser(client, socket, llhttpInstance);\n        socket[kClient] = client;\n        socket[kCounter] = 0;\n        socket[kMaxRequests] = client[kMaxRequests];\n        socket.on("error", onSocketError).on("readable", onSocketReadable).on("end", onSocketEnd).on("close", onSocketClose);\n        client[kSocket] = socket;\n        if (channels.connected.hasSubscribers) {\n          channels.connected.publish({\n            connectParams: {\n              host,\n              hostname,\n              protocol,\n              port,\n              servername: client[kServerName],\n              localAddress: client[kLocalAddress]\n            },\n            connector: client[kConnector],\n            socket\n          });\n        }\n        client.emit("connect", client[kUrl], [client]);\n      } catch (err) {\n        if (client.destroyed) {\n          return;\n        }\n        client[kConnecting] = false;\n        if (channels.connectError.hasSubscribers) {\n          channels.connectError.publish({\n            connectParams: {\n              host,\n              hostname,\n              protocol,\n              port,\n              servername: client[kServerName],\n              localAddress: client[kLocalAddress]\n            },\n            connector: client[kConnector],\n            error: err\n          });\n        }\n        if (err.code === "ERR_TLS_CERT_ALTNAME_INVALID") {\n          assert(client[kRunning] === 0);\n          while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {\n            const request = client[kQueue][client[kPendingIdx]++];\n            errorRequest(client, request, err);\n          }\n        } else {\n          onError(client, err);\n        }\n        client.emit("connectionError", client[kUrl], [client], err);\n      }\n      resume(client);\n    }\n    __name(connect, "connect");\n    function emitDrain(client) {\n      client[kNeedDrain] = 0;\n      client.emit("drain", client[kUrl], [client]);\n    }\n    __name(emitDrain, "emitDrain");\n    function resume(client, sync) {\n      if (client[kResuming] === 2) {\n        return;\n      }\n      client[kResuming] = 2;\n      _resume(client, sync);\n      client[kResuming] = 0;\n      if (client[kRunningIdx] > 256) {\n        client[kQueue].splice(0, client[kRunningIdx]);\n        client[kPendingIdx] -= client[kRunningIdx];\n        client[kRunningIdx] = 0;\n      }\n    }\n    __name(resume, "resume");\n    function _resume(client, sync) {\n      while (true) {\n        if (client.destroyed) {\n          assert(client[kPending] === 0);\n          return;\n        }\n        if (client[kClosedResolve] && !client[kSize]) {\n          client[kClosedResolve]();\n          client[kClosedResolve] = null;\n          return;\n        }\n        const socket = client[kSocket];\n        if (socket && !socket.destroyed) {\n          if (client[kSize] === 0) {\n            if (!socket[kNoRef] && socket.unref) {\n              socket.unref();\n              socket[kNoRef] = true;\n            }\n          } else if (socket[kNoRef] && socket.ref) {\n            socket.ref();\n            socket[kNoRef] = false;\n          }\n          if (client[kSize] === 0) {\n            if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {\n              socket[kParser].setTimeout(client[kKeepAliveTimeoutValue], TIMEOUT_IDLE);\n            }\n          } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {\n            if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {\n              const request2 = client[kQueue][client[kRunningIdx]];\n              const headersTimeout = request2.headersTimeout != null ? request2.headersTimeout : client[kHeadersTimeout];\n              socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS);\n            }\n          }\n        }\n        if (client[kBusy]) {\n          client[kNeedDrain] = 2;\n        } else if (client[kNeedDrain] === 2) {\n          if (sync) {\n            client[kNeedDrain] = 1;\n            define_process_default.nextTick(emitDrain, client);\n          } else {\n            emitDrain(client);\n          }\n          continue;\n        }\n        if (client[kPending] === 0) {\n          return;\n        }\n        if (client[kRunning] >= (client[kPipelining] || 1)) {\n          return;\n        }\n        const request = client[kQueue][client[kPendingIdx]];\n        if (client[kUrl].protocol === "https:" && client[kServerName] !== request.servername) {\n          if (client[kRunning] > 0) {\n            return;\n          }\n          client[kServerName] = request.servername;\n          if (socket && socket.servername !== request.servername) {\n            util.destroy(socket, new InformationalError("servername changed"));\n            return;\n          }\n        }\n        if (client[kConnecting]) {\n          return;\n        }\n        if (!socket) {\n          connect(client);\n          return;\n        }\n        if (socket.destroyed || socket[kWriting] || socket[kReset] || socket[kBlocking]) {\n          return;\n        }\n        if (client[kRunning] > 0 && !request.idempotent) {\n          return;\n        }\n        if (client[kRunning] > 0 && (request.upgrade || request.method === "CONNECT")) {\n          return;\n        }\n        if (util.isStream(request.body) && util.bodyLength(request.body) === 0) {\n          request.body.on(\n            "data",\n            /* istanbul ignore next */\n            function() {\n              assert(false);\n            }\n          ).on("error", function(err) {\n            errorRequest(client, request, err);\n          }).on("end", function() {\n            util.destroy(this);\n          });\n          request.body = null;\n        }\n        if (client[kRunning] > 0 && (util.isStream(request.body) || util.isAsyncIterable(request.body))) {\n          return;\n        }\n        if (!request.aborted && write(client, request)) {\n          client[kPendingIdx]++;\n        } else {\n          client[kQueue].splice(client[kPendingIdx], 1);\n        }\n      }\n    }\n    __name(_resume, "_resume");\n    function write(client, request) {\n      const { body, method, path, host, upgrade, headers, blocking, reset } = request;\n      const expectsPayload = method === "PUT" || method === "POST" || method === "PATCH";\n      if (body && typeof body.read === "function") {\n        body.read(0);\n      }\n      let contentLength = util.bodyLength(body);\n      if (contentLength === null) {\n        contentLength = request.contentLength;\n      }\n      if (contentLength === 0 && !expectsPayload) {\n        contentLength = null;\n      }\n      if (request.contentLength !== null && request.contentLength !== contentLength) {\n        if (client[kStrictContentLength]) {\n          errorRequest(client, request, new RequestContentLengthMismatchError());\n          return false;\n        }\n        define_process_default.emitWarning(new RequestContentLengthMismatchError());\n      }\n      const socket = client[kSocket];\n      try {\n        request.onConnect((err) => {\n          if (request.aborted || request.completed) {\n            return;\n          }\n          errorRequest(client, request, err || new RequestAbortedError());\n          util.destroy(socket, new InformationalError("aborted"));\n        });\n      } catch (err) {\n        errorRequest(client, request, err);\n      }\n      if (request.aborted) {\n        return false;\n      }\n      if (method === "HEAD") {\n        socket[kReset] = true;\n      }\n      if (upgrade || method === "CONNECT") {\n        socket[kReset] = true;\n      }\n      if (reset != null) {\n        socket[kReset] = reset;\n      }\n      if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {\n        socket[kReset] = true;\n      }\n      if (blocking) {\n        socket[kBlocking] = true;\n      }\n      let header = `${method} ${path} HTTP/1.1\\r\n`;\n      if (typeof host === "string") {\n        header += `host: ${host}\\r\n`;\n      } else {\n        header += client[kHostHeader];\n      }\n      if (upgrade) {\n        header += `connection: upgrade\\r\nupgrade: ${upgrade}\\r\n`;\n      } else if (client[kPipelining] && !socket[kReset]) {\n        header += "connection: keep-alive\\r\\n";\n      } else {\n        header += "connection: close\\r\\n";\n      }\n      if (headers) {\n        header += headers;\n      }\n      if (channels.sendHeaders.hasSubscribers) {\n        channels.sendHeaders.publish({ request, headers: header, socket });\n      }\n      if (!body) {\n        if (contentLength === 0) {\n          socket.write(`${header}content-length: 0\\r\n\\r\n`, "latin1");\n        } else {\n          assert(contentLength === null, "no body must not have content length");\n          socket.write(`${header}\\r\n`, "latin1");\n        }\n        request.onRequestSent();\n      } else if (util.isBuffer(body)) {\n        assert(contentLength === body.byteLength, "buffer body must have content length");\n        socket.cork();\n        socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`, "latin1");\n        socket.write(body);\n        socket.uncork();\n        request.onBodySent(body);\n        request.onRequestSent();\n        if (!expectsPayload) {\n          socket[kReset] = true;\n        }\n      } else if (util.isBlobLike(body)) {\n        if (typeof body.stream === "function") {\n          writeIterable({ body: body.stream(), client, request, socket, contentLength, header, expectsPayload });\n        } else {\n          writeBlob({ body, client, request, socket, contentLength, header, expectsPayload });\n        }\n      } else if (util.isStream(body)) {\n        writeStream({ body, client, request, socket, contentLength, header, expectsPayload });\n      } else if (util.isIterable(body)) {\n        writeIterable({ body, client, request, socket, contentLength, header, expectsPayload });\n      } else {\n        assert(false);\n      }\n      return true;\n    }\n    __name(write, "write");\n    function writeStream({ body, client, request, socket, contentLength, header, expectsPayload }) {\n      assert(contentLength !== 0 || client[kRunning] === 0, "stream body cannot be pipelined");\n      let finished = false;\n      const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header });\n      const onData = /* @__PURE__ */ __name(function(chunk) {\n        if (finished) {\n          return;\n        }\n        try {\n          if (!writer.write(chunk) && this.pause) {\n            this.pause();\n          }\n        } catch (err) {\n          util.destroy(this, err);\n        }\n      }, "onData");\n      const onDrain = /* @__PURE__ */ __name(function() {\n        if (finished) {\n          return;\n        }\n        if (body.resume) {\n          body.resume();\n        }\n      }, "onDrain");\n      const onAbort = /* @__PURE__ */ __name(function() {\n        onFinished(new RequestAbortedError());\n      }, "onAbort");\n      const onFinished = /* @__PURE__ */ __name(function(err) {\n        if (finished) {\n          return;\n        }\n        finished = true;\n        assert(socket.destroyed || socket[kWriting] && client[kRunning] <= 1);\n        socket.off("drain", onDrain).off("error", onFinished);\n        body.removeListener("data", onData).removeListener("end", onFinished).removeListener("error", onFinished).removeListener("close", onAbort);\n        if (!err) {\n          try {\n            writer.end();\n          } catch (er) {\n            err = er;\n          }\n        }\n        writer.destroy(err);\n        if (err && (err.code !== "UND_ERR_INFO" || err.message !== "reset")) {\n          util.destroy(body, err);\n        } else {\n          util.destroy(body);\n        }\n      }, "onFinished");\n      body.on("data", onData).on("end", onFinished).on("error", onFinished).on("close", onAbort);\n      if (body.resume) {\n        body.resume();\n      }\n      socket.on("drain", onDrain).on("error", onFinished);\n    }\n    __name(writeStream, "writeStream");\n    async function writeBlob({ body, client, request, socket, contentLength, header, expectsPayload }) {\n      assert(contentLength === body.size, "blob body must have content length");\n      try {\n        if (contentLength != null && contentLength !== body.size) {\n          throw new RequestContentLengthMismatchError();\n        }\n        const buffer = Buffer.from(await body.arrayBuffer());\n        socket.cork();\n        socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`, "latin1");\n        socket.write(buffer);\n        socket.uncork();\n        request.onBodySent(buffer);\n        request.onRequestSent();\n        if (!expectsPayload) {\n          socket[kReset] = true;\n        }\n        resume(client);\n      } catch (err) {\n        util.destroy(socket, err);\n      }\n    }\n    __name(writeBlob, "writeBlob");\n    async function writeIterable({ body, client, request, socket, contentLength, header, expectsPayload }) {\n      assert(contentLength !== 0 || client[kRunning] === 0, "iterator body cannot be pipelined");\n      let callback = null;\n      function onDrain() {\n        if (callback) {\n          const cb = callback;\n          callback = null;\n          cb();\n        }\n      }\n      __name(onDrain, "onDrain");\n      const waitForDrain = /* @__PURE__ */ __name(() => new Promise((resolve, reject) => {\n        assert(callback === null);\n        if (socket[kError]) {\n          reject(socket[kError]);\n        } else {\n          callback = resolve;\n        }\n      }), "waitForDrain");\n      socket.on("close", onDrain).on("drain", onDrain);\n      const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header });\n      try {\n        for await (const chunk of body) {\n          if (socket[kError]) {\n            throw socket[kError];\n          }\n          if (!writer.write(chunk)) {\n            await waitForDrain();\n          }\n        }\n        writer.end();\n      } catch (err) {\n        writer.destroy(err);\n      } finally {\n        socket.off("close", onDrain).off("drain", onDrain);\n      }\n    }\n    __name(writeIterable, "writeIterable");\n    var AsyncWriter = class {\n      constructor({ socket, request, contentLength, client, expectsPayload, header }) {\n        this.socket = socket;\n        this.request = request;\n        this.contentLength = contentLength;\n        this.client = client;\n        this.bytesWritten = 0;\n        this.expectsPayload = expectsPayload;\n        this.header = header;\n        socket[kWriting] = true;\n      }\n      write(chunk) {\n        const { socket, request, contentLength, client, bytesWritten, expectsPayload, header } = this;\n        if (socket[kError]) {\n          throw socket[kError];\n        }\n        if (socket.destroyed) {\n          return false;\n        }\n        const len = Buffer.byteLength(chunk);\n        if (!len) {\n          return true;\n        }\n        if (contentLength !== null && bytesWritten + len > contentLength) {\n          if (client[kStrictContentLength]) {\n            throw new RequestContentLengthMismatchError();\n          }\n          define_process_default.emitWarning(new RequestContentLengthMismatchError());\n        }\n        socket.cork();\n        if (bytesWritten === 0) {\n          if (!expectsPayload) {\n            socket[kReset] = true;\n          }\n          if (contentLength === null) {\n            socket.write(`${header}transfer-encoding: chunked\\r\n`, "latin1");\n          } else {\n            socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`, "latin1");\n          }\n        }\n        if (contentLength === null) {\n          socket.write(`\\r\n${len.toString(16)}\\r\n`, "latin1");\n        }\n        this.bytesWritten += len;\n        const ret = socket.write(chunk);\n        socket.uncork();\n        request.onBodySent(chunk);\n        if (!ret) {\n          if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n            if (socket[kParser].timeout.refresh) {\n              socket[kParser].timeout.refresh();\n            }\n          }\n        }\n        return ret;\n      }\n      end() {\n        const { socket, contentLength, client, bytesWritten, expectsPayload, header, request } = this;\n        request.onRequestSent();\n        socket[kWriting] = false;\n        if (socket[kError]) {\n          throw socket[kError];\n        }\n        if (socket.destroyed) {\n          return;\n        }\n        if (bytesWritten === 0) {\n          if (expectsPayload) {\n            socket.write(`${header}content-length: 0\\r\n\\r\n`, "latin1");\n          } else {\n            socket.write(`${header}\\r\n`, "latin1");\n          }\n        } else if (contentLength === null) {\n          socket.write("\\r\\n0\\r\\n\\r\\n", "latin1");\n        }\n        if (contentLength !== null && bytesWritten !== contentLength) {\n          if (client[kStrictContentLength]) {\n            throw new RequestContentLengthMismatchError();\n          } else {\n            define_process_default.emitWarning(new RequestContentLengthMismatchError());\n          }\n        }\n        if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n          if (socket[kParser].timeout.refresh) {\n            socket[kParser].timeout.refresh();\n          }\n        }\n        resume(client);\n      }\n      destroy(err) {\n        const { socket, client } = this;\n        socket[kWriting] = false;\n        if (err) {\n          assert(client[kRunning] <= 1, "pipeline should only contain this request");\n          util.destroy(socket, err);\n        }\n      }\n    };\n    __name(AsyncWriter, "AsyncWriter");\n    function errorRequest(client, request, err) {\n      try {\n        request.onError(err);\n        assert(request.aborted);\n      } catch (err2) {\n        client.emit("error", err2);\n      }\n    }\n    __name(errorRequest, "errorRequest");\n    module2.exports = Client;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/pool.js\nvar require_pool = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/pool.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var {\n      PoolBase,\n      kClients,\n      kNeedDrain,\n      kAddClient,\n      kGetDispatcher\n    } = require_pool_base();\n    var Client = require_client();\n    var {\n      InvalidArgumentError: InvalidArgumentError2\n    } = require_errors();\n    var util = require_util();\n    var { kUrl, kInterceptors } = require_symbols2();\n    var buildConnector = require_connect();\n    var kOptions = Symbol("options");\n    var kConnections = Symbol("connections");\n    var kFactory = Symbol("factory");\n    function defaultFactory(origin, opts) {\n      return new Client(origin, opts);\n    }\n    __name(defaultFactory, "defaultFactory");\n    var Pool = class extends PoolBase {\n      constructor(origin, {\n        connections,\n        factory = defaultFactory,\n        connect,\n        connectTimeout,\n        tls,\n        maxCachedSessions,\n        socketPath,\n        autoSelectFamily,\n        autoSelectFamilyAttemptTimeout,\n        ...options\n      } = {}) {\n        super();\n        if (connections != null && (!Number.isFinite(connections) || connections < 0)) {\n          throw new InvalidArgumentError2("invalid connections");\n        }\n        if (typeof factory !== "function") {\n          throw new InvalidArgumentError2("factory must be a function.");\n        }\n        if (connect != null && typeof connect !== "function" && typeof connect !== "object") {\n          throw new InvalidArgumentError2("connect must be a function or an object");\n        }\n        if (typeof connect !== "function") {\n          connect = buildConnector({\n            ...tls,\n            maxCachedSessions,\n            socketPath,\n            timeout: connectTimeout == null ? 1e4 : connectTimeout,\n            ...util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : void 0,\n            ...connect\n          });\n        }\n        this[kInterceptors] = options.interceptors && options.interceptors.Pool && Array.isArray(options.interceptors.Pool) ? options.interceptors.Pool : [];\n        this[kConnections] = connections || null;\n        this[kUrl] = util.parseOrigin(origin);\n        this[kOptions] = { ...util.deepClone(options), connect };\n        this[kOptions].interceptors = options.interceptors ? { ...options.interceptors } : void 0;\n        this[kFactory] = factory;\n      }\n      [kGetDispatcher]() {\n        let dispatcher = this[kClients].find((dispatcher2) => !dispatcher2[kNeedDrain]);\n        if (dispatcher) {\n          return dispatcher;\n        }\n        if (!this[kConnections] || this[kClients].length < this[kConnections]) {\n          dispatcher = this[kFactory](this[kUrl], this[kOptions]);\n          this[kAddClient](dispatcher);\n        }\n        return dispatcher;\n      }\n    };\n    __name(Pool, "Pool");\n    module2.exports = Pool;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/agent.js\nvar require_agent = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/agent.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = require_symbols2();\n    var DispatcherBase = require_dispatcher_base();\n    var Pool = require_pool();\n    var Client = require_client();\n    var util = require_util();\n    var createRedirectInterceptor = require_redirectInterceptor();\n    var { WeakRef: WeakRef2, FinalizationRegistry } = require_dispatcher_weakref()();\n    var kOnConnect = Symbol("onConnect");\n    var kOnDisconnect = Symbol("onDisconnect");\n    var kOnConnectionError = Symbol("onConnectionError");\n    var kMaxRedirections = Symbol("maxRedirections");\n    var kOnDrain = Symbol("onDrain");\n    var kFactory = Symbol("factory");\n    var kFinalizer = Symbol("finalizer");\n    var kOptions = Symbol("options");\n    function defaultFactory(origin, opts) {\n      return opts && opts.connections === 1 ? new Client(origin, opts) : new Pool(origin, opts);\n    }\n    __name(defaultFactory, "defaultFactory");\n    var Agent2 = class extends DispatcherBase {\n      constructor({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {\n        super();\n        if (typeof factory !== "function") {\n          throw new InvalidArgumentError2("factory must be a function.");\n        }\n        if (connect != null && typeof connect !== "function" && typeof connect !== "object") {\n          throw new InvalidArgumentError2("connect must be a function or an object");\n        }\n        if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {\n          throw new InvalidArgumentError2("maxRedirections must be a positive number");\n        }\n        if (connect && typeof connect !== "function") {\n          connect = { ...connect };\n        }\n        this[kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent) ? options.interceptors.Agent : [createRedirectInterceptor({ maxRedirections })];\n        this[kOptions] = { ...util.deepClone(options), connect };\n        this[kOptions].interceptors = options.interceptors ? { ...options.interceptors } : void 0;\n        this[kMaxRedirections] = maxRedirections;\n        this[kFactory] = factory;\n        this[kClients] = /* @__PURE__ */ new Map();\n        this[kFinalizer] = new FinalizationRegistry(\n          /* istanbul ignore next: gc is undeterministic */\n          (key) => {\n            const ref = this[kClients].get(key);\n            if (ref !== void 0 && ref.deref() === void 0) {\n              this[kClients].delete(key);\n            }\n          }\n        );\n        const agent = this;\n        this[kOnDrain] = (origin, targets) => {\n          agent.emit("drain", origin, [agent, ...targets]);\n        };\n        this[kOnConnect] = (origin, targets) => {\n          agent.emit("connect", origin, [agent, ...targets]);\n        };\n        this[kOnDisconnect] = (origin, targets, err) => {\n          agent.emit("disconnect", origin, [agent, ...targets], err);\n        };\n        this[kOnConnectionError] = (origin, targets, err) => {\n          agent.emit("connectionError", origin, [agent, ...targets], err);\n        };\n      }\n      get [kRunning]() {\n        let ret = 0;\n        for (const ref of this[kClients].values()) {\n          const client = ref.deref();\n          if (client) {\n            ret += client[kRunning];\n          }\n        }\n        return ret;\n      }\n      [kDispatch](opts, handler) {\n        let key;\n        if (opts.origin && (typeof opts.origin === "string" || opts.origin instanceof URL)) {\n          key = String(opts.origin);\n        } else {\n          throw new InvalidArgumentError2("opts.origin must be a non-empty string or URL.");\n        }\n        const ref = this[kClients].get(key);\n        let dispatcher = ref ? ref.deref() : null;\n        if (!dispatcher) {\n          dispatcher = this[kFactory](opts.origin, this[kOptions]).on("drain", this[kOnDrain]).on("connect", this[kOnConnect]).on("disconnect", this[kOnDisconnect]).on("connectionError", this[kOnConnectionError]);\n          this[kClients].set(key, new WeakRef2(dispatcher));\n          this[kFinalizer].register(dispatcher, key);\n        }\n        return dispatcher.dispatch(opts, handler);\n      }\n      async [kClose]() {\n        const closePromises = [];\n        for (const ref of this[kClients].values()) {\n          const client = ref.deref();\n          if (client) {\n            closePromises.push(client.close());\n          }\n        }\n        await Promise.all(closePromises);\n      }\n      async [kDestroy](err) {\n        const destroyPromises = [];\n        for (const ref of this[kClients].values()) {\n          const client = ref.deref();\n          if (client) {\n            destroyPromises.push(client.destroy(err));\n          }\n        }\n        await Promise.all(destroyPromises);\n      }\n    };\n    __name(Agent2, "Agent");\n    module2.exports = Agent2;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/global.js\nvar require_global2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/global.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var globalDispatcher2 = Symbol.for("undici.globalDispatcher.1");\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var Agent2 = require_agent();\n    if (getGlobalDispatcher2() === void 0) {\n      setGlobalDispatcher2(new Agent2());\n    }\n    function setGlobalDispatcher2(agent) {\n      if (!agent || typeof agent.dispatch !== "function") {\n        throw new InvalidArgumentError2("Argument agent must implement Agent");\n      }\n      Object.defineProperty(globalThis, globalDispatcher2, {\n        value: agent,\n        writable: true,\n        enumerable: false,\n        configurable: false\n      });\n    }\n    __name(setGlobalDispatcher2, "setGlobalDispatcher");\n    function getGlobalDispatcher2() {\n      return globalThis[globalDispatcher2];\n    }\n    __name(getGlobalDispatcher2, "getGlobalDispatcher");\n    module2.exports = {\n      setGlobalDispatcher: setGlobalDispatcher2,\n      getGlobalDispatcher: getGlobalDispatcher2\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/index.js\nvar require_fetch = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/fetch/index.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var {\n      Response: Response3,\n      makeNetworkError,\n      makeAppropriateNetworkError,\n      filterResponse,\n      makeResponse\n    } = require_response();\n    var { Headers: Headers3 } = require_headers();\n    var { Request: Request2, makeRequest } = require_request();\n    var zlib = require("zlib");\n    var {\n      bytesMatch,\n      makePolicyContainer,\n      clonePolicyContainer,\n      requestBadPort,\n      TAOCheck,\n      appendRequestOriginHeader,\n      responseLocationURL,\n      requestCurrentURL,\n      setRequestReferrerPolicyOnRedirect,\n      tryUpgradeRequestToAPotentiallyTrustworthyURL,\n      createOpaqueTimingInfo,\n      appendFetchMetadata,\n      corsCheck,\n      crossOriginResourcePolicyCheck,\n      determineRequestsReferrer,\n      coarsenedSharedCurrentTime,\n      createDeferredPromise,\n      isBlobLike,\n      sameOrigin,\n      isCancelled,\n      isAborted,\n      isErrorLike,\n      fullyReadBody,\n      readableStreamClose,\n      isomorphicEncode,\n      urlIsLocal,\n      urlIsHttpHttpsScheme,\n      urlHasHttpsScheme\n    } = require_util2();\n    var { kState, kHeaders: kHeaders2, kGuard: kGuard2, kRealm } = require_symbols();\n    var assert = require("assert");\n    var { safelyExtractBody } = require_body();\n    var {\n      redirectStatus,\n      nullBodyStatus,\n      safeMethods,\n      requestBodyHeader,\n      subresource,\n      DOMException\n    } = require_constants();\n    var { kHeadersList } = require_symbols2();\n    var EE = require("events");\n    var { Readable, pipeline } = require("stream");\n    var { isErrored, isReadable, nodeMajor, nodeMinor } = require_util();\n    var { dataURLProcessor, serializeAMimeType } = require_dataURL();\n    var { TransformStream } = require("./streams");\n    var { getGlobalDispatcher: getGlobalDispatcher2 } = require_global2();\n    var { webidl } = require_webidl();\n    var { STATUS_CODES } = require("http");\n    var resolveObjectURL;\n    var ReadableStream = globalThis.ReadableStream;\n    var Fetch = class extends EE {\n      constructor(dispatcher) {\n        super();\n        this.dispatcher = dispatcher;\n        this.connection = null;\n        this.dump = false;\n        this.state = "ongoing";\n        this.setMaxListeners(21);\n      }\n      terminate(reason) {\n        var _a;\n        if (this.state !== "ongoing") {\n          return;\n        }\n        this.state = "terminated";\n        (_a = this.connection) == null ? void 0 : _a.destroy(reason);\n        this.emit("terminated", reason);\n      }\n      // https://fetch.spec.whatwg.org/#fetch-controller-abort\n      abort(error) {\n        var _a;\n        if (this.state !== "ongoing") {\n          return;\n        }\n        this.state = "aborted";\n        if (!error) {\n          error = new DOMException("The operation was aborted.", "AbortError");\n        }\n        this.serializedAbortReason = error;\n        (_a = this.connection) == null ? void 0 : _a.destroy(error);\n        this.emit("terminated", error);\n      }\n    };\n    __name(Fetch, "Fetch");\n    async function fetch2(input, init = {}) {\n      var _a;\n      webidl.argumentLengthCheck(arguments, 1, { header: "globalThis.fetch" });\n      const p = createDeferredPromise();\n      let requestObject;\n      try {\n        requestObject = new Request2(input, init);\n      } catch (e) {\n        p.reject(e);\n        return p.promise;\n      }\n      const request = requestObject[kState];\n      if (requestObject.signal.aborted) {\n        abortFetch(p, request, null, requestObject.signal.reason);\n        return p.promise;\n      }\n      const globalObject = request.client.globalObject;\n      if (((_a = globalObject == null ? void 0 : globalObject.constructor) == null ? void 0 : _a.name) === "ServiceWorkerGlobalScope") {\n        request.serviceWorkers = "none";\n      }\n      let responseObject = null;\n      const relevantRealm = null;\n      let locallyAborted = false;\n      let controller = null;\n      requestObject.signal.addEventListener(\n        "abort",\n        () => {\n          locallyAborted = true;\n          abortFetch(p, request, responseObject, requestObject.signal.reason);\n          if (controller != null) {\n            controller.abort();\n          }\n        },\n        { once: true }\n      );\n      const handleFetchDone = /* @__PURE__ */ __name((response) => finalizeAndReportTiming(response, "fetch"), "handleFetchDone");\n      const processResponse = /* @__PURE__ */ __name((response) => {\n        if (locallyAborted) {\n          return;\n        }\n        if (response.aborted) {\n          abortFetch(p, request, responseObject, controller.serializedAbortReason);\n          return;\n        }\n        if (response.type === "error") {\n          p.reject(\n            Object.assign(new TypeError("fetch failed"), { cause: response.error })\n          );\n          return;\n        }\n        responseObject = new Response3();\n        responseObject[kState] = response;\n        responseObject[kRealm] = relevantRealm;\n        responseObject[kHeaders2][kHeadersList] = response.headersList;\n        responseObject[kHeaders2][kGuard2] = "immutable";\n        responseObject[kHeaders2][kRealm] = relevantRealm;\n        p.resolve(responseObject);\n      }, "processResponse");\n      controller = fetching({\n        request,\n        processResponseEndOfBody: handleFetchDone,\n        processResponse,\n        dispatcher: init.dispatcher ?? getGlobalDispatcher2()\n        // undici\n      });\n      return p.promise;\n    }\n    __name(fetch2, "fetch");\n    function finalizeAndReportTiming(response, initiatorType = "other") {\n      var _a;\n      if (response.type === "error" && response.aborted) {\n        return;\n      }\n      if (!((_a = response.urlList) == null ? void 0 : _a.length)) {\n        return;\n      }\n      const originalURL = response.urlList[0];\n      let timingInfo = response.timingInfo;\n      let cacheState = response.cacheState;\n      if (!urlIsHttpHttpsScheme(originalURL)) {\n        return;\n      }\n      if (timingInfo === null) {\n        return;\n      }\n      if (!timingInfo.timingAllowPassed) {\n        timingInfo = createOpaqueTimingInfo({\n          startTime: timingInfo.startTime\n        });\n        cacheState = "";\n      }\n      timingInfo.endTime = coarsenedSharedCurrentTime();\n      response.timingInfo = timingInfo;\n      markResourceTiming(\n        timingInfo,\n        originalURL,\n        initiatorType,\n        globalThis,\n        cacheState\n      );\n    }\n    __name(finalizeAndReportTiming, "finalizeAndReportTiming");\n    function markResourceTiming(timingInfo, originalURL, initiatorType, globalThis2, cacheState) {\n      if (nodeMajor > 18 || nodeMajor === 18 && nodeMinor >= 2) {\n        performance.markResourceTiming(timingInfo, originalURL, initiatorType, globalThis2, cacheState);\n      }\n    }\n    __name(markResourceTiming, "markResourceTiming");\n    function abortFetch(p, request, responseObject, error) {\n      var _a, _b;\n      if (!error) {\n        error = new DOMException("The operation was aborted.", "AbortError");\n      }\n      p.reject(error);\n      if (request.body != null && isReadable((_a = request.body) == null ? void 0 : _a.stream)) {\n        request.body.stream.cancel(error).catch((err) => {\n          if (err.code === "ERR_INVALID_STATE") {\n            return;\n          }\n          throw err;\n        });\n      }\n      if (responseObject == null) {\n        return;\n      }\n      const response = responseObject[kState];\n      if (response.body != null && isReadable((_b = response.body) == null ? void 0 : _b.stream)) {\n        response.body.stream.cancel(error).catch((err) => {\n          if (err.code === "ERR_INVALID_STATE") {\n            return;\n          }\n          throw err;\n        });\n      }\n    }\n    __name(abortFetch, "abortFetch");\n    function fetching({\n      request,\n      processRequestBodyChunkLength,\n      processRequestEndOfBody,\n      processResponse,\n      processResponseEndOfBody,\n      processResponseConsumeBody,\n      useParallelQueue = false,\n      dispatcher\n      // undici\n    }) {\n      var _a, _b, _c, _d;\n      let taskDestination = null;\n      let crossOriginIsolatedCapability = false;\n      if (request.client != null) {\n        taskDestination = request.client.globalObject;\n        crossOriginIsolatedCapability = request.client.crossOriginIsolatedCapability;\n      }\n      const currenTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability);\n      const timingInfo = createOpaqueTimingInfo({\n        startTime: currenTime\n      });\n      const fetchParams = {\n        controller: new Fetch(dispatcher),\n        request,\n        timingInfo,\n        processRequestBodyChunkLength,\n        processRequestEndOfBody,\n        processResponse,\n        processResponseConsumeBody,\n        processResponseEndOfBody,\n        taskDestination,\n        crossOriginIsolatedCapability\n      };\n      assert(!request.body || request.body.stream);\n      if (request.window === "client") {\n        request.window = ((_c = (_b = (_a = request.client) == null ? void 0 : _a.globalObject) == null ? void 0 : _b.constructor) == null ? void 0 : _c.name) === "Window" ? request.client : "no-window";\n      }\n      if (request.origin === "client") {\n        request.origin = (_d = request.client) == null ? void 0 : _d.origin;\n      }\n      if (request.policyContainer === "client") {\n        if (request.client != null) {\n          request.policyContainer = clonePolicyContainer(\n            request.client.policyContainer\n          );\n        } else {\n          request.policyContainer = makePolicyContainer();\n        }\n      }\n      if (!request.headersList.contains("accept")) {\n        const value = "*/*";\n        request.headersList.append("accept", value);\n      }\n      if (!request.headersList.contains("accept-language")) {\n        request.headersList.append("accept-language", "*");\n      }\n      if (request.priority === null) {\n      }\n      if (subresource.includes(request.destination)) {\n      }\n      mainFetch(fetchParams).catch((err) => {\n        fetchParams.controller.terminate(err);\n      });\n      return fetchParams.controller;\n    }\n    __name(fetching, "fetching");\n    async function mainFetch(fetchParams, recursive = false) {\n      const request = fetchParams.request;\n      let response = null;\n      if (request.localURLsOnly && !urlIsLocal(requestCurrentURL(request))) {\n        response = makeNetworkError("local URLs only");\n      }\n      tryUpgradeRequestToAPotentiallyTrustworthyURL(request);\n      if (requestBadPort(request) === "blocked") {\n        response = makeNetworkError("bad port");\n      }\n      if (request.referrerPolicy === "") {\n        request.referrerPolicy = request.policyContainer.referrerPolicy;\n      }\n      if (request.referrer !== "no-referrer") {\n        request.referrer = determineRequestsReferrer(request);\n      }\n      if (response === null) {\n        response = await (async () => {\n          const currentURL = requestCurrentURL(request);\n          if (\n            // - request’s current URL’s origin is same origin with request’s origin,\n            //   and request’s response tainting is "basic"\n            sameOrigin(currentURL, request.url) && request.responseTainting === "basic" || // request’s current URL’s scheme is "data"\n            currentURL.protocol === "data:" || // - request’s mode is "navigate" or "websocket"\n            (request.mode === "navigate" || request.mode === "websocket")\n          ) {\n            request.responseTainting = "basic";\n            return await schemeFetch(fetchParams);\n          }\n          if (request.mode === "same-origin") {\n            return makeNetworkError(\'request mode cannot be "same-origin"\');\n          }\n          if (request.mode === "no-cors") {\n            if (request.redirect !== "follow") {\n              return makeNetworkError(\n                \'redirect mode cannot be "follow" for "no-cors" request\'\n              );\n            }\n            request.responseTainting = "opaque";\n            return await schemeFetch(fetchParams);\n          }\n          if (!urlIsHttpHttpsScheme(requestCurrentURL(request))) {\n            return makeNetworkError("URL scheme must be a HTTP(S) scheme");\n          }\n          request.responseTainting = "cors";\n          return await httpFetch(fetchParams);\n        })();\n      }\n      if (recursive) {\n        return response;\n      }\n      if (response.status !== 0 && !response.internalResponse) {\n        if (request.responseTainting === "cors") {\n        }\n        if (request.responseTainting === "basic") {\n          response = filterResponse(response, "basic");\n        } else if (request.responseTainting === "cors") {\n          response = filterResponse(response, "cors");\n        } else if (request.responseTainting === "opaque") {\n          response = filterResponse(response, "opaque");\n        } else {\n          assert(false);\n        }\n      }\n      let internalResponse = response.status === 0 ? response : response.internalResponse;\n      if (internalResponse.urlList.length === 0) {\n        internalResponse.urlList.push(...request.urlList);\n      }\n      if (!request.timingAllowFailed) {\n        response.timingAllowPassed = true;\n      }\n      if (response.type === "opaque" && internalResponse.status === 206 && internalResponse.rangeRequested && !request.headers.contains("range")) {\n        response = internalResponse = makeNetworkError();\n      }\n      if (response.status !== 0 && (request.method === "HEAD" || request.method === "CONNECT" || nullBodyStatus.includes(internalResponse.status))) {\n        internalResponse.body = null;\n        fetchParams.controller.dump = true;\n      }\n      if (request.integrity) {\n        const processBodyError = /* @__PURE__ */ __name((reason) => fetchFinale(fetchParams, makeNetworkError(reason)), "processBodyError");\n        if (request.responseTainting === "opaque" || response.body == null) {\n          processBodyError(response.error);\n          return;\n        }\n        const processBody = /* @__PURE__ */ __name((bytes) => {\n          if (!bytesMatch(bytes, request.integrity)) {\n            processBodyError("integrity mismatch");\n            return;\n          }\n          response.body = safelyExtractBody(bytes)[0];\n          fetchFinale(fetchParams, response);\n        }, "processBody");\n        await fullyReadBody(response.body, processBody, processBodyError);\n      } else {\n        fetchFinale(fetchParams, response);\n      }\n    }\n    __name(mainFetch, "mainFetch");\n    async function schemeFetch(fetchParams) {\n      if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {\n        return makeAppropriateNetworkError(fetchParams);\n      }\n      const { request } = fetchParams;\n      const { protocol: scheme } = requestCurrentURL(request);\n      switch (scheme) {\n        case "about:": {\n          return makeNetworkError("about scheme is not supported");\n        }\n        case "blob:": {\n          if (!resolveObjectURL) {\n            resolveObjectURL = require("buffer").resolveObjectURL;\n          }\n          const blobURLEntry = requestCurrentURL(request);\n          if (blobURLEntry.search.length !== 0) {\n            return makeNetworkError("NetworkError when attempting to fetch resource.");\n          }\n          const blobURLEntryObject = resolveObjectURL(blobURLEntry.toString());\n          if (request.method !== "GET" || !isBlobLike(blobURLEntryObject)) {\n            return makeNetworkError("invalid method");\n          }\n          const bodyWithType = safelyExtractBody(blobURLEntryObject);\n          const body = bodyWithType[0];\n          const length = isomorphicEncode(`${body.length}`);\n          const type = bodyWithType[1] ?? "";\n          const response = makeResponse({\n            statusText: "OK",\n            headersList: [\n              ["content-length", { name: "Content-Length", value: length }],\n              ["content-type", { name: "Content-Type", value: type }]\n            ]\n          });\n          response.body = body;\n          return response;\n        }\n        case "data:": {\n          const currentURL = requestCurrentURL(request);\n          const dataURLStruct = dataURLProcessor(currentURL);\n          if (dataURLStruct === "failure") {\n            return makeNetworkError("failed to fetch the data URL");\n          }\n          const mimeType = serializeAMimeType(dataURLStruct.mimeType);\n          return makeResponse({\n            statusText: "OK",\n            headersList: [\n              ["content-type", { name: "Content-Type", value: mimeType }]\n            ],\n            body: safelyExtractBody(dataURLStruct.body)[0]\n          });\n        }\n        case "file:": {\n          return makeNetworkError("not implemented... yet...");\n        }\n        case "http:":\n        case "https:": {\n          return await httpFetch(fetchParams).catch((err) => makeNetworkError(err));\n        }\n        default: {\n          return makeNetworkError("unknown scheme");\n        }\n      }\n    }\n    __name(schemeFetch, "schemeFetch");\n    function finalizeResponse(fetchParams, response) {\n      fetchParams.request.done = true;\n      if (fetchParams.processResponseDone != null) {\n        queueMicrotask(() => fetchParams.processResponseDone(response));\n      }\n    }\n    __name(finalizeResponse, "finalizeResponse");\n    async function fetchFinale(fetchParams, response) {\n      if (response.type === "error") {\n        response.urlList = [fetchParams.request.urlList[0]];\n        response.timingInfo = createOpaqueTimingInfo({\n          startTime: fetchParams.timingInfo.startTime\n        });\n      }\n      const processResponseEndOfBody = /* @__PURE__ */ __name(() => {\n        fetchParams.request.done = true;\n        if (fetchParams.processResponseEndOfBody != null) {\n          queueMicrotask(() => fetchParams.processResponseEndOfBody(response));\n        }\n      }, "processResponseEndOfBody");\n      if (fetchParams.processResponse != null) {\n        queueMicrotask(() => fetchParams.processResponse(response));\n      }\n      if (response.body == null) {\n        processResponseEndOfBody();\n      } else {\n        const identityTransformAlgorithm = /* @__PURE__ */ __name((chunk, controller) => {\n          controller.enqueue(chunk);\n        }, "identityTransformAlgorithm");\n        const transformStream = new TransformStream({\n          start() {\n          },\n          transform: identityTransformAlgorithm,\n          flush: processResponseEndOfBody\n        }, {\n          size() {\n            return 1;\n          }\n        }, {\n          size() {\n            return 1;\n          }\n        });\n        response.body = { stream: response.body.stream.pipeThrough(transformStream) };\n      }\n      if (fetchParams.processResponseConsumeBody != null) {\n        const processBody = /* @__PURE__ */ __name((nullOrBytes) => fetchParams.processResponseConsumeBody(response, nullOrBytes), "processBody");\n        const processBodyError = /* @__PURE__ */ __name((failure) => fetchParams.processResponseConsumeBody(response, failure), "processBodyError");\n        if (response.body == null) {\n          queueMicrotask(() => processBody(null));\n        } else {\n          await fullyReadBody(response.body, processBody, processBodyError);\n        }\n      }\n    }\n    __name(fetchFinale, "fetchFinale");\n    async function httpFetch(fetchParams) {\n      const request = fetchParams.request;\n      let response = null;\n      let actualResponse = null;\n      const timingInfo = fetchParams.timingInfo;\n      if (request.serviceWorkers === "all") {\n      }\n      if (response === null) {\n        if (request.redirect === "follow") {\n          request.serviceWorkers = "none";\n        }\n        actualResponse = response = await httpNetworkOrCacheFetch(fetchParams);\n        if (request.responseTainting === "cors" && corsCheck(request, response) === "failure") {\n          return makeNetworkError("cors failure");\n        }\n        if (TAOCheck(request, response) === "failure") {\n          request.timingAllowFailed = true;\n        }\n      }\n      if ((request.responseTainting === "opaque" || response.type === "opaque") && crossOriginResourcePolicyCheck(\n        request.origin,\n        request.client,\n        request.destination,\n        actualResponse\n      ) === "blocked") {\n        return makeNetworkError("blocked");\n      }\n      if (redirectStatus.includes(actualResponse.status)) {\n        if (request.redirect !== "manual") {\n          fetchParams.controller.connection.destroy();\n        }\n        if (request.redirect === "error") {\n          response = makeNetworkError("unexpected redirect");\n        } else if (request.redirect === "manual") {\n          response = actualResponse;\n        } else if (request.redirect === "follow") {\n          response = await httpRedirectFetch(fetchParams, response);\n        } else {\n          assert(false);\n        }\n      }\n      response.timingInfo = timingInfo;\n      return response;\n    }\n    __name(httpFetch, "httpFetch");\n    async function httpRedirectFetch(fetchParams, response) {\n      const request = fetchParams.request;\n      const actualResponse = response.internalResponse ? response.internalResponse : response;\n      let locationURL;\n      try {\n        locationURL = responseLocationURL(\n          actualResponse,\n          requestCurrentURL(request).hash\n        );\n        if (locationURL == null) {\n          return response;\n        }\n      } catch (err) {\n        return makeNetworkError(err);\n      }\n      if (!urlIsHttpHttpsScheme(locationURL)) {\n        return makeNetworkError("URL scheme must be a HTTP(S) scheme");\n      }\n      if (request.redirectCount === 20) {\n        return makeNetworkError("redirect count exceeded");\n      }\n      request.redirectCount += 1;\n      if (request.mode === "cors" && (locationURL.username || locationURL.password) && !sameOrigin(request, locationURL)) {\n        return makeNetworkError(\'cross origin not allowed for request mode "cors"\');\n      }\n      if (request.responseTainting === "cors" && (locationURL.username || locationURL.password)) {\n        return makeNetworkError(\n          \'URL cannot contain credentials for request mode "cors"\'\n        );\n      }\n      if (actualResponse.status !== 303 && request.body != null && request.body.source == null) {\n        return makeNetworkError();\n      }\n      if ([301, 302].includes(actualResponse.status) && request.method === "POST" || actualResponse.status === 303 && !["GET", "HEAD"].includes(request.method)) {\n        request.method = "GET";\n        request.body = null;\n        for (const headerName of requestBodyHeader) {\n          request.headersList.delete(headerName);\n        }\n      }\n      if (!sameOrigin(requestCurrentURL(request), locationURL)) {\n        request.headersList.delete("authorization");\n      }\n      if (request.body != null) {\n        assert(request.body.source != null);\n        request.body = safelyExtractBody(request.body.source)[0];\n      }\n      const timingInfo = fetchParams.timingInfo;\n      timingInfo.redirectEndTime = timingInfo.postRedirectStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability);\n      if (timingInfo.redirectStartTime === 0) {\n        timingInfo.redirectStartTime = timingInfo.startTime;\n      }\n      request.urlList.push(locationURL);\n      setRequestReferrerPolicyOnRedirect(request, actualResponse);\n      return mainFetch(fetchParams, true);\n    }\n    __name(httpRedirectFetch, "httpRedirectFetch");\n    async function httpNetworkOrCacheFetch(fetchParams, isAuthenticationFetch = false, isNewConnectionFetch = false) {\n      const request = fetchParams.request;\n      let httpFetchParams = null;\n      let httpRequest = null;\n      let response = null;\n      const httpCache = null;\n      const revalidatingFlag = false;\n      if (request.window === "no-window" && request.redirect === "error") {\n        httpFetchParams = fetchParams;\n        httpRequest = request;\n      } else {\n        httpRequest = makeRequest(request);\n        httpFetchParams = { ...fetchParams };\n        httpFetchParams.request = httpRequest;\n      }\n      const includeCredentials = request.credentials === "include" || request.credentials === "same-origin" && request.responseTainting === "basic";\n      const contentLength = httpRequest.body ? httpRequest.body.length : null;\n      let contentLengthHeaderValue = null;\n      if (httpRequest.body == null && ["POST", "PUT"].includes(httpRequest.method)) {\n        contentLengthHeaderValue = "0";\n      }\n      if (contentLength != null) {\n        contentLengthHeaderValue = isomorphicEncode(`${contentLength}`);\n      }\n      if (contentLengthHeaderValue != null) {\n        httpRequest.headersList.append("content-length", contentLengthHeaderValue);\n      }\n      if (contentLength != null && httpRequest.keepalive) {\n      }\n      if (httpRequest.referrer instanceof URL) {\n        httpRequest.headersList.append("referer", isomorphicEncode(httpRequest.referrer.href));\n      }\n      appendRequestOriginHeader(httpRequest);\n      appendFetchMetadata(httpRequest);\n      if (!httpRequest.headersList.contains("user-agent")) {\n        httpRequest.headersList.append("user-agent", "undici");\n      }\n      if (httpRequest.cache === "default" && (httpRequest.headersList.contains("if-modified-since") || httpRequest.headersList.contains("if-none-match") || httpRequest.headersList.contains("if-unmodified-since") || httpRequest.headersList.contains("if-match") || httpRequest.headersList.contains("if-range"))) {\n        httpRequest.cache = "no-store";\n      }\n      if (httpRequest.cache === "no-cache" && !httpRequest.preventNoCacheCacheControlHeaderModification && !httpRequest.headersList.contains("cache-control")) {\n        httpRequest.headersList.append("cache-control", "max-age=0");\n      }\n      if (httpRequest.cache === "no-store" || httpRequest.cache === "reload") {\n        if (!httpRequest.headersList.contains("pragma")) {\n          httpRequest.headersList.append("pragma", "no-cache");\n        }\n        if (!httpRequest.headersList.contains("cache-control")) {\n          httpRequest.headersList.append("cache-control", "no-cache");\n        }\n      }\n      if (httpRequest.headersList.contains("range")) {\n        httpRequest.headersList.append("accept-encoding", "identity");\n      }\n      if (!httpRequest.headersList.contains("accept-encoding")) {\n        if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {\n          httpRequest.headersList.append("accept-encoding", "br, gzip, deflate");\n        } else {\n          httpRequest.headersList.append("accept-encoding", "gzip, deflate");\n        }\n      }\n      if (includeCredentials) {\n      }\n      if (httpCache == null) {\n        httpRequest.cache = "no-store";\n      }\n      if (httpRequest.mode !== "no-store" && httpRequest.mode !== "reload") {\n      }\n      if (response == null) {\n        if (httpRequest.mode === "only-if-cached") {\n          return makeNetworkError("only if cached");\n        }\n        const forwardResponse = await httpNetworkFetch(\n          httpFetchParams,\n          includeCredentials,\n          isNewConnectionFetch\n        );\n        if (!safeMethods.includes(httpRequest.method) && forwardResponse.status >= 200 && forwardResponse.status <= 399) {\n        }\n        if (revalidatingFlag && forwardResponse.status === 304) {\n        }\n        if (response == null) {\n          response = forwardResponse;\n        }\n      }\n      response.urlList = [...httpRequest.urlList];\n      if (httpRequest.headersList.contains("range")) {\n        response.rangeRequested = true;\n      }\n      response.requestIncludesCredentials = includeCredentials;\n      if (response.status === 407) {\n        if (request.window === "no-window") {\n          return makeNetworkError();\n        }\n        if (isCancelled(fetchParams)) {\n          return makeAppropriateNetworkError(fetchParams);\n        }\n        return makeNetworkError("proxy authentication required");\n      }\n      if (\n        // response’s status is 421\n        response.status === 421 && // isNewConnectionFetch is false\n        !isNewConnectionFetch && // request’s body is null, or request’s body is non-null and request’s body’s source is non-null\n        (request.body == null || request.body.source != null)\n      ) {\n        if (isCancelled(fetchParams)) {\n          return makeAppropriateNetworkError(fetchParams);\n        }\n        fetchParams.controller.connection.destroy();\n        response = await httpNetworkOrCacheFetch(\n          fetchParams,\n          isAuthenticationFetch,\n          true\n        );\n      }\n      if (isAuthenticationFetch) {\n      }\n      return response;\n    }\n    __name(httpNetworkOrCacheFetch, "httpNetworkOrCacheFetch");\n    async function httpNetworkFetch(fetchParams, includeCredentials = false, forceNewConnection = false) {\n      assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed);\n      fetchParams.controller.connection = {\n        abort: null,\n        destroyed: false,\n        destroy(err) {\n          var _a;\n          if (!this.destroyed) {\n            this.destroyed = true;\n            (_a = this.abort) == null ? void 0 : _a.call(this, err ?? new DOMException("The operation was aborted.", "AbortError"));\n          }\n        }\n      };\n      const request = fetchParams.request;\n      let response = null;\n      const timingInfo = fetchParams.timingInfo;\n      const httpCache = null;\n      if (httpCache == null) {\n        request.cache = "no-store";\n      }\n      const newConnection = forceNewConnection ? "yes" : "no";\n      if (request.mode === "websocket") {\n      } else {\n      }\n      let requestBody = null;\n      if (request.body == null && fetchParams.processRequestEndOfBody) {\n        queueMicrotask(() => fetchParams.processRequestEndOfBody());\n      } else if (request.body != null) {\n        const processBodyChunk = /* @__PURE__ */ __name(async function* (bytes) {\n          var _a;\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          yield bytes;\n          (_a = fetchParams.processRequestBodyChunkLength) == null ? void 0 : _a.call(fetchParams, bytes.byteLength);\n        }, "processBodyChunk");\n        const processEndOfBody = /* @__PURE__ */ __name(() => {\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          if (fetchParams.processRequestEndOfBody) {\n            fetchParams.processRequestEndOfBody();\n          }\n        }, "processEndOfBody");\n        const processBodyError = /* @__PURE__ */ __name((e) => {\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          if (e.name === "AbortError") {\n            fetchParams.controller.abort();\n          } else {\n            fetchParams.controller.terminate(e);\n          }\n        }, "processBodyError");\n        requestBody = async function* () {\n          try {\n            for await (const bytes of request.body.stream) {\n              yield* processBodyChunk(bytes);\n            }\n            processEndOfBody();\n          } catch (err) {\n            processBodyError(err);\n          }\n        }();\n      }\n      try {\n        const { body, status, statusText, headersList, socket } = await dispatch({ body: requestBody });\n        if (socket) {\n          response = makeResponse({ status, statusText, headersList, socket });\n        } else {\n          const iterator = body[Symbol.asyncIterator]();\n          fetchParams.controller.next = () => iterator.next();\n          response = makeResponse({ status, statusText, headersList });\n        }\n      } catch (err) {\n        if (err.name === "AbortError") {\n          fetchParams.controller.connection.destroy();\n          return makeAppropriateNetworkError(fetchParams);\n        }\n        return makeNetworkError(err);\n      }\n      const pullAlgorithm = /* @__PURE__ */ __name(() => {\n        fetchParams.controller.resume();\n      }, "pullAlgorithm");\n      const cancelAlgorithm = /* @__PURE__ */ __name((reason) => {\n        fetchParams.controller.abort(reason);\n      }, "cancelAlgorithm");\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      const stream = new ReadableStream(\n        {\n          async start(controller) {\n            fetchParams.controller.controller = controller;\n          },\n          async pull(controller) {\n            await pullAlgorithm(controller);\n          },\n          async cancel(reason) {\n            await cancelAlgorithm(reason);\n          }\n        },\n        {\n          highWaterMark: 0,\n          size() {\n            return 1;\n          }\n        }\n      );\n      response.body = { stream };\n      fetchParams.controller.on("terminated", onAborted);\n      fetchParams.controller.resume = async () => {\n        while (true) {\n          let bytes;\n          let isFailure;\n          try {\n            const { done, value } = await fetchParams.controller.next();\n            if (isAborted(fetchParams)) {\n              break;\n            }\n            bytes = done ? void 0 : value;\n          } catch (err) {\n            if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {\n              bytes = void 0;\n            } else {\n              bytes = err;\n              isFailure = true;\n            }\n          }\n          if (bytes === void 0) {\n            readableStreamClose(fetchParams.controller.controller);\n            finalizeResponse(fetchParams, response);\n            return;\n          }\n          timingInfo.decodedBodySize += (bytes == null ? void 0 : bytes.byteLength) ?? 0;\n          if (isFailure) {\n            fetchParams.controller.terminate(bytes);\n            return;\n          }\n          fetchParams.controller.controller.enqueue(new Uint8Array(bytes));\n          if (isErrored(stream)) {\n            fetchParams.controller.terminate();\n            return;\n          }\n          if (!fetchParams.controller.controller.desiredSize) {\n            return;\n          }\n        }\n      };\n      function onAborted(reason) {\n        if (isAborted(fetchParams)) {\n          response.aborted = true;\n          if (isReadable(stream)) {\n            fetchParams.controller.controller.error(\n              fetchParams.controller.serializedAbortReason\n            );\n          }\n        } else {\n          if (isReadable(stream)) {\n            fetchParams.controller.controller.error(new TypeError("terminated", {\n              cause: isErrorLike(reason) ? reason : void 0\n            }));\n          }\n        }\n        fetchParams.controller.connection.destroy();\n      }\n      __name(onAborted, "onAborted");\n      return response;\n      async function dispatch({ body }) {\n        const url = requestCurrentURL(request);\n        const agent = fetchParams.controller.dispatcher;\n        return new Promise((resolve, reject) => agent.dispatch(\n          {\n            path: url.pathname + url.search,\n            origin: url.origin,\n            method: request.method,\n            body: fetchParams.controller.dispatcher.isMockActive ? request.body && request.body.source : body,\n            headers: request.headersList.entries,\n            maxRedirections: 0,\n            upgrade: request.mode === "websocket" ? "websocket" : void 0\n          },\n          {\n            body: null,\n            abort: null,\n            onConnect(abort) {\n              const { connection } = fetchParams.controller;\n              if (connection.destroyed) {\n                abort(new DOMException("The operation was aborted.", "AbortError"));\n              } else {\n                fetchParams.controller.on("terminated", abort);\n                this.abort = connection.abort = abort;\n              }\n            },\n            onHeaders(status, headersList, resume, statusText) {\n              if (status < 200) {\n                return;\n              }\n              let codings = [];\n              let location = "";\n              const headers = new Headers3();\n              for (let n = 0; n < headersList.length; n += 2) {\n                const key = headersList[n + 0].toString("latin1");\n                const val = headersList[n + 1].toString("latin1");\n                if (key.toLowerCase() === "content-encoding") {\n                  codings = val.toLowerCase().split(",").map((x) => x.trim());\n                } else if (key.toLowerCase() === "location") {\n                  location = val;\n                }\n                headers.append(key, val);\n              }\n              this.body = new Readable({ read: resume });\n              const decoders = [];\n              const willFollow = request.redirect === "follow" && location && redirectStatus.includes(status);\n              if (request.method !== "HEAD" && request.method !== "CONNECT" && !nullBodyStatus.includes(status) && !willFollow) {\n                for (const coding of codings) {\n                  if (coding === "x-gzip" || coding === "gzip") {\n                    decoders.push(zlib.createGunzip());\n                  } else if (coding === "deflate") {\n                    decoders.push(zlib.createInflate());\n                  } else if (coding === "br") {\n                    decoders.push(zlib.createBrotliDecompress());\n                  } else {\n                    decoders.length = 0;\n                    break;\n                  }\n                }\n              }\n              resolve({\n                status,\n                statusText,\n                headersList: headers[kHeadersList],\n                body: decoders.length ? pipeline(this.body, ...decoders, () => {\n                }) : this.body.on("error", () => {\n                })\n              });\n              return true;\n            },\n            onData(chunk) {\n              if (fetchParams.controller.dump) {\n                return;\n              }\n              const bytes = chunk;\n              timingInfo.encodedBodySize += bytes.byteLength;\n              return this.body.push(bytes);\n            },\n            onComplete() {\n              if (this.abort) {\n                fetchParams.controller.off("terminated", this.abort);\n              }\n              fetchParams.controller.ended = true;\n              this.body.push(null);\n            },\n            onError(error) {\n              var _a;\n              if (this.abort) {\n                fetchParams.controller.off("terminated", this.abort);\n              }\n              (_a = this.body) == null ? void 0 : _a.destroy(error);\n              fetchParams.controller.terminate(error);\n              reject(error);\n            },\n            onUpgrade(status, headersList, socket) {\n              if (status !== 101) {\n                return;\n              }\n              const headers = new Headers3();\n              for (let n = 0; n < headersList.length; n += 2) {\n                const key = headersList[n + 0].toString("latin1");\n                const val = headersList[n + 1].toString("latin1");\n                headers.append(key, val);\n              }\n              resolve({\n                status,\n                statusText: STATUS_CODES[status],\n                headersList: headers[kHeadersList],\n                socket\n              });\n              return true;\n            }\n          }\n        ));\n      }\n      __name(dispatch, "dispatch");\n    }\n    __name(httpNetworkFetch, "httpNetworkFetch");\n    module2.exports = {\n      fetch: fetch2,\n      Fetch,\n      fetching,\n      finalizeAndReportTiming\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/constants.js\nvar require_constants3 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/constants.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var uid = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";\n    var staticPropertyDescriptors = {\n      enumerable: true,\n      writable: false,\n      configurable: false\n    };\n    var states = {\n      CONNECTING: 0,\n      OPEN: 1,\n      CLOSING: 2,\n      CLOSED: 3\n    };\n    var opcodes = {\n      CONTINUATION: 0,\n      TEXT: 1,\n      BINARY: 2,\n      CLOSE: 8,\n      PING: 9,\n      PONG: 10\n    };\n    var maxUnsigned16Bit = 2 ** 16 - 1;\n    var parserStates = {\n      INFO: 0,\n      PAYLOADLENGTH_16: 2,\n      PAYLOADLENGTH_64: 3,\n      READ_DATA: 4\n    };\n    var emptyBuffer = Buffer.allocUnsafe(0);\n    module2.exports = {\n      uid,\n      staticPropertyDescriptors,\n      states,\n      opcodes,\n      maxUnsigned16Bit,\n      parserStates,\n      emptyBuffer\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/symbols.js\nvar require_symbols3 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/symbols.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports = {\n      kWebSocketURL: Symbol("url"),\n      kReadyState: Symbol("ready state"),\n      kController: Symbol("controller"),\n      kResponse: Symbol("response"),\n      kBinaryType: Symbol("binary type"),\n      kSentClose: Symbol("sent close"),\n      kReceivedClose: Symbol("received close"),\n      kByteParser: Symbol("byte parser")\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/events.js\nvar require_events = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/events.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { webidl } = require_webidl();\n    var { kEnumerableProperty } = require_util();\n    var { MessagePort } = require("worker_threads");\n    var MessageEvent = class extends Event {\n      #eventInit;\n      constructor(type, eventInitDict = {}) {\n        webidl.argumentLengthCheck(arguments, 1, { header: "MessageEvent constructor" });\n        type = webidl.converters.DOMString(type);\n        eventInitDict = webidl.converters.MessageEventInit(eventInitDict);\n        super(type, eventInitDict);\n        this.#eventInit = eventInitDict;\n      }\n      get data() {\n        webidl.brandCheck(this, MessageEvent);\n        return this.#eventInit.data;\n      }\n      get origin() {\n        webidl.brandCheck(this, MessageEvent);\n        return this.#eventInit.origin;\n      }\n      get lastEventId() {\n        webidl.brandCheck(this, MessageEvent);\n        return this.#eventInit.lastEventId;\n      }\n      get source() {\n        webidl.brandCheck(this, MessageEvent);\n        return this.#eventInit.source;\n      }\n      get ports() {\n        webidl.brandCheck(this, MessageEvent);\n        if (!Object.isFrozen(this.#eventInit.ports)) {\n          Object.freeze(this.#eventInit.ports);\n        }\n        return this.#eventInit.ports;\n      }\n      initMessageEvent(type, bubbles = false, cancelable = false, data = null, origin = "", lastEventId = "", source = null, ports = []) {\n        webidl.brandCheck(this, MessageEvent);\n        webidl.argumentLengthCheck(arguments, 1, { header: "MessageEvent.initMessageEvent" });\n        return new MessageEvent(type, {\n          bubbles,\n          cancelable,\n          data,\n          origin,\n          lastEventId,\n          source,\n          ports\n        });\n      }\n    };\n    __name(MessageEvent, "MessageEvent");\n    var CloseEvent = class extends Event {\n      #eventInit;\n      constructor(type, eventInitDict = {}) {\n        webidl.argumentLengthCheck(arguments, 1, { header: "CloseEvent constructor" });\n        type = webidl.converters.DOMString(type);\n        eventInitDict = webidl.converters.CloseEventInit(eventInitDict);\n        super(type, eventInitDict);\n        this.#eventInit = eventInitDict;\n      }\n      get wasClean() {\n        webidl.brandCheck(this, CloseEvent);\n        return this.#eventInit.wasClean;\n      }\n      get code() {\n        webidl.brandCheck(this, CloseEvent);\n        return this.#eventInit.code;\n      }\n      get reason() {\n        webidl.brandCheck(this, CloseEvent);\n        return this.#eventInit.reason;\n      }\n    };\n    __name(CloseEvent, "CloseEvent");\n    var ErrorEvent = class extends Event {\n      #eventInit;\n      constructor(type, eventInitDict) {\n        webidl.argumentLengthCheck(arguments, 1, { header: "ErrorEvent constructor" });\n        super(type, eventInitDict);\n        type = webidl.converters.DOMString(type);\n        eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {});\n        this.#eventInit = eventInitDict;\n      }\n      get message() {\n        webidl.brandCheck(this, ErrorEvent);\n        return this.#eventInit.message;\n      }\n      get filename() {\n        webidl.brandCheck(this, ErrorEvent);\n        return this.#eventInit.filename;\n      }\n      get lineno() {\n        webidl.brandCheck(this, ErrorEvent);\n        return this.#eventInit.lineno;\n      }\n      get colno() {\n        webidl.brandCheck(this, ErrorEvent);\n        return this.#eventInit.colno;\n      }\n      get error() {\n        webidl.brandCheck(this, ErrorEvent);\n        return this.#eventInit.error;\n      }\n    };\n    __name(ErrorEvent, "ErrorEvent");\n    Object.defineProperties(MessageEvent.prototype, {\n      [Symbol.toStringTag]: {\n        value: "MessageEvent",\n        configurable: true\n      },\n      data: kEnumerableProperty,\n      origin: kEnumerableProperty,\n      lastEventId: kEnumerableProperty,\n      source: kEnumerableProperty,\n      ports: kEnumerableProperty,\n      initMessageEvent: kEnumerableProperty\n    });\n    Object.defineProperties(CloseEvent.prototype, {\n      [Symbol.toStringTag]: {\n        value: "CloseEvent",\n        configurable: true\n      },\n      reason: kEnumerableProperty,\n      code: kEnumerableProperty,\n      wasClean: kEnumerableProperty\n    });\n    Object.defineProperties(ErrorEvent.prototype, {\n      [Symbol.toStringTag]: {\n        value: "ErrorEvent",\n        configurable: true\n      },\n      message: kEnumerableProperty,\n      filename: kEnumerableProperty,\n      lineno: kEnumerableProperty,\n      colno: kEnumerableProperty,\n      error: kEnumerableProperty\n    });\n    webidl.converters.MessagePort = webidl.interfaceConverter(MessagePort);\n    webidl.converters["sequence<MessagePort>"] = webidl.sequenceConverter(\n      webidl.converters.MessagePort\n    );\n    var eventInit = [\n      {\n        key: "bubbles",\n        converter: webidl.converters.boolean,\n        defaultValue: false\n      },\n      {\n        key: "cancelable",\n        converter: webidl.converters.boolean,\n        defaultValue: false\n      },\n      {\n        key: "composed",\n        converter: webidl.converters.boolean,\n        defaultValue: false\n      }\n    ];\n    webidl.converters.MessageEventInit = webidl.dictionaryConverter([\n      ...eventInit,\n      {\n        key: "data",\n        converter: webidl.converters.any,\n        defaultValue: null\n      },\n      {\n        key: "origin",\n        converter: webidl.converters.USVString,\n        defaultValue: ""\n      },\n      {\n        key: "lastEventId",\n        converter: webidl.converters.DOMString,\n        defaultValue: ""\n      },\n      {\n        key: "source",\n        // Node doesn\'t implement WindowProxy or ServiceWorker, so the only\n        // valid value for source is a MessagePort.\n        converter: webidl.nullableConverter(webidl.converters.MessagePort),\n        defaultValue: null\n      },\n      {\n        key: "ports",\n        converter: webidl.converters["sequence<MessagePort>"],\n        get defaultValue() {\n          return [];\n        }\n      }\n    ]);\n    webidl.converters.CloseEventInit = webidl.dictionaryConverter([\n      ...eventInit,\n      {\n        key: "wasClean",\n        converter: webidl.converters.boolean,\n        defaultValue: false\n      },\n      {\n        key: "code",\n        converter: webidl.converters["unsigned short"],\n        defaultValue: 0\n      },\n      {\n        key: "reason",\n        converter: webidl.converters.USVString,\n        defaultValue: ""\n      }\n    ]);\n    webidl.converters.ErrorEventInit = webidl.dictionaryConverter([\n      ...eventInit,\n      {\n        key: "message",\n        converter: webidl.converters.DOMString,\n        defaultValue: ""\n      },\n      {\n        key: "filename",\n        converter: webidl.converters.USVString,\n        defaultValue: ""\n      },\n      {\n        key: "lineno",\n        converter: webidl.converters["unsigned long"],\n        defaultValue: 0\n      },\n      {\n        key: "colno",\n        converter: webidl.converters["unsigned long"],\n        defaultValue: 0\n      },\n      {\n        key: "error",\n        converter: webidl.converters.any\n      }\n    ]);\n    module2.exports = {\n      MessageEvent,\n      CloseEvent,\n      ErrorEvent\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/util.js\nvar require_util3 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/util.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { kReadyState, kController, kResponse, kBinaryType, kWebSocketURL } = require_symbols3();\n    var { states, opcodes } = require_constants3();\n    var { MessageEvent, ErrorEvent } = require_events();\n    function isEstablished(ws) {\n      return ws[kReadyState] === states.OPEN;\n    }\n    __name(isEstablished, "isEstablished");\n    function isClosing(ws) {\n      return ws[kReadyState] === states.CLOSING;\n    }\n    __name(isClosing, "isClosing");\n    function isClosed(ws) {\n      return ws[kReadyState] === states.CLOSED;\n    }\n    __name(isClosed, "isClosed");\n    function fireEvent(e, target, eventConstructor = Event, eventInitDict) {\n      const event = new eventConstructor(e, eventInitDict);\n      target.dispatchEvent(event);\n    }\n    __name(fireEvent, "fireEvent");\n    function websocketMessageReceived(ws, type, data) {\n      if (ws[kReadyState] !== states.OPEN) {\n        return;\n      }\n      let dataForEvent;\n      if (type === opcodes.TEXT) {\n        try {\n          dataForEvent = new TextDecoder("utf-8", { fatal: true }).decode(data);\n        } catch {\n          failWebsocketConnection(ws, "Received invalid UTF-8 in text frame.");\n          return;\n        }\n      } else if (type === opcodes.BINARY) {\n        if (ws[kBinaryType] === "blob") {\n          dataForEvent = new Blob([data]);\n        } else {\n          dataForEvent = new Uint8Array(data).buffer;\n        }\n      }\n      fireEvent("message", ws, MessageEvent, {\n        origin: ws[kWebSocketURL].origin,\n        data: dataForEvent\n      });\n    }\n    __name(websocketMessageReceived, "websocketMessageReceived");\n    function isValidSubprotocol(protocol) {\n      if (protocol.length === 0) {\n        return false;\n      }\n      for (const char of protocol) {\n        const code = char.charCodeAt(0);\n        if (code < 33 || code > 126 || char === "(" || char === ")" || char === "<" || char === ">" || char === "@" || char === "," || char === ";" || char === ":" || char === "\\\\" || char === \'"\' || char === "/" || char === "[" || char === "]" || char === "?" || char === "=" || char === "{" || char === "}" || code === 32 || // SP\n        code === 9) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidSubprotocol, "isValidSubprotocol");\n    function isValidStatusCode(code) {\n      if (code >= 1e3 && code < 1015) {\n        return code !== 1004 && // reserved\n        code !== 1005 && // "MUST NOT be set as a status code"\n        code !== 1006;\n      }\n      return code >= 3e3 && code <= 4999;\n    }\n    __name(isValidStatusCode, "isValidStatusCode");\n    function failWebsocketConnection(ws, reason) {\n      const { [kController]: controller, [kResponse]: response } = ws;\n      controller.abort();\n      if ((response == null ? void 0 : response.socket) && !response.socket.destroyed) {\n        response.socket.destroy();\n      }\n      if (reason) {\n        fireEvent("error", ws, ErrorEvent, {\n          error: new Error(reason)\n        });\n      }\n    }\n    __name(failWebsocketConnection, "failWebsocketConnection");\n    module2.exports = {\n      isEstablished,\n      isClosing,\n      isClosed,\n      fireEvent,\n      isValidSubprotocol,\n      isValidStatusCode,\n      failWebsocketConnection,\n      websocketMessageReceived\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/connection.js\nvar require_connection = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/connection.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { randomBytes, createHash } = require("crypto");\n    var diagnosticsChannel = require("diagnostics_channel");\n    var { uid, states } = require_constants3();\n    var {\n      kReadyState,\n      kSentClose,\n      kByteParser,\n      kReceivedClose\n    } = require_symbols3();\n    var { fireEvent, failWebsocketConnection } = require_util3();\n    var { CloseEvent } = require_events();\n    var { makeRequest } = require_request();\n    var { fetching } = require_fetch();\n    var { Headers: Headers3 } = require_headers();\n    var { getGlobalDispatcher: getGlobalDispatcher2 } = require_global2();\n    var { kHeadersList } = require_symbols2();\n    var channels = {};\n    channels.open = diagnosticsChannel.channel("undici:websocket:open");\n    channels.close = diagnosticsChannel.channel("undici:websocket:close");\n    channels.socketError = diagnosticsChannel.channel("undici:websocket:socket_error");\n    function establishWebSocketConnection(url, protocols, ws, onEstablish, options) {\n      const requestURL = url;\n      requestURL.protocol = url.protocol === "ws:" ? "http:" : "https:";\n      const request = makeRequest({\n        urlList: [requestURL],\n        serviceWorkers: "none",\n        referrer: "no-referrer",\n        mode: "websocket",\n        credentials: "include",\n        cache: "no-store",\n        redirect: "error"\n      });\n      if (options.headers) {\n        const headersList = new Headers3(options.headers)[kHeadersList];\n        request.headersList = headersList;\n      }\n      const keyValue = randomBytes(16).toString("base64");\n      request.headersList.append("sec-websocket-key", keyValue);\n      request.headersList.append("sec-websocket-version", "13");\n      for (const protocol of protocols) {\n        request.headersList.append("sec-websocket-protocol", protocol);\n      }\n      const permessageDeflate = "";\n      const controller = fetching({\n        request,\n        useParallelQueue: true,\n        dispatcher: options.dispatcher ?? getGlobalDispatcher2(),\n        processResponse(response) {\n          var _a, _b;\n          if (response.type === "error" || response.status !== 101) {\n            failWebsocketConnection(ws, "Received network error or non-101 status code.");\n            return;\n          }\n          if (protocols.length !== 0 && !response.headersList.get("Sec-WebSocket-Protocol")) {\n            failWebsocketConnection(ws, "Server did not respond with sent protocols.");\n            return;\n          }\n          if (((_a = response.headersList.get("Upgrade")) == null ? void 0 : _a.toLowerCase()) !== "websocket") {\n            failWebsocketConnection(ws, \'Server did not set Upgrade header to "websocket".\');\n            return;\n          }\n          if (((_b = response.headersList.get("Connection")) == null ? void 0 : _b.toLowerCase()) !== "upgrade") {\n            failWebsocketConnection(ws, \'Server did not set Connection header to "upgrade".\');\n            return;\n          }\n          const secWSAccept = response.headersList.get("Sec-WebSocket-Accept");\n          const digest = createHash("sha1").update(keyValue + uid).digest("base64");\n          if (secWSAccept !== digest) {\n            failWebsocketConnection(ws, "Incorrect hash received in Sec-WebSocket-Accept header.");\n            return;\n          }\n          const secExtension = response.headersList.get("Sec-WebSocket-Extensions");\n          if (secExtension !== null && secExtension !== permessageDeflate) {\n            failWebsocketConnection(ws, "Received different permessage-deflate than the one set.");\n            return;\n          }\n          const secProtocol = response.headersList.get("Sec-WebSocket-Protocol");\n          if (secProtocol !== null && secProtocol !== request.headersList.get("Sec-WebSocket-Protocol")) {\n            failWebsocketConnection(ws, "Protocol was not set in the opening handshake.");\n            return;\n          }\n          response.socket.on("data", onSocketData);\n          response.socket.on("close", onSocketClose);\n          response.socket.on("error", onSocketError);\n          if (channels.open.hasSubscribers) {\n            channels.open.publish({\n              address: response.socket.address(),\n              protocol: secProtocol,\n              extensions: secExtension\n            });\n          }\n          onEstablish(response);\n        }\n      });\n      return controller;\n    }\n    __name(establishWebSocketConnection, "establishWebSocketConnection");\n    function onSocketData(chunk) {\n      if (!this.ws[kByteParser].write(chunk)) {\n        this.pause();\n      }\n    }\n    __name(onSocketData, "onSocketData");\n    function onSocketClose() {\n      const { ws } = this;\n      const wasClean = ws[kSentClose] && ws[kReceivedClose];\n      let code = 1005;\n      let reason = "";\n      const result = ws[kByteParser].closingInfo;\n      if (result) {\n        code = result.code ?? 1005;\n        reason = result.reason;\n      } else if (!ws[kSentClose]) {\n        code = 1006;\n      }\n      ws[kReadyState] = states.CLOSED;\n      fireEvent("close", ws, CloseEvent, {\n        wasClean,\n        code,\n        reason\n      });\n      if (channels.close.hasSubscribers) {\n        channels.close.publish({\n          websocket: ws,\n          code,\n          reason\n        });\n      }\n    }\n    __name(onSocketClose, "onSocketClose");\n    function onSocketError(error) {\n      const { ws } = this;\n      ws[kReadyState] = states.CLOSING;\n      if (channels.socketError.hasSubscribers) {\n        channels.socketError.publish(error);\n      }\n      this.destroy();\n    }\n    __name(onSocketError, "onSocketError");\n    module2.exports = {\n      establishWebSocketConnection\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/frame.js\nvar require_frame = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/frame.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { randomBytes } = require("crypto");\n    var { maxUnsigned16Bit } = require_constants3();\n    var WebsocketFrameSend = class {\n      /**\n       * @param {Buffer|undefined} data\n       */\n      constructor(data) {\n        this.frameData = data;\n        this.maskKey = randomBytes(4);\n      }\n      createFrame(opcode) {\n        var _a;\n        const bodyLength = ((_a = this.frameData) == null ? void 0 : _a.byteLength) ?? 0;\n        let payloadLength = bodyLength;\n        let offset = 6;\n        if (bodyLength > maxUnsigned16Bit) {\n          offset += 8;\n          payloadLength = 127;\n        } else if (bodyLength > 125) {\n          offset += 2;\n          payloadLength = 126;\n        }\n        const buffer = Buffer.allocUnsafe(bodyLength + offset);\n        buffer[0] = buffer[1] = 0;\n        buffer[0] |= 128;\n        buffer[0] = (buffer[0] & 240) + opcode;\n        buffer[offset - 4] = this.maskKey[0];\n        buffer[offset - 3] = this.maskKey[1];\n        buffer[offset - 2] = this.maskKey[2];\n        buffer[offset - 1] = this.maskKey[3];\n        buffer[1] = payloadLength;\n        if (payloadLength === 126) {\n          buffer.writeUInt16BE(bodyLength, 2);\n        } else if (payloadLength === 127) {\n          buffer[2] = buffer[3] = 0;\n          buffer.writeUIntBE(bodyLength, 4, 6);\n        }\n        buffer[1] |= 128;\n        for (let i = 0; i < bodyLength; i++) {\n          buffer[offset + i] = this.frameData[i] ^ this.maskKey[i % 4];\n        }\n        return buffer;\n      }\n    };\n    __name(WebsocketFrameSend, "WebsocketFrameSend");\n    module2.exports = {\n      WebsocketFrameSend\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/receiver.js\nvar require_receiver = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/receiver.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Writable } = require("stream");\n    var diagnosticsChannel = require("diagnostics_channel");\n    var { parserStates, opcodes, states, emptyBuffer } = require_constants3();\n    var { kReadyState, kSentClose, kResponse, kReceivedClose } = require_symbols3();\n    var { isValidStatusCode, failWebsocketConnection, websocketMessageReceived } = require_util3();\n    var { WebsocketFrameSend } = require_frame();\n    var channels = {};\n    channels.ping = diagnosticsChannel.channel("undici:websocket:ping");\n    channels.pong = diagnosticsChannel.channel("undici:websocket:pong");\n    var ByteParser = class extends Writable {\n      #buffers = [];\n      #byteOffset = 0;\n      #state = parserStates.INFO;\n      #info = {};\n      #fragments = [];\n      constructor(ws) {\n        super();\n        this.ws = ws;\n      }\n      /**\n       * @param {Buffer} chunk\n       * @param {() => void} callback\n       */\n      _write(chunk, _, callback) {\n        this.#buffers.push(chunk);\n        this.#byteOffset += chunk.length;\n        this.run(callback);\n      }\n      /**\n       * Runs whenever a new chunk is received.\n       * Callback is called whenever there are no more chunks buffering,\n       * or not enough bytes are buffered to parse.\n       */\n      run(callback) {\n        var _a;\n        while (true) {\n          if (this.#state === parserStates.INFO) {\n            if (this.#byteOffset < 2) {\n              return callback();\n            }\n            const buffer = this.consume(2);\n            this.#info.fin = (buffer[0] & 128) !== 0;\n            this.#info.opcode = buffer[0] & 15;\n            (_a = this.#info).originalOpcode ?? (_a.originalOpcode = this.#info.opcode);\n            this.#info.fragmented = !this.#info.fin && this.#info.opcode !== opcodes.CONTINUATION;\n            if (this.#info.fragmented && this.#info.opcode !== opcodes.BINARY && this.#info.opcode !== opcodes.TEXT) {\n              failWebsocketConnection(this.ws, "Invalid frame type was fragmented.");\n              return;\n            }\n            const payloadLength = buffer[1] & 127;\n            if (payloadLength <= 125) {\n              this.#info.payloadLength = payloadLength;\n              this.#state = parserStates.READ_DATA;\n            } else if (payloadLength === 126) {\n              this.#state = parserStates.PAYLOADLENGTH_16;\n            } else if (payloadLength === 127) {\n              this.#state = parserStates.PAYLOADLENGTH_64;\n            }\n            if (this.#info.fragmented && payloadLength > 125) {\n              failWebsocketConnection(this.ws, "Fragmented frame exceeded 125 bytes.");\n              return;\n            } else if ((this.#info.opcode === opcodes.PING || this.#info.opcode === opcodes.PONG || this.#info.opcode === opcodes.CLOSE) && payloadLength > 125) {\n              failWebsocketConnection(this.ws, "Payload length for control frame exceeded 125 bytes.");\n              return;\n            } else if (this.#info.opcode === opcodes.CLOSE) {\n              if (payloadLength === 1) {\n                failWebsocketConnection(this.ws, "Received close frame with a 1-byte body.");\n                return;\n              }\n              const body = this.consume(payloadLength);\n              this.#info.closeInfo = this.parseCloseBody(false, body);\n              if (!this.ws[kSentClose]) {\n                const body2 = Buffer.allocUnsafe(2);\n                body2.writeUInt16BE(this.#info.closeInfo.code, 0);\n                const closeFrame = new WebsocketFrameSend(body2);\n                this.ws[kResponse].socket.write(\n                  closeFrame.createFrame(opcodes.CLOSE),\n                  (err) => {\n                    if (!err) {\n                      this.ws[kSentClose] = true;\n                    }\n                  }\n                );\n              }\n              this.ws[kReadyState] = states.CLOSING;\n              this.ws[kReceivedClose] = true;\n              this.end();\n              return;\n            } else if (this.#info.opcode === opcodes.PING) {\n              const body = this.consume(payloadLength);\n              if (!this.ws[kReceivedClose]) {\n                const frame = new WebsocketFrameSend(body);\n                this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG));\n                if (channels.ping.hasSubscribers) {\n                  channels.ping.publish({\n                    payload: body\n                  });\n                }\n              }\n              this.#state = parserStates.INFO;\n              if (this.#byteOffset > 0) {\n                continue;\n              } else {\n                callback();\n                return;\n              }\n            } else if (this.#info.opcode === opcodes.PONG) {\n              const body = this.consume(payloadLength);\n              if (channels.pong.hasSubscribers) {\n                channels.pong.publish({\n                  payload: body\n                });\n              }\n              if (this.#byteOffset > 0) {\n                continue;\n              } else {\n                callback();\n                return;\n              }\n            }\n          } else if (this.#state === parserStates.PAYLOADLENGTH_16) {\n            if (this.#byteOffset < 2) {\n              return callback();\n            }\n            const buffer = this.consume(2);\n            this.#info.payloadLength = buffer.readUInt16BE(0);\n            this.#state = parserStates.READ_DATA;\n          } else if (this.#state === parserStates.PAYLOADLENGTH_64) {\n            if (this.#byteOffset < 8) {\n              return callback();\n            }\n            const buffer = this.consume(8);\n            const upper = buffer.readUInt32BE(0);\n            if (upper > 2 ** 31 - 1) {\n              failWebsocketConnection(this.ws, "Received payload length > 2^31 bytes.");\n              return;\n            }\n            const lower = buffer.readUInt32BE(4);\n            this.#info.payloadLength = (upper << 8) + lower;\n            this.#state = parserStates.READ_DATA;\n          } else if (this.#state === parserStates.READ_DATA) {\n            if (this.#byteOffset < this.#info.payloadLength) {\n              return callback();\n            } else if (this.#byteOffset >= this.#info.payloadLength) {\n              const body = this.consume(this.#info.payloadLength);\n              this.#fragments.push(body);\n              if (!this.#info.fragmented || this.#info.fin && this.#info.opcode === opcodes.CONTINUATION) {\n                const fullMessage = Buffer.concat(this.#fragments);\n                websocketMessageReceived(this.ws, this.#info.originalOpcode, fullMessage);\n                this.#info = {};\n                this.#fragments.length = 0;\n              }\n              this.#state = parserStates.INFO;\n            }\n          }\n          if (this.#byteOffset > 0) {\n            continue;\n          } else {\n            callback();\n            break;\n          }\n        }\n      }\n      /**\n       * Take n bytes from the buffered Buffers\n       * @param {number} n\n       * @returns {Buffer|null}\n       */\n      consume(n) {\n        if (n > this.#byteOffset) {\n          return null;\n        } else if (n === 0) {\n          return emptyBuffer;\n        }\n        if (this.#buffers[0].length === n) {\n          this.#byteOffset -= this.#buffers[0].length;\n          return this.#buffers.shift();\n        }\n        const buffer = Buffer.allocUnsafe(n);\n        let offset = 0;\n        while (offset !== n) {\n          const next = this.#buffers[0];\n          const { length } = next;\n          if (length + offset === n) {\n            buffer.set(this.#buffers.shift(), offset);\n            break;\n          } else if (length + offset > n) {\n            buffer.set(next.subarray(0, n - offset), offset);\n            this.#buffers[0] = next.subarray(n - offset);\n            break;\n          } else {\n            buffer.set(this.#buffers.shift(), offset);\n            offset += next.length;\n          }\n        }\n        this.#byteOffset -= n;\n        return buffer;\n      }\n      parseCloseBody(onlyCode, data) {\n        let code;\n        if (data.length >= 2) {\n          code = data.readUInt16BE(0);\n        }\n        if (onlyCode) {\n          if (!isValidStatusCode(code)) {\n            return null;\n          }\n          return { code };\n        }\n        let reason = data.subarray(2);\n        if (reason[0] === 239 && reason[1] === 187 && reason[2] === 191) {\n          reason = reason.subarray(3);\n        }\n        if (code !== void 0 && !isValidStatusCode(code)) {\n          return null;\n        }\n        try {\n          reason = new TextDecoder("utf-8", { fatal: true }).decode(reason);\n        } catch {\n          return null;\n        }\n        return { code, reason };\n      }\n      get closingInfo() {\n        return this.#info.closeInfo;\n      }\n    };\n    __name(ByteParser, "ByteParser");\n    module2.exports = {\n      ByteParser\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/websocket.js\nvar require_websocket = __commonJS({\n  "../../node_modules/.pnpm/undici@5.22.1/node_modules/undici/lib/websocket/websocket.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { webidl } = require_webidl();\n    var { DOMException } = require_constants();\n    var { URLSerializer } = require_dataURL();\n    var { staticPropertyDescriptors, states, opcodes, emptyBuffer } = require_constants3();\n    var {\n      kWebSocketURL,\n      kReadyState,\n      kController,\n      kBinaryType,\n      kResponse,\n      kSentClose,\n      kByteParser\n    } = require_symbols3();\n    var { isEstablished, isClosing, isValidSubprotocol, failWebsocketConnection, fireEvent } = require_util3();\n    var { establishWebSocketConnection } = require_connection();\n    var { WebsocketFrameSend } = require_frame();\n    var { ByteParser } = require_receiver();\n    var { kEnumerableProperty, isBlobLike } = require_util();\n    var { getGlobalDispatcher: getGlobalDispatcher2 } = require_global2();\n    var { types } = require("util");\n    var experimentalWarned = false;\n    var WebSocket2 = class extends EventTarget {\n      #events = {\n        open: null,\n        error: null,\n        close: null,\n        message: null\n      };\n      #bufferedAmount = 0;\n      #protocol = "";\n      #extensions = "";\n      /**\n       * @param {string} url\n       * @param {string|string[]} protocols\n       */\n      constructor(url, protocols = []) {\n        super();\n        webidl.argumentLengthCheck(arguments, 1, { header: "WebSocket constructor" });\n        if (!experimentalWarned) {\n          experimentalWarned = true;\n          define_process_default.emitWarning("WebSockets are experimental, expect them to change at any time.", {\n            code: "UNDICI-WS"\n          });\n        }\n        const options = webidl.converters["DOMString or sequence<DOMString> or WebSocketInit"](protocols);\n        url = webidl.converters.USVString(url);\n        protocols = options.protocols;\n        let urlRecord;\n        try {\n          urlRecord = new URL(url);\n        } catch (e) {\n          throw new DOMException(e, "SyntaxError");\n        }\n        if (urlRecord.protocol !== "ws:" && urlRecord.protocol !== "wss:") {\n          throw new DOMException(\n            `Expected a ws: or wss: protocol, got ${urlRecord.protocol}`,\n            "SyntaxError"\n          );\n        }\n        if (urlRecord.hash) {\n          throw new DOMException("Got fragment", "SyntaxError");\n        }\n        if (typeof protocols === "string") {\n          protocols = [protocols];\n        }\n        if (protocols.length !== new Set(protocols.map((p) => p.toLowerCase())).size) {\n          throw new DOMException("Invalid Sec-WebSocket-Protocol value", "SyntaxError");\n        }\n        if (protocols.length > 0 && !protocols.every((p) => isValidSubprotocol(p))) {\n          throw new DOMException("Invalid Sec-WebSocket-Protocol value", "SyntaxError");\n        }\n        this[kWebSocketURL] = urlRecord;\n        this[kController] = establishWebSocketConnection(\n          urlRecord,\n          protocols,\n          this,\n          (response) => this.#onConnectionEstablished(response),\n          options\n        );\n        this[kReadyState] = WebSocket2.CONNECTING;\n        this[kBinaryType] = "blob";\n      }\n      /**\n       * @see https://websockets.spec.whatwg.org/#dom-websocket-close\n       * @param {number|undefined} code\n       * @param {string|undefined} reason\n       */\n      close(code = void 0, reason = void 0) {\n        webidl.brandCheck(this, WebSocket2);\n        if (code !== void 0) {\n          code = webidl.converters["unsigned short"](code, { clamp: true });\n        }\n        if (reason !== void 0) {\n          reason = webidl.converters.USVString(reason);\n        }\n        if (code !== void 0) {\n          if (code !== 1e3 && (code < 3e3 || code > 4999)) {\n            throw new DOMException("invalid code", "InvalidAccessError");\n          }\n        }\n        let reasonByteLength = 0;\n        if (reason !== void 0) {\n          reasonByteLength = Buffer.byteLength(reason);\n          if (reasonByteLength > 123) {\n            throw new DOMException(\n              `Reason must be less than 123 bytes; received ${reasonByteLength}`,\n              "SyntaxError"\n            );\n          }\n        }\n        if (this[kReadyState] === WebSocket2.CLOSING || this[kReadyState] === WebSocket2.CLOSED) {\n        } else if (!isEstablished(this)) {\n          failWebsocketConnection(this, "Connection was closed before it was established.");\n          this[kReadyState] = WebSocket2.CLOSING;\n        } else if (!isClosing(this)) {\n          const frame = new WebsocketFrameSend();\n          if (code !== void 0 && reason === void 0) {\n            frame.frameData = Buffer.allocUnsafe(2);\n            frame.frameData.writeUInt16BE(code, 0);\n          } else if (code !== void 0 && reason !== void 0) {\n            frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength);\n            frame.frameData.writeUInt16BE(code, 0);\n            frame.frameData.write(reason, 2, "utf-8");\n          } else {\n            frame.frameData = emptyBuffer;\n          }\n          const socket = this[kResponse].socket;\n          socket.write(frame.createFrame(opcodes.CLOSE), (err) => {\n            if (!err) {\n              this[kSentClose] = true;\n            }\n          });\n          this[kReadyState] = states.CLOSING;\n        } else {\n          this[kReadyState] = WebSocket2.CLOSING;\n        }\n      }\n      /**\n       * @see https://websockets.spec.whatwg.org/#dom-websocket-send\n       * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data\n       */\n      send(data) {\n        webidl.brandCheck(this, WebSocket2);\n        webidl.argumentLengthCheck(arguments, 1, { header: "WebSocket.send" });\n        data = webidl.converters.WebSocketSendData(data);\n        if (this[kReadyState] === WebSocket2.CONNECTING) {\n          throw new DOMException("Sent before connected.", "InvalidStateError");\n        }\n        if (!isEstablished(this) || isClosing(this)) {\n          return;\n        }\n        const socket = this[kResponse].socket;\n        if (typeof data === "string") {\n          const value = Buffer.from(data);\n          const frame = new WebsocketFrameSend(value);\n          const buffer = frame.createFrame(opcodes.TEXT);\n          this.#bufferedAmount += value.byteLength;\n          socket.write(buffer, () => {\n            this.#bufferedAmount -= value.byteLength;\n          });\n        } else if (types.isArrayBuffer(data)) {\n          const value = Buffer.from(data);\n          const frame = new WebsocketFrameSend(value);\n          const buffer = frame.createFrame(opcodes.BINARY);\n          this.#bufferedAmount += value.byteLength;\n          socket.write(buffer, () => {\n            this.#bufferedAmount -= value.byteLength;\n          });\n        } else if (ArrayBuffer.isView(data)) {\n          const ab = Buffer.from(data, data.byteOffset, data.byteLength);\n          const frame = new WebsocketFrameSend(ab);\n          const buffer = frame.createFrame(opcodes.BINARY);\n          this.#bufferedAmount += ab.byteLength;\n          socket.write(buffer, () => {\n            this.#bufferedAmount -= ab.byteLength;\n          });\n        } else if (isBlobLike(data)) {\n          const frame = new WebsocketFrameSend();\n          data.arrayBuffer().then((ab) => {\n            const value = Buffer.from(ab);\n            frame.frameData = value;\n            const buffer = frame.createFrame(opcodes.BINARY);\n            this.#bufferedAmount += value.byteLength;\n            socket.write(buffer, () => {\n              this.#bufferedAmount -= value.byteLength;\n            });\n          });\n        }\n      }\n      get readyState() {\n        webidl.brandCheck(this, WebSocket2);\n        return this[kReadyState];\n      }\n      get bufferedAmount() {\n        webidl.brandCheck(this, WebSocket2);\n        return this.#bufferedAmount;\n      }\n      get url() {\n        webidl.brandCheck(this, WebSocket2);\n        return URLSerializer(this[kWebSocketURL]);\n      }\n      get extensions() {\n        webidl.brandCheck(this, WebSocket2);\n        return this.#extensions;\n      }\n      get protocol() {\n        webidl.brandCheck(this, WebSocket2);\n        return this.#protocol;\n      }\n      get onopen() {\n        webidl.brandCheck(this, WebSocket2);\n        return this.#events.open;\n      }\n      set onopen(fn) {\n        webidl.brandCheck(this, WebSocket2);\n        if (this.#events.open) {\n          this.removeEventListener("open", this.#events.open);\n        }\n        if (typeof fn === "function") {\n          this.#events.open = fn;\n          this.addEventListener("open", fn);\n        } else {\n          this.#events.open = null;\n        }\n      }\n      get onerror() {\n        webidl.brandCheck(this, WebSocket2);\n        return this.#events.error;\n      }\n      set onerror(fn) {\n        webidl.brandCheck(this, WebSocket2);\n        if (this.#events.error) {\n          this.removeEventListener("error", this.#events.error);\n        }\n        if (typeof fn === "function") {\n          this.#events.error = fn;\n          this.addEventListener("error", fn);\n        } else {\n          this.#events.error = null;\n        }\n      }\n      get onclose() {\n        webidl.brandCheck(this, WebSocket2);\n        return this.#events.close;\n      }\n      set onclose(fn) {\n        webidl.brandCheck(this, WebSocket2);\n        if (this.#events.close) {\n          this.removeEventListener("close", this.#events.close);\n        }\n        if (typeof fn === "function") {\n          this.#events.close = fn;\n          this.addEventListener("close", fn);\n        } else {\n          this.#events.close = null;\n        }\n      }\n      get onmessage() {\n        webidl.brandCheck(this, WebSocket2);\n        return this.#events.message;\n      }\n      set onmessage(fn) {\n        webidl.brandCheck(this, WebSocket2);\n        if (this.#events.message) {\n          this.removeEventListener("message", this.#events.message);\n        }\n        if (typeof fn === "function") {\n          this.#events.message = fn;\n          this.addEventListener("message", fn);\n        } else {\n          this.#events.message = null;\n        }\n      }\n      get binaryType() {\n        webidl.brandCheck(this, WebSocket2);\n        return this[kBinaryType];\n      }\n      set binaryType(type) {\n        webidl.brandCheck(this, WebSocket2);\n        if (type !== "blob" && type !== "arraybuffer") {\n          this[kBinaryType] = "blob";\n        } else {\n          this[kBinaryType] = type;\n        }\n      }\n      /**\n       * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n       */\n      #onConnectionEstablished(response) {\n        this[kResponse] = response;\n        const parser = new ByteParser(this);\n        parser.on("drain", /* @__PURE__ */ __name(function onParserDrain() {\n          this.ws[kResponse].socket.resume();\n        }, "onParserDrain"));\n        response.socket.ws = this;\n        this[kByteParser] = parser;\n        this[kReadyState] = states.OPEN;\n        const extensions = response.headersList.get("sec-websocket-extensions");\n        if (extensions !== null) {\n          this.#extensions = extensions;\n        }\n        const protocol = response.headersList.get("sec-websocket-protocol");\n        if (protocol !== null) {\n          this.#protocol = protocol;\n        }\n        fireEvent("open", this);\n      }\n    };\n    __name(WebSocket2, "WebSocket");\n    WebSocket2.CONNECTING = WebSocket2.prototype.CONNECTING = states.CONNECTING;\n    WebSocket2.OPEN = WebSocket2.prototype.OPEN = states.OPEN;\n    WebSocket2.CLOSING = WebSocket2.prototype.CLOSING = states.CLOSING;\n    WebSocket2.CLOSED = WebSocket2.prototype.CLOSED = states.CLOSED;\n    Object.defineProperties(WebSocket2.prototype, {\n      CONNECTING: staticPropertyDescriptors,\n      OPEN: staticPropertyDescriptors,\n      CLOSING: staticPropertyDescriptors,\n      CLOSED: staticPropertyDescriptors,\n      url: kEnumerableProperty,\n      readyState: kEnumerableProperty,\n      bufferedAmount: kEnumerableProperty,\n      onopen: kEnumerableProperty,\n      onerror: kEnumerableProperty,\n      onclose: kEnumerableProperty,\n      close: kEnumerableProperty,\n      onmessage: kEnumerableProperty,\n      binaryType: kEnumerableProperty,\n      send: kEnumerableProperty,\n      extensions: kEnumerableProperty,\n      protocol: kEnumerableProperty,\n      [Symbol.toStringTag]: {\n        value: "WebSocket",\n        writable: false,\n        enumerable: false,\n        configurable: true\n      }\n    });\n    Object.defineProperties(WebSocket2, {\n      CONNECTING: staticPropertyDescriptors,\n      OPEN: staticPropertyDescriptors,\n      CLOSING: staticPropertyDescriptors,\n      CLOSED: staticPropertyDescriptors\n    });\n    webidl.converters["sequence<DOMString>"] = webidl.sequenceConverter(\n      webidl.converters.DOMString\n    );\n    webidl.converters["DOMString or sequence<DOMString>"] = function(V) {\n      if (webidl.util.Type(V) === "Object" && Symbol.iterator in V) {\n        return webidl.converters["sequence<DOMString>"](V);\n      }\n      return webidl.converters.DOMString(V);\n    };\n    webidl.converters.WebSocketInit = webidl.dictionaryConverter([\n      {\n        key: "protocols",\n        converter: webidl.converters["DOMString or sequence<DOMString>"],\n        get defaultValue() {\n          return [];\n        }\n      },\n      {\n        key: "dispatcher",\n        converter: (V) => V,\n        get defaultValue() {\n          return getGlobalDispatcher2();\n        }\n      },\n      {\n        key: "headers",\n        converter: webidl.nullableConverter(webidl.converters.HeadersInit)\n      }\n    ]);\n    webidl.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function(V) {\n      if (webidl.util.Type(V) === "Object" && !(Symbol.iterator in V)) {\n        return webidl.converters.WebSocketInit(V);\n      }\n      return { protocols: webidl.converters["DOMString or sequence<DOMString>"](V) };\n    };\n    webidl.converters.WebSocketSendData = function(V) {\n      if (webidl.util.Type(V) === "Object") {\n        if (isBlobLike(V)) {\n          return webidl.converters.Blob(V, { strict: false });\n        }\n        if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {\n          return webidl.converters.BufferSource(V);\n        }\n      }\n      return webidl.converters.USVString(V);\n    };\n    module2.exports = {\n      WebSocket: WebSocket2\n    };\n  }\n});\n\n// src/primitives/fetch.js\nvar fetch_exports = {};\n__export(fetch_exports, {\n  File: () => import_file.File,\n  FormData: () => import_formdata.FormData,\n  Headers: () => Headers2,\n  Request: () => Request,\n  Response: () => Response2,\n  WebSocket: () => import_websocket.WebSocket,\n  fetch: () => fetch,\n  getGlobalDispatcher: () => getGlobalDispatcher,\n  setGlobalDispatcher: () => setGlobalDispatcher\n});\nmodule.exports = __toCommonJS(fetch_exports);\ninit_define_process();\nvar import_abort_controller = require("./abort-controller");\nvar import_abort_controller2 = require("./abort-controller");\nvar FetchSymbols = __toESM(require_symbols());\nvar HeadersModule = __toESM(require_headers());\nvar ResponseModule = __toESM(require_response());\nvar UtilModule = __toESM(require_util2());\nvar WebIDLModule = __toESM(require_webidl());\nvar import_request = __toESM(require_request());\nvar import_fetch = __toESM(require_fetch());\nvar import_agent = __toESM(require_agent());\nvar import_formdata = __toESM(require_formdata());\nvar import_file = __toESM(require_file());\nvar import_websocket = __toESM(require_websocket());\nglobal.AbortController = import_abort_controller.AbortController;\nglobal.AbortSignal = import_abort_controller2.AbortSignal;\ndefine_process_default.nextTick = setImmediate;\ndefine_process_default.emitWarning = () => {\n};\nvar Request = class extends import_request.Request {\n  constructor(input, init) {\n    super(input, addDuplexToInit(init));\n  }\n};\n__name(Request, "Request");\nvar __entries = HeadersModule.Headers.prototype.entries;\nHeadersModule.Headers.prototype.entries = function* () {\n  let sentSetCookie = false;\n  for (const [key, value] of __entries.call(this)) {\n    if (key === "set-cookie") {\n      if (sentSetCookie) {\n        continue;\n      }\n      sentSetCookie = true;\n      const cookies = this.getSetCookie();\n      yield [key, cookies.join(", ")];\n    } else {\n      yield [key, value];\n    }\n  }\n};\nHeadersModule.Headers.prototype[Symbol.iterator] = HeadersModule.Headers.prototype.entries;\nHeadersModule.Headers.prototype.values = function* () {\n  for (const [, value] of __entries.call(this)) {\n    yield value;\n  }\n};\nHeadersModule.Headers.prototype.getAll = function(name) {\n  const _name = normalizeAndValidateHeaderName(name, "Headers.getAll");\n  if (_name !== "set-cookie") {\n    throw new Error(`getAll can only be used with \'set-cookie\'`);\n  }\n  return this.getSetCookie();\n};\nvar __error = ResponseModule.Response.error;\nResponseModule.Response.error = function(...args) {\n  const response = __error.call(this, ...args);\n  response[FetchSymbols.kHeaders][FetchSymbols.kGuard] = "response";\n  return response;\n};\nfunction normalizeAndValidateHeaderName(potentialName, errorPrefix) {\n  const normalizedName = potentialName.toLowerCase();\n  if (UtilModule.isValidHeaderName(normalizedName)) {\n    return normalizedName;\n  }\n  WebIDLModule.errors.invalidArgument({\n    prefix: errorPrefix,\n    value: normalizedName,\n    type: "header name"\n  });\n}\n__name(normalizeAndValidateHeaderName, "normalizeAndValidateHeaderName");\nvar globalDispatcher = new import_agent.default();\nfunction getGlobalDispatcher() {\n  return globalDispatcher;\n}\n__name(getGlobalDispatcher, "getGlobalDispatcher");\nfunction setGlobalDispatcher(agent) {\n  if (!agent || typeof agent.dispatch !== "function") {\n    throw new InvalidArgumentError("Argument agent must implement Agent");\n  }\n  globalDispatcher = agent;\n}\n__name(setGlobalDispatcher, "setGlobalDispatcher");\nfunction addDuplexToInit(init) {\n  if (typeof init === "undefined" || typeof init === "object") {\n    return { duplex: "half", ...init };\n  }\n  return init;\n}\n__name(addDuplexToInit, "addDuplexToInit");\nasync function fetch(info, init) {\n  init = addDuplexToInit(init);\n  const res = await import_fetch.fetch.call(getGlobalDispatcher(), info, init);\n  const response = new Response2(res.body, res);\n  Object.defineProperty(response, "url", { value: res.url });\n  return response;\n}\n__name(fetch, "fetch");\nvar Headers2 = HeadersModule.Headers;\nvar Response2 = ResponseModule.Response;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  File,\n  FormData,\n  Headers,\n  Request,\n  Response,\n  WebSocket,\n  fetch,\n  getGlobalDispatcher,\n  setGlobalDispatcher\n});\n'},446:(module,__unused_webpack_exports,__nccwpck_require__)=>{"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(e,n)=>__defProp(e,"name",{value:n,configurable:true});var __export=(e,n)=>{for(var t in n)__defProp(e,t,{get:n[t],enumerable:true})};var __copyProps=(e,n,t,r)=>{if(n&&typeof n==="object"||typeof n==="function"){for(let A of __getOwnPropNames(n))if(!__hasOwnProp.call(e,A)&&A!==t)__defProp(e,A,{get:()=>n[A],enumerable:!(r=__getOwnPropDesc(n,A))||r.enumerable})}return e};var __toESM=(e,n,t)=>(t=e!=null?__create(__getProtoOf(e)):{},__copyProps(n||!e||!e.__esModule?__defProp(t,"default",{value:e,enumerable:true}):t,e));var __toCommonJS=e=>__copyProps(__defProp({},"__esModule",{value:true}),e);var load_exports={};__export(load_exports,{load:()=>load});module.exports=__toCommonJS(load_exports);var import_module=__toESM(__nccwpck_require__(188));var import_crypto=__toESM(__nccwpck_require__(113));function requireWithFakeGlobalScope(params){const getModuleCode=`(function(module,exports,require,globalThis,${Object.keys(params.scopedContext).join(",")}) {${params.sourceCode}\n})`;const module={exports:{},loaded:false,id:params.id};const moduleRequire=(import_module.default.createRequire||import_module.default.createRequireFromPath)(__filename);function throwingRequire(e){if(e.startsWith("./")){const n=e.replace(/^\.\//,"");if(!params.cache||!params.cache.has(n)){throw new Error(`Cannot find module '${n}'`)}return params.cache.get(n).exports}return moduleRequire(e)}__name(throwingRequire,"throwingRequire");throwingRequire.resolve=moduleRequire.resolve.bind(moduleRequire);eval(getModuleCode)(module,module.exports,throwingRequire,params.context,...Object.values(params.scopedContext));return module.exports}__name(requireWithFakeGlobalScope,"requireWithFakeGlobalScope");function load(e={}){const n={};const t=requireWithFakeGlobalScope({context:n,id:"encoding.js",sourceCode:__nccwpck_require__(799),scopedContext:e});assign(n,{TextDecoder:t.TextDecoder,TextEncoder:t.TextEncoder,atob:t.atob,btoa:t.btoa});const r=requireWithFakeGlobalScope({context:n,id:"console.js",sourceCode:__nccwpck_require__(168),scopedContext:e});assign(n,{console:r.console});const A=requireWithFakeGlobalScope({context:n,id:"events.js",sourceCode:__nccwpck_require__(945),scopedContext:e});assign(n,{Event:A.Event,EventTarget:A.EventTarget,FetchEvent:A.FetchEvent,PromiseRejectionEvent:A.PromiseRejectionEvent});const o=requireWithFakeGlobalScope({context:n,id:"streams.js",sourceCode:__nccwpck_require__(817),scopedContext:{...e}});const s=requireWithFakeGlobalScope({context:n,id:"text-encoding-streams.js",sourceCode:__nccwpck_require__(294),scopedContext:{...o,...e}});assign(n,{ReadableStream:o.ReadableStream,ReadableStreamBYOBReader:o.ReadableStreamBYOBReader,ReadableStreamDefaultReader:o.ReadableStreamDefaultReader,TextDecoderStream:s.TextDecoderStream,TextEncoderStream:s.TextEncoderStream,TransformStream:o.TransformStream,WritableStream:o.WritableStream,WritableStreamDefaultWriter:o.WritableStreamDefaultWriter});const i=requireWithFakeGlobalScope({context:n,id:"abort-controller.js",sourceCode:__nccwpck_require__(756),scopedContext:{...A,...e}});assign(n,{AbortController:i.AbortController,AbortSignal:i.AbortSignal,DOMException:i.DOMException});const a=requireWithFakeGlobalScope({context:n,id:"url.js",sourceCode:__nccwpck_require__(617),scopedContext:{...e}});assign(n,{URL:a.URL,URLSearchParams:a.URLSearchParams,URLPattern:a.URLPattern});const u=(()=>{if(typeof e.Blob==="function"){return{Blob:e.Blob}}if(typeof Blob==="function"){return{Blob:Blob}}const t={...o,...e};const r={...t,Blob:void 0};Object.setPrototypeOf(r,globalThis);t.global=r;return requireWithFakeGlobalScope({context:n,id:"blob.js",sourceCode:__nccwpck_require__(7),scopedContext:t})})();assign(n,{Blob:u.Blob});const l=requireWithFakeGlobalScope({id:"structured-clone.js",context:n,sourceCode:__nccwpck_require__(494),scopedContext:{...o,...e}});assign(n,{structuredClone:l.structuredClone});const c=requireWithFakeGlobalScope({context:n,id:"fetch.js",sourceCode:__nccwpck_require__(413),cache:new Map([["abort-controller",{exports:i}],["streams",{exports:o}]]),scopedContext:{global:{...e},...e,...o,...a,...i,...A,structuredClone:n.structuredClone}});assign(n,{fetch:c.fetch,File:c.File,FormData:c.FormData,Headers:c.Headers,Request:c.Request,Response:c.Response,WebSocket:c.WebSocket});const g=getCrypto(n,e);assign(n,{crypto:g.crypto,Crypto:g.Crypto,CryptoKey:g.CryptoKey,SubtleCrypto:g.SubtleCrypto});return n}__name(load,"load");function getCrypto(e,n){if(typeof SubtleCrypto!=="undefined"||n.SubtleCrypto){return{crypto:n.crypto||globalThis.crypto,Crypto:n.Crypto||globalThis.Crypto,CryptoKey:n.CryptoKey||globalThis.CryptoKey,SubtleCrypto:n.SubtleCrypto||globalThis.SubtleCrypto}}else if(import_crypto.default.webcrypto){const e=import_crypto.default.webcrypto;return{crypto:e,Crypto:e.constructor,CryptoKey:e.CryptoKey,SubtleCrypto:e.subtle.constructor}}return requireWithFakeGlobalScope({context:e,id:"crypto.js",sourceCode:__nccwpck_require__(399),scopedContext:{...n}})}__name(getCrypto,"getCrypto");function assign(e,n){Object.assign(e,n)}__name(assign,"assign");0&&0},817:e=>{e.exports='"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/streams.js\nvar streams_exports = {};\n__export(streams_exports, {\n  ReadableStream: () => ReadableStream,\n  ReadableStreamBYOBReader: () => ReadableStreamBYOBReader,\n  ReadableStreamDefaultReader: () => ReadableStreamDefaultReader,\n  TransformStream: () => TransformStream,\n  WritableStream: () => WritableStream,\n  WritableStreamDefaultWriter: () => WritableStreamDefaultWriter\n});\nmodule.exports = __toCommonJS(streams_exports);\n\n// ../../node_modules/.pnpm/web-streams-polyfill@4.0.0-beta.3/node_modules/web-streams-polyfill/dist/ponyfill.mjs\nvar e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? Symbol : (e2) => `Symbol(${e2})`;\nfunction t() {\n}\n__name(t, "t");\nfunction r(e2) {\n  return "object" == typeof e2 && null !== e2 || "function" == typeof e2;\n}\n__name(r, "r");\nvar o = t;\nfunction n(e2, t2) {\n  try {\n    Object.defineProperty(e2, "name", { value: t2, configurable: true });\n  } catch (e3) {\n  }\n}\n__name(n, "n");\nvar a = Promise;\nvar i = Promise.prototype.then;\nvar l = Promise.resolve.bind(a);\nvar s = Promise.reject.bind(a);\nfunction u(e2) {\n  return new a(e2);\n}\n__name(u, "u");\nfunction c(e2) {\n  return l(e2);\n}\n__name(c, "c");\nfunction d(e2) {\n  return s(e2);\n}\n__name(d, "d");\nfunction f(e2, t2, r2) {\n  return i.call(e2, t2, r2);\n}\n__name(f, "f");\nfunction b(e2, t2, r2) {\n  f(f(e2, t2, r2), void 0, o);\n}\n__name(b, "b");\nfunction h(e2, t2) {\n  b(e2, t2);\n}\n__name(h, "h");\nfunction _(e2, t2) {\n  b(e2, void 0, t2);\n}\n__name(_, "_");\nfunction p(e2, t2, r2) {\n  return f(e2, t2, r2);\n}\n__name(p, "p");\nfunction m(e2) {\n  f(e2, void 0, o);\n}\n__name(m, "m");\nvar y = /* @__PURE__ */ __name((e2) => {\n  if ("function" == typeof queueMicrotask)\n    y = queueMicrotask;\n  else {\n    const e3 = c(void 0);\n    y = /* @__PURE__ */ __name((t2) => f(e3, t2), "y");\n  }\n  return y(e2);\n}, "y");\nfunction g(e2, t2, r2) {\n  if ("function" != typeof e2)\n    throw new TypeError("Argument is not a function");\n  return Function.prototype.apply.call(e2, t2, r2);\n}\n__name(g, "g");\nfunction w(e2, t2, r2) {\n  try {\n    return c(g(e2, t2, r2));\n  } catch (e3) {\n    return d(e3);\n  }\n}\n__name(w, "w");\nvar S = class {\n  constructor() {\n    this._cursor = 0, this._size = 0, this._front = { _elements: [], _next: void 0 }, this._back = this._front, this._cursor = 0, this._size = 0;\n  }\n  get length() {\n    return this._size;\n  }\n  push(e2) {\n    const t2 = this._back;\n    let r2 = t2;\n    16383 === t2._elements.length && (r2 = { _elements: [], _next: void 0 }), t2._elements.push(e2), r2 !== t2 && (this._back = r2, t2._next = r2), ++this._size;\n  }\n  shift() {\n    const e2 = this._front;\n    let t2 = e2;\n    const r2 = this._cursor;\n    let o2 = r2 + 1;\n    const n2 = e2._elements, a2 = n2[r2];\n    return 16384 === o2 && (t2 = e2._next, o2 = 0), --this._size, this._cursor = o2, e2 !== t2 && (this._front = t2), n2[r2] = void 0, a2;\n  }\n  forEach(e2) {\n    let t2 = this._cursor, r2 = this._front, o2 = r2._elements;\n    for (; !(t2 === o2.length && void 0 === r2._next || t2 === o2.length && (r2 = r2._next, o2 = r2._elements, t2 = 0, 0 === o2.length)); )\n      e2(o2[t2]), ++t2;\n  }\n  peek() {\n    const e2 = this._front, t2 = this._cursor;\n    return e2._elements[t2];\n  }\n};\n__name(S, "S");\nvar v = e("[[AbortSteps]]");\nvar R = e("[[ErrorSteps]]");\nvar T = e("[[CancelSteps]]");\nvar q = e("[[PullSteps]]");\nvar C = e("[[ReleaseSteps]]");\nfunction E(e2, t2) {\n  e2._ownerReadableStream = t2, t2._reader = e2, "readable" === t2._state ? O(e2) : "closed" === t2._state ? function(e3) {\n    O(e3), j(e3);\n  }(e2) : B(e2, t2._storedError);\n}\n__name(E, "E");\nfunction P(e2, t2) {\n  return Gt(e2._ownerReadableStream, t2);\n}\n__name(P, "P");\nfunction W(e2) {\n  const t2 = e2._ownerReadableStream;\n  "readable" === t2._state ? A(e2, new TypeError("Reader was released and can no longer be used to monitor the stream\'s closedness")) : function(e3, t3) {\n    B(e3, t3);\n  }(e2, new TypeError("Reader was released and can no longer be used to monitor the stream\'s closedness")), t2._readableStreamController[C](), t2._reader = void 0, e2._ownerReadableStream = void 0;\n}\n__name(W, "W");\nfunction k(e2) {\n  return new TypeError("Cannot " + e2 + " a stream using a released reader");\n}\n__name(k, "k");\nfunction O(e2) {\n  e2._closedPromise = u((t2, r2) => {\n    e2._closedPromise_resolve = t2, e2._closedPromise_reject = r2;\n  });\n}\n__name(O, "O");\nfunction B(e2, t2) {\n  O(e2), A(e2, t2);\n}\n__name(B, "B");\nfunction A(e2, t2) {\n  void 0 !== e2._closedPromise_reject && (m(e2._closedPromise), e2._closedPromise_reject(t2), e2._closedPromise_resolve = void 0, e2._closedPromise_reject = void 0);\n}\n__name(A, "A");\nfunction j(e2) {\n  void 0 !== e2._closedPromise_resolve && (e2._closedPromise_resolve(void 0), e2._closedPromise_resolve = void 0, e2._closedPromise_reject = void 0);\n}\n__name(j, "j");\nvar z = Number.isFinite || function(e2) {\n  return "number" == typeof e2 && isFinite(e2);\n};\nvar L = Math.trunc || function(e2) {\n  return e2 < 0 ? Math.ceil(e2) : Math.floor(e2);\n};\nfunction F(e2, t2) {\n  if (void 0 !== e2 && ("object" != typeof (r2 = e2) && "function" != typeof r2))\n    throw new TypeError(`${t2} is not an object.`);\n  var r2;\n}\n__name(F, "F");\nfunction I(e2, t2) {\n  if ("function" != typeof e2)\n    throw new TypeError(`${t2} is not a function.`);\n}\n__name(I, "I");\nfunction D(e2, t2) {\n  if (!function(e3) {\n    return "object" == typeof e3 && null !== e3 || "function" == typeof e3;\n  }(e2))\n    throw new TypeError(`${t2} is not an object.`);\n}\n__name(D, "D");\nfunction $(e2, t2, r2) {\n  if (void 0 === e2)\n    throw new TypeError(`Parameter ${t2} is required in \'${r2}\'.`);\n}\n__name($, "$");\nfunction M(e2, t2, r2) {\n  if (void 0 === e2)\n    throw new TypeError(`${t2} is required in \'${r2}\'.`);\n}\n__name(M, "M");\nfunction Y(e2) {\n  return Number(e2);\n}\n__name(Y, "Y");\nfunction Q(e2) {\n  return 0 === e2 ? 0 : e2;\n}\n__name(Q, "Q");\nfunction N(e2, t2) {\n  const r2 = Number.MAX_SAFE_INTEGER;\n  let o2 = Number(e2);\n  if (o2 = Q(o2), !z(o2))\n    throw new TypeError(`${t2} is not a finite number`);\n  if (o2 = function(e3) {\n    return Q(L(e3));\n  }(o2), o2 < 0 || o2 > r2)\n    throw new TypeError(`${t2} is outside the accepted range of 0 to ${r2}, inclusive`);\n  return z(o2) && 0 !== o2 ? o2 : 0;\n}\n__name(N, "N");\nfunction H(e2) {\n  if (!r(e2))\n    return false;\n  if ("function" != typeof e2.getReader)\n    return false;\n  try {\n    return "boolean" == typeof e2.locked;\n  } catch (e3) {\n    return false;\n  }\n}\n__name(H, "H");\nfunction x(e2) {\n  if (!r(e2))\n    return false;\n  if ("function" != typeof e2.getWriter)\n    return false;\n  try {\n    return "boolean" == typeof e2.locked;\n  } catch (e3) {\n    return false;\n  }\n}\n__name(x, "x");\nfunction V(e2, t2) {\n  if (!Vt(e2))\n    throw new TypeError(`${t2} is not a ReadableStream.`);\n}\n__name(V, "V");\nfunction U(e2, t2) {\n  e2._reader._readRequests.push(t2);\n}\n__name(U, "U");\nfunction G(e2, t2, r2) {\n  const o2 = e2._reader._readRequests.shift();\n  r2 ? o2._closeSteps() : o2._chunkSteps(t2);\n}\n__name(G, "G");\nfunction X(e2) {\n  return e2._reader._readRequests.length;\n}\n__name(X, "X");\nfunction J(e2) {\n  const t2 = e2._reader;\n  return void 0 !== t2 && !!K(t2);\n}\n__name(J, "J");\nvar ReadableStreamDefaultReader = class {\n  constructor(e2) {\n    if ($(e2, 1, "ReadableStreamDefaultReader"), V(e2, "First parameter"), Ut(e2))\n      throw new TypeError("This stream has already been locked for exclusive reading by another reader");\n    E(this, e2), this._readRequests = new S();\n  }\n  get closed() {\n    return K(this) ? this._closedPromise : d(ee("closed"));\n  }\n  cancel(e2) {\n    return K(this) ? void 0 === this._ownerReadableStream ? d(k("cancel")) : P(this, e2) : d(ee("cancel"));\n  }\n  read() {\n    if (!K(this))\n      return d(ee("read"));\n    if (void 0 === this._ownerReadableStream)\n      return d(k("read from"));\n    let e2, t2;\n    const r2 = u((r3, o2) => {\n      e2 = r3, t2 = o2;\n    });\n    return function(e3, t3) {\n      const r3 = e3._ownerReadableStream;\n      r3._disturbed = true, "closed" === r3._state ? t3._closeSteps() : "errored" === r3._state ? t3._errorSteps(r3._storedError) : r3._readableStreamController[q](t3);\n    }(this, { _chunkSteps: (t3) => e2({ value: t3, done: false }), _closeSteps: () => e2({ value: void 0, done: true }), _errorSteps: (e3) => t2(e3) }), r2;\n  }\n  releaseLock() {\n    if (!K(this))\n      throw ee("releaseLock");\n    void 0 !== this._ownerReadableStream && function(e2) {\n      W(e2);\n      const t2 = new TypeError("Reader was released");\n      Z(e2, t2);\n    }(this);\n  }\n};\n__name(ReadableStreamDefaultReader, "ReadableStreamDefaultReader");\nfunction K(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_readRequests") && e2 instanceof ReadableStreamDefaultReader);\n}\n__name(K, "K");\nfunction Z(e2, t2) {\n  const r2 = e2._readRequests;\n  e2._readRequests = new S(), r2.forEach((e3) => {\n    e3._errorSteps(t2);\n  });\n}\n__name(Z, "Z");\nfunction ee(e2) {\n  return new TypeError(`ReadableStreamDefaultReader.prototype.${e2} can only be used on a ReadableStreamDefaultReader`);\n}\n__name(ee, "ee");\nObject.defineProperties(ReadableStreamDefaultReader.prototype, { cancel: { enumerable: true }, read: { enumerable: true }, releaseLock: { enumerable: true }, closed: { enumerable: true } }), n(ReadableStreamDefaultReader.prototype.cancel, "cancel"), n(ReadableStreamDefaultReader.prototype.read, "read"), n(ReadableStreamDefaultReader.prototype.releaseLock, "releaseLock"), "symbol" == typeof e.toStringTag && Object.defineProperty(ReadableStreamDefaultReader.prototype, e.toStringTag, { value: "ReadableStreamDefaultReader", configurable: true });\nvar te = class {\n  constructor(e2, t2) {\n    this._ongoingPromise = void 0, this._isFinished = false, this._reader = e2, this._preventCancel = t2;\n  }\n  next() {\n    const e2 = /* @__PURE__ */ __name(() => this._nextSteps(), "e");\n    return this._ongoingPromise = this._ongoingPromise ? p(this._ongoingPromise, e2, e2) : e2(), this._ongoingPromise;\n  }\n  return(e2) {\n    const t2 = /* @__PURE__ */ __name(() => this._returnSteps(e2), "t");\n    return this._ongoingPromise ? p(this._ongoingPromise, t2, t2) : t2();\n  }\n  _nextSteps() {\n    if (this._isFinished)\n      return Promise.resolve({ value: void 0, done: true });\n    const e2 = this._reader;\n    return void 0 === e2 ? d(k("iterate")) : f(e2.read(), (e3) => {\n      var t2;\n      return this._ongoingPromise = void 0, e3.done && (this._isFinished = true, null === (t2 = this._reader) || void 0 === t2 || t2.releaseLock(), this._reader = void 0), e3;\n    }, (e3) => {\n      var t2;\n      throw this._ongoingPromise = void 0, this._isFinished = true, null === (t2 = this._reader) || void 0 === t2 || t2.releaseLock(), this._reader = void 0, e3;\n    });\n  }\n  _returnSteps(e2) {\n    if (this._isFinished)\n      return Promise.resolve({ value: e2, done: true });\n    this._isFinished = true;\n    const t2 = this._reader;\n    if (void 0 === t2)\n      return d(k("finish iterating"));\n    if (this._reader = void 0, !this._preventCancel) {\n      const r2 = t2.cancel(e2);\n      return t2.releaseLock(), p(r2, () => ({ value: e2, done: true }));\n    }\n    return t2.releaseLock(), c({ value: e2, done: true });\n  }\n};\n__name(te, "te");\nvar re = { next() {\n  return oe(this) ? this._asyncIteratorImpl.next() : d(ne("next"));\n}, return(e2) {\n  return oe(this) ? this._asyncIteratorImpl.return(e2) : d(ne("return"));\n} };\nfunction oe(e2) {\n  if (!r(e2))\n    return false;\n  if (!Object.prototype.hasOwnProperty.call(e2, "_asyncIteratorImpl"))\n    return false;\n  try {\n    return e2._asyncIteratorImpl instanceof te;\n  } catch (e3) {\n    return false;\n  }\n}\n__name(oe, "oe");\nfunction ne(e2) {\n  return new TypeError(`ReadableStreamAsyncIterator.${e2} can only be used on a ReadableSteamAsyncIterator`);\n}\n__name(ne, "ne");\n"symbol" == typeof e.asyncIterator && Object.defineProperty(re, e.asyncIterator, { value() {\n  return this;\n}, writable: true, configurable: true });\nvar ae = Number.isNaN || function(e2) {\n  return e2 != e2;\n};\nfunction ie(e2, t2, r2, o2, n2) {\n  new Uint8Array(e2).set(new Uint8Array(r2, o2, n2), t2);\n}\n__name(ie, "ie");\nfunction le(e2) {\n  const t2 = function(e3, t3, r2) {\n    if (e3.slice)\n      return e3.slice(t3, r2);\n    const o2 = r2 - t3, n2 = new ArrayBuffer(o2);\n    return ie(n2, 0, e3, t3, o2), n2;\n  }(e2.buffer, e2.byteOffset, e2.byteOffset + e2.byteLength);\n  return new Uint8Array(t2);\n}\n__name(le, "le");\nfunction se(e2) {\n  const t2 = e2._queue.shift();\n  return e2._queueTotalSize -= t2.size, e2._queueTotalSize < 0 && (e2._queueTotalSize = 0), t2.value;\n}\n__name(se, "se");\nfunction ue(e2, t2, r2) {\n  if ("number" != typeof (o2 = r2) || ae(o2) || o2 < 0 || r2 === 1 / 0)\n    throw new RangeError("Size must be a finite, non-NaN, non-negative number.");\n  var o2;\n  e2._queue.push({ value: t2, size: r2 }), e2._queueTotalSize += r2;\n}\n__name(ue, "ue");\nfunction ce(e2) {\n  e2._queue = new S(), e2._queueTotalSize = 0;\n}\n__name(ce, "ce");\nvar ReadableStreamBYOBRequest = class {\n  constructor() {\n    throw new TypeError("Illegal constructor");\n  }\n  get view() {\n    if (!fe(this))\n      throw Be("view");\n    return this._view;\n  }\n  respond(e2) {\n    if (!fe(this))\n      throw Be("respond");\n    if ($(e2, 1, "respond"), e2 = N(e2, "First parameter"), void 0 === this._associatedReadableByteStreamController)\n      throw new TypeError("This BYOB request has been invalidated");\n    this._view.buffer, function(e3, t2) {\n      const r2 = e3._pendingPullIntos.peek();\n      if ("closed" === e3._controlledReadableByteStream._state) {\n        if (0 !== t2)\n          throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");\n      } else {\n        if (0 === t2)\n          throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");\n        if (r2.bytesFilled + t2 > r2.byteLength)\n          throw new RangeError("bytesWritten out of range");\n      }\n      r2.buffer = r2.buffer, qe(e3, t2);\n    }(this._associatedReadableByteStreamController, e2);\n  }\n  respondWithNewView(e2) {\n    if (!fe(this))\n      throw Be("respondWithNewView");\n    if ($(e2, 1, "respondWithNewView"), !ArrayBuffer.isView(e2))\n      throw new TypeError("You can only respond with array buffer views");\n    if (void 0 === this._associatedReadableByteStreamController)\n      throw new TypeError("This BYOB request has been invalidated");\n    e2.buffer, function(e3, t2) {\n      const r2 = e3._pendingPullIntos.peek();\n      if ("closed" === e3._controlledReadableByteStream._state) {\n        if (0 !== t2.byteLength)\n          throw new TypeError("The view\'s length must be 0 when calling respondWithNewView() on a closed stream");\n      } else if (0 === t2.byteLength)\n        throw new TypeError("The view\'s length must be greater than 0 when calling respondWithNewView() on a readable stream");\n      if (r2.byteOffset + r2.bytesFilled !== t2.byteOffset)\n        throw new RangeError("The region specified by view does not match byobRequest");\n      if (r2.bufferByteLength !== t2.buffer.byteLength)\n        throw new RangeError("The buffer of view has different capacity than byobRequest");\n      if (r2.bytesFilled + t2.byteLength > r2.byteLength)\n        throw new RangeError("The region specified by view is larger than byobRequest");\n      const o2 = t2.byteLength;\n      r2.buffer = t2.buffer, qe(e3, o2);\n    }(this._associatedReadableByteStreamController, e2);\n  }\n};\n__name(ReadableStreamBYOBRequest, "ReadableStreamBYOBRequest");\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, { respond: { enumerable: true }, respondWithNewView: { enumerable: true }, view: { enumerable: true } }), n(ReadableStreamBYOBRequest.prototype.respond, "respond"), n(ReadableStreamBYOBRequest.prototype.respondWithNewView, "respondWithNewView"), "symbol" == typeof e.toStringTag && Object.defineProperty(ReadableStreamBYOBRequest.prototype, e.toStringTag, { value: "ReadableStreamBYOBRequest", configurable: true });\nvar ReadableByteStreamController = class {\n  constructor() {\n    throw new TypeError("Illegal constructor");\n  }\n  get byobRequest() {\n    if (!de(this))\n      throw Ae("byobRequest");\n    return function(e2) {\n      if (null === e2._byobRequest && e2._pendingPullIntos.length > 0) {\n        const t2 = e2._pendingPullIntos.peek(), r2 = new Uint8Array(t2.buffer, t2.byteOffset + t2.bytesFilled, t2.byteLength - t2.bytesFilled), o2 = Object.create(ReadableStreamBYOBRequest.prototype);\n        !function(e3, t3, r3) {\n          e3._associatedReadableByteStreamController = t3, e3._view = r3;\n        }(o2, e2, r2), e2._byobRequest = o2;\n      }\n      return e2._byobRequest;\n    }(this);\n  }\n  get desiredSize() {\n    if (!de(this))\n      throw Ae("desiredSize");\n    return ke(this);\n  }\n  close() {\n    if (!de(this))\n      throw Ae("close");\n    if (this._closeRequested)\n      throw new TypeError("The stream has already been closed; do not close it again!");\n    const e2 = this._controlledReadableByteStream._state;\n    if ("readable" !== e2)\n      throw new TypeError(`The stream (in ${e2} state) is not in the readable state and cannot be closed`);\n    !function(e3) {\n      const t2 = e3._controlledReadableByteStream;\n      if (e3._closeRequested || "readable" !== t2._state)\n        return;\n      if (e3._queueTotalSize > 0)\n        return void (e3._closeRequested = true);\n      if (e3._pendingPullIntos.length > 0) {\n        if (e3._pendingPullIntos.peek().bytesFilled > 0) {\n          const t3 = new TypeError("Insufficient bytes to fill elements in the given buffer");\n          throw Pe(e3, t3), t3;\n        }\n      }\n      Ee(e3), Xt(t2);\n    }(this);\n  }\n  enqueue(e2) {\n    if (!de(this))\n      throw Ae("enqueue");\n    if ($(e2, 1, "enqueue"), !ArrayBuffer.isView(e2))\n      throw new TypeError("chunk must be an array buffer view");\n    if (0 === e2.byteLength)\n      throw new TypeError("chunk must have non-zero byteLength");\n    if (0 === e2.buffer.byteLength)\n      throw new TypeError("chunk\'s buffer must have non-zero byteLength");\n    if (this._closeRequested)\n      throw new TypeError("stream is closed or draining");\n    const t2 = this._controlledReadableByteStream._state;\n    if ("readable" !== t2)\n      throw new TypeError(`The stream (in ${t2} state) is not in the readable state and cannot be enqueued to`);\n    !function(e3, t3) {\n      const r2 = e3._controlledReadableByteStream;\n      if (e3._closeRequested || "readable" !== r2._state)\n        return;\n      const o2 = t3.buffer, n2 = t3.byteOffset, a2 = t3.byteLength, i2 = o2;\n      if (e3._pendingPullIntos.length > 0) {\n        const t4 = e3._pendingPullIntos.peek();\n        t4.buffer, 0, Re(e3), t4.buffer = t4.buffer, "none" === t4.readerType && ge(e3, t4);\n      }\n      if (J(r2))\n        if (function(e4) {\n          const t4 = e4._controlledReadableByteStream._reader;\n          for (; t4._readRequests.length > 0; ) {\n            if (0 === e4._queueTotalSize)\n              return;\n            We(e4, t4._readRequests.shift());\n          }\n        }(e3), 0 === X(r2))\n          me(e3, i2, n2, a2);\n        else {\n          e3._pendingPullIntos.length > 0 && Ce(e3);\n          G(r2, new Uint8Array(i2, n2, a2), false);\n        }\n      else\n        Le(r2) ? (me(e3, i2, n2, a2), Te(e3)) : me(e3, i2, n2, a2);\n      be(e3);\n    }(this, e2);\n  }\n  error(e2) {\n    if (!de(this))\n      throw Ae("error");\n    Pe(this, e2);\n  }\n  [T](e2) {\n    he(this), ce(this);\n    const t2 = this._cancelAlgorithm(e2);\n    return Ee(this), t2;\n  }\n  [q](e2) {\n    const t2 = this._controlledReadableByteStream;\n    if (this._queueTotalSize > 0)\n      return void We(this, e2);\n    const r2 = this._autoAllocateChunkSize;\n    if (void 0 !== r2) {\n      let t3;\n      try {\n        t3 = new ArrayBuffer(r2);\n      } catch (t4) {\n        return void e2._errorSteps(t4);\n      }\n      const o2 = { buffer: t3, bufferByteLength: r2, byteOffset: 0, byteLength: r2, bytesFilled: 0, elementSize: 1, viewConstructor: Uint8Array, readerType: "default" };\n      this._pendingPullIntos.push(o2);\n    }\n    U(t2, e2), be(this);\n  }\n  [C]() {\n    if (this._pendingPullIntos.length > 0) {\n      const e2 = this._pendingPullIntos.peek();\n      e2.readerType = "none", this._pendingPullIntos = new S(), this._pendingPullIntos.push(e2);\n    }\n  }\n};\n__name(ReadableByteStreamController, "ReadableByteStreamController");\nfunction de(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_controlledReadableByteStream") && e2 instanceof ReadableByteStreamController);\n}\n__name(de, "de");\nfunction fe(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_associatedReadableByteStreamController") && e2 instanceof ReadableStreamBYOBRequest);\n}\n__name(fe, "fe");\nfunction be(e2) {\n  const t2 = function(e3) {\n    const t3 = e3._controlledReadableByteStream;\n    if ("readable" !== t3._state)\n      return false;\n    if (e3._closeRequested)\n      return false;\n    if (!e3._started)\n      return false;\n    if (J(t3) && X(t3) > 0)\n      return true;\n    if (Le(t3) && ze(t3) > 0)\n      return true;\n    if (ke(e3) > 0)\n      return true;\n    return false;\n  }(e2);\n  if (!t2)\n    return;\n  if (e2._pulling)\n    return void (e2._pullAgain = true);\n  e2._pulling = true;\n  b(e2._pullAlgorithm(), () => (e2._pulling = false, e2._pullAgain && (e2._pullAgain = false, be(e2)), null), (t3) => (Pe(e2, t3), null));\n}\n__name(be, "be");\nfunction he(e2) {\n  Re(e2), e2._pendingPullIntos = new S();\n}\n__name(he, "he");\nfunction _e(e2, t2) {\n  let r2 = false;\n  "closed" === e2._state && (r2 = true);\n  const o2 = pe(t2);\n  "default" === t2.readerType ? G(e2, o2, r2) : function(e3, t3, r3) {\n    const o3 = e3._reader._readIntoRequests.shift();\n    r3 ? o3._closeSteps(t3) : o3._chunkSteps(t3);\n  }(e2, o2, r2);\n}\n__name(_e, "_e");\nfunction pe(e2) {\n  const t2 = e2.bytesFilled, r2 = e2.elementSize;\n  return new e2.viewConstructor(e2.buffer, e2.byteOffset, t2 / r2);\n}\n__name(pe, "pe");\nfunction me(e2, t2, r2, o2) {\n  e2._queue.push({ buffer: t2, byteOffset: r2, byteLength: o2 }), e2._queueTotalSize += o2;\n}\n__name(me, "me");\nfunction ye(e2, t2, r2, o2) {\n  let n2;\n  try {\n    n2 = t2.slice(r2, r2 + o2);\n  } catch (t3) {\n    throw Pe(e2, t3), t3;\n  }\n  me(e2, n2, 0, o2);\n}\n__name(ye, "ye");\nfunction ge(e2, t2) {\n  t2.bytesFilled > 0 && ye(e2, t2.buffer, t2.byteOffset, t2.bytesFilled), Ce(e2);\n}\n__name(ge, "ge");\nfunction we(e2, t2) {\n  const r2 = t2.elementSize, o2 = t2.bytesFilled - t2.bytesFilled % r2, n2 = Math.min(e2._queueTotalSize, t2.byteLength - t2.bytesFilled), a2 = t2.bytesFilled + n2, i2 = a2 - a2 % r2;\n  let l2 = n2, s2 = false;\n  i2 > o2 && (l2 = i2 - t2.bytesFilled, s2 = true);\n  const u2 = e2._queue;\n  for (; l2 > 0; ) {\n    const r3 = u2.peek(), o3 = Math.min(l2, r3.byteLength), n3 = t2.byteOffset + t2.bytesFilled;\n    ie(t2.buffer, n3, r3.buffer, r3.byteOffset, o3), r3.byteLength === o3 ? u2.shift() : (r3.byteOffset += o3, r3.byteLength -= o3), e2._queueTotalSize -= o3, Se(e2, o3, t2), l2 -= o3;\n  }\n  return s2;\n}\n__name(we, "we");\nfunction Se(e2, t2, r2) {\n  r2.bytesFilled += t2;\n}\n__name(Se, "Se");\nfunction ve(e2) {\n  0 === e2._queueTotalSize && e2._closeRequested ? (Ee(e2), Xt(e2._controlledReadableByteStream)) : be(e2);\n}\n__name(ve, "ve");\nfunction Re(e2) {\n  null !== e2._byobRequest && (e2._byobRequest._associatedReadableByteStreamController = void 0, e2._byobRequest._view = null, e2._byobRequest = null);\n}\n__name(Re, "Re");\nfunction Te(e2) {\n  for (; e2._pendingPullIntos.length > 0; ) {\n    if (0 === e2._queueTotalSize)\n      return;\n    const t2 = e2._pendingPullIntos.peek();\n    we(e2, t2) && (Ce(e2), _e(e2._controlledReadableByteStream, t2));\n  }\n}\n__name(Te, "Te");\nfunction qe(e2, t2) {\n  const r2 = e2._pendingPullIntos.peek();\n  Re(e2);\n  "closed" === e2._controlledReadableByteStream._state ? function(e3, t3) {\n    "none" === t3.readerType && Ce(e3);\n    const r3 = e3._controlledReadableByteStream;\n    if (Le(r3))\n      for (; ze(r3) > 0; )\n        _e(r3, Ce(e3));\n  }(e2, r2) : function(e3, t3, r3) {\n    if (Se(0, t3, r3), "none" === r3.readerType)\n      return ge(e3, r3), void Te(e3);\n    if (r3.bytesFilled < r3.elementSize)\n      return;\n    Ce(e3);\n    const o2 = r3.bytesFilled % r3.elementSize;\n    if (o2 > 0) {\n      const t4 = r3.byteOffset + r3.bytesFilled;\n      ye(e3, r3.buffer, t4 - o2, o2);\n    }\n    r3.bytesFilled -= o2, _e(e3._controlledReadableByteStream, r3), Te(e3);\n  }(e2, t2, r2), be(e2);\n}\n__name(qe, "qe");\nfunction Ce(e2) {\n  return e2._pendingPullIntos.shift();\n}\n__name(Ce, "Ce");\nfunction Ee(e2) {\n  e2._pullAlgorithm = void 0, e2._cancelAlgorithm = void 0;\n}\n__name(Ee, "Ee");\nfunction Pe(e2, t2) {\n  const r2 = e2._controlledReadableByteStream;\n  "readable" === r2._state && (he(e2), ce(e2), Ee(e2), Jt(r2, t2));\n}\n__name(Pe, "Pe");\nfunction We(e2, t2) {\n  const r2 = e2._queue.shift();\n  e2._queueTotalSize -= r2.byteLength, ve(e2);\n  const o2 = new Uint8Array(r2.buffer, r2.byteOffset, r2.byteLength);\n  t2._chunkSteps(o2);\n}\n__name(We, "We");\nfunction ke(e2) {\n  const t2 = e2._controlledReadableByteStream._state;\n  return "errored" === t2 ? null : "closed" === t2 ? 0 : e2._strategyHWM - e2._queueTotalSize;\n}\n__name(ke, "ke");\nfunction Oe(e2, t2, r2) {\n  const o2 = Object.create(ReadableByteStreamController.prototype);\n  let n2, a2, i2;\n  n2 = void 0 !== t2.start ? () => t2.start(o2) : () => {\n  }, a2 = void 0 !== t2.pull ? () => t2.pull(o2) : () => c(void 0), i2 = void 0 !== t2.cancel ? (e3) => t2.cancel(e3) : () => c(void 0);\n  const l2 = t2.autoAllocateChunkSize;\n  if (0 === l2)\n    throw new TypeError("autoAllocateChunkSize must be greater than 0");\n  !function(e3, t3, r3, o3, n3, a3, i3) {\n    t3._controlledReadableByteStream = e3, t3._pullAgain = false, t3._pulling = false, t3._byobRequest = null, t3._queue = t3._queueTotalSize = void 0, ce(t3), t3._closeRequested = false, t3._started = false, t3._strategyHWM = a3, t3._pullAlgorithm = o3, t3._cancelAlgorithm = n3, t3._autoAllocateChunkSize = i3, t3._pendingPullIntos = new S(), e3._readableStreamController = t3, b(c(r3()), () => (t3._started = true, be(t3), null), (e4) => (Pe(t3, e4), null));\n  }(e2, o2, n2, a2, i2, r2, l2);\n}\n__name(Oe, "Oe");\nfunction Be(e2) {\n  return new TypeError(`ReadableStreamBYOBRequest.prototype.${e2} can only be used on a ReadableStreamBYOBRequest`);\n}\n__name(Be, "Be");\nfunction Ae(e2) {\n  return new TypeError(`ReadableByteStreamController.prototype.${e2} can only be used on a ReadableByteStreamController`);\n}\n__name(Ae, "Ae");\nfunction je(e2, t2) {\n  e2._reader._readIntoRequests.push(t2);\n}\n__name(je, "je");\nfunction ze(e2) {\n  return e2._reader._readIntoRequests.length;\n}\n__name(ze, "ze");\nfunction Le(e2) {\n  const t2 = e2._reader;\n  return void 0 !== t2 && !!Fe(t2);\n}\n__name(Le, "Le");\nObject.defineProperties(ReadableByteStreamController.prototype, { close: { enumerable: true }, enqueue: { enumerable: true }, error: { enumerable: true }, byobRequest: { enumerable: true }, desiredSize: { enumerable: true } }), n(ReadableByteStreamController.prototype.close, "close"), n(ReadableByteStreamController.prototype.enqueue, "enqueue"), n(ReadableByteStreamController.prototype.error, "error"), "symbol" == typeof e.toStringTag && Object.defineProperty(ReadableByteStreamController.prototype, e.toStringTag, { value: "ReadableByteStreamController", configurable: true });\nvar ReadableStreamBYOBReader = class {\n  constructor(e2) {\n    if ($(e2, 1, "ReadableStreamBYOBReader"), V(e2, "First parameter"), Ut(e2))\n      throw new TypeError("This stream has already been locked for exclusive reading by another reader");\n    if (!de(e2._readableStreamController))\n      throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");\n    E(this, e2), this._readIntoRequests = new S();\n  }\n  get closed() {\n    return Fe(this) ? this._closedPromise : d(De("closed"));\n  }\n  cancel(e2) {\n    return Fe(this) ? void 0 === this._ownerReadableStream ? d(k("cancel")) : P(this, e2) : d(De("cancel"));\n  }\n  read(e2) {\n    if (!Fe(this))\n      return d(De("read"));\n    if (!ArrayBuffer.isView(e2))\n      return d(new TypeError("view must be an array buffer view"));\n    if (0 === e2.byteLength)\n      return d(new TypeError("view must have non-zero byteLength"));\n    if (0 === e2.buffer.byteLength)\n      return d(new TypeError("view\'s buffer must have non-zero byteLength"));\n    if (e2.buffer, void 0 === this._ownerReadableStream)\n      return d(k("read from"));\n    let t2, r2;\n    const o2 = u((e3, o3) => {\n      t2 = e3, r2 = o3;\n    });\n    return function(e3, t3, r3) {\n      const o3 = e3._ownerReadableStream;\n      o3._disturbed = true, "errored" === o3._state ? r3._errorSteps(o3._storedError) : function(e4, t4, r4) {\n        const o4 = e4._controlledReadableByteStream;\n        let n2 = 1;\n        t4.constructor !== DataView && (n2 = t4.constructor.BYTES_PER_ELEMENT);\n        const a2 = t4.constructor, i2 = t4.buffer, l2 = { buffer: i2, bufferByteLength: i2.byteLength, byteOffset: t4.byteOffset, byteLength: t4.byteLength, bytesFilled: 0, elementSize: n2, viewConstructor: a2, readerType: "byob" };\n        if (e4._pendingPullIntos.length > 0)\n          return e4._pendingPullIntos.push(l2), void je(o4, r4);\n        if ("closed" !== o4._state) {\n          if (e4._queueTotalSize > 0) {\n            if (we(e4, l2)) {\n              const t5 = pe(l2);\n              return ve(e4), void r4._chunkSteps(t5);\n            }\n            if (e4._closeRequested) {\n              const t5 = new TypeError("Insufficient bytes to fill elements in the given buffer");\n              return Pe(e4, t5), void r4._errorSteps(t5);\n            }\n          }\n          e4._pendingPullIntos.push(l2), je(o4, r4), be(e4);\n        } else {\n          const e5 = new a2(l2.buffer, l2.byteOffset, 0);\n          r4._closeSteps(e5);\n        }\n      }(o3._readableStreamController, t3, r3);\n    }(this, e2, { _chunkSteps: (e3) => t2({ value: e3, done: false }), _closeSteps: (e3) => t2({ value: e3, done: true }), _errorSteps: (e3) => r2(e3) }), o2;\n  }\n  releaseLock() {\n    if (!Fe(this))\n      throw De("releaseLock");\n    void 0 !== this._ownerReadableStream && function(e2) {\n      W(e2);\n      const t2 = new TypeError("Reader was released");\n      Ie(e2, t2);\n    }(this);\n  }\n};\n__name(ReadableStreamBYOBReader, "ReadableStreamBYOBReader");\nfunction Fe(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_readIntoRequests") && e2 instanceof ReadableStreamBYOBReader);\n}\n__name(Fe, "Fe");\nfunction Ie(e2, t2) {\n  const r2 = e2._readIntoRequests;\n  e2._readIntoRequests = new S(), r2.forEach((e3) => {\n    e3._errorSteps(t2);\n  });\n}\n__name(Ie, "Ie");\nfunction De(e2) {\n  return new TypeError(`ReadableStreamBYOBReader.prototype.${e2} can only be used on a ReadableStreamBYOBReader`);\n}\n__name(De, "De");\nfunction $e(e2, t2) {\n  const { highWaterMark: r2 } = e2;\n  if (void 0 === r2)\n    return t2;\n  if (ae(r2) || r2 < 0)\n    throw new RangeError("Invalid highWaterMark");\n  return r2;\n}\n__name($e, "$e");\nfunction Me(e2) {\n  const { size: t2 } = e2;\n  return t2 || (() => 1);\n}\n__name(Me, "Me");\nfunction Ye(e2, t2) {\n  F(e2, t2);\n  const r2 = null == e2 ? void 0 : e2.highWaterMark, o2 = null == e2 ? void 0 : e2.size;\n  return { highWaterMark: void 0 === r2 ? void 0 : Y(r2), size: void 0 === o2 ? void 0 : Qe(o2, `${t2} has member \'size\' that`) };\n}\n__name(Ye, "Ye");\nfunction Qe(e2, t2) {\n  return I(e2, t2), (t3) => Y(e2(t3));\n}\n__name(Qe, "Qe");\nfunction Ne(e2, t2, r2) {\n  return I(e2, r2), (r3) => w(e2, t2, [r3]);\n}\n__name(Ne, "Ne");\nfunction He(e2, t2, r2) {\n  return I(e2, r2), () => w(e2, t2, []);\n}\n__name(He, "He");\nfunction xe(e2, t2, r2) {\n  return I(e2, r2), (r3) => g(e2, t2, [r3]);\n}\n__name(xe, "xe");\nfunction Ve(e2, t2, r2) {\n  return I(e2, r2), (r3, o2) => w(e2, t2, [r3, o2]);\n}\n__name(Ve, "Ve");\nObject.defineProperties(ReadableStreamBYOBReader.prototype, { cancel: { enumerable: true }, read: { enumerable: true }, releaseLock: { enumerable: true }, closed: { enumerable: true } }), n(ReadableStreamBYOBReader.prototype.cancel, "cancel"), n(ReadableStreamBYOBReader.prototype.read, "read"), n(ReadableStreamBYOBReader.prototype.releaseLock, "releaseLock"), "symbol" == typeof e.toStringTag && Object.defineProperty(ReadableStreamBYOBReader.prototype, e.toStringTag, { value: "ReadableStreamBYOBReader", configurable: true });\nvar Ue = "function" == typeof AbortController;\nvar WritableStream = class {\n  constructor(e2 = {}, t2 = {}) {\n    void 0 === e2 ? e2 = null : D(e2, "First parameter");\n    const r2 = Ye(t2, "Second parameter"), o2 = function(e3, t3) {\n      F(e3, t3);\n      const r3 = null == e3 ? void 0 : e3.abort, o3 = null == e3 ? void 0 : e3.close, n3 = null == e3 ? void 0 : e3.start, a3 = null == e3 ? void 0 : e3.type, i2 = null == e3 ? void 0 : e3.write;\n      return { abort: void 0 === r3 ? void 0 : Ne(r3, e3, `${t3} has member \'abort\' that`), close: void 0 === o3 ? void 0 : He(o3, e3, `${t3} has member \'close\' that`), start: void 0 === n3 ? void 0 : xe(n3, e3, `${t3} has member \'start\' that`), write: void 0 === i2 ? void 0 : Ve(i2, e3, `${t3} has member \'write\' that`), type: a3 };\n    }(e2, "First parameter");\n    var n2;\n    (n2 = this)._state = "writable", n2._storedError = void 0, n2._writer = void 0, n2._writableStreamController = void 0, n2._writeRequests = new S(), n2._inFlightWriteRequest = void 0, n2._closeRequest = void 0, n2._inFlightCloseRequest = void 0, n2._pendingAbortRequest = void 0, n2._backpressure = false;\n    if (void 0 !== o2.type)\n      throw new RangeError("Invalid type is specified");\n    const a2 = Me(r2);\n    !function(e3, t3, r3, o3) {\n      const n3 = Object.create(WritableStreamDefaultController.prototype);\n      let a3, i2, l2, s2;\n      a3 = void 0 !== t3.start ? () => t3.start(n3) : () => {\n      };\n      i2 = void 0 !== t3.write ? (e4) => t3.write(e4, n3) : () => c(void 0);\n      l2 = void 0 !== t3.close ? () => t3.close() : () => c(void 0);\n      s2 = void 0 !== t3.abort ? (e4) => t3.abort(e4) : () => c(void 0);\n      !function(e4, t4, r4, o4, n4, a4, i3, l3) {\n        t4._controlledWritableStream = e4, e4._writableStreamController = t4, t4._queue = void 0, t4._queueTotalSize = void 0, ce(t4), t4._abortReason = void 0, t4._abortController = function() {\n          if (Ue)\n            return new AbortController();\n        }(), t4._started = false, t4._strategySizeAlgorithm = l3, t4._strategyHWM = i3, t4._writeAlgorithm = o4, t4._closeAlgorithm = n4, t4._abortAlgorithm = a4;\n        const s3 = bt(t4);\n        nt(e4, s3);\n        const u2 = r4();\n        b(c(u2), () => (t4._started = true, dt(t4), null), (r5) => (t4._started = true, Ze(e4, r5), null));\n      }(e3, n3, a3, i2, l2, s2, r3, o3);\n    }(this, o2, $e(r2, 1), a2);\n  }\n  get locked() {\n    if (!Ge(this))\n      throw _t("locked");\n    return Xe(this);\n  }\n  abort(e2) {\n    return Ge(this) ? Xe(this) ? d(new TypeError("Cannot abort a stream that already has a writer")) : Je(this, e2) : d(_t("abort"));\n  }\n  close() {\n    return Ge(this) ? Xe(this) ? d(new TypeError("Cannot close a stream that already has a writer")) : rt(this) ? d(new TypeError("Cannot close an already-closing stream")) : Ke(this) : d(_t("close"));\n  }\n  getWriter() {\n    if (!Ge(this))\n      throw _t("getWriter");\n    return new WritableStreamDefaultWriter(this);\n  }\n};\n__name(WritableStream, "WritableStream");\nfunction Ge(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_writableStreamController") && e2 instanceof WritableStream);\n}\n__name(Ge, "Ge");\nfunction Xe(e2) {\n  return void 0 !== e2._writer;\n}\n__name(Xe, "Xe");\nfunction Je(e2, t2) {\n  var r2;\n  if ("closed" === e2._state || "errored" === e2._state)\n    return c(void 0);\n  e2._writableStreamController._abortReason = t2, null === (r2 = e2._writableStreamController._abortController) || void 0 === r2 || r2.abort(t2);\n  const o2 = e2._state;\n  if ("closed" === o2 || "errored" === o2)\n    return c(void 0);\n  if (void 0 !== e2._pendingAbortRequest)\n    return e2._pendingAbortRequest._promise;\n  let n2 = false;\n  "erroring" === o2 && (n2 = true, t2 = void 0);\n  const a2 = u((r3, o3) => {\n    e2._pendingAbortRequest = { _promise: void 0, _resolve: r3, _reject: o3, _reason: t2, _wasAlreadyErroring: n2 };\n  });\n  return e2._pendingAbortRequest._promise = a2, n2 || et(e2, t2), a2;\n}\n__name(Je, "Je");\nfunction Ke(e2) {\n  const t2 = e2._state;\n  if ("closed" === t2 || "errored" === t2)\n    return d(new TypeError(`The stream (in ${t2} state) is not in the writable state and cannot be closed`));\n  const r2 = u((t3, r3) => {\n    const o3 = { _resolve: t3, _reject: r3 };\n    e2._closeRequest = o3;\n  }), o2 = e2._writer;\n  var n2;\n  return void 0 !== o2 && e2._backpressure && "writable" === t2 && Et(o2), ue(n2 = e2._writableStreamController, lt, 0), dt(n2), r2;\n}\n__name(Ke, "Ke");\nfunction Ze(e2, t2) {\n  "writable" !== e2._state ? tt(e2) : et(e2, t2);\n}\n__name(Ze, "Ze");\nfunction et(e2, t2) {\n  const r2 = e2._writableStreamController;\n  e2._state = "erroring", e2._storedError = t2;\n  const o2 = e2._writer;\n  void 0 !== o2 && it(o2, t2), !function(e3) {\n    if (void 0 === e3._inFlightWriteRequest && void 0 === e3._inFlightCloseRequest)\n      return false;\n    return true;\n  }(e2) && r2._started && tt(e2);\n}\n__name(et, "et");\nfunction tt(e2) {\n  e2._state = "errored", e2._writableStreamController[R]();\n  const t2 = e2._storedError;\n  if (e2._writeRequests.forEach((e3) => {\n    e3._reject(t2);\n  }), e2._writeRequests = new S(), void 0 === e2._pendingAbortRequest)\n    return void ot(e2);\n  const r2 = e2._pendingAbortRequest;\n  if (e2._pendingAbortRequest = void 0, r2._wasAlreadyErroring)\n    return r2._reject(t2), void ot(e2);\n  b(e2._writableStreamController[v](r2._reason), () => (r2._resolve(), ot(e2), null), (t3) => (r2._reject(t3), ot(e2), null));\n}\n__name(tt, "tt");\nfunction rt(e2) {\n  return void 0 !== e2._closeRequest || void 0 !== e2._inFlightCloseRequest;\n}\n__name(rt, "rt");\nfunction ot(e2) {\n  void 0 !== e2._closeRequest && (e2._closeRequest._reject(e2._storedError), e2._closeRequest = void 0);\n  const t2 = e2._writer;\n  void 0 !== t2 && St(t2, e2._storedError);\n}\n__name(ot, "ot");\nfunction nt(e2, t2) {\n  const r2 = e2._writer;\n  void 0 !== r2 && t2 !== e2._backpressure && (t2 ? function(e3) {\n    Rt(e3);\n  }(r2) : Et(r2)), e2._backpressure = t2;\n}\n__name(nt, "nt");\nObject.defineProperties(WritableStream.prototype, { abort: { enumerable: true }, close: { enumerable: true }, getWriter: { enumerable: true }, locked: { enumerable: true } }), n(WritableStream.prototype.abort, "abort"), n(WritableStream.prototype.close, "close"), n(WritableStream.prototype.getWriter, "getWriter"), "symbol" == typeof e.toStringTag && Object.defineProperty(WritableStream.prototype, e.toStringTag, { value: "WritableStream", configurable: true });\nvar WritableStreamDefaultWriter = class {\n  constructor(e2) {\n    if ($(e2, 1, "WritableStreamDefaultWriter"), function(e3, t3) {\n      if (!Ge(e3))\n        throw new TypeError(`${t3} is not a WritableStream.`);\n    }(e2, "First parameter"), Xe(e2))\n      throw new TypeError("This stream has already been locked for exclusive writing by another writer");\n    this._ownerWritableStream = e2, e2._writer = this;\n    const t2 = e2._state;\n    if ("writable" === t2)\n      !rt(e2) && e2._backpressure ? Rt(this) : qt(this), gt(this);\n    else if ("erroring" === t2)\n      Tt(this, e2._storedError), gt(this);\n    else if ("closed" === t2)\n      qt(this), gt(r2 = this), vt(r2);\n    else {\n      const t3 = e2._storedError;\n      Tt(this, t3), wt(this, t3);\n    }\n    var r2;\n  }\n  get closed() {\n    return at(this) ? this._closedPromise : d(mt("closed"));\n  }\n  get desiredSize() {\n    if (!at(this))\n      throw mt("desiredSize");\n    if (void 0 === this._ownerWritableStream)\n      throw yt("desiredSize");\n    return function(e2) {\n      const t2 = e2._ownerWritableStream, r2 = t2._state;\n      if ("errored" === r2 || "erroring" === r2)\n        return null;\n      if ("closed" === r2)\n        return 0;\n      return ct(t2._writableStreamController);\n    }(this);\n  }\n  get ready() {\n    return at(this) ? this._readyPromise : d(mt("ready"));\n  }\n  abort(e2) {\n    return at(this) ? void 0 === this._ownerWritableStream ? d(yt("abort")) : function(e3, t2) {\n      return Je(e3._ownerWritableStream, t2);\n    }(this, e2) : d(mt("abort"));\n  }\n  close() {\n    if (!at(this))\n      return d(mt("close"));\n    const e2 = this._ownerWritableStream;\n    return void 0 === e2 ? d(yt("close")) : rt(e2) ? d(new TypeError("Cannot close an already-closing stream")) : Ke(this._ownerWritableStream);\n  }\n  releaseLock() {\n    if (!at(this))\n      throw mt("releaseLock");\n    void 0 !== this._ownerWritableStream && function(e2) {\n      const t2 = e2._ownerWritableStream, r2 = new TypeError("Writer was released and can no longer be used to monitor the stream\'s closedness");\n      it(e2, r2), function(e3, t3) {\n        "pending" === e3._closedPromiseState ? St(e3, t3) : function(e4, t4) {\n          wt(e4, t4);\n        }(e3, t3);\n      }(e2, r2), t2._writer = void 0, e2._ownerWritableStream = void 0;\n    }(this);\n  }\n  write(e2) {\n    return at(this) ? void 0 === this._ownerWritableStream ? d(yt("write to")) : function(e3, t2) {\n      const r2 = e3._ownerWritableStream, o2 = r2._writableStreamController, n2 = function(e4, t3) {\n        try {\n          return e4._strategySizeAlgorithm(t3);\n        } catch (t4) {\n          return ft(e4, t4), 1;\n        }\n      }(o2, t2);\n      if (r2 !== e3._ownerWritableStream)\n        return d(yt("write to"));\n      const a2 = r2._state;\n      if ("errored" === a2)\n        return d(r2._storedError);\n      if (rt(r2) || "closed" === a2)\n        return d(new TypeError("The stream is closing or closed and cannot be written to"));\n      if ("erroring" === a2)\n        return d(r2._storedError);\n      const i2 = function(e4) {\n        return u((t3, r3) => {\n          const o3 = { _resolve: t3, _reject: r3 };\n          e4._writeRequests.push(o3);\n        });\n      }(r2);\n      return function(e4, t3, r3) {\n        try {\n          ue(e4, t3, r3);\n        } catch (t4) {\n          return void ft(e4, t4);\n        }\n        const o3 = e4._controlledWritableStream;\n        if (!rt(o3) && "writable" === o3._state) {\n          nt(o3, bt(e4));\n        }\n        dt(e4);\n      }(o2, t2, n2), i2;\n    }(this, e2) : d(mt("write"));\n  }\n};\n__name(WritableStreamDefaultWriter, "WritableStreamDefaultWriter");\nfunction at(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_ownerWritableStream") && e2 instanceof WritableStreamDefaultWriter);\n}\n__name(at, "at");\nfunction it(e2, t2) {\n  "pending" === e2._readyPromiseState ? Ct(e2, t2) : function(e3, t3) {\n    Tt(e3, t3);\n  }(e2, t2);\n}\n__name(it, "it");\nObject.defineProperties(WritableStreamDefaultWriter.prototype, { abort: { enumerable: true }, close: { enumerable: true }, releaseLock: { enumerable: true }, write: { enumerable: true }, closed: { enumerable: true }, desiredSize: { enumerable: true }, ready: { enumerable: true } }), n(WritableStreamDefaultWriter.prototype.abort, "abort"), n(WritableStreamDefaultWriter.prototype.close, "close"), n(WritableStreamDefaultWriter.prototype.releaseLock, "releaseLock"), n(WritableStreamDefaultWriter.prototype.write, "write"), "symbol" == typeof e.toStringTag && Object.defineProperty(WritableStreamDefaultWriter.prototype, e.toStringTag, { value: "WritableStreamDefaultWriter", configurable: true });\nvar lt = {};\nvar WritableStreamDefaultController = class {\n  constructor() {\n    throw new TypeError("Illegal constructor");\n  }\n  get abortReason() {\n    if (!st(this))\n      throw pt("abortReason");\n    return this._abortReason;\n  }\n  get signal() {\n    if (!st(this))\n      throw pt("signal");\n    if (void 0 === this._abortController)\n      throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");\n    return this._abortController.signal;\n  }\n  error(e2) {\n    if (!st(this))\n      throw pt("error");\n    "writable" === this._controlledWritableStream._state && ht(this, e2);\n  }\n  [v](e2) {\n    const t2 = this._abortAlgorithm(e2);\n    return ut(this), t2;\n  }\n  [R]() {\n    ce(this);\n  }\n};\n__name(WritableStreamDefaultController, "WritableStreamDefaultController");\nfunction st(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_controlledWritableStream") && e2 instanceof WritableStreamDefaultController);\n}\n__name(st, "st");\nfunction ut(e2) {\n  e2._writeAlgorithm = void 0, e2._closeAlgorithm = void 0, e2._abortAlgorithm = void 0, e2._strategySizeAlgorithm = void 0;\n}\n__name(ut, "ut");\nfunction ct(e2) {\n  return e2._strategyHWM - e2._queueTotalSize;\n}\n__name(ct, "ct");\nfunction dt(e2) {\n  const t2 = e2._controlledWritableStream;\n  if (!e2._started)\n    return;\n  if (void 0 !== t2._inFlightWriteRequest)\n    return;\n  if ("erroring" === t2._state)\n    return void tt(t2);\n  if (0 === e2._queue.length)\n    return;\n  const r2 = e2._queue.peek().value;\n  r2 === lt ? function(e3) {\n    const t3 = e3._controlledWritableStream;\n    (function(e4) {\n      e4._inFlightCloseRequest = e4._closeRequest, e4._closeRequest = void 0;\n    })(t3), se(e3);\n    const r3 = e3._closeAlgorithm();\n    ut(e3), b(r3, () => (function(e4) {\n      e4._inFlightCloseRequest._resolve(void 0), e4._inFlightCloseRequest = void 0, "erroring" === e4._state && (e4._storedError = void 0, void 0 !== e4._pendingAbortRequest && (e4._pendingAbortRequest._resolve(), e4._pendingAbortRequest = void 0)), e4._state = "closed";\n      const t4 = e4._writer;\n      void 0 !== t4 && vt(t4);\n    }(t3), null), (e4) => (function(e5, t4) {\n      e5._inFlightCloseRequest._reject(t4), e5._inFlightCloseRequest = void 0, void 0 !== e5._pendingAbortRequest && (e5._pendingAbortRequest._reject(t4), e5._pendingAbortRequest = void 0), Ze(e5, t4);\n    }(t3, e4), null));\n  }(e2) : function(e3, t3) {\n    const r3 = e3._controlledWritableStream;\n    !function(e4) {\n      e4._inFlightWriteRequest = e4._writeRequests.shift();\n    }(r3);\n    b(e3._writeAlgorithm(t3), () => {\n      !function(e4) {\n        e4._inFlightWriteRequest._resolve(void 0), e4._inFlightWriteRequest = void 0;\n      }(r3);\n      const t4 = r3._state;\n      if (se(e3), !rt(r3) && "writable" === t4) {\n        const t5 = bt(e3);\n        nt(r3, t5);\n      }\n      return dt(e3), null;\n    }, (t4) => ("writable" === r3._state && ut(e3), function(e4, t5) {\n      e4._inFlightWriteRequest._reject(t5), e4._inFlightWriteRequest = void 0, Ze(e4, t5);\n    }(r3, t4), null));\n  }(e2, r2);\n}\n__name(dt, "dt");\nfunction ft(e2, t2) {\n  "writable" === e2._controlledWritableStream._state && ht(e2, t2);\n}\n__name(ft, "ft");\nfunction bt(e2) {\n  return ct(e2) <= 0;\n}\n__name(bt, "bt");\nfunction ht(e2, t2) {\n  const r2 = e2._controlledWritableStream;\n  ut(e2), et(r2, t2);\n}\n__name(ht, "ht");\nfunction _t(e2) {\n  return new TypeError(`WritableStream.prototype.${e2} can only be used on a WritableStream`);\n}\n__name(_t, "_t");\nfunction pt(e2) {\n  return new TypeError(`WritableStreamDefaultController.prototype.${e2} can only be used on a WritableStreamDefaultController`);\n}\n__name(pt, "pt");\nfunction mt(e2) {\n  return new TypeError(`WritableStreamDefaultWriter.prototype.${e2} can only be used on a WritableStreamDefaultWriter`);\n}\n__name(mt, "mt");\nfunction yt(e2) {\n  return new TypeError("Cannot " + e2 + " a stream using a released writer");\n}\n__name(yt, "yt");\nfunction gt(e2) {\n  e2._closedPromise = u((t2, r2) => {\n    e2._closedPromise_resolve = t2, e2._closedPromise_reject = r2, e2._closedPromiseState = "pending";\n  });\n}\n__name(gt, "gt");\nfunction wt(e2, t2) {\n  gt(e2), St(e2, t2);\n}\n__name(wt, "wt");\nfunction St(e2, t2) {\n  void 0 !== e2._closedPromise_reject && (m(e2._closedPromise), e2._closedPromise_reject(t2), e2._closedPromise_resolve = void 0, e2._closedPromise_reject = void 0, e2._closedPromiseState = "rejected");\n}\n__name(St, "St");\nfunction vt(e2) {\n  void 0 !== e2._closedPromise_resolve && (e2._closedPromise_resolve(void 0), e2._closedPromise_resolve = void 0, e2._closedPromise_reject = void 0, e2._closedPromiseState = "resolved");\n}\n__name(vt, "vt");\nfunction Rt(e2) {\n  e2._readyPromise = u((t2, r2) => {\n    e2._readyPromise_resolve = t2, e2._readyPromise_reject = r2;\n  }), e2._readyPromiseState = "pending";\n}\n__name(Rt, "Rt");\nfunction Tt(e2, t2) {\n  Rt(e2), Ct(e2, t2);\n}\n__name(Tt, "Tt");\nfunction qt(e2) {\n  Rt(e2), Et(e2);\n}\n__name(qt, "qt");\nfunction Ct(e2, t2) {\n  void 0 !== e2._readyPromise_reject && (m(e2._readyPromise), e2._readyPromise_reject(t2), e2._readyPromise_resolve = void 0, e2._readyPromise_reject = void 0, e2._readyPromiseState = "rejected");\n}\n__name(Ct, "Ct");\nfunction Et(e2) {\n  void 0 !== e2._readyPromise_resolve && (e2._readyPromise_resolve(void 0), e2._readyPromise_resolve = void 0, e2._readyPromise_reject = void 0, e2._readyPromiseState = "fulfilled");\n}\n__name(Et, "Et");\nObject.defineProperties(WritableStreamDefaultController.prototype, { abortReason: { enumerable: true }, signal: { enumerable: true }, error: { enumerable: true } }), "symbol" == typeof e.toStringTag && Object.defineProperty(WritableStreamDefaultController.prototype, e.toStringTag, { value: "WritableStreamDefaultController", configurable: true });\nvar Pt = "undefined" != typeof DOMException ? DOMException : void 0;\nvar Wt = function(e2) {\n  if ("function" != typeof e2 && "object" != typeof e2)\n    return false;\n  try {\n    return new e2(), true;\n  } catch (e3) {\n    return false;\n  }\n}(Pt) ? Pt : function() {\n  const e2 = /* @__PURE__ */ __name(function(e3, t2) {\n    this.message = e3 || "", this.name = t2 || "Error", Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);\n  }, "e");\n  return e2.prototype = Object.create(Error.prototype), Object.defineProperty(e2.prototype, "constructor", { value: e2, writable: true, configurable: true }), e2;\n}();\nfunction kt(e2, t2, r2, o2, n2, a2) {\n  const i2 = e2.getReader(), l2 = t2.getWriter();\n  Vt(e2) && (e2._disturbed = true);\n  let s2, _2, g2, w2 = false, S2 = false, v2 = "readable", R2 = "writable", T2 = false, q2 = false;\n  const C2 = u((e3) => {\n    g2 = e3;\n  });\n  let E2 = Promise.resolve(void 0);\n  return u((P2, W2) => {\n    let k2;\n    function O2() {\n      if (w2)\n        return;\n      const e3 = u((e4, t3) => {\n        !(/* @__PURE__ */ __name(function r3(o3) {\n          o3 ? e4() : f(function() {\n            if (w2)\n              return c(true);\n            return f(l2.ready, () => f(i2.read(), (e5) => !!e5.done || (E2 = l2.write(e5.value), m(E2), false)));\n          }(), r3, t3);\n        }, "r"))(false);\n      });\n      m(e3);\n    }\n    __name(O2, "O");\n    function B2() {\n      return v2 = "closed", r2 ? L2() : z2(() => (Ge(t2) && (T2 = rt(t2), R2 = t2._state), T2 || "closed" === R2 ? c(void 0) : "erroring" === R2 || "errored" === R2 ? d(_2) : (T2 = true, l2.close())), false, void 0), null;\n    }\n    __name(B2, "B");\n    function A2(e3) {\n      return w2 || (v2 = "errored", s2 = e3, o2 ? L2(true, e3) : z2(() => l2.abort(e3), true, e3)), null;\n    }\n    __name(A2, "A");\n    function j2(e3) {\n      return S2 || (R2 = "errored", _2 = e3, n2 ? L2(true, e3) : z2(() => i2.cancel(e3), true, e3)), null;\n    }\n    __name(j2, "j");\n    if (void 0 !== a2 && (k2 = /* @__PURE__ */ __name(() => {\n      const e3 = void 0 !== a2.reason ? a2.reason : new Wt("Aborted", "AbortError"), t3 = [];\n      o2 || t3.push(() => "writable" === R2 ? l2.abort(e3) : c(void 0)), n2 || t3.push(() => "readable" === v2 ? i2.cancel(e3) : c(void 0)), z2(() => Promise.all(t3.map((e4) => e4())), true, e3);\n    }, "k"), a2.aborted ? k2() : a2.addEventListener("abort", k2)), Vt(e2) && (v2 = e2._state, s2 = e2._storedError), Ge(t2) && (R2 = t2._state, _2 = t2._storedError, T2 = rt(t2)), Vt(e2) && Ge(t2) && (q2 = true, g2()), "errored" === v2)\n      A2(s2);\n    else if ("erroring" === R2 || "errored" === R2)\n      j2(_2);\n    else if ("closed" === v2)\n      B2();\n    else if (T2 || "closed" === R2) {\n      const e3 = new TypeError("the destination writable stream closed before all data could be piped to it");\n      n2 ? L2(true, e3) : z2(() => i2.cancel(e3), true, e3);\n    }\n    function z2(e3, t3, r3) {\n      function o3() {\n        return "writable" !== R2 || T2 ? n3() : h(function() {\n          let e4;\n          return c((/* @__PURE__ */ __name(function t4() {\n            if (e4 !== E2)\n              return e4 = E2, p(E2, t4, t4);\n          }, "t"))());\n        }(), n3), null;\n      }\n      __name(o3, "o");\n      function n3() {\n        return e3 ? b(e3(), () => F2(t3, r3), (e4) => F2(true, e4)) : F2(t3, r3), null;\n      }\n      __name(n3, "n");\n      w2 || (w2 = true, q2 ? o3() : h(C2, o3));\n    }\n    __name(z2, "z");\n    function L2(e3, t3) {\n      z2(void 0, e3, t3);\n    }\n    __name(L2, "L");\n    function F2(e3, t3) {\n      return S2 = true, l2.releaseLock(), i2.releaseLock(), void 0 !== a2 && a2.removeEventListener("abort", k2), e3 ? W2(t3) : P2(void 0), null;\n    }\n    __name(F2, "F");\n    w2 || (b(i2.closed, B2, A2), b(l2.closed, function() {\n      return S2 || (R2 = "closed"), null;\n    }, j2)), q2 ? O2() : y(() => {\n      q2 = true, g2(), O2();\n    });\n  });\n}\n__name(kt, "kt");\nfunction Ot(e2, t2) {\n  return function(e3) {\n    try {\n      return e3.getReader({ mode: "byob" }).releaseLock(), true;\n    } catch (e4) {\n      return false;\n    }\n  }(e2) ? function(e3) {\n    let t3, r2, o2, n2, a2, i2 = e3.getReader(), l2 = false, s2 = false, d2 = false, f2 = false, h2 = false, p2 = false;\n    const m2 = u((e4) => {\n      a2 = e4;\n    });\n    function y2(e4) {\n      _(e4.closed, (t4) => (e4 !== i2 || (o2.error(t4), n2.error(t4), h2 && p2 || a2(void 0)), null));\n    }\n    __name(y2, "y");\n    function g2() {\n      l2 && (i2.releaseLock(), i2 = e3.getReader(), y2(i2), l2 = false), b(i2.read(), (e4) => {\n        var t4, r3;\n        if (d2 = false, f2 = false, e4.done)\n          return h2 || o2.close(), p2 || n2.close(), null === (t4 = o2.byobRequest) || void 0 === t4 || t4.respond(0), null === (r3 = n2.byobRequest) || void 0 === r3 || r3.respond(0), h2 && p2 || a2(void 0), null;\n        const l3 = e4.value, u2 = l3;\n        let c2 = l3;\n        if (!h2 && !p2)\n          try {\n            c2 = le(l3);\n          } catch (e5) {\n            return o2.error(e5), n2.error(e5), a2(i2.cancel(e5)), null;\n          }\n        return h2 || o2.enqueue(u2), p2 || n2.enqueue(c2), s2 = false, d2 ? S2() : f2 && v2(), null;\n      }, () => (s2 = false, null));\n    }\n    __name(g2, "g");\n    function w2(t4, r3) {\n      l2 || (i2.releaseLock(), i2 = e3.getReader({ mode: "byob" }), y2(i2), l2 = true);\n      const u2 = r3 ? n2 : o2, c2 = r3 ? o2 : n2;\n      b(i2.read(t4), (e4) => {\n        var t5;\n        d2 = false, f2 = false;\n        const o3 = r3 ? p2 : h2, n3 = r3 ? h2 : p2;\n        if (e4.done) {\n          o3 || u2.close(), n3 || c2.close();\n          const r4 = e4.value;\n          return void 0 !== r4 && (o3 || u2.byobRequest.respondWithNewView(r4), n3 || null === (t5 = c2.byobRequest) || void 0 === t5 || t5.respond(0)), o3 && n3 || a2(void 0), null;\n        }\n        const l3 = e4.value;\n        if (n3)\n          o3 || u2.byobRequest.respondWithNewView(l3);\n        else {\n          let e5;\n          try {\n            e5 = le(l3);\n          } catch (e6) {\n            return u2.error(e6), c2.error(e6), a2(i2.cancel(e6)), null;\n          }\n          o3 || u2.byobRequest.respondWithNewView(l3), c2.enqueue(e5);\n        }\n        return s2 = false, d2 ? S2() : f2 && v2(), null;\n      }, () => (s2 = false, null));\n    }\n    __name(w2, "w");\n    function S2() {\n      if (s2)\n        return d2 = true, c(void 0);\n      s2 = true;\n      const e4 = o2.byobRequest;\n      return null === e4 ? g2() : w2(e4.view, false), c(void 0);\n    }\n    __name(S2, "S");\n    function v2() {\n      if (s2)\n        return f2 = true, c(void 0);\n      s2 = true;\n      const e4 = n2.byobRequest;\n      return null === e4 ? g2() : w2(e4.view, true), c(void 0);\n    }\n    __name(v2, "v");\n    function R2(e4) {\n      if (h2 = true, t3 = e4, p2) {\n        const e5 = [t3, r2], o3 = i2.cancel(e5);\n        a2(o3);\n      }\n      return m2;\n    }\n    __name(R2, "R");\n    function T2(e4) {\n      if (p2 = true, r2 = e4, h2) {\n        const e5 = [t3, r2], o3 = i2.cancel(e5);\n        a2(o3);\n      }\n      return m2;\n    }\n    __name(T2, "T");\n    const q2 = new ReadableStream({ type: "bytes", start(e4) {\n      o2 = e4;\n    }, pull: S2, cancel: R2 }), C2 = new ReadableStream({ type: "bytes", start(e4) {\n      n2 = e4;\n    }, pull: v2, cancel: T2 });\n    return y2(i2), [q2, C2];\n  }(e2) : function(e3, t3) {\n    const r2 = e3.getReader();\n    let o2, n2, a2, i2, l2, s2 = false, d2 = false, f2 = false, h2 = false;\n    const p2 = u((e4) => {\n      l2 = e4;\n    });\n    function m2() {\n      return s2 ? (d2 = true, c(void 0)) : (s2 = true, b(r2.read(), (e4) => {\n        if (d2 = false, e4.done)\n          return f2 || a2.close(), h2 || i2.close(), f2 && h2 || l2(void 0), null;\n        const t4 = e4.value, r3 = t4, o3 = t4;\n        return f2 || a2.enqueue(r3), h2 || i2.enqueue(o3), s2 = false, d2 && m2(), null;\n      }, () => (s2 = false, null)), c(void 0));\n    }\n    __name(m2, "m");\n    function y2(e4) {\n      if (f2 = true, o2 = e4, h2) {\n        const e5 = [o2, n2], t4 = r2.cancel(e5);\n        l2(t4);\n      }\n      return p2;\n    }\n    __name(y2, "y");\n    function g2(e4) {\n      if (h2 = true, n2 = e4, f2) {\n        const e5 = [o2, n2], t4 = r2.cancel(e5);\n        l2(t4);\n      }\n      return p2;\n    }\n    __name(g2, "g");\n    const w2 = new ReadableStream({ start(e4) {\n      a2 = e4;\n    }, pull: m2, cancel: y2 }), S2 = new ReadableStream({ start(e4) {\n      i2 = e4;\n    }, pull: m2, cancel: g2 });\n    return _(r2.closed, (e4) => (a2.error(e4), i2.error(e4), f2 && h2 || l2(void 0), null)), [w2, S2];\n  }(e2);\n}\n__name(Ot, "Ot");\nvar ReadableStreamDefaultController = class {\n  constructor() {\n    throw new TypeError("Illegal constructor");\n  }\n  get desiredSize() {\n    if (!Bt(this))\n      throw Dt("desiredSize");\n    return Lt(this);\n  }\n  close() {\n    if (!Bt(this))\n      throw Dt("close");\n    if (!Ft(this))\n      throw new TypeError("The stream is not in a state that permits close");\n    !function(e2) {\n      if (!Ft(e2))\n        return;\n      const t2 = e2._controlledReadableStream;\n      e2._closeRequested = true, 0 === e2._queue.length && (jt(e2), Xt(t2));\n    }(this);\n  }\n  enqueue(e2) {\n    if (!Bt(this))\n      throw Dt("enqueue");\n    if (!Ft(this))\n      throw new TypeError("The stream is not in a state that permits enqueue");\n    return function(e3, t2) {\n      if (!Ft(e3))\n        return;\n      const r2 = e3._controlledReadableStream;\n      if (Ut(r2) && X(r2) > 0)\n        G(r2, t2, false);\n      else {\n        let r3;\n        try {\n          r3 = e3._strategySizeAlgorithm(t2);\n        } catch (t3) {\n          throw zt(e3, t3), t3;\n        }\n        try {\n          ue(e3, t2, r3);\n        } catch (t3) {\n          throw zt(e3, t3), t3;\n        }\n      }\n      At(e3);\n    }(this, e2);\n  }\n  error(e2) {\n    if (!Bt(this))\n      throw Dt("error");\n    zt(this, e2);\n  }\n  [T](e2) {\n    ce(this);\n    const t2 = this._cancelAlgorithm(e2);\n    return jt(this), t2;\n  }\n  [q](e2) {\n    const t2 = this._controlledReadableStream;\n    if (this._queue.length > 0) {\n      const r2 = se(this);\n      this._closeRequested && 0 === this._queue.length ? (jt(this), Xt(t2)) : At(this), e2._chunkSteps(r2);\n    } else\n      U(t2, e2), At(this);\n  }\n  [C]() {\n  }\n};\n__name(ReadableStreamDefaultController, "ReadableStreamDefaultController");\nfunction Bt(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_controlledReadableStream") && e2 instanceof ReadableStreamDefaultController);\n}\n__name(Bt, "Bt");\nfunction At(e2) {\n  const t2 = function(e3) {\n    const t3 = e3._controlledReadableStream;\n    if (!Ft(e3))\n      return false;\n    if (!e3._started)\n      return false;\n    if (Ut(t3) && X(t3) > 0)\n      return true;\n    if (Lt(e3) > 0)\n      return true;\n    return false;\n  }(e2);\n  if (!t2)\n    return;\n  if (e2._pulling)\n    return void (e2._pullAgain = true);\n  e2._pulling = true;\n  b(e2._pullAlgorithm(), () => (e2._pulling = false, e2._pullAgain && (e2._pullAgain = false, At(e2)), null), (t3) => (zt(e2, t3), null));\n}\n__name(At, "At");\nfunction jt(e2) {\n  e2._pullAlgorithm = void 0, e2._cancelAlgorithm = void 0, e2._strategySizeAlgorithm = void 0;\n}\n__name(jt, "jt");\nfunction zt(e2, t2) {\n  const r2 = e2._controlledReadableStream;\n  "readable" === r2._state && (ce(e2), jt(e2), Jt(r2, t2));\n}\n__name(zt, "zt");\nfunction Lt(e2) {\n  const t2 = e2._controlledReadableStream._state;\n  return "errored" === t2 ? null : "closed" === t2 ? 0 : e2._strategyHWM - e2._queueTotalSize;\n}\n__name(Lt, "Lt");\nfunction Ft(e2) {\n  return !e2._closeRequested && "readable" === e2._controlledReadableStream._state;\n}\n__name(Ft, "Ft");\nfunction It(e2, t2, r2, o2) {\n  const n2 = Object.create(ReadableStreamDefaultController.prototype);\n  let a2, i2, l2;\n  a2 = void 0 !== t2.start ? () => t2.start(n2) : () => {\n  }, i2 = void 0 !== t2.pull ? () => t2.pull(n2) : () => c(void 0), l2 = void 0 !== t2.cancel ? (e3) => t2.cancel(e3) : () => c(void 0), function(e3, t3, r3, o3, n3, a3, i3) {\n    t3._controlledReadableStream = e3, t3._queue = void 0, t3._queueTotalSize = void 0, ce(t3), t3._started = false, t3._closeRequested = false, t3._pullAgain = false, t3._pulling = false, t3._strategySizeAlgorithm = i3, t3._strategyHWM = a3, t3._pullAlgorithm = o3, t3._cancelAlgorithm = n3, e3._readableStreamController = t3, b(c(r3()), () => (t3._started = true, At(t3), null), (e4) => (zt(t3, e4), null));\n  }(e2, n2, a2, i2, l2, r2, o2);\n}\n__name(It, "It");\nfunction Dt(e2) {\n  return new TypeError(`ReadableStreamDefaultController.prototype.${e2} can only be used on a ReadableStreamDefaultController`);\n}\n__name(Dt, "Dt");\nfunction $t(e2, t2, r2) {\n  return I(e2, r2), (r3) => w(e2, t2, [r3]);\n}\n__name($t, "$t");\nfunction Mt(e2, t2, r2) {\n  return I(e2, r2), (r3) => w(e2, t2, [r3]);\n}\n__name(Mt, "Mt");\nfunction Yt(e2, t2, r2) {\n  return I(e2, r2), (r3) => g(e2, t2, [r3]);\n}\n__name(Yt, "Yt");\nfunction Qt(e2, t2) {\n  if ("bytes" !== (e2 = `${e2}`))\n    throw new TypeError(`${t2} \'${e2}\' is not a valid enumeration value for ReadableStreamType`);\n  return e2;\n}\n__name(Qt, "Qt");\nfunction Nt(e2, t2) {\n  if ("byob" !== (e2 = `${e2}`))\n    throw new TypeError(`${t2} \'${e2}\' is not a valid enumeration value for ReadableStreamReaderMode`);\n  return e2;\n}\n__name(Nt, "Nt");\nfunction Ht(e2, t2) {\n  F(e2, t2);\n  const r2 = null == e2 ? void 0 : e2.preventAbort, o2 = null == e2 ? void 0 : e2.preventCancel, n2 = null == e2 ? void 0 : e2.preventClose, a2 = null == e2 ? void 0 : e2.signal;\n  return void 0 !== a2 && function(e3, t3) {\n    if (!function(e4) {\n      if ("object" != typeof e4 || null === e4)\n        return false;\n      try {\n        return "boolean" == typeof e4.aborted;\n      } catch (e5) {\n        return false;\n      }\n    }(e3))\n      throw new TypeError(`${t3} is not an AbortSignal.`);\n  }(a2, `${t2} has member \'signal\' that`), { preventAbort: Boolean(r2), preventCancel: Boolean(o2), preventClose: Boolean(n2), signal: a2 };\n}\n__name(Ht, "Ht");\nfunction xt(e2, t2) {\n  F(e2, t2);\n  const r2 = null == e2 ? void 0 : e2.readable;\n  M(r2, "readable", "ReadableWritablePair"), function(e3, t3) {\n    if (!H(e3))\n      throw new TypeError(`${t3} is not a ReadableStream.`);\n  }(r2, `${t2} has member \'readable\' that`);\n  const o2 = null == e2 ? void 0 : e2.writable;\n  return M(o2, "writable", "ReadableWritablePair"), function(e3, t3) {\n    if (!x(e3))\n      throw new TypeError(`${t3} is not a WritableStream.`);\n  }(o2, `${t2} has member \'writable\' that`), { readable: r2, writable: o2 };\n}\n__name(xt, "xt");\nObject.defineProperties(ReadableStreamDefaultController.prototype, { close: { enumerable: true }, enqueue: { enumerable: true }, error: { enumerable: true }, desiredSize: { enumerable: true } }), n(ReadableStreamDefaultController.prototype.close, "close"), n(ReadableStreamDefaultController.prototype.enqueue, "enqueue"), n(ReadableStreamDefaultController.prototype.error, "error"), "symbol" == typeof e.toStringTag && Object.defineProperty(ReadableStreamDefaultController.prototype, e.toStringTag, { value: "ReadableStreamDefaultController", configurable: true });\nvar ReadableStream = class {\n  constructor(e2 = {}, t2 = {}) {\n    void 0 === e2 ? e2 = null : D(e2, "First parameter");\n    const r2 = Ye(t2, "Second parameter"), o2 = function(e3, t3) {\n      F(e3, t3);\n      const r3 = e3, o3 = null == r3 ? void 0 : r3.autoAllocateChunkSize, n3 = null == r3 ? void 0 : r3.cancel, a2 = null == r3 ? void 0 : r3.pull, i2 = null == r3 ? void 0 : r3.start, l2 = null == r3 ? void 0 : r3.type;\n      return { autoAllocateChunkSize: void 0 === o3 ? void 0 : N(o3, `${t3} has member \'autoAllocateChunkSize\' that`), cancel: void 0 === n3 ? void 0 : $t(n3, r3, `${t3} has member \'cancel\' that`), pull: void 0 === a2 ? void 0 : Mt(a2, r3, `${t3} has member \'pull\' that`), start: void 0 === i2 ? void 0 : Yt(i2, r3, `${t3} has member \'start\' that`), type: void 0 === l2 ? void 0 : Qt(l2, `${t3} has member \'type\' that`) };\n    }(e2, "First parameter");\n    var n2;\n    if ((n2 = this)._state = "readable", n2._reader = void 0, n2._storedError = void 0, n2._disturbed = false, "bytes" === o2.type) {\n      if (void 0 !== r2.size)\n        throw new RangeError("The strategy for a byte stream cannot have a size function");\n      Oe(this, o2, $e(r2, 0));\n    } else {\n      const e3 = Me(r2);\n      It(this, o2, $e(r2, 1), e3);\n    }\n  }\n  get locked() {\n    if (!Vt(this))\n      throw Kt("locked");\n    return Ut(this);\n  }\n  cancel(e2) {\n    return Vt(this) ? Ut(this) ? d(new TypeError("Cannot cancel a stream that already has a reader")) : Gt(this, e2) : d(Kt("cancel"));\n  }\n  getReader(e2) {\n    if (!Vt(this))\n      throw Kt("getReader");\n    return void 0 === function(e3, t2) {\n      F(e3, t2);\n      const r2 = null == e3 ? void 0 : e3.mode;\n      return { mode: void 0 === r2 ? void 0 : Nt(r2, `${t2} has member \'mode\' that`) };\n    }(e2, "First parameter").mode ? new ReadableStreamDefaultReader(this) : function(e3) {\n      return new ReadableStreamBYOBReader(e3);\n    }(this);\n  }\n  pipeThrough(e2, t2 = {}) {\n    if (!H(this))\n      throw Kt("pipeThrough");\n    $(e2, 1, "pipeThrough");\n    const r2 = xt(e2, "First parameter"), o2 = Ht(t2, "Second parameter");\n    if (this.locked)\n      throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");\n    if (r2.writable.locked)\n      throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");\n    return m(kt(this, r2.writable, o2.preventClose, o2.preventAbort, o2.preventCancel, o2.signal)), r2.readable;\n  }\n  pipeTo(e2, t2 = {}) {\n    if (!H(this))\n      return d(Kt("pipeTo"));\n    if (void 0 === e2)\n      return d("Parameter 1 is required in \'pipeTo\'.");\n    if (!x(e2))\n      return d(new TypeError("ReadableStream.prototype.pipeTo\'s first argument must be a WritableStream"));\n    let r2;\n    try {\n      r2 = Ht(t2, "Second parameter");\n    } catch (e3) {\n      return d(e3);\n    }\n    return this.locked ? d(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream")) : e2.locked ? d(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream")) : kt(this, e2, r2.preventClose, r2.preventAbort, r2.preventCancel, r2.signal);\n  }\n  tee() {\n    if (!H(this))\n      throw Kt("tee");\n    if (this.locked)\n      throw new TypeError("Cannot tee a stream that already has a reader");\n    return Ot(this);\n  }\n  values(e2) {\n    if (!H(this))\n      throw Kt("values");\n    return function(e3, t2) {\n      const r2 = e3.getReader(), o2 = new te(r2, t2), n2 = Object.create(re);\n      return n2._asyncIteratorImpl = o2, n2;\n    }(this, function(e3, t2) {\n      F(e3, t2);\n      const r2 = null == e3 ? void 0 : e3.preventCancel;\n      return { preventCancel: Boolean(r2) };\n    }(e2, "First parameter").preventCancel);\n  }\n};\n__name(ReadableStream, "ReadableStream");\nfunction Vt(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_readableStreamController") && e2 instanceof ReadableStream);\n}\n__name(Vt, "Vt");\nfunction Ut(e2) {\n  return void 0 !== e2._reader;\n}\n__name(Ut, "Ut");\nfunction Gt(e2, r2) {\n  if (e2._disturbed = true, "closed" === e2._state)\n    return c(void 0);\n  if ("errored" === e2._state)\n    return d(e2._storedError);\n  Xt(e2);\n  const o2 = e2._reader;\n  if (void 0 !== o2 && Fe(o2)) {\n    const e3 = o2._readIntoRequests;\n    o2._readIntoRequests = new S(), e3.forEach((e4) => {\n      e4._closeSteps(void 0);\n    });\n  }\n  return p(e2._readableStreamController[T](r2), t);\n}\n__name(Gt, "Gt");\nfunction Xt(e2) {\n  e2._state = "closed";\n  const t2 = e2._reader;\n  if (void 0 !== t2 && (j(t2), K(t2))) {\n    const e3 = t2._readRequests;\n    t2._readRequests = new S(), e3.forEach((e4) => {\n      e4._closeSteps();\n    });\n  }\n}\n__name(Xt, "Xt");\nfunction Jt(e2, t2) {\n  e2._state = "errored", e2._storedError = t2;\n  const r2 = e2._reader;\n  void 0 !== r2 && (A(r2, t2), K(r2) ? Z(r2, t2) : Ie(r2, t2));\n}\n__name(Jt, "Jt");\nfunction Kt(e2) {\n  return new TypeError(`ReadableStream.prototype.${e2} can only be used on a ReadableStream`);\n}\n__name(Kt, "Kt");\nfunction Zt(e2, t2) {\n  F(e2, t2);\n  const r2 = null == e2 ? void 0 : e2.highWaterMark;\n  return M(r2, "highWaterMark", "QueuingStrategyInit"), { highWaterMark: Y(r2) };\n}\n__name(Zt, "Zt");\nObject.defineProperties(ReadableStream.prototype, { cancel: { enumerable: true }, getReader: { enumerable: true }, pipeThrough: { enumerable: true }, pipeTo: { enumerable: true }, tee: { enumerable: true }, values: { enumerable: true }, locked: { enumerable: true } }), n(ReadableStream.prototype.cancel, "cancel"), n(ReadableStream.prototype.getReader, "getReader"), n(ReadableStream.prototype.pipeThrough, "pipeThrough"), n(ReadableStream.prototype.pipeTo, "pipeTo"), n(ReadableStream.prototype.tee, "tee"), n(ReadableStream.prototype.values, "values"), "symbol" == typeof e.toStringTag && Object.defineProperty(ReadableStream.prototype, e.toStringTag, { value: "ReadableStream", configurable: true }), "symbol" == typeof e.asyncIterator && Object.defineProperty(ReadableStream.prototype, e.asyncIterator, { value: ReadableStream.prototype.values, writable: true, configurable: true });\nvar er = /* @__PURE__ */ __name((e2) => e2.byteLength, "er");\nn(er, "size");\nvar ByteLengthQueuingStrategy = class {\n  constructor(e2) {\n    $(e2, 1, "ByteLengthQueuingStrategy"), e2 = Zt(e2, "First parameter"), this._byteLengthQueuingStrategyHighWaterMark = e2.highWaterMark;\n  }\n  get highWaterMark() {\n    if (!rr(this))\n      throw tr("highWaterMark");\n    return this._byteLengthQueuingStrategyHighWaterMark;\n  }\n  get size() {\n    if (!rr(this))\n      throw tr("size");\n    return er;\n  }\n};\n__name(ByteLengthQueuingStrategy, "ByteLengthQueuingStrategy");\nfunction tr(e2) {\n  return new TypeError(`ByteLengthQueuingStrategy.prototype.${e2} can only be used on a ByteLengthQueuingStrategy`);\n}\n__name(tr, "tr");\nfunction rr(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_byteLengthQueuingStrategyHighWaterMark") && e2 instanceof ByteLengthQueuingStrategy);\n}\n__name(rr, "rr");\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, { highWaterMark: { enumerable: true }, size: { enumerable: true } }), "symbol" == typeof e.toStringTag && Object.defineProperty(ByteLengthQueuingStrategy.prototype, e.toStringTag, { value: "ByteLengthQueuingStrategy", configurable: true });\nvar or = /* @__PURE__ */ __name(() => 1, "or");\nn(or, "size");\nvar CountQueuingStrategy = class {\n  constructor(e2) {\n    $(e2, 1, "CountQueuingStrategy"), e2 = Zt(e2, "First parameter"), this._countQueuingStrategyHighWaterMark = e2.highWaterMark;\n  }\n  get highWaterMark() {\n    if (!ar(this))\n      throw nr("highWaterMark");\n    return this._countQueuingStrategyHighWaterMark;\n  }\n  get size() {\n    if (!ar(this))\n      throw nr("size");\n    return or;\n  }\n};\n__name(CountQueuingStrategy, "CountQueuingStrategy");\nfunction nr(e2) {\n  return new TypeError(`CountQueuingStrategy.prototype.${e2} can only be used on a CountQueuingStrategy`);\n}\n__name(nr, "nr");\nfunction ar(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_countQueuingStrategyHighWaterMark") && e2 instanceof CountQueuingStrategy);\n}\n__name(ar, "ar");\nfunction ir(e2, t2, r2) {\n  return I(e2, r2), (r3) => w(e2, t2, [r3]);\n}\n__name(ir, "ir");\nfunction lr(e2, t2, r2) {\n  return I(e2, r2), (r3) => g(e2, t2, [r3]);\n}\n__name(lr, "lr");\nfunction sr(e2, t2, r2) {\n  return I(e2, r2), (r3, o2) => w(e2, t2, [r3, o2]);\n}\n__name(sr, "sr");\nObject.defineProperties(CountQueuingStrategy.prototype, { highWaterMark: { enumerable: true }, size: { enumerable: true } }), "symbol" == typeof e.toStringTag && Object.defineProperty(CountQueuingStrategy.prototype, e.toStringTag, { value: "CountQueuingStrategy", configurable: true });\nvar TransformStream = class {\n  constructor(e2 = {}, t2 = {}, r2 = {}) {\n    void 0 === e2 && (e2 = null);\n    const o2 = Ye(t2, "Second parameter"), n2 = Ye(r2, "Third parameter"), a2 = function(e3, t3) {\n      F(e3, t3);\n      const r3 = null == e3 ? void 0 : e3.flush, o3 = null == e3 ? void 0 : e3.readableType, n3 = null == e3 ? void 0 : e3.start, a3 = null == e3 ? void 0 : e3.transform, i3 = null == e3 ? void 0 : e3.writableType;\n      return { flush: void 0 === r3 ? void 0 : ir(r3, e3, `${t3} has member \'flush\' that`), readableType: o3, start: void 0 === n3 ? void 0 : lr(n3, e3, `${t3} has member \'start\' that`), transform: void 0 === a3 ? void 0 : sr(a3, e3, `${t3} has member \'transform\' that`), writableType: i3 };\n    }(e2, "First parameter");\n    if (void 0 !== a2.readableType)\n      throw new RangeError("Invalid readableType specified");\n    if (void 0 !== a2.writableType)\n      throw new RangeError("Invalid writableType specified");\n    const i2 = $e(n2, 0), l2 = Me(n2), s2 = $e(o2, 1), f2 = Me(o2);\n    let b2;\n    !function(e3, t3, r3, o3, n3, a3) {\n      function i3() {\n        return t3;\n      }\n      __name(i3, "i");\n      function l3(t4) {\n        return function(e4, t5) {\n          const r4 = e4._transformStreamController;\n          if (e4._backpressure) {\n            return p(e4._backpressureChangePromise, () => {\n              if ("erroring" === (Ge(e4._writable) ? e4._writable._state : e4._writableState))\n                throw Ge(e4._writable) ? e4._writable._storedError : e4._writableStoredError;\n              return pr(r4, t5);\n            });\n          }\n          return pr(r4, t5);\n        }(e3, t4);\n      }\n      __name(l3, "l");\n      function s3(t4) {\n        return function(e4, t5) {\n          return cr(e4, t5), c(void 0);\n        }(e3, t4);\n      }\n      __name(s3, "s");\n      function u2() {\n        return function(e4) {\n          const t4 = e4._transformStreamController, r4 = t4._flushAlgorithm();\n          return hr(t4), p(r4, () => {\n            if ("errored" === e4._readableState)\n              throw e4._readableStoredError;\n            gr(e4) && wr(e4);\n          }, (t5) => {\n            throw cr(e4, t5), e4._readableStoredError;\n          });\n        }(e3);\n      }\n      __name(u2, "u");\n      function d2() {\n        return function(e4) {\n          return fr(e4, false), e4._backpressureChangePromise;\n        }(e3);\n      }\n      __name(d2, "d");\n      function f3(t4) {\n        return dr(e3, t4), c(void 0);\n      }\n      __name(f3, "f");\n      e3._writableState = "writable", e3._writableStoredError = void 0, e3._writableHasInFlightOperation = false, e3._writableStarted = false, e3._writable = function(e4, t4, r4, o4, n4, a4, i4) {\n        return new WritableStream({ start(r5) {\n          e4._writableController = r5;\n          try {\n            const t5 = r5.signal;\n            void 0 !== t5 && t5.addEventListener("abort", () => {\n              "writable" === e4._writableState && (e4._writableState = "erroring", t5.reason && (e4._writableStoredError = t5.reason));\n            });\n          } catch (e5) {\n          }\n          return p(t4(), () => (e4._writableStarted = true, Cr(e4), null), (t5) => {\n            throw e4._writableStarted = true, Rr(e4, t5), t5;\n          });\n        }, write: (t5) => (function(e5) {\n          e5._writableHasInFlightOperation = true;\n        }(e4), p(r4(t5), () => (function(e5) {\n          e5._writableHasInFlightOperation = false;\n        }(e4), Cr(e4), null), (t6) => {\n          throw function(e5, t7) {\n            e5._writableHasInFlightOperation = false, Rr(e5, t7);\n          }(e4, t6), t6;\n        })), close: () => (function(e5) {\n          e5._writableHasInFlightOperation = true;\n        }(e4), p(o4(), () => (function(e5) {\n          e5._writableHasInFlightOperation = false;\n          "erroring" === e5._writableState && (e5._writableStoredError = void 0);\n          e5._writableState = "closed";\n        }(e4), null), (t5) => {\n          throw function(e5, t6) {\n            e5._writableHasInFlightOperation = false, e5._writableState, Rr(e5, t6);\n          }(e4, t5), t5;\n        })), abort: (t5) => (e4._writableState = "errored", e4._writableStoredError = t5, n4(t5)) }, { highWaterMark: a4, size: i4 });\n      }(e3, i3, l3, u2, s3, r3, o3), e3._readableState = "readable", e3._readableStoredError = void 0, e3._readableCloseRequested = false, e3._readablePulling = false, e3._readable = function(e4, t4, r4, o4, n4, a4) {\n        return new ReadableStream({ start: (r5) => (e4._readableController = r5, t4().catch((t5) => {\n          Sr(e4, t5);\n        })), pull: () => (e4._readablePulling = true, r4().catch((t5) => {\n          Sr(e4, t5);\n        })), cancel: (t5) => (e4._readableState = "closed", o4(t5)) }, { highWaterMark: n4, size: a4 });\n      }(e3, i3, d2, f3, n3, a3), e3._backpressure = void 0, e3._backpressureChangePromise = void 0, e3._backpressureChangePromise_resolve = void 0, fr(e3, true), e3._transformStreamController = void 0;\n    }(this, u((e3) => {\n      b2 = e3;\n    }), s2, f2, i2, l2), function(e3, t3) {\n      const r3 = Object.create(TransformStreamDefaultController.prototype);\n      let o3, n3;\n      o3 = void 0 !== t3.transform ? (e4) => t3.transform(e4, r3) : (e4) => {\n        try {\n          return _r(r3, e4), c(void 0);\n        } catch (e5) {\n          return d(e5);\n        }\n      };\n      n3 = void 0 !== t3.flush ? () => t3.flush(r3) : () => c(void 0);\n      !function(e4, t4, r4, o4) {\n        t4._controlledTransformStream = e4, e4._transformStreamController = t4, t4._transformAlgorithm = r4, t4._flushAlgorithm = o4;\n      }(e3, r3, o3, n3);\n    }(this, a2), void 0 !== a2.start ? b2(a2.start(this._transformStreamController)) : b2(void 0);\n  }\n  get readable() {\n    if (!ur(this))\n      throw yr("readable");\n    return this._readable;\n  }\n  get writable() {\n    if (!ur(this))\n      throw yr("writable");\n    return this._writable;\n  }\n};\n__name(TransformStream, "TransformStream");\nfunction ur(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_transformStreamController") && e2 instanceof TransformStream);\n}\n__name(ur, "ur");\nfunction cr(e2, t2) {\n  Sr(e2, t2), dr(e2, t2);\n}\n__name(cr, "cr");\nfunction dr(e2, t2) {\n  hr(e2._transformStreamController), function(e3, t3) {\n    e3._writableController.error(t3);\n    "writable" === e3._writableState && Tr(e3, t3);\n  }(e2, t2), e2._backpressure && fr(e2, false);\n}\n__name(dr, "dr");\nfunction fr(e2, t2) {\n  void 0 !== e2._backpressureChangePromise && e2._backpressureChangePromise_resolve(), e2._backpressureChangePromise = u((t3) => {\n    e2._backpressureChangePromise_resolve = t3;\n  }), e2._backpressure = t2;\n}\n__name(fr, "fr");\nObject.defineProperties(TransformStream.prototype, { readable: { enumerable: true }, writable: { enumerable: true } }), "symbol" == typeof e.toStringTag && Object.defineProperty(TransformStream.prototype, e.toStringTag, { value: "TransformStream", configurable: true });\nvar TransformStreamDefaultController = class {\n  constructor() {\n    throw new TypeError("Illegal constructor");\n  }\n  get desiredSize() {\n    if (!br(this))\n      throw mr("desiredSize");\n    return vr(this._controlledTransformStream);\n  }\n  enqueue(e2) {\n    if (!br(this))\n      throw mr("enqueue");\n    _r(this, e2);\n  }\n  error(e2) {\n    if (!br(this))\n      throw mr("error");\n    var t2;\n    t2 = e2, cr(this._controlledTransformStream, t2);\n  }\n  terminate() {\n    if (!br(this))\n      throw mr("terminate");\n    !function(e2) {\n      const t2 = e2._controlledTransformStream;\n      gr(t2) && wr(t2);\n      const r2 = new TypeError("TransformStream terminated");\n      dr(t2, r2);\n    }(this);\n  }\n};\n__name(TransformStreamDefaultController, "TransformStreamDefaultController");\nfunction br(e2) {\n  return !!r(e2) && (!!Object.prototype.hasOwnProperty.call(e2, "_controlledTransformStream") && e2 instanceof TransformStreamDefaultController);\n}\n__name(br, "br");\nfunction hr(e2) {\n  e2._transformAlgorithm = void 0, e2._flushAlgorithm = void 0;\n}\n__name(hr, "hr");\nfunction _r(e2, t2) {\n  const r2 = e2._controlledTransformStream;\n  if (!gr(r2))\n    throw new TypeError("Readable side is not in a state that permits enqueue");\n  try {\n    !function(e3, t3) {\n      e3._readablePulling = false;\n      try {\n        e3._readableController.enqueue(t3);\n      } catch (t4) {\n        throw Sr(e3, t4), t4;\n      }\n    }(r2, t2);\n  } catch (e3) {\n    throw dr(r2, e3), r2._readableStoredError;\n  }\n  const o2 = function(e3) {\n    return !function(e4) {\n      if (!gr(e4))\n        return false;\n      if (e4._readablePulling)\n        return true;\n      if (vr(e4) > 0)\n        return true;\n      return false;\n    }(e3);\n  }(r2);\n  o2 !== r2._backpressure && fr(r2, true);\n}\n__name(_r, "_r");\nfunction pr(e2, t2) {\n  return p(e2._transformAlgorithm(t2), void 0, (t3) => {\n    throw cr(e2._controlledTransformStream, t3), t3;\n  });\n}\n__name(pr, "pr");\nfunction mr(e2) {\n  return new TypeError(`TransformStreamDefaultController.prototype.${e2} can only be used on a TransformStreamDefaultController`);\n}\n__name(mr, "mr");\nfunction yr(e2) {\n  return new TypeError(`TransformStream.prototype.${e2} can only be used on a TransformStream`);\n}\n__name(yr, "yr");\nfunction gr(e2) {\n  return !e2._readableCloseRequested && "readable" === e2._readableState;\n}\n__name(gr, "gr");\nfunction wr(e2) {\n  e2._readableState = "closed", e2._readableCloseRequested = true, e2._readableController.close();\n}\n__name(wr, "wr");\nfunction Sr(e2, t2) {\n  "readable" === e2._readableState && (e2._readableState = "errored", e2._readableStoredError = t2), e2._readableController.error(t2);\n}\n__name(Sr, "Sr");\nfunction vr(e2) {\n  return e2._readableController.desiredSize;\n}\n__name(vr, "vr");\nfunction Rr(e2, t2) {\n  "writable" !== e2._writableState ? qr(e2) : Tr(e2, t2);\n}\n__name(Rr, "Rr");\nfunction Tr(e2, t2) {\n  e2._writableState = "erroring", e2._writableStoredError = t2, !function(e3) {\n    return e3._writableHasInFlightOperation;\n  }(e2) && e2._writableStarted && qr(e2);\n}\n__name(Tr, "Tr");\nfunction qr(e2) {\n  e2._writableState = "errored";\n}\n__name(qr, "qr");\nfunction Cr(e2) {\n  "erroring" === e2._writableState && qr(e2);\n}\n__name(Cr, "Cr");\nObject.defineProperties(TransformStreamDefaultController.prototype, { enqueue: { enumerable: true }, error: { enumerable: true }, terminate: { enumerable: true }, desiredSize: { enumerable: true } }), n(TransformStreamDefaultController.prototype.enqueue, "enqueue"), n(TransformStreamDefaultController.prototype.error, "error"), n(TransformStreamDefaultController.prototype.terminate, "terminate"), "symbol" == typeof e.toStringTag && Object.defineProperty(TransformStreamDefaultController.prototype, e.toStringTag, { value: "TransformStreamDefaultController", configurable: true });\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  ReadableStream,\n  ReadableStreamBYOBReader,\n  ReadableStreamDefaultReader,\n  TransformStream,\n  WritableStream,\n  WritableStreamDefaultWriter\n});\n'},494:e=>{e.exports='"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/structured-clone.js\nvar structured_clone_exports = {};\n__export(structured_clone_exports, {\n  structuredClone: () => structuredClone2\n});\nmodule.exports = __toCommonJS(structured_clone_exports);\n\n// ../../node_modules/.pnpm/@ungap+structured-clone@1.0.2/node_modules/@ungap/structured-clone/esm/types.js\nvar VOID = -1;\nvar PRIMITIVE = 0;\nvar ARRAY = 1;\nvar OBJECT = 2;\nvar DATE = 3;\nvar REGEXP = 4;\nvar MAP = 5;\nvar SET = 6;\nvar ERROR = 7;\nvar BIGINT = 8;\n\n// ../../node_modules/.pnpm/@ungap+structured-clone@1.0.2/node_modules/@ungap/structured-clone/esm/deserialize.js\nvar env = typeof self === "object" ? self : globalThis;\nvar deserializer = /* @__PURE__ */ __name(($, _) => {\n  const as = /* @__PURE__ */ __name((out, index) => {\n    $.set(index, out);\n    return out;\n  }, "as");\n  const unpair = /* @__PURE__ */ __name((index) => {\n    if ($.has(index))\n      return $.get(index);\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index2 of value)\n          arr.push(unpair(index2));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index2] of value)\n          object[unpair(key)] = unpair(index2);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const { source, flags } = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(/* @__PURE__ */ new Map(), index);\n        for (const [key, index2] of value)\n          map.set(unpair(key), unpair(index2));\n        return map;\n      }\n      case SET: {\n        const set = as(/* @__PURE__ */ new Set(), index);\n        for (const index2 of value)\n          set.add(unpair(index2));\n        return set;\n      }\n      case ERROR: {\n        const { name, message } = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case "BigInt":\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  }, "unpair");\n  return unpair;\n}, "deserializer");\nvar deserialize = /* @__PURE__ */ __name((serialized) => deserializer(/* @__PURE__ */ new Map(), serialized)(0), "deserialize");\n\n// ../../node_modules/.pnpm/@ungap+structured-clone@1.0.2/node_modules/@ungap/structured-clone/esm/serialize.js\nvar EMPTY = "";\nvar { toString } = {};\nvar { keys } = Object;\nvar typeOf = /* @__PURE__ */ __name((value) => {\n  const type = typeof value;\n  if (type !== "object" || !value)\n    return [PRIMITIVE, type];\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case "Array":\n      return [ARRAY, EMPTY];\n    case "Object":\n      return [OBJECT, EMPTY];\n    case "Date":\n      return [DATE, EMPTY];\n    case "RegExp":\n      return [REGEXP, EMPTY];\n    case "Map":\n      return [MAP, EMPTY];\n    case "Set":\n      return [SET, EMPTY];\n  }\n  if (asString.includes("Array"))\n    return [ARRAY, asString];\n  if (asString.includes("Error"))\n    return [ERROR, asString];\n  return [OBJECT, asString];\n}, "typeOf");\nvar shouldSkip = /* @__PURE__ */ __name(([TYPE, type]) => TYPE === PRIMITIVE && (type === "function" || type === "symbol"), "shouldSkip");\nvar serializer = /* @__PURE__ */ __name((strict, json, $, _) => {\n  const as = /* @__PURE__ */ __name((out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  }, "as");\n  const pair = /* @__PURE__ */ __name((value) => {\n    if ($.has(value))\n      return $.get(value);\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case "bigint":\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case "function":\n          case "symbol":\n            if (strict)\n              throw new TypeError("unable to serialize " + type);\n            entry = null;\n            break;\n          case "undefined":\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case "BigInt":\n              return as([type, value.toString()], value);\n            case "Boolean":\n            case "Number":\n            case "String":\n              return as([type, value.valueOf()], value);\n          }\n        }\n        if (json && "toJSON" in value)\n          return pair(value.toJSON());\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const { source, flags } = value;\n        return as([TYPE, { source, flags }], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n    const { message } = value;\n    return as([TYPE, { name: type, message }], value);\n  }, "pair");\n  return pair;\n}, "serializer");\nvar serialize = /* @__PURE__ */ __name((value, { json, lossy } = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, /* @__PURE__ */ new Map(), _)(value), _;\n}, "serialize");\n\n// ../../node_modules/.pnpm/@ungap+structured-clone@1.0.2/node_modules/@ungap/structured-clone/esm/index.js\nvar esm_default = typeof structuredClone === "function" ? (\n  /* c8 ignore start */\n  (any, options) => options && ("json" in options || "lossy" in options) ? deserialize(serialize(any, options)) : structuredClone(any)\n) : (any, options) => deserialize(serialize(any, options));\n\n// src/primitives/structured-clone.js\nfunction structuredClone2(value, options) {\n  if (value instanceof ReadableStream) {\n    const transform = new TransformStream({});\n    value.pipeTo(transform.writable);\n    return transform.readable;\n  }\n  return esm_default(value, options);\n}\n__name(structuredClone2, "structuredClone");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  structuredClone\n});\n'},294:e=>{e.exports='"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/text-encoding-streams.js\nvar text_encoding_streams_exports = {};\n__export(text_encoding_streams_exports, {\n  TextDecoderStream: () => TextDecoderStream,\n  TextEncoderStream: () => TextEncoderStream\n});\nmodule.exports = __toCommonJS(text_encoding_streams_exports);\n\n// ../../node_modules/.pnpm/@stardazed+streams-text-encoding@1.0.2/node_modules/@stardazed/streams-text-encoding/dist/sd-streams-text-encoding.esm.js\nvar decDecoder = Symbol("decDecoder");\nvar decTransform = Symbol("decTransform");\nvar TextDecodeTransformer = class {\n  constructor(decoder) {\n    this.decoder_ = decoder;\n  }\n  transform(chunk, controller) {\n    if (!(chunk instanceof ArrayBuffer || ArrayBuffer.isView(chunk))) {\n      throw new TypeError("Input data must be a BufferSource");\n    }\n    const text = this.decoder_.decode(chunk, { stream: true });\n    if (text.length !== 0) {\n      controller.enqueue(text);\n    }\n  }\n  flush(controller) {\n    const text = this.decoder_.decode();\n    if (text.length !== 0) {\n      controller.enqueue(text);\n    }\n  }\n};\n__name(TextDecodeTransformer, "TextDecodeTransformer");\nvar TextDecoderStream = class {\n  constructor(label, options) {\n    this[decDecoder] = new TextDecoder(label, options);\n    this[decTransform] = new TransformStream(new TextDecodeTransformer(this[decDecoder]));\n  }\n  get encoding() {\n    return this[decDecoder].encoding;\n  }\n  get fatal() {\n    return this[decDecoder].fatal;\n  }\n  get ignoreBOM() {\n    return this[decDecoder].ignoreBOM;\n  }\n  get readable() {\n    return this[decTransform].readable;\n  }\n  get writable() {\n    return this[decTransform].writable;\n  }\n};\n__name(TextDecoderStream, "TextDecoderStream");\nvar encEncoder = Symbol("encEncoder");\nvar encTransform = Symbol("encTransform");\nvar TextEncodeTransformer = class {\n  constructor(encoder) {\n    this.encoder_ = encoder;\n    this.partial_ = void 0;\n  }\n  transform(chunk, controller) {\n    let stringChunk = String(chunk);\n    if (this.partial_ !== void 0) {\n      stringChunk = this.partial_ + stringChunk;\n      this.partial_ = void 0;\n    }\n    const lastCharIndex = stringChunk.length - 1;\n    const lastCodeUnit = stringChunk.charCodeAt(lastCharIndex);\n    if (lastCodeUnit >= 55296 && lastCodeUnit < 56320) {\n      this.partial_ = String.fromCharCode(lastCodeUnit);\n      stringChunk = stringChunk.substring(0, lastCharIndex);\n    }\n    const bytes = this.encoder_.encode(stringChunk);\n    if (bytes.length !== 0) {\n      controller.enqueue(bytes);\n    }\n  }\n  flush(controller) {\n    if (this.partial_) {\n      controller.enqueue(this.encoder_.encode(this.partial_));\n      this.partial_ = void 0;\n    }\n  }\n};\n__name(TextEncodeTransformer, "TextEncodeTransformer");\nvar TextEncoderStream = class {\n  constructor() {\n    this[encEncoder] = new TextEncoder();\n    this[encTransform] = new TransformStream(new TextEncodeTransformer(this[encEncoder]));\n  }\n  get encoding() {\n    return this[encEncoder].encoding;\n  }\n  get readable() {\n    return this[encTransform].readable;\n  }\n  get writable() {\n    return this[encTransform].writable;\n  }\n};\n__name(TextEncoderStream, "TextEncoderStream");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  TextDecoderStream,\n  TextEncoderStream\n});\n'},617:e=>{e.exports='"use strict";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. "__esModule" has not been set), then set\n  // "default" to the CommonJS "module.exports" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// <define:process>\nvar init_define_process = __esm({\n  "<define:process>"() {\n  }\n});\n\n// ../../node_modules/.pnpm/webidl-conversions@7.0.0/node_modules/webidl-conversions/lib/index.js\nvar require_lib = __commonJS({\n  "../../node_modules/.pnpm/webidl-conversions@7.0.0/node_modules/webidl-conversions/lib/index.js"(exports) {\n    "use strict";\n    init_define_process();\n    function makeException(ErrorType, message, options) {\n      if (options.globals) {\n        ErrorType = options.globals[ErrorType.name];\n      }\n      return new ErrorType(`${options.context ? options.context : "Value"} ${message}.`);\n    }\n    __name(makeException, "makeException");\n    function toNumber(value, options) {\n      if (typeof value === "bigint") {\n        throw makeException(TypeError, "is a BigInt which cannot be converted to a number", options);\n      }\n      if (!options.globals) {\n        return Number(value);\n      }\n      return options.globals.Number(value);\n    }\n    __name(toNumber, "toNumber");\n    function evenRound(x) {\n      if (x > 0 && x % 1 === 0.5 && (x & 1) === 0 || x < 0 && x % 1 === -0.5 && (x & 1) === 1) {\n        return censorNegativeZero(Math.floor(x));\n      }\n      return censorNegativeZero(Math.round(x));\n    }\n    __name(evenRound, "evenRound");\n    function integerPart(n) {\n      return censorNegativeZero(Math.trunc(n));\n    }\n    __name(integerPart, "integerPart");\n    function sign(x) {\n      return x < 0 ? -1 : 1;\n    }\n    __name(sign, "sign");\n    function modulo(x, y) {\n      const signMightNotMatch = x % y;\n      if (sign(y) !== sign(signMightNotMatch)) {\n        return signMightNotMatch + y;\n      }\n      return signMightNotMatch;\n    }\n    __name(modulo, "modulo");\n    function censorNegativeZero(x) {\n      return x === 0 ? 0 : x;\n    }\n    __name(censorNegativeZero, "censorNegativeZero");\n    function createIntegerConversion(bitLength, { unsigned }) {\n      let lowerBound, upperBound;\n      if (unsigned) {\n        lowerBound = 0;\n        upperBound = 2 ** bitLength - 1;\n      } else {\n        lowerBound = -(2 ** (bitLength - 1));\n        upperBound = 2 ** (bitLength - 1) - 1;\n      }\n      const twoToTheBitLength = 2 ** bitLength;\n      const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n      return (value, options = {}) => {\n        let x = toNumber(value, options);\n        x = censorNegativeZero(x);\n        if (options.enforceRange) {\n          if (!Number.isFinite(x)) {\n            throw makeException(TypeError, "is not a finite number", options);\n          }\n          x = integerPart(x);\n          if (x < lowerBound || x > upperBound) {\n            throw makeException(\n              TypeError,\n              `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n              options\n            );\n          }\n          return x;\n        }\n        if (!Number.isNaN(x) && options.clamp) {\n          x = Math.min(Math.max(x, lowerBound), upperBound);\n          x = evenRound(x);\n          return x;\n        }\n        if (!Number.isFinite(x) || x === 0) {\n          return 0;\n        }\n        x = integerPart(x);\n        if (x >= lowerBound && x <= upperBound) {\n          return x;\n        }\n        x = modulo(x, twoToTheBitLength);\n        if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n          return x - twoToTheBitLength;\n        }\n        return x;\n      };\n    }\n    __name(createIntegerConversion, "createIntegerConversion");\n    function createLongLongConversion(bitLength, { unsigned }) {\n      const upperBound = Number.MAX_SAFE_INTEGER;\n      const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n      const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n      return (value, options = {}) => {\n        let x = toNumber(value, options);\n        x = censorNegativeZero(x);\n        if (options.enforceRange) {\n          if (!Number.isFinite(x)) {\n            throw makeException(TypeError, "is not a finite number", options);\n          }\n          x = integerPart(x);\n          if (x < lowerBound || x > upperBound) {\n            throw makeException(\n              TypeError,\n              `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n              options\n            );\n          }\n          return x;\n        }\n        if (!Number.isNaN(x) && options.clamp) {\n          x = Math.min(Math.max(x, lowerBound), upperBound);\n          x = evenRound(x);\n          return x;\n        }\n        if (!Number.isFinite(x) || x === 0) {\n          return 0;\n        }\n        let xBigInt = BigInt(integerPart(x));\n        xBigInt = asBigIntN(bitLength, xBigInt);\n        return Number(xBigInt);\n      };\n    }\n    __name(createLongLongConversion, "createLongLongConversion");\n    exports.any = (value) => {\n      return value;\n    };\n    exports.undefined = () => {\n      return void 0;\n    };\n    exports.boolean = (value) => {\n      return Boolean(value);\n    };\n    exports.byte = createIntegerConversion(8, { unsigned: false });\n    exports.octet = createIntegerConversion(8, { unsigned: true });\n    exports.short = createIntegerConversion(16, { unsigned: false });\n    exports["unsigned short"] = createIntegerConversion(16, { unsigned: true });\n    exports.long = createIntegerConversion(32, { unsigned: false });\n    exports["unsigned long"] = createIntegerConversion(32, { unsigned: true });\n    exports["long long"] = createLongLongConversion(64, { unsigned: false });\n    exports["unsigned long long"] = createLongLongConversion(64, { unsigned: true });\n    exports.double = (value, options = {}) => {\n      const x = toNumber(value, options);\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, "is not a finite floating-point value", options);\n      }\n      return x;\n    };\n    exports["unrestricted double"] = (value, options = {}) => {\n      const x = toNumber(value, options);\n      return x;\n    };\n    exports.float = (value, options = {}) => {\n      const x = toNumber(value, options);\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, "is not a finite floating-point value", options);\n      }\n      if (Object.is(x, -0)) {\n        return x;\n      }\n      const y = Math.fround(x);\n      if (!Number.isFinite(y)) {\n        throw makeException(TypeError, "is outside the range of a single-precision floating-point value", options);\n      }\n      return y;\n    };\n    exports["unrestricted float"] = (value, options = {}) => {\n      const x = toNumber(value, options);\n      if (isNaN(x)) {\n        return x;\n      }\n      if (Object.is(x, -0)) {\n        return x;\n      }\n      return Math.fround(x);\n    };\n    exports.DOMString = (value, options = {}) => {\n      if (options.treatNullAsEmptyString && value === null) {\n        return "";\n      }\n      if (typeof value === "symbol") {\n        throw makeException(TypeError, "is a symbol, which cannot be converted to a string", options);\n      }\n      const StringCtor = options.globals ? options.globals.String : String;\n      return StringCtor(value);\n    };\n    exports.ByteString = (value, options = {}) => {\n      const x = exports.DOMString(value, options);\n      let c;\n      for (let i = 0; (c = x.codePointAt(i)) !== void 0; ++i) {\n        if (c > 255) {\n          throw makeException(TypeError, "is not a valid ByteString", options);\n        }\n      }\n      return x;\n    };\n    exports.USVString = (value, options = {}) => {\n      const S = exports.DOMString(value, options);\n      const n = S.length;\n      const U = [];\n      for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 55296 || c > 57343) {\n          U.push(String.fromCodePoint(c));\n        } else if (56320 <= c && c <= 57343) {\n          U.push(String.fromCodePoint(65533));\n        } else if (i === n - 1) {\n          U.push(String.fromCodePoint(65533));\n        } else {\n          const d = S.charCodeAt(i + 1);\n          if (56320 <= d && d <= 57343) {\n            const a = c & 1023;\n            const b = d & 1023;\n            U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n            ++i;\n          } else {\n            U.push(String.fromCodePoint(65533));\n          }\n        }\n      }\n      return U.join("");\n    };\n    exports.object = (value, options = {}) => {\n      if (value === null || typeof value !== "object" && typeof value !== "function") {\n        throw makeException(TypeError, "is not an object", options);\n      }\n      return value;\n    };\n    var abByteLengthGetter = Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, "byteLength").get;\n    var sabByteLengthGetter = typeof SharedArrayBuffer === "function" ? Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, "byteLength").get : null;\n    function isNonSharedArrayBuffer(value) {\n      try {\n        abByteLengthGetter.call(value);\n        return true;\n      } catch {\n        return false;\n      }\n    }\n    __name(isNonSharedArrayBuffer, "isNonSharedArrayBuffer");\n    function isSharedArrayBuffer(value) {\n      try {\n        sabByteLengthGetter.call(value);\n        return true;\n      } catch {\n        return false;\n      }\n    }\n    __name(isSharedArrayBuffer, "isSharedArrayBuffer");\n    function isArrayBufferDetached(value) {\n      try {\n        new Uint8Array(value);\n        return false;\n      } catch {\n        return true;\n      }\n    }\n    __name(isArrayBufferDetached, "isArrayBufferDetached");\n    exports.ArrayBuffer = (value, options = {}) => {\n      if (!isNonSharedArrayBuffer(value)) {\n        if (options.allowShared && !isSharedArrayBuffer(value)) {\n          throw makeException(TypeError, "is not an ArrayBuffer or SharedArrayBuffer", options);\n        }\n        throw makeException(TypeError, "is not an ArrayBuffer", options);\n      }\n      if (isArrayBufferDetached(value)) {\n        throw makeException(TypeError, "is a detached ArrayBuffer", options);\n      }\n      return value;\n    };\n    var dvByteLengthGetter = Object.getOwnPropertyDescriptor(DataView.prototype, "byteLength").get;\n    exports.DataView = (value, options = {}) => {\n      try {\n        dvByteLengthGetter.call(value);\n      } catch (e) {\n        throw makeException(TypeError, "is not a DataView", options);\n      }\n      if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n        throw makeException(TypeError, "is backed by a SharedArrayBuffer, which is not allowed", options);\n      }\n      if (isArrayBufferDetached(value.buffer)) {\n        throw makeException(TypeError, "is backed by a detached ArrayBuffer", options);\n      }\n      return value;\n    };\n    var typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(Uint8Array).prototype,\n      Symbol.toStringTag\n    ).get;\n    [\n      Int8Array,\n      Int16Array,\n      Int32Array,\n      Uint8Array,\n      Uint16Array,\n      Uint32Array,\n      Uint8ClampedArray,\n      Float32Array,\n      Float64Array\n    ].forEach((func) => {\n      const { name } = func;\n      const article = /^[AEIOU]/u.test(name) ? "an" : "a";\n      exports[name] = (value, options = {}) => {\n        if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n          throw makeException(TypeError, `is not ${article} ${name} object`, options);\n        }\n        if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n          throw makeException(TypeError, "is a view on a SharedArrayBuffer, which is not allowed", options);\n        }\n        if (isArrayBufferDetached(value.buffer)) {\n          throw makeException(TypeError, "is a view on a detached ArrayBuffer", options);\n        }\n        return value;\n      };\n    });\n    exports.ArrayBufferView = (value, options = {}) => {\n      if (!ArrayBuffer.isView(value)) {\n        throw makeException(TypeError, "is not a view on an ArrayBuffer or SharedArrayBuffer", options);\n      }\n      if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n        throw makeException(TypeError, "is a view on a SharedArrayBuffer, which is not allowed", options);\n      }\n      if (isArrayBufferDetached(value.buffer)) {\n        throw makeException(TypeError, "is a view on a detached ArrayBuffer", options);\n      }\n      return value;\n    };\n    exports.BufferSource = (value, options = {}) => {\n      if (ArrayBuffer.isView(value)) {\n        if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n          throw makeException(TypeError, "is a view on a SharedArrayBuffer, which is not allowed", options);\n        }\n        if (isArrayBufferDetached(value.buffer)) {\n          throw makeException(TypeError, "is a view on a detached ArrayBuffer", options);\n        }\n        return value;\n      }\n      if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n        throw makeException(TypeError, "is not an ArrayBuffer or a view on one", options);\n      }\n      if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n        throw makeException(TypeError, "is not an ArrayBuffer, SharedArrayBuffer, or a view on one", options);\n      }\n      if (isArrayBufferDetached(value)) {\n        throw makeException(TypeError, "is a detached ArrayBuffer", options);\n      }\n      return value;\n    };\n    exports.DOMTimeStamp = exports["unsigned long long"];\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/utils.js\nvar require_utils = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/utils.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    function isObject(value) {\n      return typeof value === "object" && value !== null || typeof value === "function";\n    }\n    __name(isObject, "isObject");\n    var hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n    function define(target, source) {\n      for (const key of Reflect.ownKeys(source)) {\n        const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n        if (descriptor && !Reflect.defineProperty(target, key, descriptor)) {\n          throw new TypeError(`Cannot redefine property: ${String(key)}`);\n        }\n      }\n    }\n    __name(define, "define");\n    function newObjectInRealm(globalObject, object) {\n      const ctorRegistry = initCtorRegistry(globalObject);\n      return Object.defineProperties(\n        Object.create(ctorRegistry["%Object.prototype%"]),\n        Object.getOwnPropertyDescriptors(object)\n      );\n    }\n    __name(newObjectInRealm, "newObjectInRealm");\n    var wrapperSymbol = Symbol("wrapper");\n    var implSymbol = Symbol("impl");\n    var sameObjectCaches = Symbol("SameObject caches");\n    var ctorRegistrySymbol = Symbol.for("[webidl2js] constructor registry");\n    var AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {\n    }).prototype);\n    function initCtorRegistry(globalObject) {\n      if (hasOwn(globalObject, ctorRegistrySymbol)) {\n        return globalObject[ctorRegistrySymbol];\n      }\n      const ctorRegistry = /* @__PURE__ */ Object.create(null);\n      ctorRegistry["%Object.prototype%"] = globalObject.Object.prototype;\n      ctorRegistry["%IteratorPrototype%"] = Object.getPrototypeOf(\n        Object.getPrototypeOf(new globalObject.Array()[Symbol.iterator]())\n      );\n      try {\n        ctorRegistry["%AsyncIteratorPrototype%"] = Object.getPrototypeOf(\n          Object.getPrototypeOf(\n            globalObject.eval("(async function* () {})").prototype\n          )\n        );\n      } catch {\n        ctorRegistry["%AsyncIteratorPrototype%"] = AsyncIteratorPrototype;\n      }\n      globalObject[ctorRegistrySymbol] = ctorRegistry;\n      return ctorRegistry;\n    }\n    __name(initCtorRegistry, "initCtorRegistry");\n    function getSameObject(wrapper, prop, creator) {\n      if (!wrapper[sameObjectCaches]) {\n        wrapper[sameObjectCaches] = /* @__PURE__ */ Object.create(null);\n      }\n      if (prop in wrapper[sameObjectCaches]) {\n        return wrapper[sameObjectCaches][prop];\n      }\n      wrapper[sameObjectCaches][prop] = creator();\n      return wrapper[sameObjectCaches][prop];\n    }\n    __name(getSameObject, "getSameObject");\n    function wrapperForImpl(impl) {\n      return impl ? impl[wrapperSymbol] : null;\n    }\n    __name(wrapperForImpl, "wrapperForImpl");\n    function implForWrapper(wrapper) {\n      return wrapper ? wrapper[implSymbol] : null;\n    }\n    __name(implForWrapper, "implForWrapper");\n    function tryWrapperForImpl(impl) {\n      const wrapper = wrapperForImpl(impl);\n      return wrapper ? wrapper : impl;\n    }\n    __name(tryWrapperForImpl, "tryWrapperForImpl");\n    function tryImplForWrapper(wrapper) {\n      const impl = implForWrapper(wrapper);\n      return impl ? impl : wrapper;\n    }\n    __name(tryImplForWrapper, "tryImplForWrapper");\n    var iterInternalSymbol = Symbol("internal");\n    function isArrayIndexPropName(P) {\n      if (typeof P !== "string") {\n        return false;\n      }\n      const i = P >>> 0;\n      if (i === 2 ** 32 - 1) {\n        return false;\n      }\n      const s = `${i}`;\n      if (P !== s) {\n        return false;\n      }\n      return true;\n    }\n    __name(isArrayIndexPropName, "isArrayIndexPropName");\n    var byteLengthGetter = Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, "byteLength").get;\n    function isArrayBuffer(value) {\n      try {\n        byteLengthGetter.call(value);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n    __name(isArrayBuffer, "isArrayBuffer");\n    function iteratorResult([key, value], kind) {\n      let result;\n      switch (kind) {\n        case "key":\n          result = key;\n          break;\n        case "value":\n          result = value;\n          break;\n        case "key+value":\n          result = [key, value];\n          break;\n      }\n      return { value: result, done: false };\n    }\n    __name(iteratorResult, "iteratorResult");\n    var supportsPropertyIndex = Symbol("supports property index");\n    var supportedPropertyIndices = Symbol("supported property indices");\n    var supportsPropertyName = Symbol("supports property name");\n    var supportedPropertyNames = Symbol("supported property names");\n    var indexedGet = Symbol("indexed property get");\n    var indexedSetNew = Symbol("indexed property set new");\n    var indexedSetExisting = Symbol("indexed property set existing");\n    var namedGet = Symbol("named property get");\n    var namedSetNew = Symbol("named property set new");\n    var namedSetExisting = Symbol("named property set existing");\n    var namedDelete = Symbol("named property delete");\n    var asyncIteratorNext = Symbol("async iterator get the next iteration result");\n    var asyncIteratorReturn = Symbol("async iterator return steps");\n    var asyncIteratorInit = Symbol("async iterator initialization steps");\n    var asyncIteratorEOI = Symbol("async iterator end of iteration");\n    module2.exports = exports = {\n      isObject,\n      hasOwn,\n      define,\n      newObjectInRealm,\n      wrapperSymbol,\n      implSymbol,\n      getSameObject,\n      ctorRegistrySymbol,\n      initCtorRegistry,\n      wrapperForImpl,\n      implForWrapper,\n      tryWrapperForImpl,\n      tryImplForWrapper,\n      iterInternalSymbol,\n      isArrayBuffer,\n      isArrayIndexPropName,\n      supportsPropertyIndex,\n      supportedPropertyIndices,\n      supportsPropertyName,\n      supportedPropertyNames,\n      indexedGet,\n      indexedSetNew,\n      indexedSetExisting,\n      namedGet,\n      namedSetNew,\n      namedSetExisting,\n      namedDelete,\n      asyncIteratorNext,\n      asyncIteratorReturn,\n      asyncIteratorInit,\n      asyncIteratorEOI,\n      iteratorResult\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/punycode@2.3.0/node_modules/punycode/punycode.es6.js\nvar punycode_es6_exports = {};\n__export(punycode_es6_exports, {\n  decode: () => decode,\n  default: () => punycode_es6_default,\n  encode: () => encode,\n  toASCII: () => toASCII,\n  toUnicode: () => toUnicode,\n  ucs2decode: () => ucs2decode,\n  ucs2encode: () => ucs2encode\n});\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\nfunction map(array, callback) {\n  const result = [];\n  let length = array.length;\n  while (length--) {\n    result[length] = callback(array[length]);\n  }\n  return result;\n}\nfunction mapDomain(domain, callback) {\n  const parts = domain.split("@");\n  let result = "";\n  if (parts.length > 1) {\n    result = parts[0] + "@";\n    domain = parts[1];\n  }\n  domain = domain.replace(regexSeparators, ".");\n  const labels = domain.split(".");\n  const encoded = map(labels, callback).join(".");\n  return result + encoded;\n}\nfunction ucs2decode(string) {\n  const output = [];\n  let counter = 0;\n  const length = string.length;\n  while (counter < length) {\n    const value = string.charCodeAt(counter++);\n    if (value >= 55296 && value <= 56319 && counter < length) {\n      const extra = string.charCodeAt(counter++);\n      if ((extra & 64512) == 56320) {\n        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n      } else {\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\nvar maxInt, base, tMin, tMax, skew, damp, initialBias, initialN, delimiter, regexPunycode, regexNonASCII, regexSeparators, errors, baseMinusTMin, floor, stringFromCharCode, ucs2encode, basicToDigit, digitToBasic, adapt, decode, encode, toUnicode, toASCII, punycode, punycode_es6_default;\nvar init_punycode_es6 = __esm({\n  "../../node_modules/.pnpm/punycode@2.3.0/node_modules/punycode/punycode.es6.js"() {\n    "use strict";\n    init_define_process();\n    maxInt = 2147483647;\n    base = 36;\n    tMin = 1;\n    tMax = 26;\n    skew = 38;\n    damp = 700;\n    initialBias = 72;\n    initialN = 128;\n    delimiter = "-";\n    regexPunycode = /^xn--/;\n    regexNonASCII = /[^\\0-\\x7F]/;\n    regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g;\n    errors = {\n      "overflow": "Overflow: input needs wider integers to process",\n      "not-basic": "Illegal input >= 0x80 (not a basic code point)",\n      "invalid-input": "Invalid input"\n    };\n    baseMinusTMin = base - tMin;\n    floor = Math.floor;\n    stringFromCharCode = String.fromCharCode;\n    __name(error, "error");\n    __name(map, "map");\n    __name(mapDomain, "mapDomain");\n    __name(ucs2decode, "ucs2decode");\n    ucs2encode = /* @__PURE__ */ __name((codePoints) => String.fromCodePoint(...codePoints), "ucs2encode");\n    basicToDigit = /* @__PURE__ */ __name(function(codePoint) {\n      if (codePoint >= 48 && codePoint < 58) {\n        return 26 + (codePoint - 48);\n      }\n      if (codePoint >= 65 && codePoint < 91) {\n        return codePoint - 65;\n      }\n      if (codePoint >= 97 && codePoint < 123) {\n        return codePoint - 97;\n      }\n      return base;\n    }, "basicToDigit");\n    digitToBasic = /* @__PURE__ */ __name(function(digit, flag) {\n      return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n    }, "digitToBasic");\n    adapt = /* @__PURE__ */ __name(function(delta, numPoints, firstTime) {\n      let k = 0;\n      delta = firstTime ? floor(delta / damp) : delta >> 1;\n      delta += floor(delta / numPoints);\n      for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n        delta = floor(delta / baseMinusTMin);\n      }\n      return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n    }, "adapt");\n    decode = /* @__PURE__ */ __name(function(input) {\n      const output = [];\n      const inputLength = input.length;\n      let i = 0;\n      let n = initialN;\n      let bias = initialBias;\n      let basic = input.lastIndexOf(delimiter);\n      if (basic < 0) {\n        basic = 0;\n      }\n      for (let j = 0; j < basic; ++j) {\n        if (input.charCodeAt(j) >= 128) {\n          error("not-basic");\n        }\n        output.push(input.charCodeAt(j));\n      }\n      for (let index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {\n        const oldi = i;\n        for (let w = 1, k = base; ; k += base) {\n          if (index >= inputLength) {\n            error("invalid-input");\n          }\n          const digit = basicToDigit(input.charCodeAt(index++));\n          if (digit >= base) {\n            error("invalid-input");\n          }\n          if (digit > floor((maxInt - i) / w)) {\n            error("overflow");\n          }\n          i += digit * w;\n          const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n          if (digit < t) {\n            break;\n          }\n          const baseMinusT = base - t;\n          if (w > floor(maxInt / baseMinusT)) {\n            error("overflow");\n          }\n          w *= baseMinusT;\n        }\n        const out = output.length + 1;\n        bias = adapt(i - oldi, out, oldi == 0);\n        if (floor(i / out) > maxInt - n) {\n          error("overflow");\n        }\n        n += floor(i / out);\n        i %= out;\n        output.splice(i++, 0, n);\n      }\n      return String.fromCodePoint(...output);\n    }, "decode");\n    encode = /* @__PURE__ */ __name(function(input) {\n      const output = [];\n      input = ucs2decode(input);\n      const inputLength = input.length;\n      let n = initialN;\n      let delta = 0;\n      let bias = initialBias;\n      for (const currentValue of input) {\n        if (currentValue < 128) {\n          output.push(stringFromCharCode(currentValue));\n        }\n      }\n      const basicLength = output.length;\n      let handledCPCount = basicLength;\n      if (basicLength) {\n        output.push(delimiter);\n      }\n      while (handledCPCount < inputLength) {\n        let m = maxInt;\n        for (const currentValue of input) {\n          if (currentValue >= n && currentValue < m) {\n            m = currentValue;\n          }\n        }\n        const handledCPCountPlusOne = handledCPCount + 1;\n        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n          error("overflow");\n        }\n        delta += (m - n) * handledCPCountPlusOne;\n        n = m;\n        for (const currentValue of input) {\n          if (currentValue < n && ++delta > maxInt) {\n            error("overflow");\n          }\n          if (currentValue === n) {\n            let q = delta;\n            for (let k = base; ; k += base) {\n              const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n              if (q < t) {\n                break;\n              }\n              const qMinusT = q - t;\n              const baseMinusT = base - t;\n              output.push(\n                stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n              );\n              q = floor(qMinusT / baseMinusT);\n            }\n            output.push(stringFromCharCode(digitToBasic(q, 0)));\n            bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n            delta = 0;\n            ++handledCPCount;\n          }\n        }\n        ++delta;\n        ++n;\n      }\n      return output.join("");\n    }, "encode");\n    toUnicode = /* @__PURE__ */ __name(function(input) {\n      return mapDomain(input, function(string) {\n        return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n      });\n    }, "toUnicode");\n    toASCII = /* @__PURE__ */ __name(function(input) {\n      return mapDomain(input, function(string) {\n        return regexNonASCII.test(string) ? "xn--" + encode(string) : string;\n      });\n    }, "toASCII");\n    punycode = {\n      /**\n       * A string representing the current Punycode.js version number.\n       * @memberOf punycode\n       * @type String\n       */\n      "version": "2.1.0",\n      /**\n       * An object of methods to convert from JavaScript\'s internal character\n       * representation (UCS-2) to Unicode code points, and back.\n       * @see <https://mathiasbynens.be/notes/javascript-encoding>\n       * @memberOf punycode\n       * @type Object\n       */\n      "ucs2": {\n        "decode": ucs2decode,\n        "encode": ucs2encode\n      },\n      "decode": decode,\n      "encode": encode,\n      "toASCII": toASCII,\n      "toUnicode": toUnicode\n    };\n    punycode_es6_default = punycode;\n  }\n});\n\n// ../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/regexes.js\nvar require_regexes = __commonJS({\n  "../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/regexes.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10EFD}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{111CE}\\u{111CF}\\u{1122C}-\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{11930}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{11F00}\\u{11F01}\\u{11F03}\\u{11F34}-\\u{11F3A}\\u{11F3E}-\\u{11F42}\\u{13440}\\u{13447}-\\u{13455}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\n    var combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}]/u;\n    var validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3\\u08B4\\u08B6-\\u08B8\\u08BA-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0855\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u08A0-\\u08AC\\u08AE-\\u08B4\\u08B6-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{1E900}-\\u{1E943}]/u;\n    var bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\n    var bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{1123F}\\u{11240}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11F02}-\\u{11F10}\\u{11F12}-\\u{11F35}\\u{11F3E}\\u{11F3F}\\u{11F41}\\u{11F43}-\\u{11F59}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1343F}\\u{13441}-\\u{13446}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E030}-\\u{1E06D}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E4D0}-\\u{1E4EB}\\u{1E4F0}-\\u{1E4F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\n    var bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\n    var bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2426\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E3\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82C\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uAB6A\\uAB6B\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAB}-\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10EFD}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10F70}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{11FD5}-\\u{11FF1}\\u{13440}\\u{13447}-\\u{13455}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D1E9}\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6DB}\\u{1D715}\\u{1D74F}\\u{1D789}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E4EC}-\\u{1E4EF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10F}\\u{1F12F}\\u{1F16A}-\\u{1F16F}\\u{1F1AD}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DC}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F776}\\u{1F77B}-\\u{1F7D9}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA7C}\\u{1FA80}-\\u{1FA88}\\u{1FA90}-\\u{1FABD}\\u{1FABF}-\\u{1FAC5}\\u{1FACE}-\\u{1FADB}\\u{1FAE0}-\\u{1FAE8}\\u{1FAF0}-\\u{1FAF8}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\n    var bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10EFD}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{13440}\\u{13447}-\\u{13455}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n    var bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}]/u;\n    var bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u0890\\u0891\\u08E2\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}]/u;\n    var bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u1715\\u171F-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B7E\\u1B80-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31E3\\u31F0-\\u321E\\u3220-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA82C\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB6B\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E-\\uFD4F\\uFDCF\\uFDFD-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10EFD}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{1104D}\\u{11052}-\\u{11075}\\u{1107F}-\\u{110C2}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11147}\\u{11150}-\\u{11176}\\u{11180}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{11241}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11400}-\\u{1145B}\\u{1145D}-\\u{11461}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{11746}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11F00}-\\u{11F10}\\u{11F12}-\\u{11F3A}\\u{11F3E}-\\u{11F59}\\u{11FB0}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{13455}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E030}-\\u{1E06D}\\u{1E08F}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AE}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E4D0}-\\u{1E4F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F1AD}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DC}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F776}\\u{1F77B}-\\u{1F7D9}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA7C}\\u{1FA80}-\\u{1FA88}\\u{1FA90}-\\u{1FABD}\\u{1FABF}-\\u{1FAC5}\\u{1FACE}-\\u{1FADB}\\u{1FAE0}-\\u{1FAE8}\\u{1FAF0}-\\u{1FAF8}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\n    var bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{1123F}\\u{11240}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11F02}-\\u{11F10}\\u{11F12}-\\u{11F35}\\u{11F3E}\\u{11F3F}\\u{11F41}\\u{11F43}-\\u{11F59}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1343F}\\u{13441}-\\u{13446}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E030}-\\u{1E06D}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E4D0}-\\u{1E4EB}\\u{1E4F0}-\\u{1E4F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10EFD}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{13440}\\u{13447}-\\u{13455}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n    module2.exports = {\n      combiningMarks,\n      combiningClassVirama,\n      validZWNJ,\n      bidiDomain,\n      bidiS1LTR,\n      bidiS1RTL,\n      bidiS2,\n      bidiS3,\n      bidiS4EN,\n      bidiS4AN,\n      bidiS5,\n      bidiS6\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/mappingTable.json\nvar require_mappingTable = __commonJS({\n  "../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/mappingTable.json"(exports, module2) {\n    module2.exports = [[[0, 44], 4], [[45, 46], 2], [47, 4], [[48, 57], 2], [[58, 64], 4], [65, 1, "a"], [66, 1, "b"], [67, 1, "c"], [68, 1, "d"], [69, 1, "e"], [70, 1, "f"], [71, 1, "g"], [72, 1, "h"], [73, 1, "i"], [74, 1, "j"], [75, 1, "k"], [76, 1, "l"], [77, 1, "m"], [78, 1, "n"], [79, 1, "o"], [80, 1, "p"], [81, 1, "q"], [82, 1, "r"], [83, 1, "s"], [84, 1, "t"], [85, 1, "u"], [86, 1, "v"], [87, 1, "w"], [88, 1, "x"], [89, 1, "y"], [90, 1, "z"], [[91, 96], 4], [[97, 122], 2], [[123, 127], 4], [[128, 159], 3], [160, 5, " "], [[161, 167], 2], [168, 5, " \\u0308"], [169, 2], [170, 1, "a"], [[171, 172], 2], [173, 7], [174, 2], [175, 5, " \\u0304"], [[176, 177], 2], [178, 1, "2"], [179, 1, "3"], [180, 5, " \\u0301"], [181, 1, "\\u03BC"], [182, 2], [183, 2], [184, 5, " \\u0327"], [185, 1, "1"], [186, 1, "o"], [187, 2], [188, 1, "1\\u20444"], [189, 1, "1\\u20442"], [190, 1, "3\\u20444"], [191, 2], [192, 1, "\\xE0"], [193, 1, "\\xE1"], [194, 1, "\\xE2"], [195, 1, "\\xE3"], [196, 1, "\\xE4"], [197, 1, "\\xE5"], [198, 1, "\\xE6"], [199, 1, "\\xE7"], [200, 1, "\\xE8"], [201, 1, "\\xE9"], [202, 1, "\\xEA"], [203, 1, "\\xEB"], [204, 1, "\\xEC"], [205, 1, "\\xED"], [206, 1, "\\xEE"], [207, 1, "\\xEF"], [208, 1, "\\xF0"], [209, 1, "\\xF1"], [210, 1, "\\xF2"], [211, 1, "\\xF3"], [212, 1, "\\xF4"], [213, 1, "\\xF5"], [214, 1, "\\xF6"], [215, 2], [216, 1, "\\xF8"], [217, 1, "\\xF9"], [218, 1, "\\xFA"], [219, 1, "\\xFB"], [220, 1, "\\xFC"], [221, 1, "\\xFD"], [222, 1, "\\xFE"], [223, 6, "ss"], [[224, 246], 2], [247, 2], [[248, 255], 2], [256, 1, "\\u0101"], [257, 2], [258, 1, "\\u0103"], [259, 2], [260, 1, "\\u0105"], [261, 2], [262, 1, "\\u0107"], [263, 2], [264, 1, "\\u0109"], [265, 2], [266, 1, "\\u010B"], [267, 2], [268, 1, "\\u010D"], [269, 2], [270, 1, "\\u010F"], [271, 2], [272, 1, "\\u0111"], [273, 2], [274, 1, "\\u0113"], [275, 2], [276, 1, "\\u0115"], [277, 2], [278, 1, "\\u0117"], [279, 2], [280, 1, "\\u0119"], [281, 2], [282, 1, "\\u011B"], [283, 2], [284, 1, "\\u011D"], [285, 2], [286, 1, "\\u011F"], [287, 2], [288, 1, "\\u0121"], [289, 2], [290, 1, "\\u0123"], [291, 2], [292, 1, "\\u0125"], [293, 2], [294, 1, "\\u0127"], [295, 2], [296, 1, "\\u0129"], [297, 2], [298, 1, "\\u012B"], [299, 2], [300, 1, "\\u012D"], [301, 2], [302, 1, "\\u012F"], [303, 2], [304, 1, "i\\u0307"], [305, 2], [[306, 307], 1, "ij"], [308, 1, "\\u0135"], [309, 2], [310, 1, "\\u0137"], [[311, 312], 2], [313, 1, "\\u013A"], [314, 2], [315, 1, "\\u013C"], [316, 2], [317, 1, "\\u013E"], [318, 2], [[319, 320], 1, "l\\xB7"], [321, 1, "\\u0142"], [322, 2], [323, 1, "\\u0144"], [324, 2], [325, 1, "\\u0146"], [326, 2], [327, 1, "\\u0148"], [328, 2], [329, 1, "\\u02BCn"], [330, 1, "\\u014B"], [331, 2], [332, 1, "\\u014D"], [333, 2], [334, 1, "\\u014F"], [335, 2], [336, 1, "\\u0151"], [337, 2], [338, 1, "\\u0153"], [339, 2], [340, 1, "\\u0155"], [341, 2], [342, 1, "\\u0157"], [343, 2], [344, 1, "\\u0159"], [345, 2], [346, 1, "\\u015B"], [347, 2], [348, 1, "\\u015D"], [349, 2], [350, 1, "\\u015F"], [351, 2], [352, 1, "\\u0161"], [353, 2], [354, 1, "\\u0163"], [355, 2], [356, 1, "\\u0165"], [357, 2], [358, 1, "\\u0167"], [359, 2], [360, 1, "\\u0169"], [361, 2], [362, 1, "\\u016B"], [363, 2], [364, 1, "\\u016D"], [365, 2], [366, 1, "\\u016F"], [367, 2], [368, 1, "\\u0171"], [369, 2], [370, 1, "\\u0173"], [371, 2], [372, 1, "\\u0175"], [373, 2], [374, 1, "\\u0177"], [375, 2], [376, 1, "\\xFF"], [377, 1, "\\u017A"], [378, 2], [379, 1, "\\u017C"], [380, 2], [381, 1, "\\u017E"], [382, 2], [383, 1, "s"], [384, 2], [385, 1, "\\u0253"], [386, 1, "\\u0183"], [387, 2], [388, 1, "\\u0185"], [389, 2], [390, 1, "\\u0254"], [391, 1, "\\u0188"], [392, 2], [393, 1, "\\u0256"], [394, 1, "\\u0257"], [395, 1, "\\u018C"], [[396, 397], 2], [398, 1, "\\u01DD"], [399, 1, "\\u0259"], [400, 1, "\\u025B"], [401, 1, "\\u0192"], [402, 2], [403, 1, "\\u0260"], [404, 1, "\\u0263"], [405, 2], [406, 1, "\\u0269"], [407, 1, "\\u0268"], [408, 1, "\\u0199"], [[409, 411], 2], [412, 1, "\\u026F"], [413, 1, "\\u0272"], [414, 2], [415, 1, "\\u0275"], [416, 1, "\\u01A1"], [417, 2], [418, 1, "\\u01A3"], [419, 2], [420, 1, "\\u01A5"], [421, 2], [422, 1, "\\u0280"], [423, 1, "\\u01A8"], [424, 2], [425, 1, "\\u0283"], [[426, 427], 2], [428, 1, "\\u01AD"], [429, 2], [430, 1, "\\u0288"], [431, 1, "\\u01B0"], [432, 2], [433, 1, "\\u028A"], [434, 1, "\\u028B"], [435, 1, "\\u01B4"], [436, 2], [437, 1, "\\u01B6"], [438, 2], [439, 1, "\\u0292"], [440, 1, "\\u01B9"], [[441, 443], 2], [444, 1, "\\u01BD"], [[445, 451], 2], [[452, 454], 1, "d\\u017E"], [[455, 457], 1, "lj"], [[458, 460], 1, "nj"], [461, 1, "\\u01CE"], [462, 2], [463, 1, "\\u01D0"], [464, 2], [465, 1, "\\u01D2"], [466, 2], [467, 1, "\\u01D4"], [468, 2], [469, 1, "\\u01D6"], [470, 2], [471, 1, "\\u01D8"], [472, 2], [473, 1, "\\u01DA"], [474, 2], [475, 1, "\\u01DC"], [[476, 477], 2], [478, 1, "\\u01DF"], [479, 2], [480, 1, "\\u01E1"], [481, 2], [482, 1, "\\u01E3"], [483, 2], [484, 1, "\\u01E5"], [485, 2], [486, 1, "\\u01E7"], [487, 2], [488, 1, "\\u01E9"], [489, 2], [490, 1, "\\u01EB"], [491, 2], [492, 1, "\\u01ED"], [493, 2], [494, 1, "\\u01EF"], [[495, 496], 2], [[497, 499], 1, "dz"], [500, 1, "\\u01F5"], [501, 2], [502, 1, "\\u0195"], [503, 1, "\\u01BF"], [504, 1, "\\u01F9"], [505, 2], [506, 1, "\\u01FB"], [507, 2], [508, 1, "\\u01FD"], [509, 2], [510, 1, "\\u01FF"], [511, 2], [512, 1, "\\u0201"], [513, 2], [514, 1, "\\u0203"], [515, 2], [516, 1, "\\u0205"], [517, 2], [518, 1, "\\u0207"], [519, 2], [520, 1, "\\u0209"], [521, 2], [522, 1, "\\u020B"], [523, 2], [524, 1, "\\u020D"], [525, 2], [526, 1, "\\u020F"], [527, 2], [528, 1, "\\u0211"], [529, 2], [530, 1, "\\u0213"], [531, 2], [532, 1, "\\u0215"], [533, 2], [534, 1, "\\u0217"], [535, 2], [536, 1, "\\u0219"], [537, 2], [538, 1, "\\u021B"], [539, 2], [540, 1, "\\u021D"], [541, 2], [542, 1, "\\u021F"], [543, 2], [544, 1, "\\u019E"], [545, 2], [546, 1, "\\u0223"], [547, 2], [548, 1, "\\u0225"], [549, 2], [550, 1, "\\u0227"], [551, 2], [552, 1, "\\u0229"], [553, 2], [554, 1, "\\u022B"], [555, 2], [556, 1, "\\u022D"], [557, 2], [558, 1, "\\u022F"], [559, 2], [560, 1, "\\u0231"], [561, 2], [562, 1, "\\u0233"], [563, 2], [[564, 566], 2], [[567, 569], 2], [570, 1, "\\u2C65"], [571, 1, "\\u023C"], [572, 2], [573, 1, "\\u019A"], [574, 1, "\\u2C66"], [[575, 576], 2], [577, 1, "\\u0242"], [578, 2], [579, 1, "\\u0180"], [580, 1, "\\u0289"], [581, 1, "\\u028C"], [582, 1, "\\u0247"], [583, 2], [584, 1, "\\u0249"], [585, 2], [586, 1, "\\u024B"], [587, 2], [588, 1, "\\u024D"], [589, 2], [590, 1, "\\u024F"], [591, 2], [[592, 680], 2], [[681, 685], 2], [[686, 687], 2], [688, 1, "h"], [689, 1, "\\u0266"], [690, 1, "j"], [691, 1, "r"], [692, 1, "\\u0279"], [693, 1, "\\u027B"], [694, 1, "\\u0281"], [695, 1, "w"], [696, 1, "y"], [[697, 705], 2], [[706, 709], 2], [[710, 721], 2], [[722, 727], 2], [728, 5, " \\u0306"], [729, 5, " \\u0307"], [730, 5, " \\u030A"], [731, 5, " \\u0328"], [732, 5, " \\u0303"], [733, 5, " \\u030B"], [734, 2], [735, 2], [736, 1, "\\u0263"], [737, 1, "l"], [738, 1, "s"], [739, 1, "x"], [740, 1, "\\u0295"], [[741, 745], 2], [[746, 747], 2], [748, 2], [749, 2], [750, 2], [[751, 767], 2], [[768, 831], 2], [832, 1, "\\u0300"], [833, 1, "\\u0301"], [834, 2], [835, 1, "\\u0313"], [836, 1, "\\u0308\\u0301"], [837, 1, "\\u03B9"], [[838, 846], 2], [847, 7], [[848, 855], 2], [[856, 860], 2], [[861, 863], 2], [[864, 865], 2], [866, 2], [[867, 879], 2], [880, 1, "\\u0371"], [881, 2], [882, 1, "\\u0373"], [883, 2], [884, 1, "\\u02B9"], [885, 2], [886, 1, "\\u0377"], [887, 2], [[888, 889], 3], [890, 5, " \\u03B9"], [[891, 893], 2], [894, 5, ";"], [895, 1, "\\u03F3"], [[896, 899], 3], [900, 5, " \\u0301"], [901, 5, " \\u0308\\u0301"], [902, 1, "\\u03AC"], [903, 1, "\\xB7"], [904, 1, "\\u03AD"], [905, 1, "\\u03AE"], [906, 1, "\\u03AF"], [907, 3], [908, 1, "\\u03CC"], [909, 3], [910, 1, "\\u03CD"], [911, 1, "\\u03CE"], [912, 2], [913, 1, "\\u03B1"], [914, 1, "\\u03B2"], [915, 1, "\\u03B3"], [916, 1, "\\u03B4"], [917, 1, "\\u03B5"], [918, 1, "\\u03B6"], [919, 1, "\\u03B7"], [920, 1, "\\u03B8"], [921, 1, "\\u03B9"], [922, 1, "\\u03BA"], [923, 1, "\\u03BB"], [924, 1, "\\u03BC"], [925, 1, "\\u03BD"], [926, 1, "\\u03BE"], [927, 1, "\\u03BF"], [928, 1, "\\u03C0"], [929, 1, "\\u03C1"], [930, 3], [931, 1, "\\u03C3"], [932, 1, "\\u03C4"], [933, 1, "\\u03C5"], [934, 1, "\\u03C6"], [935, 1, "\\u03C7"], [936, 1, "\\u03C8"], [937, 1, "\\u03C9"], [938, 1, "\\u03CA"], [939, 1, "\\u03CB"], [[940, 961], 2], [962, 6, "\\u03C3"], [[963, 974], 2], [975, 1, "\\u03D7"], [976, 1, "\\u03B2"], [977, 1, "\\u03B8"], [978, 1, "\\u03C5"], [979, 1, "\\u03CD"], [980, 1, "\\u03CB"], [981, 1, "\\u03C6"], [982, 1, "\\u03C0"], [983, 2], [984, 1, "\\u03D9"], [985, 2], [986, 1, "\\u03DB"], [987, 2], [988, 1, "\\u03DD"], [989, 2], [990, 1, "\\u03DF"], [991, 2], [992, 1, "\\u03E1"], [993, 2], [994, 1, "\\u03E3"], [995, 2], [996, 1, "\\u03E5"], [997, 2], [998, 1, "\\u03E7"], [999, 2], [1e3, 1, "\\u03E9"], [1001, 2], [1002, 1, "\\u03EB"], [1003, 2], [1004, 1, "\\u03ED"], [1005, 2], [1006, 1, "\\u03EF"], [1007, 2], [1008, 1, "\\u03BA"], [1009, 1, "\\u03C1"], [1010, 1, "\\u03C3"], [1011, 2], [1012, 1, "\\u03B8"], [1013, 1, "\\u03B5"], [1014, 2], [1015, 1, "\\u03F8"], [1016, 2], [1017, 1, "\\u03C3"], [1018, 1, "\\u03FB"], [1019, 2], [1020, 2], [1021, 1, "\\u037B"], [1022, 1, "\\u037C"], [1023, 1, "\\u037D"], [1024, 1, "\\u0450"], [1025, 1, "\\u0451"], [1026, 1, "\\u0452"], [1027, 1, "\\u0453"], [1028, 1, "\\u0454"], [1029, 1, "\\u0455"], [1030, 1, "\\u0456"], [1031, 1, "\\u0457"], [1032, 1, "\\u0458"], [1033, 1, "\\u0459"], [1034, 1, "\\u045A"], [1035, 1, "\\u045B"], [1036, 1, "\\u045C"], [1037, 1, "\\u045D"], [1038, 1, "\\u045E"], [1039, 1, "\\u045F"], [1040, 1, "\\u0430"], [1041, 1, "\\u0431"], [1042, 1, "\\u0432"], [1043, 1, "\\u0433"], [1044, 1, "\\u0434"], [1045, 1, "\\u0435"], [1046, 1, "\\u0436"], [1047, 1, "\\u0437"], [1048, 1, "\\u0438"], [1049, 1, "\\u0439"], [1050, 1, "\\u043A"], [1051, 1, "\\u043B"], [1052, 1, "\\u043C"], [1053, 1, "\\u043D"], [1054, 1, "\\u043E"], [1055, 1, "\\u043F"], [1056, 1, "\\u0440"], [1057, 1, "\\u0441"], [1058, 1, "\\u0442"], [1059, 1, "\\u0443"], [1060, 1, "\\u0444"], [1061, 1, "\\u0445"], [1062, 1, "\\u0446"], [1063, 1, "\\u0447"], [1064, 1, "\\u0448"], [1065, 1, "\\u0449"], [1066, 1, "\\u044A"], [1067, 1, "\\u044B"], [1068, 1, "\\u044C"], [1069, 1, "\\u044D"], [1070, 1, "\\u044E"], [1071, 1, "\\u044F"], [[1072, 1103], 2], [1104, 2], [[1105, 1116], 2], [1117, 2], [[1118, 1119], 2], [1120, 1, "\\u0461"], [1121, 2], [1122, 1, "\\u0463"], [1123, 2], [1124, 1, "\\u0465"], [1125, 2], [1126, 1, "\\u0467"], [1127, 2], [1128, 1, "\\u0469"], [1129, 2], [1130, 1, "\\u046B"], [1131, 2], [1132, 1, "\\u046D"], [1133, 2], [1134, 1, "\\u046F"], [1135, 2], [1136, 1, "\\u0471"], [1137, 2], [1138, 1, "\\u0473"], [1139, 2], [1140, 1, "\\u0475"], [1141, 2], [1142, 1, "\\u0477"], [1143, 2], [1144, 1, "\\u0479"], [1145, 2], [1146, 1, "\\u047B"], [1147, 2], [1148, 1, "\\u047D"], [1149, 2], [1150, 1, "\\u047F"], [1151, 2], [1152, 1, "\\u0481"], [1153, 2], [1154, 2], [[1155, 1158], 2], [1159, 2], [[1160, 1161], 2], [1162, 1, "\\u048B"], [1163, 2], [1164, 1, "\\u048D"], [1165, 2], [1166, 1, "\\u048F"], [1167, 2], [1168, 1, "\\u0491"], [1169, 2], [1170, 1, "\\u0493"], [1171, 2], [1172, 1, "\\u0495"], [1173, 2], [1174, 1, "\\u0497"], [1175, 2], [1176, 1, "\\u0499"], [1177, 2], [1178, 1, "\\u049B"], [1179, 2], [1180, 1, "\\u049D"], [1181, 2], [1182, 1, "\\u049F"], [1183, 2], [1184, 1, "\\u04A1"], [1185, 2], [1186, 1, "\\u04A3"], [1187, 2], [1188, 1, "\\u04A5"], [1189, 2], [1190, 1, "\\u04A7"], [1191, 2], [1192, 1, "\\u04A9"], [1193, 2], [1194, 1, "\\u04AB"], [1195, 2], [1196, 1, "\\u04AD"], [1197, 2], [1198, 1, "\\u04AF"], [1199, 2], [1200, 1, "\\u04B1"], [1201, 2], [1202, 1, "\\u04B3"], [1203, 2], [1204, 1, "\\u04B5"], [1205, 2], [1206, 1, "\\u04B7"], [1207, 2], [1208, 1, "\\u04B9"], [1209, 2], [1210, 1, "\\u04BB"], [1211, 2], [1212, 1, "\\u04BD"], [1213, 2], [1214, 1, "\\u04BF"], [1215, 2], [1216, 3], [1217, 1, "\\u04C2"], [1218, 2], [1219, 1, "\\u04C4"], [1220, 2], [1221, 1, "\\u04C6"], [1222, 2], [1223, 1, "\\u04C8"], [1224, 2], [1225, 1, "\\u04CA"], [1226, 2], [1227, 1, "\\u04CC"], [1228, 2], [1229, 1, "\\u04CE"], [1230, 2], [1231, 2], [1232, 1, "\\u04D1"], [1233, 2], [1234, 1, "\\u04D3"], [1235, 2], [1236, 1, "\\u04D5"], [1237, 2], [1238, 1, "\\u04D7"], [1239, 2], [1240, 1, "\\u04D9"], [1241, 2], [1242, 1, "\\u04DB"], [1243, 2], [1244, 1, "\\u04DD"], [1245, 2], [1246, 1, "\\u04DF"], [1247, 2], [1248, 1, "\\u04E1"], [1249, 2], [1250, 1, "\\u04E3"], [1251, 2], [1252, 1, "\\u04E5"], [1253, 2], [1254, 1, "\\u04E7"], [1255, 2], [1256, 1, "\\u04E9"], [1257, 2], [1258, 1, "\\u04EB"], [1259, 2], [1260, 1, "\\u04ED"], [1261, 2], [1262, 1, "\\u04EF"], [1263, 2], [1264, 1, "\\u04F1"], [1265, 2], [1266, 1, "\\u04F3"], [1267, 2], [1268, 1, "\\u04F5"], [1269, 2], [1270, 1, "\\u04F7"], [1271, 2], [1272, 1, "\\u04F9"], [1273, 2], [1274, 1, "\\u04FB"], [1275, 2], [1276, 1, "\\u04FD"], [1277, 2], [1278, 1, "\\u04FF"], [1279, 2], [1280, 1, "\\u0501"], [1281, 2], [1282, 1, "\\u0503"], [1283, 2], [1284, 1, "\\u0505"], [1285, 2], [1286, 1, "\\u0507"], [1287, 2], [1288, 1, "\\u0509"], [1289, 2], [1290, 1, "\\u050B"], [1291, 2], [1292, 1, "\\u050D"], [1293, 2], [1294, 1, "\\u050F"], [1295, 2], [1296, 1, "\\u0511"], [1297, 2], [1298, 1, "\\u0513"], [1299, 2], [1300, 1, "\\u0515"], [1301, 2], [1302, 1, "\\u0517"], [1303, 2], [1304, 1, "\\u0519"], [1305, 2], [1306, 1, "\\u051B"], [1307, 2], [1308, 1, "\\u051D"], [1309, 2], [1310, 1, "\\u051F"], [1311, 2], [1312, 1, "\\u0521"], [1313, 2], [1314, 1, "\\u0523"], [1315, 2], [1316, 1, "\\u0525"], [1317, 2], [1318, 1, "\\u0527"], [1319, 2], [1320, 1, "\\u0529"], [1321, 2], [1322, 1, "\\u052B"], [1323, 2], [1324, 1, "\\u052D"], [1325, 2], [1326, 1, "\\u052F"], [1327, 2], [1328, 3], [1329, 1, "\\u0561"], [1330, 1, "\\u0562"], [1331, 1, "\\u0563"], [1332, 1, "\\u0564"], [1333, 1, "\\u0565"], [1334, 1, "\\u0566"], [1335, 1, "\\u0567"], [1336, 1, "\\u0568"], [1337, 1, "\\u0569"], [1338, 1, "\\u056A"], [1339, 1, "\\u056B"], [1340, 1, "\\u056C"], [1341, 1, "\\u056D"], [1342, 1, "\\u056E"], [1343, 1, "\\u056F"], [1344, 1, "\\u0570"], [1345, 1, "\\u0571"], [1346, 1, "\\u0572"], [1347, 1, "\\u0573"], [1348, 1, "\\u0574"], [1349, 1, "\\u0575"], [1350, 1, "\\u0576"], [1351, 1, "\\u0577"], [1352, 1, "\\u0578"], [1353, 1, "\\u0579"], [1354, 1, "\\u057A"], [1355, 1, "\\u057B"], [1356, 1, "\\u057C"], [1357, 1, "\\u057D"], [1358, 1, "\\u057E"], [1359, 1, "\\u057F"], [1360, 1, "\\u0580"], [1361, 1, "\\u0581"], [1362, 1, "\\u0582"], [1363, 1, "\\u0583"], [1364, 1, "\\u0584"], [1365, 1, "\\u0585"], [1366, 1, "\\u0586"], [[1367, 1368], 3], [1369, 2], [[1370, 1375], 2], [1376, 2], [[1377, 1414], 2], [1415, 1, "\\u0565\\u0582"], [1416, 2], [1417, 2], [1418, 2], [[1419, 1420], 3], [[1421, 1422], 2], [1423, 2], [1424, 3], [[1425, 1441], 2], [1442, 2], [[1443, 1455], 2], [[1456, 1465], 2], [1466, 2], [[1467, 1469], 2], [1470, 2], [1471, 2], [1472, 2], [[1473, 1474], 2], [1475, 2], [1476, 2], [1477, 2], [1478, 2], [1479, 2], [[1480, 1487], 3], [[1488, 1514], 2], [[1515, 1518], 3], [1519, 2], [[1520, 1524], 2], [[1525, 1535], 3], [[1536, 1539], 3], [1540, 3], [1541, 3], [[1542, 1546], 2], [1547, 2], [1548, 2], [[1549, 1551], 2], [[1552, 1557], 2], [[1558, 1562], 2], [1563, 2], [1564, 3], [1565, 2], [1566, 2], [1567, 2], [1568, 2], [[1569, 1594], 2], [[1595, 1599], 2], [1600, 2], [[1601, 1618], 2], [[1619, 1621], 2], [[1622, 1624], 2], [[1625, 1630], 2], [1631, 2], [[1632, 1641], 2], [[1642, 1645], 2], [[1646, 1647], 2], [[1648, 1652], 2], [1653, 1, "\\u0627\\u0674"], [1654, 1, "\\u0648\\u0674"], [1655, 1, "\\u06C7\\u0674"], [1656, 1, "\\u064A\\u0674"], [[1657, 1719], 2], [[1720, 1721], 2], [[1722, 1726], 2], [1727, 2], [[1728, 1742], 2], [1743, 2], [[1744, 1747], 2], [1748, 2], [[1749, 1756], 2], [1757, 3], [1758, 2], [[1759, 1768], 2], [1769, 2], [[1770, 1773], 2], [[1774, 1775], 2], [[1776, 1785], 2], [[1786, 1790], 2], [1791, 2], [[1792, 1805], 2], [1806, 3], [1807, 3], [[1808, 1836], 2], [[1837, 1839], 2], [[1840, 1866], 2], [[1867, 1868], 3], [[1869, 1871], 2], [[1872, 1901], 2], [[1902, 1919], 2], [[1920, 1968], 2], [1969, 2], [[1970, 1983], 3], [[1984, 2037], 2], [[2038, 2042], 2], [[2043, 2044], 3], [2045, 2], [[2046, 2047], 2], [[2048, 2093], 2], [[2094, 2095], 3], [[2096, 2110], 2], [2111, 3], [[2112, 2139], 2], [[2140, 2141], 3], [2142, 2], [2143, 3], [[2144, 2154], 2], [[2155, 2159], 3], [[2160, 2183], 2], [2184, 2], [[2185, 2190], 2], [2191, 3], [[2192, 2193], 3], [[2194, 2199], 3], [[2200, 2207], 2], [2208, 2], [2209, 2], [[2210, 2220], 2], [[2221, 2226], 2], [[2227, 2228], 2], [2229, 2], [[2230, 2237], 2], [[2238, 2247], 2], [[2248, 2258], 2], [2259, 2], [[2260, 2273], 2], [2274, 3], [2275, 2], [[2276, 2302], 2], [2303, 2], [2304, 2], [[2305, 2307], 2], [2308, 2], [[2309, 2361], 2], [[2362, 2363], 2], [[2364, 2381], 2], [2382, 2], [2383, 2], [[2384, 2388], 2], [2389, 2], [[2390, 2391], 2], [2392, 1, "\\u0915\\u093C"], [2393, 1, "\\u0916\\u093C"], [2394, 1, "\\u0917\\u093C"], [2395, 1, "\\u091C\\u093C"], [2396, 1, "\\u0921\\u093C"], [2397, 1, "\\u0922\\u093C"], [2398, 1, "\\u092B\\u093C"], [2399, 1, "\\u092F\\u093C"], [[2400, 2403], 2], [[2404, 2405], 2], [[2406, 2415], 2], [2416, 2], [[2417, 2418], 2], [[2419, 2423], 2], [2424, 2], [[2425, 2426], 2], [[2427, 2428], 2], [2429, 2], [[2430, 2431], 2], [2432, 2], [[2433, 2435], 2], [2436, 3], [[2437, 2444], 2], [[2445, 2446], 3], [[2447, 2448], 2], [[2449, 2450], 3], [[2451, 2472], 2], [2473, 3], [[2474, 2480], 2], [2481, 3], [2482, 2], [[2483, 2485], 3], [[2486, 2489], 2], [[2490, 2491], 3], [2492, 2], [2493, 2], [[2494, 2500], 2], [[2501, 2502], 3], [[2503, 2504], 2], [[2505, 2506], 3], [[2507, 2509], 2], [2510, 2], [[2511, 2518], 3], [2519, 2], [[2520, 2523], 3], [2524, 1, "\\u09A1\\u09BC"], [2525, 1, "\\u09A2\\u09BC"], [2526, 3], [2527, 1, "\\u09AF\\u09BC"], [[2528, 2531], 2], [[2532, 2533], 3], [[2534, 2545], 2], [[2546, 2554], 2], [2555, 2], [2556, 2], [2557, 2], [2558, 2], [[2559, 2560], 3], [2561, 2], [2562, 2], [2563, 2], [2564, 3], [[2565, 2570], 2], [[2571, 2574], 3], [[2575, 2576], 2], [[2577, 2578], 3], [[2579, 2600], 2], [2601, 3], [[2602, 2608], 2], [2609, 3], [2610, 2], [2611, 1, "\\u0A32\\u0A3C"], [2612, 3], [2613, 2], [2614, 1, "\\u0A38\\u0A3C"], [2615, 3], [[2616, 2617], 2], [[2618, 2619], 3], [2620, 2], [2621, 3], [[2622, 2626], 2], [[2627, 2630], 3], [[2631, 2632], 2], [[2633, 2634], 3], [[2635, 2637], 2], [[2638, 2640], 3], [2641, 2], [[2642, 2648], 3], [2649, 1, "\\u0A16\\u0A3C"], [2650, 1, "\\u0A17\\u0A3C"], [2651, 1, "\\u0A1C\\u0A3C"], [2652, 2], [2653, 3], [2654, 1, "\\u0A2B\\u0A3C"], [[2655, 2661], 3], [[2662, 2676], 2], [2677, 2], [2678, 2], [[2679, 2688], 3], [[2689, 2691], 2], [2692, 3], [[2693, 2699], 2], [2700, 2], [2701, 2], [2702, 3], [[2703, 2705], 2], [2706, 3], [[2707, 2728], 2], [2729, 3], [[2730, 2736], 2], [2737, 3], [[2738, 2739], 2], [2740, 3], [[2741, 2745], 2], [[2746, 2747], 3], [[2748, 2757], 2], [2758, 3], [[2759, 2761], 2], [2762, 3], [[2763, 2765], 2], [[2766, 2767], 3], [2768, 2], [[2769, 2783], 3], [2784, 2], [[2785, 2787], 2], [[2788, 2789], 3], [[2790, 2799], 2], [2800, 2], [2801, 2], [[2802, 2808], 3], [2809, 2], [[2810, 2815], 2], [2816, 3], [[2817, 2819], 2], [2820, 3], [[2821, 2828], 2], [[2829, 2830], 3], [[2831, 2832], 2], [[2833, 2834], 3], [[2835, 2856], 2], [2857, 3], [[2858, 2864], 2], [2865, 3], [[2866, 2867], 2], [2868, 3], [2869, 2], [[2870, 2873], 2], [[2874, 2875], 3], [[2876, 2883], 2], [2884, 2], [[2885, 2886], 3], [[2887, 2888], 2], [[2889, 2890], 3], [[2891, 2893], 2], [[2894, 2900], 3], [2901, 2], [[2902, 2903], 2], [[2904, 2907], 3], [2908, 1, "\\u0B21\\u0B3C"], [2909, 1, "\\u0B22\\u0B3C"], [2910, 3], [[2911, 2913], 2], [[2914, 2915], 2], [[2916, 2917], 3], [[2918, 2927], 2], [2928, 2], [2929, 2], [[2930, 2935], 2], [[2936, 2945], 3], [[2946, 2947], 2], [2948, 3], [[2949, 2954], 2], [[2955, 2957], 3], [[2958, 2960], 2], [2961, 3], [[2962, 2965], 2], [[2966, 2968], 3], [[2969, 2970], 2], [2971, 3], [2972, 2], [2973, 3], [[2974, 2975], 2], [[2976, 2978], 3], [[2979, 2980], 2], [[2981, 2983], 3], [[2984, 2986], 2], [[2987, 2989], 3], [[2990, 2997], 2], [2998, 2], [[2999, 3001], 2], [[3002, 3005], 3], [[3006, 3010], 2], [[3011, 3013], 3], [[3014, 3016], 2], [3017, 3], [[3018, 3021], 2], [[3022, 3023], 3], [3024, 2], [[3025, 3030], 3], [3031, 2], [[3032, 3045], 3], [3046, 2], [[3047, 3055], 2], [[3056, 3058], 2], [[3059, 3066], 2], [[3067, 3071], 3], [3072, 2], [[3073, 3075], 2], [3076, 2], [[3077, 3084], 2], [3085, 3], [[3086, 3088], 2], [3089, 3], [[3090, 3112], 2], [3113, 3], [[3114, 3123], 2], [3124, 2], [[3125, 3129], 2], [[3130, 3131], 3], [3132, 2], [3133, 2], [[3134, 3140], 2], [3141, 3], [[3142, 3144], 2], [3145, 3], [[3146, 3149], 2], [[3150, 3156], 3], [[3157, 3158], 2], [3159, 3], [[3160, 3161], 2], [3162, 2], [[3163, 3164], 3], [3165, 2], [[3166, 3167], 3], [[3168, 3169], 2], [[3170, 3171], 2], [[3172, 3173], 3], [[3174, 3183], 2], [[3184, 3190], 3], [3191, 2], [[3192, 3199], 2], [3200, 2], [3201, 2], [[3202, 3203], 2], [3204, 2], [[3205, 3212], 2], [3213, 3], [[3214, 3216], 2], [3217, 3], [[3218, 3240], 2], [3241, 3], [[3242, 3251], 2], [3252, 3], [[3253, 3257], 2], [[3258, 3259], 3], [[3260, 3261], 2], [[3262, 3268], 2], [3269, 3], [[3270, 3272], 2], [3273, 3], [[3274, 3277], 2], [[3278, 3284], 3], [[3285, 3286], 2], [[3287, 3292], 3], [3293, 2], [3294, 2], [3295, 3], [[3296, 3297], 2], [[3298, 3299], 2], [[3300, 3301], 3], [[3302, 3311], 2], [3312, 3], [[3313, 3314], 2], [3315, 2], [[3316, 3327], 3], [3328, 2], [3329, 2], [[3330, 3331], 2], [3332, 2], [[3333, 3340], 2], [3341, 3], [[3342, 3344], 2], [3345, 3], [[3346, 3368], 2], [3369, 2], [[3370, 3385], 2], [3386, 2], [[3387, 3388], 2], [3389, 2], [[3390, 3395], 2], [3396, 2], [3397, 3], [[3398, 3400], 2], [3401, 3], [[3402, 3405], 2], [3406, 2], [3407, 2], [[3408, 3411], 3], [[3412, 3414], 2], [3415, 2], [[3416, 3422], 2], [3423, 2], [[3424, 3425], 2], [[3426, 3427], 2], [[3428, 3429], 3], [[3430, 3439], 2], [[3440, 3445], 2], [[3446, 3448], 2], [3449, 2], [[3450, 3455], 2], [3456, 3], [3457, 2], [[3458, 3459], 2], [3460, 3], [[3461, 3478], 2], [[3479, 3481], 3], [[3482, 3505], 2], [3506, 3], [[3507, 3515], 2], [3516, 3], [3517, 2], [[3518, 3519], 3], [[3520, 3526], 2], [[3527, 3529], 3], [3530, 2], [[3531, 3534], 3], [[3535, 3540], 2], [3541, 3], [3542, 2], [3543, 3], [[3544, 3551], 2], [[3552, 3557], 3], [[3558, 3567], 2], [[3568, 3569], 3], [[3570, 3571], 2], [3572, 2], [[3573, 3584], 3], [[3585, 3634], 2], [3635, 1, "\\u0E4D\\u0E32"], [[3636, 3642], 2], [[3643, 3646], 3], [3647, 2], [[3648, 3662], 2], [3663, 2], [[3664, 3673], 2], [[3674, 3675], 2], [[3676, 3712], 3], [[3713, 3714], 2], [3715, 3], [3716, 2], [3717, 3], [3718, 2], [[3719, 3720], 2], [3721, 2], [3722, 2], [3723, 3], [3724, 2], [3725, 2], [[3726, 3731], 2], [[3732, 3735], 2], [3736, 2], [[3737, 3743], 2], [3744, 2], [[3745, 3747], 2], [3748, 3], [3749, 2], [3750, 3], [3751, 2], [[3752, 3753], 2], [[3754, 3755], 2], [3756, 2], [[3757, 3762], 2], [3763, 1, "\\u0ECD\\u0EB2"], [[3764, 3769], 2], [3770, 2], [[3771, 3773], 2], [[3774, 3775], 3], [[3776, 3780], 2], [3781, 3], [3782, 2], [3783, 3], [[3784, 3789], 2], [3790, 2], [3791, 3], [[3792, 3801], 2], [[3802, 3803], 3], [3804, 1, "\\u0EAB\\u0E99"], [3805, 1, "\\u0EAB\\u0EA1"], [[3806, 3807], 2], [[3808, 3839], 3], [3840, 2], [[3841, 3850], 2], [3851, 2], [3852, 1, "\\u0F0B"], [[3853, 3863], 2], [[3864, 3865], 2], [[3866, 3871], 2], [[3872, 3881], 2], [[3882, 3892], 2], [3893, 2], [3894, 2], [3895, 2], [3896, 2], [3897, 2], [[3898, 3901], 2], [[3902, 3906], 2], [3907, 1, "\\u0F42\\u0FB7"], [[3908, 3911], 2], [3912, 3], [[3913, 3916], 2], [3917, 1, "\\u0F4C\\u0FB7"], [[3918, 3921], 2], [3922, 1, "\\u0F51\\u0FB7"], [[3923, 3926], 2], [3927, 1, "\\u0F56\\u0FB7"], [[3928, 3931], 2], [3932, 1, "\\u0F5B\\u0FB7"], [[3933, 3944], 2], [3945, 1, "\\u0F40\\u0FB5"], [3946, 2], [[3947, 3948], 2], [[3949, 3952], 3], [[3953, 3954], 2], [3955, 1, "\\u0F71\\u0F72"], [3956, 2], [3957, 1, "\\u0F71\\u0F74"], [3958, 1, "\\u0FB2\\u0F80"], [3959, 1, "\\u0FB2\\u0F71\\u0F80"], [3960, 1, "\\u0FB3\\u0F80"], [3961, 1, "\\u0FB3\\u0F71\\u0F80"], [[3962, 3968], 2], [3969, 1, "\\u0F71\\u0F80"], [[3970, 3972], 2], [3973, 2], [[3974, 3979], 2], [[3980, 3983], 2], [[3984, 3986], 2], [3987, 1, "\\u0F92\\u0FB7"], [[3988, 3989], 2], [3990, 2], [3991, 2], [3992, 3], [[3993, 3996], 2], [3997, 1, "\\u0F9C\\u0FB7"], [[3998, 4001], 2], [4002, 1, "\\u0FA1\\u0FB7"], [[4003, 4006], 2], [4007, 1, "\\u0FA6\\u0FB7"], [[4008, 4011], 2], [4012, 1, "\\u0FAB\\u0FB7"], [4013, 2], [[4014, 4016], 2], [[4017, 4023], 2], [4024, 2], [4025, 1, "\\u0F90\\u0FB5"], [[4026, 4028], 2], [4029, 3], [[4030, 4037], 2], [4038, 2], [[4039, 4044], 2], [4045, 3], [4046, 2], [4047, 2], [[4048, 4049], 2], [[4050, 4052], 2], [[4053, 4056], 2], [[4057, 4058], 2], [[4059, 4095], 3], [[4096, 4129], 2], [4130, 2], [[4131, 4135], 2], [4136, 2], [[4137, 4138], 2], [4139, 2], [[4140, 4146], 2], [[4147, 4149], 2], [[4150, 4153], 2], [[4154, 4159], 2], [[4160, 4169], 2], [[4170, 4175], 2], [[4176, 4185], 2], [[4186, 4249], 2], [[4250, 4253], 2], [[4254, 4255], 2], [[4256, 4293], 3], [4294, 3], [4295, 1, "\\u2D27"], [[4296, 4300], 3], [4301, 1, "\\u2D2D"], [[4302, 4303], 3], [[4304, 4342], 2], [[4343, 4344], 2], [[4345, 4346], 2], [4347, 2], [4348, 1, "\\u10DC"], [[4349, 4351], 2], [[4352, 4441], 2], [[4442, 4446], 2], [[4447, 4448], 3], [[4449, 4514], 2], [[4515, 4519], 2], [[4520, 4601], 2], [[4602, 4607], 2], [[4608, 4614], 2], [4615, 2], [[4616, 4678], 2], [4679, 2], [4680, 2], [4681, 3], [[4682, 4685], 2], [[4686, 4687], 3], [[4688, 4694], 2], [4695, 3], [4696, 2], [4697, 3], [[4698, 4701], 2], [[4702, 4703], 3], [[4704, 4742], 2], [4743, 2], [4744, 2], [4745, 3], [[4746, 4749], 2], [[4750, 4751], 3], [[4752, 4782], 2], [4783, 2], [4784, 2], [4785, 3], [[4786, 4789], 2], [[4790, 4791], 3], [[4792, 4798], 2], [4799, 3], [4800, 2], [4801, 3], [[4802, 4805], 2], [[4806, 4807], 3], [[4808, 4814], 2], [4815, 2], [[4816, 4822], 2], [4823, 3], [[4824, 4846], 2], [4847, 2], [[4848, 4878], 2], [4879, 2], [4880, 2], [4881, 3], [[4882, 4885], 2], [[4886, 4887], 3], [[4888, 4894], 2], [4895, 2], [[4896, 4934], 2], [4935, 2], [[4936, 4954], 2], [[4955, 4956], 3], [[4957, 4958], 2], [4959, 2], [4960, 2], [[4961, 4988], 2], [[4989, 4991], 3], [[4992, 5007], 2], [[5008, 5017], 2], [[5018, 5023], 3], [[5024, 5108], 2], [5109, 2], [[5110, 5111], 3], [5112, 1, "\\u13F0"], [5113, 1, "\\u13F1"], [5114, 1, "\\u13F2"], [5115, 1, "\\u13F3"], [5116, 1, "\\u13F4"], [5117, 1, "\\u13F5"], [[5118, 5119], 3], [5120, 2], [[5121, 5740], 2], [[5741, 5742], 2], [[5743, 5750], 2], [[5751, 5759], 2], [5760, 3], [[5761, 5786], 2], [[5787, 5788], 2], [[5789, 5791], 3], [[5792, 5866], 2], [[5867, 5872], 2], [[5873, 5880], 2], [[5881, 5887], 3], [[5888, 5900], 2], [5901, 2], [[5902, 5908], 2], [5909, 2], [[5910, 5918], 3], [5919, 2], [[5920, 5940], 2], [[5941, 5942], 2], [[5943, 5951], 3], [[5952, 5971], 2], [[5972, 5983], 3], [[5984, 5996], 2], [5997, 3], [[5998, 6e3], 2], [6001, 3], [[6002, 6003], 2], [[6004, 6015], 3], [[6016, 6067], 2], [[6068, 6069], 3], [[6070, 6099], 2], [[6100, 6102], 2], [6103, 2], [[6104, 6107], 2], [6108, 2], [6109, 2], [[6110, 6111], 3], [[6112, 6121], 2], [[6122, 6127], 3], [[6128, 6137], 2], [[6138, 6143], 3], [[6144, 6149], 2], [6150, 3], [[6151, 6154], 2], [[6155, 6157], 7], [6158, 3], [6159, 7], [[6160, 6169], 2], [[6170, 6175], 3], [[6176, 6263], 2], [6264, 2], [[6265, 6271], 3], [[6272, 6313], 2], [6314, 2], [[6315, 6319], 3], [[6320, 6389], 2], [[6390, 6399], 3], [[6400, 6428], 2], [[6429, 6430], 2], [6431, 3], [[6432, 6443], 2], [[6444, 6447], 3], [[6448, 6459], 2], [[6460, 6463], 3], [6464, 2], [[6465, 6467], 3], [[6468, 6469], 2], [[6470, 6509], 2], [[6510, 6511], 3], [[6512, 6516], 2], [[6517, 6527], 3], [[6528, 6569], 2], [[6570, 6571], 2], [[6572, 6575], 3], [[6576, 6601], 2], [[6602, 6607], 3], [[6608, 6617], 2], [6618, 2], [[6619, 6621], 3], [[6622, 6623], 2], [[6624, 6655], 2], [[6656, 6683], 2], [[6684, 6685], 3], [[6686, 6687], 2], [[6688, 6750], 2], [6751, 3], [[6752, 6780], 2], [[6781, 6782], 3], [[6783, 6793], 2], [[6794, 6799], 3], [[6800, 6809], 2], [[6810, 6815], 3], [[6816, 6822], 2], [6823, 2], [[6824, 6829], 2], [[6830, 6831], 3], [[6832, 6845], 2], [6846, 2], [[6847, 6848], 2], [[6849, 6862], 2], [[6863, 6911], 3], [[6912, 6987], 2], [6988, 2], [[6989, 6991], 3], [[6992, 7001], 2], [[7002, 7018], 2], [[7019, 7027], 2], [[7028, 7036], 2], [[7037, 7038], 2], [7039, 3], [[7040, 7082], 2], [[7083, 7085], 2], [[7086, 7097], 2], [[7098, 7103], 2], [[7104, 7155], 2], [[7156, 7163], 3], [[7164, 7167], 2], [[7168, 7223], 2], [[7224, 7226], 3], [[7227, 7231], 2], [[7232, 7241], 2], [[7242, 7244], 3], [[7245, 7293], 2], [[7294, 7295], 2], [7296, 1, "\\u0432"], [7297, 1, "\\u0434"], [7298, 1, "\\u043E"], [7299, 1, "\\u0441"], [[7300, 7301], 1, "\\u0442"], [7302, 1, "\\u044A"], [7303, 1, "\\u0463"], [7304, 1, "\\uA64B"], [[7305, 7311], 3], [7312, 1, "\\u10D0"], [7313, 1, "\\u10D1"], [7314, 1, "\\u10D2"], [7315, 1, "\\u10D3"], [7316, 1, "\\u10D4"], [7317, 1, "\\u10D5"], [7318, 1, "\\u10D6"], [7319, 1, "\\u10D7"], [7320, 1, "\\u10D8"], [7321, 1, "\\u10D9"], [7322, 1, "\\u10DA"], [7323, 1, "\\u10DB"], [7324, 1, "\\u10DC"], [7325, 1, "\\u10DD"], [7326, 1, "\\u10DE"], [7327, 1, "\\u10DF"], [7328, 1, "\\u10E0"], [7329, 1, "\\u10E1"], [7330, 1, "\\u10E2"], [7331, 1, "\\u10E3"], [7332, 1, "\\u10E4"], [7333, 1, "\\u10E5"], [7334, 1, "\\u10E6"], [7335, 1, "\\u10E7"], [7336, 1, "\\u10E8"], [7337, 1, "\\u10E9"], [7338, 1, "\\u10EA"], [7339, 1, "\\u10EB"], [7340, 1, "\\u10EC"], [7341, 1, "\\u10ED"], [7342, 1, "\\u10EE"], [7343, 1, "\\u10EF"], [7344, 1, "\\u10F0"], [7345, 1, "\\u10F1"], [7346, 1, "\\u10F2"], [7347, 1, "\\u10F3"], [7348, 1, "\\u10F4"], [7349, 1, "\\u10F5"], [7350, 1, "\\u10F6"], [7351, 1, "\\u10F7"], [7352, 1, "\\u10F8"], [7353, 1, "\\u10F9"], [7354, 1, "\\u10FA"], [[7355, 7356], 3], [7357, 1, "\\u10FD"], [7358, 1, "\\u10FE"], [7359, 1, "\\u10FF"], [[7360, 7367], 2], [[7368, 7375], 3], [[7376, 7378], 2], [7379, 2], [[7380, 7410], 2], [[7411, 7414], 2], [7415, 2], [[7416, 7417], 2], [7418, 2], [[7419, 7423], 3], [[7424, 7467], 2], [7468, 1, "a"], [7469, 1, "\\xE6"], [7470, 1, "b"], [7471, 2], [7472, 1, "d"], [7473, 1, "e"], [7474, 1, "\\u01DD"], [7475, 1, "g"], [7476, 1, "h"], [7477, 1, "i"], [7478, 1, "j"], [7479, 1, "k"], [7480, 1, "l"], [7481, 1, "m"], [7482, 1, "n"], [7483, 2], [7484, 1, "o"], [7485, 1, "\\u0223"], [7486, 1, "p"], [7487, 1, "r"], [7488, 1, "t"], [7489, 1, "u"], [7490, 1, "w"], [7491, 1, "a"], [7492, 1, "\\u0250"], [7493, 1, "\\u0251"], [7494, 1, "\\u1D02"], [7495, 1, "b"], [7496, 1, "d"], [7497, 1, "e"], [7498, 1, "\\u0259"], [7499, 1, "\\u025B"], [7500, 1, "\\u025C"], [7501, 1, "g"], [7502, 2], [7503, 1, "k"], [7504, 1, "m"], [7505, 1, "\\u014B"], [7506, 1, "o"], [7507, 1, "\\u0254"], [7508, 1, "\\u1D16"], [7509, 1, "\\u1D17"], [7510, 1, "p"], [7511, 1, "t"], [7512, 1, "u"], [7513, 1, "\\u1D1D"], [7514, 1, "\\u026F"], [7515, 1, "v"], [7516, 1, "\\u1D25"], [7517, 1, "\\u03B2"], [7518, 1, "\\u03B3"], [7519, 1, "\\u03B4"], [7520, 1, "\\u03C6"], [7521, 1, "\\u03C7"], [7522, 1, "i"], [7523, 1, "r"], [7524, 1, "u"], [7525, 1, "v"], [7526, 1, "\\u03B2"], [7527, 1, "\\u03B3"], [7528, 1, "\\u03C1"], [7529, 1, "\\u03C6"], [7530, 1, "\\u03C7"], [7531, 2], [[7532, 7543], 2], [7544, 1, "\\u043D"], [[7545, 7578], 2], [7579, 1, "\\u0252"], [7580, 1, "c"], [7581, 1, "\\u0255"], [7582, 1, "\\xF0"], [7583, 1, "\\u025C"], [7584, 1, "f"], [7585, 1, "\\u025F"], [7586, 1, "\\u0261"], [7587, 1, "\\u0265"], [7588, 1, "\\u0268"], [7589, 1, "\\u0269"], [7590, 1, "\\u026A"], [7591, 1, "\\u1D7B"], [7592, 1, "\\u029D"], [7593, 1, "\\u026D"], [7594, 1, "\\u1D85"], [7595, 1, "\\u029F"], [7596, 1, "\\u0271"], [7597, 1, "\\u0270"], [7598, 1, "\\u0272"], [7599, 1, "\\u0273"], [7600, 1, "\\u0274"], [7601, 1, "\\u0275"], [7602, 1, "\\u0278"], [7603, 1, "\\u0282"], [7604, 1, "\\u0283"], [7605, 1, "\\u01AB"], [7606, 1, "\\u0289"], [7607, 1, "\\u028A"], [7608, 1, "\\u1D1C"], [7609, 1, "\\u028B"], [7610, 1, "\\u028C"], [7611, 1, "z"], [7612, 1, "\\u0290"], [7613, 1, "\\u0291"], [7614, 1, "\\u0292"], [7615, 1, "\\u03B8"], [[7616, 7619], 2], [[7620, 7626], 2], [[7627, 7654], 2], [[7655, 7669], 2], [[7670, 7673], 2], [7674, 2], [7675, 2], [7676, 2], [7677, 2], [[7678, 7679], 2], [7680, 1, "\\u1E01"], [7681, 2], [7682, 1, "\\u1E03"], [7683, 2], [7684, 1, "\\u1E05"], [7685, 2], [7686, 1, "\\u1E07"], [7687, 2], [7688, 1, "\\u1E09"], [7689, 2], [7690, 1, "\\u1E0B"], [7691, 2], [7692, 1, "\\u1E0D"], [7693, 2], [7694, 1, "\\u1E0F"], [7695, 2], [7696, 1, "\\u1E11"], [7697, 2], [7698, 1, "\\u1E13"], [7699, 2], [7700, 1, "\\u1E15"], [7701, 2], [7702, 1, "\\u1E17"], [7703, 2], [7704, 1, "\\u1E19"], [7705, 2], [7706, 1, "\\u1E1B"], [7707, 2], [7708, 1, "\\u1E1D"], [7709, 2], [7710, 1, "\\u1E1F"], [7711, 2], [7712, 1, "\\u1E21"], [7713, 2], [7714, 1, "\\u1E23"], [7715, 2], [7716, 1, "\\u1E25"], [7717, 2], [7718, 1, "\\u1E27"], [7719, 2], [7720, 1, "\\u1E29"], [7721, 2], [7722, 1, "\\u1E2B"], [7723, 2], [7724, 1, "\\u1E2D"], [7725, 2], [7726, 1, "\\u1E2F"], [7727, 2], [7728, 1, "\\u1E31"], [7729, 2], [7730, 1, "\\u1E33"], [7731, 2], [7732, 1, "\\u1E35"], [7733, 2], [7734, 1, "\\u1E37"], [7735, 2], [7736, 1, "\\u1E39"], [7737, 2], [7738, 1, "\\u1E3B"], [7739, 2], [7740, 1, "\\u1E3D"], [7741, 2], [7742, 1, "\\u1E3F"], [7743, 2], [7744, 1, "\\u1E41"], [7745, 2], [7746, 1, "\\u1E43"], [7747, 2], [7748, 1, "\\u1E45"], [7749, 2], [7750, 1, "\\u1E47"], [7751, 2], [7752, 1, "\\u1E49"], [7753, 2], [7754, 1, "\\u1E4B"], [7755, 2], [7756, 1, "\\u1E4D"], [7757, 2], [7758, 1, "\\u1E4F"], [7759, 2], [7760, 1, "\\u1E51"], [7761, 2], [7762, 1, "\\u1E53"], [7763, 2], [7764, 1, "\\u1E55"], [7765, 2], [7766, 1, "\\u1E57"], [7767, 2], [7768, 1, "\\u1E59"], [7769, 2], [7770, 1, "\\u1E5B"], [7771, 2], [7772, 1, "\\u1E5D"], [7773, 2], [7774, 1, "\\u1E5F"], [7775, 2], [7776, 1, "\\u1E61"], [7777, 2], [7778, 1, "\\u1E63"], [7779, 2], [7780, 1, "\\u1E65"], [7781, 2], [7782, 1, "\\u1E67"], [7783, 2], [7784, 1, "\\u1E69"], [7785, 2], [7786, 1, "\\u1E6B"], [7787, 2], [7788, 1, "\\u1E6D"], [7789, 2], [7790, 1, "\\u1E6F"], [7791, 2], [7792, 1, "\\u1E71"], [7793, 2], [7794, 1, "\\u1E73"], [7795, 2], [7796, 1, "\\u1E75"], [7797, 2], [7798, 1, "\\u1E77"], [7799, 2], [7800, 1, "\\u1E79"], [7801, 2], [7802, 1, "\\u1E7B"], [7803, 2], [7804, 1, "\\u1E7D"], [7805, 2], [7806, 1, "\\u1E7F"], [7807, 2], [7808, 1, "\\u1E81"], [7809, 2], [7810, 1, "\\u1E83"], [7811, 2], [7812, 1, "\\u1E85"], [7813, 2], [7814, 1, "\\u1E87"], [7815, 2], [7816, 1, "\\u1E89"], [7817, 2], [7818, 1, "\\u1E8B"], [7819, 2], [7820, 1, "\\u1E8D"], [7821, 2], [7822, 1, "\\u1E8F"], [7823, 2], [7824, 1, "\\u1E91"], [7825, 2], [7826, 1, "\\u1E93"], [7827, 2], [7828, 1, "\\u1E95"], [[7829, 7833], 2], [7834, 1, "a\\u02BE"], [7835, 1, "\\u1E61"], [[7836, 7837], 2], [7838, 1, "ss"], [7839, 2], [7840, 1, "\\u1EA1"], [7841, 2], [7842, 1, "\\u1EA3"], [7843, 2], [7844, 1, "\\u1EA5"], [7845, 2], [7846, 1, "\\u1EA7"], [7847, 2], [7848, 1, "\\u1EA9"], [7849, 2], [7850, 1, "\\u1EAB"], [7851, 2], [7852, 1, "\\u1EAD"], [7853, 2], [7854, 1, "\\u1EAF"], [7855, 2], [7856, 1, "\\u1EB1"], [7857, 2], [7858, 1, "\\u1EB3"], [7859, 2], [7860, 1, "\\u1EB5"], [7861, 2], [7862, 1, "\\u1EB7"], [7863, 2], [7864, 1, "\\u1EB9"], [7865, 2], [7866, 1, "\\u1EBB"], [7867, 2], [7868, 1, "\\u1EBD"], [7869, 2], [7870, 1, "\\u1EBF"], [7871, 2], [7872, 1, "\\u1EC1"], [7873, 2], [7874, 1, "\\u1EC3"], [7875, 2], [7876, 1, "\\u1EC5"], [7877, 2], [7878, 1, "\\u1EC7"], [7879, 2], [7880, 1, "\\u1EC9"], [7881, 2], [7882, 1, "\\u1ECB"], [7883, 2], [7884, 1, "\\u1ECD"], [7885, 2], [7886, 1, "\\u1ECF"], [7887, 2], [7888, 1, "\\u1ED1"], [7889, 2], [7890, 1, "\\u1ED3"], [7891, 2], [7892, 1, "\\u1ED5"], [7893, 2], [7894, 1, "\\u1ED7"], [7895, 2], [7896, 1, "\\u1ED9"], [7897, 2], [7898, 1, "\\u1EDB"], [7899, 2], [7900, 1, "\\u1EDD"], [7901, 2], [7902, 1, "\\u1EDF"], [7903, 2], [7904, 1, "\\u1EE1"], [7905, 2], [7906, 1, "\\u1EE3"], [7907, 2], [7908, 1, "\\u1EE5"], [7909, 2], [7910, 1, "\\u1EE7"], [7911, 2], [7912, 1, "\\u1EE9"], [7913, 2], [7914, 1, "\\u1EEB"], [7915, 2], [7916, 1, "\\u1EED"], [7917, 2], [7918, 1, "\\u1EEF"], [7919, 2], [7920, 1, "\\u1EF1"], [7921, 2], [7922, 1, "\\u1EF3"], [7923, 2], [7924, 1, "\\u1EF5"], [7925, 2], [7926, 1, "\\u1EF7"], [7927, 2], [7928, 1, "\\u1EF9"], [7929, 2], [7930, 1, "\\u1EFB"], [7931, 2], [7932, 1, "\\u1EFD"], [7933, 2], [7934, 1, "\\u1EFF"], [7935, 2], [[7936, 7943], 2], [7944, 1, "\\u1F00"], [7945, 1, "\\u1F01"], [7946, 1, "\\u1F02"], [7947, 1, "\\u1F03"], [7948, 1, "\\u1F04"], [7949, 1, "\\u1F05"], [7950, 1, "\\u1F06"], [7951, 1, "\\u1F07"], [[7952, 7957], 2], [[7958, 7959], 3], [7960, 1, "\\u1F10"], [7961, 1, "\\u1F11"], [7962, 1, "\\u1F12"], [7963, 1, "\\u1F13"], [7964, 1, "\\u1F14"], [7965, 1, "\\u1F15"], [[7966, 7967], 3], [[7968, 7975], 2], [7976, 1, "\\u1F20"], [7977, 1, "\\u1F21"], [7978, 1, "\\u1F22"], [7979, 1, "\\u1F23"], [7980, 1, "\\u1F24"], [7981, 1, "\\u1F25"], [7982, 1, "\\u1F26"], [7983, 1, "\\u1F27"], [[7984, 7991], 2], [7992, 1, "\\u1F30"], [7993, 1, "\\u1F31"], [7994, 1, "\\u1F32"], [7995, 1, "\\u1F33"], [7996, 1, "\\u1F34"], [7997, 1, "\\u1F35"], [7998, 1, "\\u1F36"], [7999, 1, "\\u1F37"], [[8e3, 8005], 2], [[8006, 8007], 3], [8008, 1, "\\u1F40"], [8009, 1, "\\u1F41"], [8010, 1, "\\u1F42"], [8011, 1, "\\u1F43"], [8012, 1, "\\u1F44"], [8013, 1, "\\u1F45"], [[8014, 8015], 3], [[8016, 8023], 2], [8024, 3], [8025, 1, "\\u1F51"], [8026, 3], [8027, 1, "\\u1F53"], [8028, 3], [8029, 1, "\\u1F55"], [8030, 3], [8031, 1, "\\u1F57"], [[8032, 8039], 2], [8040, 1, "\\u1F60"], [8041, 1, "\\u1F61"], [8042, 1, "\\u1F62"], [8043, 1, "\\u1F63"], [8044, 1, "\\u1F64"], [8045, 1, "\\u1F65"], [8046, 1, "\\u1F66"], [8047, 1, "\\u1F67"], [8048, 2], [8049, 1, "\\u03AC"], [8050, 2], [8051, 1, "\\u03AD"], [8052, 2], [8053, 1, "\\u03AE"], [8054, 2], [8055, 1, "\\u03AF"], [8056, 2], [8057, 1, "\\u03CC"], [8058, 2], [8059, 1, "\\u03CD"], [8060, 2], [8061, 1, "\\u03CE"], [[8062, 8063], 3], [8064, 1, "\\u1F00\\u03B9"], [8065, 1, "\\u1F01\\u03B9"], [8066, 1, "\\u1F02\\u03B9"], [8067, 1, "\\u1F03\\u03B9"], [8068, 1, "\\u1F04\\u03B9"], [8069, 1, "\\u1F05\\u03B9"], [8070, 1, "\\u1F06\\u03B9"], [8071, 1, "\\u1F07\\u03B9"], [8072, 1, "\\u1F00\\u03B9"], [8073, 1, "\\u1F01\\u03B9"], [8074, 1, "\\u1F02\\u03B9"], [8075, 1, "\\u1F03\\u03B9"], [8076, 1, "\\u1F04\\u03B9"], [8077, 1, "\\u1F05\\u03B9"], [8078, 1, "\\u1F06\\u03B9"], [8079, 1, "\\u1F07\\u03B9"], [8080, 1, "\\u1F20\\u03B9"], [8081, 1, "\\u1F21\\u03B9"], [8082, 1, "\\u1F22\\u03B9"], [8083, 1, "\\u1F23\\u03B9"], [8084, 1, "\\u1F24\\u03B9"], [8085, 1, "\\u1F25\\u03B9"], [8086, 1, "\\u1F26\\u03B9"], [8087, 1, "\\u1F27\\u03B9"], [8088, 1, "\\u1F20\\u03B9"], [8089, 1, "\\u1F21\\u03B9"], [8090, 1, "\\u1F22\\u03B9"], [8091, 1, "\\u1F23\\u03B9"], [8092, 1, "\\u1F24\\u03B9"], [8093, 1, "\\u1F25\\u03B9"], [8094, 1, "\\u1F26\\u03B9"], [8095, 1, "\\u1F27\\u03B9"], [8096, 1, "\\u1F60\\u03B9"], [8097, 1, "\\u1F61\\u03B9"], [8098, 1, "\\u1F62\\u03B9"], [8099, 1, "\\u1F63\\u03B9"], [8100, 1, "\\u1F64\\u03B9"], [8101, 1, "\\u1F65\\u03B9"], [8102, 1, "\\u1F66\\u03B9"], [8103, 1, "\\u1F67\\u03B9"], [8104, 1, "\\u1F60\\u03B9"], [8105, 1, "\\u1F61\\u03B9"], [8106, 1, "\\u1F62\\u03B9"], [8107, 1, "\\u1F63\\u03B9"], [8108, 1, "\\u1F64\\u03B9"], [8109, 1, "\\u1F65\\u03B9"], [8110, 1, "\\u1F66\\u03B9"], [8111, 1, "\\u1F67\\u03B9"], [[8112, 8113], 2], [8114, 1, "\\u1F70\\u03B9"], [8115, 1, "\\u03B1\\u03B9"], [8116, 1, "\\u03AC\\u03B9"], [8117, 3], [8118, 2], [8119, 1, "\\u1FB6\\u03B9"], [8120, 1, "\\u1FB0"], [8121, 1, "\\u1FB1"], [8122, 1, "\\u1F70"], [8123, 1, "\\u03AC"], [8124, 1, "\\u03B1\\u03B9"], [8125, 5, " \\u0313"], [8126, 1, "\\u03B9"], [8127, 5, " \\u0313"], [8128, 5, " \\u0342"], [8129, 5, " \\u0308\\u0342"], [8130, 1, "\\u1F74\\u03B9"], [8131, 1, "\\u03B7\\u03B9"], [8132, 1, "\\u03AE\\u03B9"], [8133, 3], [8134, 2], [8135, 1, "\\u1FC6\\u03B9"], [8136, 1, "\\u1F72"], [8137, 1, "\\u03AD"], [8138, 1, "\\u1F74"], [8139, 1, "\\u03AE"], [8140, 1, "\\u03B7\\u03B9"], [8141, 5, " \\u0313\\u0300"], [8142, 5, " \\u0313\\u0301"], [8143, 5, " \\u0313\\u0342"], [[8144, 8146], 2], [8147, 1, "\\u0390"], [[8148, 8149], 3], [[8150, 8151], 2], [8152, 1, "\\u1FD0"], [8153, 1, "\\u1FD1"], [8154, 1, "\\u1F76"], [8155, 1, "\\u03AF"], [8156, 3], [8157, 5, " \\u0314\\u0300"], [8158, 5, " \\u0314\\u0301"], [8159, 5, " \\u0314\\u0342"], [[8160, 8162], 2], [8163, 1, "\\u03B0"], [[8164, 8167], 2], [8168, 1, "\\u1FE0"], [8169, 1, "\\u1FE1"], [8170, 1, "\\u1F7A"], [8171, 1, "\\u03CD"], [8172, 1, "\\u1FE5"], [8173, 5, " \\u0308\\u0300"], [8174, 5, " \\u0308\\u0301"], [8175, 5, "`"], [[8176, 8177], 3], [8178, 1, "\\u1F7C\\u03B9"], [8179, 1, "\\u03C9\\u03B9"], [8180, 1, "\\u03CE\\u03B9"], [8181, 3], [8182, 2], [8183, 1, "\\u1FF6\\u03B9"], [8184, 1, "\\u1F78"], [8185, 1, "\\u03CC"], [8186, 1, "\\u1F7C"], [8187, 1, "\\u03CE"], [8188, 1, "\\u03C9\\u03B9"], [8189, 5, " \\u0301"], [8190, 5, " \\u0314"], [8191, 3], [[8192, 8202], 5, " "], [8203, 7], [[8204, 8205], 6, ""], [[8206, 8207], 3], [8208, 2], [8209, 1, "\\u2010"], [[8210, 8214], 2], [8215, 5, " \\u0333"], [[8216, 8227], 2], [[8228, 8230], 3], [8231, 2], [[8232, 8238], 3], [8239, 5, " "], [[8240, 8242], 2], [8243, 1, "\\u2032\\u2032"], [8244, 1, "\\u2032\\u2032\\u2032"], [8245, 2], [8246, 1, "\\u2035\\u2035"], [8247, 1, "\\u2035\\u2035\\u2035"], [[8248, 8251], 2], [8252, 5, "!!"], [8253, 2], [8254, 5, " \\u0305"], [[8255, 8262], 2], [8263, 5, "??"], [8264, 5, "?!"], [8265, 5, "!?"], [[8266, 8269], 2], [[8270, 8274], 2], [[8275, 8276], 2], [[8277, 8278], 2], [8279, 1, "\\u2032\\u2032\\u2032\\u2032"], [[8280, 8286], 2], [8287, 5, " "], [8288, 7], [[8289, 8291], 3], [8292, 7], [8293, 3], [[8294, 8297], 3], [[8298, 8303], 3], [8304, 1, "0"], [8305, 1, "i"], [[8306, 8307], 3], [8308, 1, "4"], [8309, 1, "5"], [8310, 1, "6"], [8311, 1, "7"], [8312, 1, "8"], [8313, 1, "9"], [8314, 5, "+"], [8315, 1, "\\u2212"], [8316, 5, "="], [8317, 5, "("], [8318, 5, ")"], [8319, 1, "n"], [8320, 1, "0"], [8321, 1, "1"], [8322, 1, "2"], [8323, 1, "3"], [8324, 1, "4"], [8325, 1, "5"], [8326, 1, "6"], [8327, 1, "7"], [8328, 1, "8"], [8329, 1, "9"], [8330, 5, "+"], [8331, 1, "\\u2212"], [8332, 5, "="], [8333, 5, "("], [8334, 5, ")"], [8335, 3], [8336, 1, "a"], [8337, 1, "e"], [8338, 1, "o"], [8339, 1, "x"], [8340, 1, "\\u0259"], [8341, 1, "h"], [8342, 1, "k"], [8343, 1, "l"], [8344, 1, "m"], [8345, 1, "n"], [8346, 1, "p"], [8347, 1, "s"], [8348, 1, "t"], [[8349, 8351], 3], [[8352, 8359], 2], [8360, 1, "rs"], [[8361, 8362], 2], [8363, 2], [8364, 2], [[8365, 8367], 2], [[8368, 8369], 2], [[8370, 8373], 2], [[8374, 8376], 2], [8377, 2], [8378, 2], [[8379, 8381], 2], [8382, 2], [8383, 2], [8384, 2], [[8385, 8399], 3], [[8400, 8417], 2], [[8418, 8419], 2], [[8420, 8426], 2], [8427, 2], [[8428, 8431], 2], [8432, 2], [[8433, 8447], 3], [8448, 5, "a/c"], [8449, 5, "a/s"], [8450, 1, "c"], [8451, 1, "\\xB0c"], [8452, 2], [8453, 5, "c/o"], [8454, 5, "c/u"], [8455, 1, "\\u025B"], [8456, 2], [8457, 1, "\\xB0f"], [8458, 1, "g"], [[8459, 8462], 1, "h"], [8463, 1, "\\u0127"], [[8464, 8465], 1, "i"], [[8466, 8467], 1, "l"], [8468, 2], [8469, 1, "n"], [8470, 1, "no"], [[8471, 8472], 2], [8473, 1, "p"], [8474, 1, "q"], [[8475, 8477], 1, "r"], [[8478, 8479], 2], [8480, 1, "sm"], [8481, 1, "tel"], [8482, 1, "tm"], [8483, 2], [8484, 1, "z"], [8485, 2], [8486, 1, "\\u03C9"], [8487, 2], [8488, 1, "z"], [8489, 2], [8490, 1, "k"], [8491, 1, "\\xE5"], [8492, 1, "b"], [8493, 1, "c"], [8494, 2], [[8495, 8496], 1, "e"], [8497, 1, "f"], [8498, 3], [8499, 1, "m"], [8500, 1, "o"], [8501, 1, "\\u05D0"], [8502, 1, "\\u05D1"], [8503, 1, "\\u05D2"], [8504, 1, "\\u05D3"], [8505, 1, "i"], [8506, 2], [8507, 1, "fax"], [8508, 1, "\\u03C0"], [[8509, 8510], 1, "\\u03B3"], [8511, 1, "\\u03C0"], [8512, 1, "\\u2211"], [[8513, 8516], 2], [[8517, 8518], 1, "d"], [8519, 1, "e"], [8520, 1, "i"], [8521, 1, "j"], [[8522, 8523], 2], [8524, 2], [8525, 2], [8526, 2], [8527, 2], [8528, 1, "1\\u20447"], [8529, 1, "1\\u20449"], [8530, 1, "1\\u204410"], [8531, 1, "1\\u20443"], [8532, 1, "2\\u20443"], [8533, 1, "1\\u20445"], [8534, 1, "2\\u20445"], [8535, 1, "3\\u20445"], [8536, 1, "4\\u20445"], [8537, 1, "1\\u20446"], [8538, 1, "5\\u20446"], [8539, 1, "1\\u20448"], [8540, 1, "3\\u20448"], [8541, 1, "5\\u20448"], [8542, 1, "7\\u20448"], [8543, 1, "1\\u2044"], [8544, 1, "i"], [8545, 1, "ii"], [8546, 1, "iii"], [8547, 1, "iv"], [8548, 1, "v"], [8549, 1, "vi"], [8550, 1, "vii"], [8551, 1, "viii"], [8552, 1, "ix"], [8553, 1, "x"], [8554, 1, "xi"], [8555, 1, "xii"], [8556, 1, "l"], [8557, 1, "c"], [8558, 1, "d"], [8559, 1, "m"], [8560, 1, "i"], [8561, 1, "ii"], [8562, 1, "iii"], [8563, 1, "iv"], [8564, 1, "v"], [8565, 1, "vi"], [8566, 1, "vii"], [8567, 1, "viii"], [8568, 1, "ix"], [8569, 1, "x"], [8570, 1, "xi"], [8571, 1, "xii"], [8572, 1, "l"], [8573, 1, "c"], [8574, 1, "d"], [8575, 1, "m"], [[8576, 8578], 2], [8579, 3], [8580, 2], [[8581, 8584], 2], [8585, 1, "0\\u20443"], [[8586, 8587], 2], [[8588, 8591], 3], [[8592, 8682], 2], [[8683, 8691], 2], [[8692, 8703], 2], [[8704, 8747], 2], [8748, 1, "\\u222B\\u222B"], [8749, 1, "\\u222B\\u222B\\u222B"], [8750, 2], [8751, 1, "\\u222E\\u222E"], [8752, 1, "\\u222E\\u222E\\u222E"], [[8753, 8799], 2], [8800, 4], [[8801, 8813], 2], [[8814, 8815], 4], [[8816, 8945], 2], [[8946, 8959], 2], [8960, 2], [8961, 2], [[8962, 9e3], 2], [9001, 1, "\\u3008"], [9002, 1, "\\u3009"], [[9003, 9082], 2], [9083, 2], [9084, 2], [[9085, 9114], 2], [[9115, 9166], 2], [[9167, 9168], 2], [[9169, 9179], 2], [[9180, 9191], 2], [9192, 2], [[9193, 9203], 2], [[9204, 9210], 2], [[9211, 9214], 2], [9215, 2], [[9216, 9252], 2], [[9253, 9254], 2], [[9255, 9279], 3], [[9280, 9290], 2], [[9291, 9311], 3], [9312, 1, "1"], [9313, 1, "2"], [9314, 1, "3"], [9315, 1, "4"], [9316, 1, "5"], [9317, 1, "6"], [9318, 1, "7"], [9319, 1, "8"], [9320, 1, "9"], [9321, 1, "10"], [9322, 1, "11"], [9323, 1, "12"], [9324, 1, "13"], [9325, 1, "14"], [9326, 1, "15"], [9327, 1, "16"], [9328, 1, "17"], [9329, 1, "18"], [9330, 1, "19"], [9331, 1, "20"], [9332, 5, "(1)"], [9333, 5, "(2)"], [9334, 5, "(3)"], [9335, 5, "(4)"], [9336, 5, "(5)"], [9337, 5, "(6)"], [9338, 5, "(7)"], [9339, 5, "(8)"], [9340, 5, "(9)"], [9341, 5, "(10)"], [9342, 5, "(11)"], [9343, 5, "(12)"], [9344, 5, "(13)"], [9345, 5, "(14)"], [9346, 5, "(15)"], [9347, 5, "(16)"], [9348, 5, "(17)"], [9349, 5, "(18)"], [9350, 5, "(19)"], [9351, 5, "(20)"], [[9352, 9371], 3], [9372, 5, "(a)"], [9373, 5, "(b)"], [9374, 5, "(c)"], [9375, 5, "(d)"], [9376, 5, "(e)"], [9377, 5, "(f)"], [9378, 5, "(g)"], [9379, 5, "(h)"], [9380, 5, "(i)"], [9381, 5, "(j)"], [9382, 5, "(k)"], [9383, 5, "(l)"], [9384, 5, "(m)"], [9385, 5, "(n)"], [9386, 5, "(o)"], [9387, 5, "(p)"], [9388, 5, "(q)"], [9389, 5, "(r)"], [9390, 5, "(s)"], [9391, 5, "(t)"], [9392, 5, "(u)"], [9393, 5, "(v)"], [9394, 5, "(w)"], [9395, 5, "(x)"], [9396, 5, "(y)"], [9397, 5, "(z)"], [9398, 1, "a"], [9399, 1, "b"], [9400, 1, "c"], [9401, 1, "d"], [9402, 1, "e"], [9403, 1, "f"], [9404, 1, "g"], [9405, 1, "h"], [9406, 1, "i"], [9407, 1, "j"], [9408, 1, "k"], [9409, 1, "l"], [9410, 1, "m"], [9411, 1, "n"], [9412, 1, "o"], [9413, 1, "p"], [9414, 1, "q"], [9415, 1, "r"], [9416, 1, "s"], [9417, 1, "t"], [9418, 1, "u"], [9419, 1, "v"], [9420, 1, "w"], [9421, 1, "x"], [9422, 1, "y"], [9423, 1, "z"], [9424, 1, "a"], [9425, 1, "b"], [9426, 1, "c"], [9427, 1, "d"], [9428, 1, "e"], [9429, 1, "f"], [9430, 1, "g"], [9431, 1, "h"], [9432, 1, "i"], [9433, 1, "j"], [9434, 1, "k"], [9435, 1, "l"], [9436, 1, "m"], [9437, 1, "n"], [9438, 1, "o"], [9439, 1, "p"], [9440, 1, "q"], [9441, 1, "r"], [9442, 1, "s"], [9443, 1, "t"], [9444, 1, "u"], [9445, 1, "v"], [9446, 1, "w"], [9447, 1, "x"], [9448, 1, "y"], [9449, 1, "z"], [9450, 1, "0"], [[9451, 9470], 2], [9471, 2], [[9472, 9621], 2], [[9622, 9631], 2], [[9632, 9711], 2], [[9712, 9719], 2], [[9720, 9727], 2], [[9728, 9747], 2], [[9748, 9749], 2], [[9750, 9751], 2], [9752, 2], [9753, 2], [[9754, 9839], 2], [[9840, 9841], 2], [[9842, 9853], 2], [[9854, 9855], 2], [[9856, 9865], 2], [[9866, 9873], 2], [[9874, 9884], 2], [9885, 2], [[9886, 9887], 2], [[9888, 9889], 2], [[9890, 9905], 2], [9906, 2], [[9907, 9916], 2], [[9917, 9919], 2], [[9920, 9923], 2], [[9924, 9933], 2], [9934, 2], [[9935, 9953], 2], [9954, 2], [9955, 2], [[9956, 9959], 2], [[9960, 9983], 2], [9984, 2], [[9985, 9988], 2], [9989, 2], [[9990, 9993], 2], [[9994, 9995], 2], [[9996, 10023], 2], [10024, 2], [[10025, 10059], 2], [10060, 2], [10061, 2], [10062, 2], [[10063, 10066], 2], [[10067, 10069], 2], [10070, 2], [10071, 2], [[10072, 10078], 2], [[10079, 10080], 2], [[10081, 10087], 2], [[10088, 10101], 2], [[10102, 10132], 2], [[10133, 10135], 2], [[10136, 10159], 2], [10160, 2], [[10161, 10174], 2], [10175, 2], [[10176, 10182], 2], [[10183, 10186], 2], [10187, 2], [10188, 2], [10189, 2], [[10190, 10191], 2], [[10192, 10219], 2], [[10220, 10223], 2], [[10224, 10239], 2], [[10240, 10495], 2], [[10496, 10763], 2], [10764, 1, "\\u222B\\u222B\\u222B\\u222B"], [[10765, 10867], 2], [10868, 5, "::="], [10869, 5, "=="], [10870, 5, "==="], [[10871, 10971], 2], [10972, 1, "\\u2ADD\\u0338"], [[10973, 11007], 2], [[11008, 11021], 2], [[11022, 11027], 2], [[11028, 11034], 2], [[11035, 11039], 2], [[11040, 11043], 2], [[11044, 11084], 2], [[11085, 11087], 2], [[11088, 11092], 2], [[11093, 11097], 2], [[11098, 11123], 2], [[11124, 11125], 3], [[11126, 11157], 2], [11158, 3], [11159, 2], [[11160, 11193], 2], [[11194, 11196], 2], [[11197, 11208], 2], [11209, 2], [[11210, 11217], 2], [11218, 2], [[11219, 11243], 2], [[11244, 11247], 2], [[11248, 11262], 2], [11263, 2], [11264, 1, "\\u2C30"], [11265, 1, "\\u2C31"], [11266, 1, "\\u2C32"], [11267, 1, "\\u2C33"], [11268, 1, "\\u2C34"], [11269, 1, "\\u2C35"], [11270, 1, "\\u2C36"], [11271, 1, "\\u2C37"], [11272, 1, "\\u2C38"], [11273, 1, "\\u2C39"], [11274, 1, "\\u2C3A"], [11275, 1, "\\u2C3B"], [11276, 1, "\\u2C3C"], [11277, 1, "\\u2C3D"], [11278, 1, "\\u2C3E"], [11279, 1, "\\u2C3F"], [11280, 1, "\\u2C40"], [11281, 1, "\\u2C41"], [11282, 1, "\\u2C42"], [11283, 1, "\\u2C43"], [11284, 1, "\\u2C44"], [11285, 1, "\\u2C45"], [11286, 1, "\\u2C46"], [11287, 1, "\\u2C47"], [11288, 1, "\\u2C48"], [11289, 1, "\\u2C49"], [11290, 1, "\\u2C4A"], [11291, 1, "\\u2C4B"], [11292, 1, "\\u2C4C"], [11293, 1, "\\u2C4D"], [11294, 1, "\\u2C4E"], [11295, 1, "\\u2C4F"], [11296, 1, "\\u2C50"], [11297, 1, "\\u2C51"], [11298, 1, "\\u2C52"], [11299, 1, "\\u2C53"], [11300, 1, "\\u2C54"], [11301, 1, "\\u2C55"], [11302, 1, "\\u2C56"], [11303, 1, "\\u2C57"], [11304, 1, "\\u2C58"], [11305, 1, "\\u2C59"], [11306, 1, "\\u2C5A"], [11307, 1, "\\u2C5B"], [11308, 1, "\\u2C5C"], [11309, 1, "\\u2C5D"], [11310, 1, "\\u2C5E"], [11311, 1, "\\u2C5F"], [[11312, 11358], 2], [11359, 2], [11360, 1, "\\u2C61"], [11361, 2], [11362, 1, "\\u026B"], [11363, 1, "\\u1D7D"], [11364, 1, "\\u027D"], [[11365, 11366], 2], [11367, 1, "\\u2C68"], [11368, 2], [11369, 1, "\\u2C6A"], [11370, 2], [11371, 1, "\\u2C6C"], [11372, 2], [11373, 1, "\\u0251"], [11374, 1, "\\u0271"], [11375, 1, "\\u0250"], [11376, 1, "\\u0252"], [11377, 2], [11378, 1, "\\u2C73"], [11379, 2], [11380, 2], [11381, 1, "\\u2C76"], [[11382, 11383], 2], [[11384, 11387], 2], [11388, 1, "j"], [11389, 1, "v"], [11390, 1, "\\u023F"], [11391, 1, "\\u0240"], [11392, 1, "\\u2C81"], [11393, 2], [11394, 1, "\\u2C83"], [11395, 2], [11396, 1, "\\u2C85"], [11397, 2], [11398, 1, "\\u2C87"], [11399, 2], [11400, 1, "\\u2C89"], [11401, 2], [11402, 1, "\\u2C8B"], [11403, 2], [11404, 1, "\\u2C8D"], [11405, 2], [11406, 1, "\\u2C8F"], [11407, 2], [11408, 1, "\\u2C91"], [11409, 2], [11410, 1, "\\u2C93"], [11411, 2], [11412, 1, "\\u2C95"], [11413, 2], [11414, 1, "\\u2C97"], [11415, 2], [11416, 1, "\\u2C99"], [11417, 2], [11418, 1, "\\u2C9B"], [11419, 2], [11420, 1, "\\u2C9D"], [11421, 2], [11422, 1, "\\u2C9F"], [11423, 2], [11424, 1, "\\u2CA1"], [11425, 2], [11426, 1, "\\u2CA3"], [11427, 2], [11428, 1, "\\u2CA5"], [11429, 2], [11430, 1, "\\u2CA7"], [11431, 2], [11432, 1, "\\u2CA9"], [11433, 2], [11434, 1, "\\u2CAB"], [11435, 2], [11436, 1, "\\u2CAD"], [11437, 2], [11438, 1, "\\u2CAF"], [11439, 2], [11440, 1, "\\u2CB1"], [11441, 2], [11442, 1, "\\u2CB3"], [11443, 2], [11444, 1, "\\u2CB5"], [11445, 2], [11446, 1, "\\u2CB7"], [11447, 2], [11448, 1, "\\u2CB9"], [11449, 2], [11450, 1, "\\u2CBB"], [11451, 2], [11452, 1, "\\u2CBD"], [11453, 2], [11454, 1, "\\u2CBF"], [11455, 2], [11456, 1, "\\u2CC1"], [11457, 2], [11458, 1, "\\u2CC3"], [11459, 2], [11460, 1, "\\u2CC5"], [11461, 2], [11462, 1, "\\u2CC7"], [11463, 2], [11464, 1, "\\u2CC9"], [11465, 2], [11466, 1, "\\u2CCB"], [11467, 2], [11468, 1, "\\u2CCD"], [11469, 2], [11470, 1, "\\u2CCF"], [11471, 2], [11472, 1, "\\u2CD1"], [11473, 2], [11474, 1, "\\u2CD3"], [11475, 2], [11476, 1, "\\u2CD5"], [11477, 2], [11478, 1, "\\u2CD7"], [11479, 2], [11480, 1, "\\u2CD9"], [11481, 2], [11482, 1, "\\u2CDB"], [11483, 2], [11484, 1, "\\u2CDD"], [11485, 2], [11486, 1, "\\u2CDF"], [11487, 2], [11488, 1, "\\u2CE1"], [11489, 2], [11490, 1, "\\u2CE3"], [[11491, 11492], 2], [[11493, 11498], 2], [11499, 1, "\\u2CEC"], [11500, 2], [11501, 1, "\\u2CEE"], [[11502, 11505], 2], [11506, 1, "\\u2CF3"], [11507, 2], [[11508, 11512], 3], [[11513, 11519], 2], [[11520, 11557], 2], [11558, 3], [11559, 2], [[11560, 11564], 3], [11565, 2], [[11566, 11567], 3], [[11568, 11621], 2], [[11622, 11623], 2], [[11624, 11630], 3], [11631, 1, "\\u2D61"], [11632, 2], [[11633, 11646], 3], [11647, 2], [[11648, 11670], 2], [[11671, 11679], 3], [[11680, 11686], 2], [11687, 3], [[11688, 11694], 2], [11695, 3], [[11696, 11702], 2], [11703, 3], [[11704, 11710], 2], [11711, 3], [[11712, 11718], 2], [11719, 3], [[11720, 11726], 2], [11727, 3], [[11728, 11734], 2], [11735, 3], [[11736, 11742], 2], [11743, 3], [[11744, 11775], 2], [[11776, 11799], 2], [[11800, 11803], 2], [[11804, 11805], 2], [[11806, 11822], 2], [11823, 2], [11824, 2], [11825, 2], [[11826, 11835], 2], [[11836, 11842], 2], [[11843, 11844], 2], [[11845, 11849], 2], [[11850, 11854], 2], [11855, 2], [[11856, 11858], 2], [[11859, 11869], 2], [[11870, 11903], 3], [[11904, 11929], 2], [11930, 3], [[11931, 11934], 2], [11935, 1, "\\u6BCD"], [[11936, 12018], 2], [12019, 1, "\\u9F9F"], [[12020, 12031], 3], [12032, 1, "\\u4E00"], [12033, 1, "\\u4E28"], [12034, 1, "\\u4E36"], [12035, 1, "\\u4E3F"], [12036, 1, "\\u4E59"], [12037, 1, "\\u4E85"], [12038, 1, "\\u4E8C"], [12039, 1, "\\u4EA0"], [12040, 1, "\\u4EBA"], [12041, 1, "\\u513F"], [12042, 1, "\\u5165"], [12043, 1, "\\u516B"], [12044, 1, "\\u5182"], [12045, 1, "\\u5196"], [12046, 1, "\\u51AB"], [12047, 1, "\\u51E0"], [12048, 1, "\\u51F5"], [12049, 1, "\\u5200"], [12050, 1, "\\u529B"], [12051, 1, "\\u52F9"], [12052, 1, "\\u5315"], [12053, 1, "\\u531A"], [12054, 1, "\\u5338"], [12055, 1, "\\u5341"], [12056, 1, "\\u535C"], [12057, 1, "\\u5369"], [12058, 1, "\\u5382"], [12059, 1, "\\u53B6"], [12060, 1, "\\u53C8"], [12061, 1, "\\u53E3"], [12062, 1, "\\u56D7"], [12063, 1, "\\u571F"], [12064, 1, "\\u58EB"], [12065, 1, "\\u5902"], [12066, 1, "\\u590A"], [12067, 1, "\\u5915"], [12068, 1, "\\u5927"], [12069, 1, "\\u5973"], [12070, 1, "\\u5B50"], [12071, 1, "\\u5B80"], [12072, 1, "\\u5BF8"], [12073, 1, "\\u5C0F"], [12074, 1, "\\u5C22"], [12075, 1, "\\u5C38"], [12076, 1, "\\u5C6E"], [12077, 1, "\\u5C71"], [12078, 1, "\\u5DDB"], [12079, 1, "\\u5DE5"], [12080, 1, "\\u5DF1"], [12081, 1, "\\u5DFE"], [12082, 1, "\\u5E72"], [12083, 1, "\\u5E7A"], [12084, 1, "\\u5E7F"], [12085, 1, "\\u5EF4"], [12086, 1, "\\u5EFE"], [12087, 1, "\\u5F0B"], [12088, 1, "\\u5F13"], [12089, 1, "\\u5F50"], [12090, 1, "\\u5F61"], [12091, 1, "\\u5F73"], [12092, 1, "\\u5FC3"], [12093, 1, "\\u6208"], [12094, 1, "\\u6236"], [12095, 1, "\\u624B"], [12096, 1, "\\u652F"], [12097, 1, "\\u6534"], [12098, 1, "\\u6587"], [12099, 1, "\\u6597"], [12100, 1, "\\u65A4"], [12101, 1, "\\u65B9"], [12102, 1, "\\u65E0"], [12103, 1, "\\u65E5"], [12104, 1, "\\u66F0"], [12105, 1, "\\u6708"], [12106, 1, "\\u6728"], [12107, 1, "\\u6B20"], [12108, 1, "\\u6B62"], [12109, 1, "\\u6B79"], [12110, 1, "\\u6BB3"], [12111, 1, "\\u6BCB"], [12112, 1, "\\u6BD4"], [12113, 1, "\\u6BDB"], [12114, 1, "\\u6C0F"], [12115, 1, "\\u6C14"], [12116, 1, "\\u6C34"], [12117, 1, "\\u706B"], [12118, 1, "\\u722A"], [12119, 1, "\\u7236"], [12120, 1, "\\u723B"], [12121, 1, "\\u723F"], [12122, 1, "\\u7247"], [12123, 1, "\\u7259"], [12124, 1, "\\u725B"], [12125, 1, "\\u72AC"], [12126, 1, "\\u7384"], [12127, 1, "\\u7389"], [12128, 1, "\\u74DC"], [12129, 1, "\\u74E6"], [12130, 1, "\\u7518"], [12131, 1, "\\u751F"], [12132, 1, "\\u7528"], [12133, 1, "\\u7530"], [12134, 1, "\\u758B"], [12135, 1, "\\u7592"], [12136, 1, "\\u7676"], [12137, 1, "\\u767D"], [12138, 1, "\\u76AE"], [12139, 1, "\\u76BF"], [12140, 1, "\\u76EE"], [12141, 1, "\\u77DB"], [12142, 1, "\\u77E2"], [12143, 1, "\\u77F3"], [12144, 1, "\\u793A"], [12145, 1, "\\u79B8"], [12146, 1, "\\u79BE"], [12147, 1, "\\u7A74"], [12148, 1, "\\u7ACB"], [12149, 1, "\\u7AF9"], [12150, 1, "\\u7C73"], [12151, 1, "\\u7CF8"], [12152, 1, "\\u7F36"], [12153, 1, "\\u7F51"], [12154, 1, "\\u7F8A"], [12155, 1, "\\u7FBD"], [12156, 1, "\\u8001"], [12157, 1, "\\u800C"], [12158, 1, "\\u8012"], [12159, 1, "\\u8033"], [12160, 1, "\\u807F"], [12161, 1, "\\u8089"], [12162, 1, "\\u81E3"], [12163, 1, "\\u81EA"], [12164, 1, "\\u81F3"], [12165, 1, "\\u81FC"], [12166, 1, "\\u820C"], [12167, 1, "\\u821B"], [12168, 1, "\\u821F"], [12169, 1, "\\u826E"], [12170, 1, "\\u8272"], [12171, 1, "\\u8278"], [12172, 1, "\\u864D"], [12173, 1, "\\u866B"], [12174, 1, "\\u8840"], [12175, 1, "\\u884C"], [12176, 1, "\\u8863"], [12177, 1, "\\u897E"], [12178, 1, "\\u898B"], [12179, 1, "\\u89D2"], [12180, 1, "\\u8A00"], [12181, 1, "\\u8C37"], [12182, 1, "\\u8C46"], [12183, 1, "\\u8C55"], [12184, 1, "\\u8C78"], [12185, 1, "\\u8C9D"], [12186, 1, "\\u8D64"], [12187, 1, "\\u8D70"], [12188, 1, "\\u8DB3"], [12189, 1, "\\u8EAB"], [12190, 1, "\\u8ECA"], [12191, 1, "\\u8F9B"], [12192, 1, "\\u8FB0"], [12193, 1, "\\u8FB5"], [12194, 1, "\\u9091"], [12195, 1, "\\u9149"], [12196, 1, "\\u91C6"], [12197, 1, "\\u91CC"], [12198, 1, "\\u91D1"], [12199, 1, "\\u9577"], [12200, 1, "\\u9580"], [12201, 1, "\\u961C"], [12202, 1, "\\u96B6"], [12203, 1, "\\u96B9"], [12204, 1, "\\u96E8"], [12205, 1, "\\u9751"], [12206, 1, "\\u975E"], [12207, 1, "\\u9762"], [12208, 1, "\\u9769"], [12209, 1, "\\u97CB"], [12210, 1, "\\u97ED"], [12211, 1, "\\u97F3"], [12212, 1, "\\u9801"], [12213, 1, "\\u98A8"], [12214, 1, "\\u98DB"], [12215, 1, "\\u98DF"], [12216, 1, "\\u9996"], [12217, 1, "\\u9999"], [12218, 1, "\\u99AC"], [12219, 1, "\\u9AA8"], [12220, 1, "\\u9AD8"], [12221, 1, "\\u9ADF"], [12222, 1, "\\u9B25"], [12223, 1, "\\u9B2F"], [12224, 1, "\\u9B32"], [12225, 1, "\\u9B3C"], [12226, 1, "\\u9B5A"], [12227, 1, "\\u9CE5"], [12228, 1, "\\u9E75"], [12229, 1, "\\u9E7F"], [12230, 1, "\\u9EA5"], [12231, 1, "\\u9EBB"], [12232, 1, "\\u9EC3"], [12233, 1, "\\u9ECD"], [12234, 1, "\\u9ED1"], [12235, 1, "\\u9EF9"], [12236, 1, "\\u9EFD"], [12237, 1, "\\u9F0E"], [12238, 1, "\\u9F13"], [12239, 1, "\\u9F20"], [12240, 1, "\\u9F3B"], [12241, 1, "\\u9F4A"], [12242, 1, "\\u9F52"], [12243, 1, "\\u9F8D"], [12244, 1, "\\u9F9C"], [12245, 1, "\\u9FA0"], [[12246, 12271], 3], [[12272, 12283], 3], [[12284, 12287], 3], [12288, 5, " "], [12289, 2], [12290, 1, "."], [[12291, 12292], 2], [[12293, 12295], 2], [[12296, 12329], 2], [[12330, 12333], 2], [[12334, 12341], 2], [12342, 1, "\\u3012"], [12343, 2], [12344, 1, "\\u5341"], [12345, 1, "\\u5344"], [12346, 1, "\\u5345"], [12347, 2], [12348, 2], [12349, 2], [12350, 2], [12351, 2], [12352, 3], [[12353, 12436], 2], [[12437, 12438], 2], [[12439, 12440], 3], [[12441, 12442], 2], [12443, 5, " \\u3099"], [12444, 5, " \\u309A"], [[12445, 12446], 2], [12447, 1, "\\u3088\\u308A"], [12448, 2], [[12449, 12542], 2], [12543, 1, "\\u30B3\\u30C8"], [[12544, 12548], 3], [[12549, 12588], 2], [12589, 2], [12590, 2], [12591, 2], [12592, 3], [12593, 1, "\\u1100"], [12594, 1, "\\u1101"], [12595, 1, "\\u11AA"], [12596, 1, "\\u1102"], [12597, 1, "\\u11AC"], [12598, 1, "\\u11AD"], [12599, 1, "\\u1103"], [12600, 1, "\\u1104"], [12601, 1, "\\u1105"], [12602, 1, "\\u11B0"], [12603, 1, "\\u11B1"], [12604, 1, "\\u11B2"], [12605, 1, "\\u11B3"], [12606, 1, "\\u11B4"], [12607, 1, "\\u11B5"], [12608, 1, "\\u111A"], [12609, 1, "\\u1106"], [12610, 1, "\\u1107"], [12611, 1, "\\u1108"], [12612, 1, "\\u1121"], [12613, 1, "\\u1109"], [12614, 1, "\\u110A"], [12615, 1, "\\u110B"], [12616, 1, "\\u110C"], [12617, 1, "\\u110D"], [12618, 1, "\\u110E"], [12619, 1, "\\u110F"], [12620, 1, "\\u1110"], [12621, 1, "\\u1111"], [12622, 1, "\\u1112"], [12623, 1, "\\u1161"], [12624, 1, "\\u1162"], [12625, 1, "\\u1163"], [12626, 1, "\\u1164"], [12627, 1, "\\u1165"], [12628, 1, "\\u1166"], [12629, 1, "\\u1167"], [12630, 1, "\\u1168"], [12631, 1, "\\u1169"], [12632, 1, "\\u116A"], [12633, 1, "\\u116B"], [12634, 1, "\\u116C"], [12635, 1, "\\u116D"], [12636, 1, "\\u116E"], [12637, 1, "\\u116F"], [12638, 1, "\\u1170"], [12639, 1, "\\u1171"], [12640, 1, "\\u1172"], [12641, 1, "\\u1173"], [12642, 1, "\\u1174"], [12643, 1, "\\u1175"], [12644, 3], [12645, 1, "\\u1114"], [12646, 1, "\\u1115"], [12647, 1, "\\u11C7"], [12648, 1, "\\u11C8"], [12649, 1, "\\u11CC"], [12650, 1, "\\u11CE"], [12651, 1, "\\u11D3"], [12652, 1, "\\u11D7"], [12653, 1, "\\u11D9"], [12654, 1, "\\u111C"], [12655, 1, "\\u11DD"], [12656, 1, "\\u11DF"], [12657, 1, "\\u111D"], [12658, 1, "\\u111E"], [12659, 1, "\\u1120"], [12660, 1, "\\u1122"], [12661, 1, "\\u1123"], [12662, 1, "\\u1127"], [12663, 1, "\\u1129"], [12664, 1, "\\u112B"], [12665, 1, "\\u112C"], [12666, 1, "\\u112D"], [12667, 1, "\\u112E"], [12668, 1, "\\u112F"], [12669, 1, "\\u1132"], [12670, 1, "\\u1136"], [12671, 1, "\\u1140"], [12672, 1, "\\u1147"], [12673, 1, "\\u114C"], [12674, 1, "\\u11F1"], [12675, 1, "\\u11F2"], [12676, 1, "\\u1157"], [12677, 1, "\\u1158"], [12678, 1, "\\u1159"], [12679, 1, "\\u1184"], [12680, 1, "\\u1185"], [12681, 1, "\\u1188"], [12682, 1, "\\u1191"], [12683, 1, "\\u1192"], [12684, 1, "\\u1194"], [12685, 1, "\\u119E"], [12686, 1, "\\u11A1"], [12687, 3], [[12688, 12689], 2], [12690, 1, "\\u4E00"], [12691, 1, "\\u4E8C"], [12692, 1, "\\u4E09"], [12693, 1, "\\u56DB"], [12694, 1, "\\u4E0A"], [12695, 1, "\\u4E2D"], [12696, 1, "\\u4E0B"], [12697, 1, "\\u7532"], [12698, 1, "\\u4E59"], [12699, 1, "\\u4E19"], [12700, 1, "\\u4E01"], [12701, 1, "\\u5929"], [12702, 1, "\\u5730"], [12703, 1, "\\u4EBA"], [[12704, 12727], 2], [[12728, 12730], 2], [[12731, 12735], 2], [[12736, 12751], 2], [[12752, 12771], 2], [[12772, 12783], 3], [[12784, 12799], 2], [12800, 5, "(\\u1100)"], [12801, 5, "(\\u1102)"], [12802, 5, "(\\u1103)"], [12803, 5, "(\\u1105)"], [12804, 5, "(\\u1106)"], [12805, 5, "(\\u1107)"], [12806, 5, "(\\u1109)"], [12807, 5, "(\\u110B)"], [12808, 5, "(\\u110C)"], [12809, 5, "(\\u110E)"], [12810, 5, "(\\u110F)"], [12811, 5, "(\\u1110)"], [12812, 5, "(\\u1111)"], [12813, 5, "(\\u1112)"], [12814, 5, "(\\uAC00)"], [12815, 5, "(\\uB098)"], [12816, 5, "(\\uB2E4)"], [12817, 5, "(\\uB77C)"], [12818, 5, "(\\uB9C8)"], [12819, 5, "(\\uBC14)"], [12820, 5, "(\\uC0AC)"], [12821, 5, "(\\uC544)"], [12822, 5, "(\\uC790)"], [12823, 5, "(\\uCC28)"], [12824, 5, "(\\uCE74)"], [12825, 5, "(\\uD0C0)"], [12826, 5, "(\\uD30C)"], [12827, 5, "(\\uD558)"], [12828, 5, "(\\uC8FC)"], [12829, 5, "(\\uC624\\uC804)"], [12830, 5, "(\\uC624\\uD6C4)"], [12831, 3], [12832, 5, "(\\u4E00)"], [12833, 5, "(\\u4E8C)"], [12834, 5, "(\\u4E09)"], [12835, 5, "(\\u56DB)"], [12836, 5, "(\\u4E94)"], [12837, 5, "(\\u516D)"], [12838, 5, "(\\u4E03)"], [12839, 5, "(\\u516B)"], [12840, 5, "(\\u4E5D)"], [12841, 5, "(\\u5341)"], [12842, 5, "(\\u6708)"], [12843, 5, "(\\u706B)"], [12844, 5, "(\\u6C34)"], [12845, 5, "(\\u6728)"], [12846, 5, "(\\u91D1)"], [12847, 5, "(\\u571F)"], [12848, 5, "(\\u65E5)"], [12849, 5, "(\\u682A)"], [12850, 5, "(\\u6709)"], [12851, 5, "(\\u793E)"], [12852, 5, "(\\u540D)"], [12853, 5, "(\\u7279)"], [12854, 5, "(\\u8CA1)"], [12855, 5, "(\\u795D)"], [12856, 5, "(\\u52B4)"], [12857, 5, "(\\u4EE3)"], [12858, 5, "(\\u547C)"], [12859, 5, "(\\u5B66)"], [12860, 5, "(\\u76E3)"], [12861, 5, "(\\u4F01)"], [12862, 5, "(\\u8CC7)"], [12863, 5, "(\\u5354)"], [12864, 5, "(\\u796D)"], [12865, 5, "(\\u4F11)"], [12866, 5, "(\\u81EA)"], [12867, 5, "(\\u81F3)"], [12868, 1, "\\u554F"], [12869, 1, "\\u5E7C"], [12870, 1, "\\u6587"], [12871, 1, "\\u7B8F"], [[12872, 12879], 2], [12880, 1, "pte"], [12881, 1, "21"], [12882, 1, "22"], [12883, 1, "23"], [12884, 1, "24"], [12885, 1, "25"], [12886, 1, "26"], [12887, 1, "27"], [12888, 1, "28"], [12889, 1, "29"], [12890, 1, "30"], [12891, 1, "31"], [12892, 1, "32"], [12893, 1, "33"], [12894, 1, "34"], [12895, 1, "35"], [12896, 1, "\\u1100"], [12897, 1, "\\u1102"], [12898, 1, "\\u1103"], [12899, 1, "\\u1105"], [12900, 1, "\\u1106"], [12901, 1, "\\u1107"], [12902, 1, "\\u1109"], [12903, 1, "\\u110B"], [12904, 1, "\\u110C"], [12905, 1, "\\u110E"], [12906, 1, "\\u110F"], [12907, 1, "\\u1110"], [12908, 1, "\\u1111"], [12909, 1, "\\u1112"], [12910, 1, "\\uAC00"], [12911, 1, "\\uB098"], [12912, 1, "\\uB2E4"], [12913, 1, "\\uB77C"], [12914, 1, "\\uB9C8"], [12915, 1, "\\uBC14"], [12916, 1, "\\uC0AC"], [12917, 1, "\\uC544"], [12918, 1, "\\uC790"], [12919, 1, "\\uCC28"], [12920, 1, "\\uCE74"], [12921, 1, "\\uD0C0"], [12922, 1, "\\uD30C"], [12923, 1, "\\uD558"], [12924, 1, "\\uCC38\\uACE0"], [12925, 1, "\\uC8FC\\uC758"], [12926, 1, "\\uC6B0"], [12927, 2], [12928, 1, "\\u4E00"], [12929, 1, "\\u4E8C"], [12930, 1, "\\u4E09"], [12931, 1, "\\u56DB"], [12932, 1, "\\u4E94"], [12933, 1, "\\u516D"], [12934, 1, "\\u4E03"], [12935, 1, "\\u516B"], [12936, 1, "\\u4E5D"], [12937, 1, "\\u5341"], [12938, 1, "\\u6708"], [12939, 1, "\\u706B"], [12940, 1, "\\u6C34"], [12941, 1, "\\u6728"], [12942, 1, "\\u91D1"], [12943, 1, "\\u571F"], [12944, 1, "\\u65E5"], [12945, 1, "\\u682A"], [12946, 1, "\\u6709"], [12947, 1, "\\u793E"], [12948, 1, "\\u540D"], [12949, 1, "\\u7279"], [12950, 1, "\\u8CA1"], [12951, 1, "\\u795D"], [12952, 1, "\\u52B4"], [12953, 1, "\\u79D8"], [12954, 1, "\\u7537"], [12955, 1, "\\u5973"], [12956, 1, "\\u9069"], [12957, 1, "\\u512A"], [12958, 1, "\\u5370"], [12959, 1, "\\u6CE8"], [12960, 1, "\\u9805"], [12961, 1, "\\u4F11"], [12962, 1, "\\u5199"], [12963, 1, "\\u6B63"], [12964, 1, "\\u4E0A"], [12965, 1, "\\u4E2D"], [12966, 1, "\\u4E0B"], [12967, 1, "\\u5DE6"], [12968, 1, "\\u53F3"], [12969, 1, "\\u533B"], [12970, 1, "\\u5B97"], [12971, 1, "\\u5B66"], [12972, 1, "\\u76E3"], [12973, 1, "\\u4F01"], [12974, 1, "\\u8CC7"], [12975, 1, "\\u5354"], [12976, 1, "\\u591C"], [12977, 1, "36"], [12978, 1, "37"], [12979, 1, "38"], [12980, 1, "39"], [12981, 1, "40"], [12982, 1, "41"], [12983, 1, "42"], [12984, 1, "43"], [12985, 1, "44"], [12986, 1, "45"], [12987, 1, "46"], [12988, 1, "47"], [12989, 1, "48"], [12990, 1, "49"], [12991, 1, "50"], [12992, 1, "1\\u6708"], [12993, 1, "2\\u6708"], [12994, 1, "3\\u6708"], [12995, 1, "4\\u6708"], [12996, 1, "5\\u6708"], [12997, 1, "6\\u6708"], [12998, 1, "7\\u6708"], [12999, 1, "8\\u6708"], [13e3, 1, "9\\u6708"], [13001, 1, "10\\u6708"], [13002, 1, "11\\u6708"], [13003, 1, "12\\u6708"], [13004, 1, "hg"], [13005, 1, "erg"], [13006, 1, "ev"], [13007, 1, "ltd"], [13008, 1, "\\u30A2"], [13009, 1, "\\u30A4"], [13010, 1, "\\u30A6"], [13011, 1, "\\u30A8"], [13012, 1, "\\u30AA"], [13013, 1, "\\u30AB"], [13014, 1, "\\u30AD"], [13015, 1, "\\u30AF"], [13016, 1, "\\u30B1"], [13017, 1, "\\u30B3"], [13018, 1, "\\u30B5"], [13019, 1, "\\u30B7"], [13020, 1, "\\u30B9"], [13021, 1, "\\u30BB"], [13022, 1, "\\u30BD"], [13023, 1, "\\u30BF"], [13024, 1, "\\u30C1"], [13025, 1, "\\u30C4"], [13026, 1, "\\u30C6"], [13027, 1, "\\u30C8"], [13028, 1, "\\u30CA"], [13029, 1, "\\u30CB"], [13030, 1, "\\u30CC"], [13031, 1, "\\u30CD"], [13032, 1, "\\u30CE"], [13033, 1, "\\u30CF"], [13034, 1, "\\u30D2"], [13035, 1, "\\u30D5"], [13036, 1, "\\u30D8"], [13037, 1, "\\u30DB"], [13038, 1, "\\u30DE"], [13039, 1, "\\u30DF"], [13040, 1, "\\u30E0"], [13041, 1, "\\u30E1"], [13042, 1, "\\u30E2"], [13043, 1, "\\u30E4"], [13044, 1, "\\u30E6"], [13045, 1, "\\u30E8"], [13046, 1, "\\u30E9"], [13047, 1, "\\u30EA"], [13048, 1, "\\u30EB"], [13049, 1, "\\u30EC"], [13050, 1, "\\u30ED"], [13051, 1, "\\u30EF"], [13052, 1, "\\u30F0"], [13053, 1, "\\u30F1"], [13054, 1, "\\u30F2"], [13055, 1, "\\u4EE4\\u548C"], [13056, 1, "\\u30A2\\u30D1\\u30FC\\u30C8"], [13057, 1, "\\u30A2\\u30EB\\u30D5\\u30A1"], [13058, 1, "\\u30A2\\u30F3\\u30DA\\u30A2"], [13059, 1, "\\u30A2\\u30FC\\u30EB"], [13060, 1, "\\u30A4\\u30CB\\u30F3\\u30B0"], [13061, 1, "\\u30A4\\u30F3\\u30C1"], [13062, 1, "\\u30A6\\u30A9\\u30F3"], [13063, 1, "\\u30A8\\u30B9\\u30AF\\u30FC\\u30C9"], [13064, 1, "\\u30A8\\u30FC\\u30AB\\u30FC"], [13065, 1, "\\u30AA\\u30F3\\u30B9"], [13066, 1, "\\u30AA\\u30FC\\u30E0"], [13067, 1, "\\u30AB\\u30A4\\u30EA"], [13068, 1, "\\u30AB\\u30E9\\u30C3\\u30C8"], [13069, 1, "\\u30AB\\u30ED\\u30EA\\u30FC"], [13070, 1, "\\u30AC\\u30ED\\u30F3"], [13071, 1, "\\u30AC\\u30F3\\u30DE"], [13072, 1, "\\u30AE\\u30AC"], [13073, 1, "\\u30AE\\u30CB\\u30FC"], [13074, 1, "\\u30AD\\u30E5\\u30EA\\u30FC"], [13075, 1, "\\u30AE\\u30EB\\u30C0\\u30FC"], [13076, 1, "\\u30AD\\u30ED"], [13077, 1, "\\u30AD\\u30ED\\u30B0\\u30E9\\u30E0"], [13078, 1, "\\u30AD\\u30ED\\u30E1\\u30FC\\u30C8\\u30EB"], [13079, 1, "\\u30AD\\u30ED\\u30EF\\u30C3\\u30C8"], [13080, 1, "\\u30B0\\u30E9\\u30E0"], [13081, 1, "\\u30B0\\u30E9\\u30E0\\u30C8\\u30F3"], [13082, 1, "\\u30AF\\u30EB\\u30BC\\u30A4\\u30ED"], [13083, 1, "\\u30AF\\u30ED\\u30FC\\u30CD"], [13084, 1, "\\u30B1\\u30FC\\u30B9"], [13085, 1, "\\u30B3\\u30EB\\u30CA"], [13086, 1, "\\u30B3\\u30FC\\u30DD"], [13087, 1, "\\u30B5\\u30A4\\u30AF\\u30EB"], [13088, 1, "\\u30B5\\u30F3\\u30C1\\u30FC\\u30E0"], [13089, 1, "\\u30B7\\u30EA\\u30F3\\u30B0"], [13090, 1, "\\u30BB\\u30F3\\u30C1"], [13091, 1, "\\u30BB\\u30F3\\u30C8"], [13092, 1, "\\u30C0\\u30FC\\u30B9"], [13093, 1, "\\u30C7\\u30B7"], [13094, 1, "\\u30C9\\u30EB"], [13095, 1, "\\u30C8\\u30F3"], [13096, 1, "\\u30CA\\u30CE"], [13097, 1, "\\u30CE\\u30C3\\u30C8"], [13098, 1, "\\u30CF\\u30A4\\u30C4"], [13099, 1, "\\u30D1\\u30FC\\u30BB\\u30F3\\u30C8"], [13100, 1, "\\u30D1\\u30FC\\u30C4"], [13101, 1, "\\u30D0\\u30FC\\u30EC\\u30EB"], [13102, 1, "\\u30D4\\u30A2\\u30B9\\u30C8\\u30EB"], [13103, 1, "\\u30D4\\u30AF\\u30EB"], [13104, 1, "\\u30D4\\u30B3"], [13105, 1, "\\u30D3\\u30EB"], [13106, 1, "\\u30D5\\u30A1\\u30E9\\u30C3\\u30C9"], [13107, 1, "\\u30D5\\u30A3\\u30FC\\u30C8"], [13108, 1, "\\u30D6\\u30C3\\u30B7\\u30A7\\u30EB"], [13109, 1, "\\u30D5\\u30E9\\u30F3"], [13110, 1, "\\u30D8\\u30AF\\u30BF\\u30FC\\u30EB"], [13111, 1, "\\u30DA\\u30BD"], [13112, 1, "\\u30DA\\u30CB\\u30D2"], [13113, 1, "\\u30D8\\u30EB\\u30C4"], [13114, 1, "\\u30DA\\u30F3\\u30B9"], [13115, 1, "\\u30DA\\u30FC\\u30B8"], [13116, 1, "\\u30D9\\u30FC\\u30BF"], [13117, 1, "\\u30DD\\u30A4\\u30F3\\u30C8"], [13118, 1, "\\u30DC\\u30EB\\u30C8"], [13119, 1, "\\u30DB\\u30F3"], [13120, 1, "\\u30DD\\u30F3\\u30C9"], [13121, 1, "\\u30DB\\u30FC\\u30EB"], [13122, 1, "\\u30DB\\u30FC\\u30F3"], [13123, 1, "\\u30DE\\u30A4\\u30AF\\u30ED"], [13124, 1, "\\u30DE\\u30A4\\u30EB"], [13125, 1, "\\u30DE\\u30C3\\u30CF"], [13126, 1, "\\u30DE\\u30EB\\u30AF"], [13127, 1, "\\u30DE\\u30F3\\u30B7\\u30E7\\u30F3"], [13128, 1, "\\u30DF\\u30AF\\u30ED\\u30F3"], [13129, 1, "\\u30DF\\u30EA"], [13130, 1, "\\u30DF\\u30EA\\u30D0\\u30FC\\u30EB"], [13131, 1, "\\u30E1\\u30AC"], [13132, 1, "\\u30E1\\u30AC\\u30C8\\u30F3"], [13133, 1, "\\u30E1\\u30FC\\u30C8\\u30EB"], [13134, 1, "\\u30E4\\u30FC\\u30C9"], [13135, 1, "\\u30E4\\u30FC\\u30EB"], [13136, 1, "\\u30E6\\u30A2\\u30F3"], [13137, 1, "\\u30EA\\u30C3\\u30C8\\u30EB"], [13138, 1, "\\u30EA\\u30E9"], [13139, 1, "\\u30EB\\u30D4\\u30FC"], [13140, 1, "\\u30EB\\u30FC\\u30D6\\u30EB"], [13141, 1, "\\u30EC\\u30E0"], [13142, 1, "\\u30EC\\u30F3\\u30C8\\u30B2\\u30F3"], [13143, 1, "\\u30EF\\u30C3\\u30C8"], [13144, 1, "0\\u70B9"], [13145, 1, "1\\u70B9"], [13146, 1, "2\\u70B9"], [13147, 1, "3\\u70B9"], [13148, 1, "4\\u70B9"], [13149, 1, "5\\u70B9"], [13150, 1, "6\\u70B9"], [13151, 1, "7\\u70B9"], [13152, 1, "8\\u70B9"], [13153, 1, "9\\u70B9"], [13154, 1, "10\\u70B9"], [13155, 1, "11\\u70B9"], [13156, 1, "12\\u70B9"], [13157, 1, "13\\u70B9"], [13158, 1, "14\\u70B9"], [13159, 1, "15\\u70B9"], [13160, 1, "16\\u70B9"], [13161, 1, "17\\u70B9"], [13162, 1, "18\\u70B9"], [13163, 1, "19\\u70B9"], [13164, 1, "20\\u70B9"], [13165, 1, "21\\u70B9"], [13166, 1, "22\\u70B9"], [13167, 1, "23\\u70B9"], [13168, 1, "24\\u70B9"], [13169, 1, "hpa"], [13170, 1, "da"], [13171, 1, "au"], [13172, 1, "bar"], [13173, 1, "ov"], [13174, 1, "pc"], [13175, 1, "dm"], [13176, 1, "dm2"], [13177, 1, "dm3"], [13178, 1, "iu"], [13179, 1, "\\u5E73\\u6210"], [13180, 1, "\\u662D\\u548C"], [13181, 1, "\\u5927\\u6B63"], [13182, 1, "\\u660E\\u6CBB"], [13183, 1, "\\u682A\\u5F0F\\u4F1A\\u793E"], [13184, 1, "pa"], [13185, 1, "na"], [13186, 1, "\\u03BCa"], [13187, 1, "ma"], [13188, 1, "ka"], [13189, 1, "kb"], [13190, 1, "mb"], [13191, 1, "gb"], [13192, 1, "cal"], [13193, 1, "kcal"], [13194, 1, "pf"], [13195, 1, "nf"], [13196, 1, "\\u03BCf"], [13197, 1, "\\u03BCg"], [13198, 1, "mg"], [13199, 1, "kg"], [13200, 1, "hz"], [13201, 1, "khz"], [13202, 1, "mhz"], [13203, 1, "ghz"], [13204, 1, "thz"], [13205, 1, "\\u03BCl"], [13206, 1, "ml"], [13207, 1, "dl"], [13208, 1, "kl"], [13209, 1, "fm"], [13210, 1, "nm"], [13211, 1, "\\u03BCm"], [13212, 1, "mm"], [13213, 1, "cm"], [13214, 1, "km"], [13215, 1, "mm2"], [13216, 1, "cm2"], [13217, 1, "m2"], [13218, 1, "km2"], [13219, 1, "mm3"], [13220, 1, "cm3"], [13221, 1, "m3"], [13222, 1, "km3"], [13223, 1, "m\\u2215s"], [13224, 1, "m\\u2215s2"], [13225, 1, "pa"], [13226, 1, "kpa"], [13227, 1, "mpa"], [13228, 1, "gpa"], [13229, 1, "rad"], [13230, 1, "rad\\u2215s"], [13231, 1, "rad\\u2215s2"], [13232, 1, "ps"], [13233, 1, "ns"], [13234, 1, "\\u03BCs"], [13235, 1, "ms"], [13236, 1, "pv"], [13237, 1, "nv"], [13238, 1, "\\u03BCv"], [13239, 1, "mv"], [13240, 1, "kv"], [13241, 1, "mv"], [13242, 1, "pw"], [13243, 1, "nw"], [13244, 1, "\\u03BCw"], [13245, 1, "mw"], [13246, 1, "kw"], [13247, 1, "mw"], [13248, 1, "k\\u03C9"], [13249, 1, "m\\u03C9"], [13250, 3], [13251, 1, "bq"], [13252, 1, "cc"], [13253, 1, "cd"], [13254, 1, "c\\u2215kg"], [13255, 3], [13256, 1, "db"], [13257, 1, "gy"], [13258, 1, "ha"], [13259, 1, "hp"], [13260, 1, "in"], [13261, 1, "kk"], [13262, 1, "km"], [13263, 1, "kt"], [13264, 1, "lm"], [13265, 1, "ln"], [13266, 1, "log"], [13267, 1, "lx"], [13268, 1, "mb"], [13269, 1, "mil"], [13270, 1, "mol"], [13271, 1, "ph"], [13272, 3], [13273, 1, "ppm"], [13274, 1, "pr"], [13275, 1, "sr"], [13276, 1, "sv"], [13277, 1, "wb"], [13278, 1, "v\\u2215m"], [13279, 1, "a\\u2215m"], [13280, 1, "1\\u65E5"], [13281, 1, "2\\u65E5"], [13282, 1, "3\\u65E5"], [13283, 1, "4\\u65E5"], [13284, 1, "5\\u65E5"], [13285, 1, "6\\u65E5"], [13286, 1, "7\\u65E5"], [13287, 1, "8\\u65E5"], [13288, 1, "9\\u65E5"], [13289, 1, "10\\u65E5"], [13290, 1, "11\\u65E5"], [13291, 1, "12\\u65E5"], [13292, 1, "13\\u65E5"], [13293, 1, "14\\u65E5"], [13294, 1, "15\\u65E5"], [13295, 1, "16\\u65E5"], [13296, 1, "17\\u65E5"], [13297, 1, "18\\u65E5"], [13298, 1, "19\\u65E5"], [13299, 1, "20\\u65E5"], [13300, 1, "21\\u65E5"], [13301, 1, "22\\u65E5"], [13302, 1, "23\\u65E5"], [13303, 1, "24\\u65E5"], [13304, 1, "25\\u65E5"], [13305, 1, "26\\u65E5"], [13306, 1, "27\\u65E5"], [13307, 1, "28\\u65E5"], [13308, 1, "29\\u65E5"], [13309, 1, "30\\u65E5"], [13310, 1, "31\\u65E5"], [13311, 1, "gal"], [[13312, 19893], 2], [[19894, 19903], 2], [[19904, 19967], 2], [[19968, 40869], 2], [[40870, 40891], 2], [[40892, 40899], 2], [[40900, 40907], 2], [40908, 2], [[40909, 40917], 2], [[40918, 40938], 2], [[40939, 40943], 2], [[40944, 40956], 2], [[40957, 40959], 2], [[40960, 42124], 2], [[42125, 42127], 3], [[42128, 42145], 2], [[42146, 42147], 2], [[42148, 42163], 2], [42164, 2], [[42165, 42176], 2], [42177, 2], [[42178, 42180], 2], [42181, 2], [42182, 2], [[42183, 42191], 3], [[42192, 42237], 2], [[42238, 42239], 2], [[42240, 42508], 2], [[42509, 42511], 2], [[42512, 42539], 2], [[42540, 42559], 3], [42560, 1, "\\uA641"], [42561, 2], [42562, 1, "\\uA643"], [42563, 2], [42564, 1, "\\uA645"], [42565, 2], [42566, 1, "\\uA647"], [42567, 2], [42568, 1, "\\uA649"], [42569, 2], [42570, 1, "\\uA64B"], [42571, 2], [42572, 1, "\\uA64D"], [42573, 2], [42574, 1, "\\uA64F"], [42575, 2], [42576, 1, "\\uA651"], [42577, 2], [42578, 1, "\\uA653"], [42579, 2], [42580, 1, "\\uA655"], [42581, 2], [42582, 1, "\\uA657"], [42583, 2], [42584, 1, "\\uA659"], [42585, 2], [42586, 1, "\\uA65B"], [42587, 2], [42588, 1, "\\uA65D"], [42589, 2], [42590, 1, "\\uA65F"], [42591, 2], [42592, 1, "\\uA661"], [42593, 2], [42594, 1, "\\uA663"], [42595, 2], [42596, 1, "\\uA665"], [42597, 2], [42598, 1, "\\uA667"], [42599, 2], [42600, 1, "\\uA669"], [42601, 2], [42602, 1, "\\uA66B"], [42603, 2], [42604, 1, "\\uA66D"], [[42605, 42607], 2], [[42608, 42611], 2], [[42612, 42619], 2], [[42620, 42621], 2], [42622, 2], [42623, 2], [42624, 1, "\\uA681"], [42625, 2], [42626, 1, "\\uA683"], [42627, 2], [42628, 1, "\\uA685"], [42629, 2], [42630, 1, "\\uA687"], [42631, 2], [42632, 1, "\\uA689"], [42633, 2], [42634, 1, "\\uA68B"], [42635, 2], [42636, 1, "\\uA68D"], [42637, 2], [42638, 1, "\\uA68F"], [42639, 2], [42640, 1, "\\uA691"], [42641, 2], [42642, 1, "\\uA693"], [42643, 2], [42644, 1, "\\uA695"], [42645, 2], [42646, 1, "\\uA697"], [42647, 2], [42648, 1, "\\uA699"], [42649, 2], [42650, 1, "\\uA69B"], [42651, 2], [42652, 1, "\\u044A"], [42653, 1, "\\u044C"], [42654, 2], [42655, 2], [[42656, 42725], 2], [[42726, 42735], 2], [[42736, 42737], 2], [[42738, 42743], 2], [[42744, 42751], 3], [[42752, 42774], 2], [[42775, 42778], 2], [[42779, 42783], 2], [[42784, 42785], 2], [42786, 1, "\\uA723"], [42787, 2], [42788, 1, "\\uA725"], [42789, 2], [42790, 1, "\\uA727"], [42791, 2], [42792, 1, "\\uA729"], [42793, 2], [42794, 1, "\\uA72B"], [42795, 2], [42796, 1, "\\uA72D"], [42797, 2], [42798, 1, "\\uA72F"], [[42799, 42801], 2], [42802, 1, "\\uA733"], [42803, 2], [42804, 1, "\\uA735"], [42805, 2], [42806, 1, "\\uA737"], [42807, 2], [42808, 1, "\\uA739"], [42809, 2], [42810, 1, "\\uA73B"], [42811, 2], [42812, 1, "\\uA73D"], [42813, 2], [42814, 1, "\\uA73F"], [42815, 2], [42816, 1, "\\uA741"], [42817, 2], [42818, 1, "\\uA743"], [42819, 2], [42820, 1, "\\uA745"], [42821, 2], [42822, 1, "\\uA747"], [42823, 2], [42824, 1, "\\uA749"], [42825, 2], [42826, 1, "\\uA74B"], [42827, 2], [42828, 1, "\\uA74D"], [42829, 2], [42830, 1, "\\uA74F"], [42831, 2], [42832, 1, "\\uA751"], [42833, 2], [42834, 1, "\\uA753"], [42835, 2], [42836, 1, "\\uA755"], [42837, 2], [42838, 1, "\\uA757"], [42839, 2], [42840, 1, "\\uA759"], [42841, 2], [42842, 1, "\\uA75B"], [42843, 2], [42844, 1, "\\uA75D"], [42845, 2], [42846, 1, "\\uA75F"], [42847, 2], [42848, 1, "\\uA761"], [42849, 2], [42850, 1, "\\uA763"], [42851, 2], [42852, 1, "\\uA765"], [42853, 2], [42854, 1, "\\uA767"], [42855, 2], [42856, 1, "\\uA769"], [42857, 2], [42858, 1, "\\uA76B"], [42859, 2], [42860, 1, "\\uA76D"], [42861, 2], [42862, 1, "\\uA76F"], [42863, 2], [42864, 1, "\\uA76F"], [[42865, 42872], 2], [42873, 1, "\\uA77A"], [42874, 2], [42875, 1, "\\uA77C"], [42876, 2], [42877, 1, "\\u1D79"], [42878, 1, "\\uA77F"], [42879, 2], [42880, 1, "\\uA781"], [42881, 2], [42882, 1, "\\uA783"], [42883, 2], [42884, 1, "\\uA785"], [42885, 2], [42886, 1, "\\uA787"], [[42887, 42888], 2], [[42889, 42890], 2], [42891, 1, "\\uA78C"], [42892, 2], [42893, 1, "\\u0265"], [42894, 2], [42895, 2], [42896, 1, "\\uA791"], [42897, 2], [42898, 1, "\\uA793"], [42899, 2], [[42900, 42901], 2], [42902, 1, "\\uA797"], [42903, 2], [42904, 1, "\\uA799"], [42905, 2], [42906, 1, "\\uA79B"], [42907, 2], [42908, 1, "\\uA79D"], [42909, 2], [42910, 1, "\\uA79F"], [42911, 2], [42912, 1, "\\uA7A1"], [42913, 2], [42914, 1, "\\uA7A3"], [42915, 2], [42916, 1, "\\uA7A5"], [42917, 2], [42918, 1, "\\uA7A7"], [42919, 2], [42920, 1, "\\uA7A9"], [42921, 2], [42922, 1, "\\u0266"], [42923, 1, "\\u025C"], [42924, 1, "\\u0261"], [42925, 1, "\\u026C"], [42926, 1, "\\u026A"], [42927, 2], [42928, 1, "\\u029E"], [42929, 1, "\\u0287"], [42930, 1, "\\u029D"], [42931, 1, "\\uAB53"], [42932, 1, "\\uA7B5"], [42933, 2], [42934, 1, "\\uA7B7"], [42935, 2], [42936, 1, "\\uA7B9"], [42937, 2], [42938, 1, "\\uA7BB"], [42939, 2], [42940, 1, "\\uA7BD"], [42941, 2], [42942, 1, "\\uA7BF"], [42943, 2], [42944, 1, "\\uA7C1"], [42945, 2], [42946, 1, "\\uA7C3"], [42947, 2], [42948, 1, "\\uA794"], [42949, 1, "\\u0282"], [42950, 1, "\\u1D8E"], [42951, 1, "\\uA7C8"], [42952, 2], [42953, 1, "\\uA7CA"], [42954, 2], [[42955, 42959], 3], [42960, 1, "\\uA7D1"], [42961, 2], [42962, 3], [42963, 2], [42964, 3], [42965, 2], [42966, 1, "\\uA7D7"], [42967, 2], [42968, 1, "\\uA7D9"], [42969, 2], [[42970, 42993], 3], [42994, 1, "c"], [42995, 1, "f"], [42996, 1, "q"], [42997, 1, "\\uA7F6"], [42998, 2], [42999, 2], [43e3, 1, "\\u0127"], [43001, 1, "\\u0153"], [43002, 2], [[43003, 43007], 2], [[43008, 43047], 2], [[43048, 43051], 2], [43052, 2], [[43053, 43055], 3], [[43056, 43065], 2], [[43066, 43071], 3], [[43072, 43123], 2], [[43124, 43127], 2], [[43128, 43135], 3], [[43136, 43204], 2], [43205, 2], [[43206, 43213], 3], [[43214, 43215], 2], [[43216, 43225], 2], [[43226, 43231], 3], [[43232, 43255], 2], [[43256, 43258], 2], [43259, 2], [43260, 2], [43261, 2], [[43262, 43263], 2], [[43264, 43309], 2], [[43310, 43311], 2], [[43312, 43347], 2], [[43348, 43358], 3], [43359, 2], [[43360, 43388], 2], [[43389, 43391], 3], [[43392, 43456], 2], [[43457, 43469], 2], [43470, 3], [[43471, 43481], 2], [[43482, 43485], 3], [[43486, 43487], 2], [[43488, 43518], 2], [43519, 3], [[43520, 43574], 2], [[43575, 43583], 3], [[43584, 43597], 2], [[43598, 43599], 3], [[43600, 43609], 2], [[43610, 43611], 3], [[43612, 43615], 2], [[43616, 43638], 2], [[43639, 43641], 2], [[43642, 43643], 2], [[43644, 43647], 2], [[43648, 43714], 2], [[43715, 43738], 3], [[43739, 43741], 2], [[43742, 43743], 2], [[43744, 43759], 2], [[43760, 43761], 2], [[43762, 43766], 2], [[43767, 43776], 3], [[43777, 43782], 2], [[43783, 43784], 3], [[43785, 43790], 2], [[43791, 43792], 3], [[43793, 43798], 2], [[43799, 43807], 3], [[43808, 43814], 2], [43815, 3], [[43816, 43822], 2], [43823, 3], [[43824, 43866], 2], [43867, 2], [43868, 1, "\\uA727"], [43869, 1, "\\uAB37"], [43870, 1, "\\u026B"], [43871, 1, "\\uAB52"], [[43872, 43875], 2], [[43876, 43877], 2], [[43878, 43879], 2], [43880, 2], [43881, 1, "\\u028D"], [[43882, 43883], 2], [[43884, 43887], 3], [43888, 1, "\\u13A0"], [43889, 1, "\\u13A1"], [43890, 1, "\\u13A2"], [43891, 1, "\\u13A3"], [43892, 1, "\\u13A4"], [43893, 1, "\\u13A5"], [43894, 1, "\\u13A6"], [43895, 1, "\\u13A7"], [43896, 1, "\\u13A8"], [43897, 1, "\\u13A9"], [43898, 1, "\\u13AA"], [43899, 1, "\\u13AB"], [43900, 1, "\\u13AC"], [43901, 1, "\\u13AD"], [43902, 1, "\\u13AE"], [43903, 1, "\\u13AF"], [43904, 1, "\\u13B0"], [43905, 1, "\\u13B1"], [43906, 1, "\\u13B2"], [43907, 1, "\\u13B3"], [43908, 1, "\\u13B4"], [43909, 1, "\\u13B5"], [43910, 1, "\\u13B6"], [43911, 1, "\\u13B7"], [43912, 1, "\\u13B8"], [43913, 1, "\\u13B9"], [43914, 1, "\\u13BA"], [43915, 1, "\\u13BB"], [43916, 1, "\\u13BC"], [43917, 1, "\\u13BD"], [43918, 1, "\\u13BE"], [43919, 1, "\\u13BF"], [43920, 1, "\\u13C0"], [43921, 1, "\\u13C1"], [43922, 1, "\\u13C2"], [43923, 1, "\\u13C3"], [43924, 1, "\\u13C4"], [43925, 1, "\\u13C5"], [43926, 1, "\\u13C6"], [43927, 1, "\\u13C7"], [43928, 1, "\\u13C8"], [43929, 1, "\\u13C9"], [43930, 1, "\\u13CA"], [43931, 1, "\\u13CB"], [43932, 1, "\\u13CC"], [43933, 1, "\\u13CD"], [43934, 1, "\\u13CE"], [43935, 1, "\\u13CF"], [43936, 1, "\\u13D0"], [43937, 1, "\\u13D1"], [43938, 1, "\\u13D2"], [43939, 1, "\\u13D3"], [43940, 1, "\\u13D4"], [43941, 1, "\\u13D5"], [43942, 1, "\\u13D6"], [43943, 1, "\\u13D7"], [43944, 1, "\\u13D8"], [43945, 1, "\\u13D9"], [43946, 1, "\\u13DA"], [43947, 1, "\\u13DB"], [43948, 1, "\\u13DC"], [43949, 1, "\\u13DD"], [43950, 1, "\\u13DE"], [43951, 1, "\\u13DF"], [43952, 1, "\\u13E0"], [43953, 1, "\\u13E1"], [43954, 1, "\\u13E2"], [43955, 1, "\\u13E3"], [43956, 1, "\\u13E4"], [43957, 1, "\\u13E5"], [43958, 1, "\\u13E6"], [43959, 1, "\\u13E7"], [43960, 1, "\\u13E8"], [43961, 1, "\\u13E9"], [43962, 1, "\\u13EA"], [43963, 1, "\\u13EB"], [43964, 1, "\\u13EC"], [43965, 1, "\\u13ED"], [43966, 1, "\\u13EE"], [43967, 1, "\\u13EF"], [[43968, 44010], 2], [44011, 2], [[44012, 44013], 2], [[44014, 44015], 3], [[44016, 44025], 2], [[44026, 44031], 3], [[44032, 55203], 2], [[55204, 55215], 3], [[55216, 55238], 2], [[55239, 55242], 3], [[55243, 55291], 2], [[55292, 55295], 3], [[55296, 57343], 3], [[57344, 63743], 3], [63744, 1, "\\u8C48"], [63745, 1, "\\u66F4"], [63746, 1, "\\u8ECA"], [63747, 1, "\\u8CC8"], [63748, 1, "\\u6ED1"], [63749, 1, "\\u4E32"], [63750, 1, "\\u53E5"], [[63751, 63752], 1, "\\u9F9C"], [63753, 1, "\\u5951"], [63754, 1, "\\u91D1"], [63755, 1, "\\u5587"], [63756, 1, "\\u5948"], [63757, 1, "\\u61F6"], [63758, 1, "\\u7669"], [63759, 1, "\\u7F85"], [63760, 1, "\\u863F"], [63761, 1, "\\u87BA"], [63762, 1, "\\u88F8"], [63763, 1, "\\u908F"], [63764, 1, "\\u6A02"], [63765, 1, "\\u6D1B"], [63766, 1, "\\u70D9"], [63767, 1, "\\u73DE"], [63768, 1, "\\u843D"], [63769, 1, "\\u916A"], [63770, 1, "\\u99F1"], [63771, 1, "\\u4E82"], [63772, 1, "\\u5375"], [63773, 1, "\\u6B04"], [63774, 1, "\\u721B"], [63775, 1, "\\u862D"], [63776, 1, "\\u9E1E"], [63777, 1, "\\u5D50"], [63778, 1, "\\u6FEB"], [63779, 1, "\\u85CD"], [63780, 1, "\\u8964"], [63781, 1, "\\u62C9"], [63782, 1, "\\u81D8"], [63783, 1, "\\u881F"], [63784, 1, "\\u5ECA"], [63785, 1, "\\u6717"], [63786, 1, "\\u6D6A"], [63787, 1, "\\u72FC"], [63788, 1, "\\u90CE"], [63789, 1, "\\u4F86"], [63790, 1, "\\u51B7"], [63791, 1, "\\u52DE"], [63792, 1, "\\u64C4"], [63793, 1, "\\u6AD3"], [63794, 1, "\\u7210"], [63795, 1, "\\u76E7"], [63796, 1, "\\u8001"], [63797, 1, "\\u8606"], [63798, 1, "\\u865C"], [63799, 1, "\\u8DEF"], [63800, 1, "\\u9732"], [63801, 1, "\\u9B6F"], [63802, 1, "\\u9DFA"], [63803, 1, "\\u788C"], [63804, 1, "\\u797F"], [63805, 1, "\\u7DA0"], [63806, 1, "\\u83C9"], [63807, 1, "\\u9304"], [63808, 1, "\\u9E7F"], [63809, 1, "\\u8AD6"], [63810, 1, "\\u58DF"], [63811, 1, "\\u5F04"], [63812, 1, "\\u7C60"], [63813, 1, "\\u807E"], [63814, 1, "\\u7262"], [63815, 1, "\\u78CA"], [63816, 1, "\\u8CC2"], [63817, 1, "\\u96F7"], [63818, 1, "\\u58D8"], [63819, 1, "\\u5C62"], [63820, 1, "\\u6A13"], [63821, 1, "\\u6DDA"], [63822, 1, "\\u6F0F"], [63823, 1, "\\u7D2F"], [63824, 1, "\\u7E37"], [63825, 1, "\\u964B"], [63826, 1, "\\u52D2"], [63827, 1, "\\u808B"], [63828, 1, "\\u51DC"], [63829, 1, "\\u51CC"], [63830, 1, "\\u7A1C"], [63831, 1, "\\u7DBE"], [63832, 1, "\\u83F1"], [63833, 1, "\\u9675"], [63834, 1, "\\u8B80"], [63835, 1, "\\u62CF"], [63836, 1, "\\u6A02"], [63837, 1, "\\u8AFE"], [63838, 1, "\\u4E39"], [63839, 1, "\\u5BE7"], [63840, 1, "\\u6012"], [63841, 1, "\\u7387"], [63842, 1, "\\u7570"], [63843, 1, "\\u5317"], [63844, 1, "\\u78FB"], [63845, 1, "\\u4FBF"], [63846, 1, "\\u5FA9"], [63847, 1, "\\u4E0D"], [63848, 1, "\\u6CCC"], [63849, 1, "\\u6578"], [63850, 1, "\\u7D22"], [63851, 1, "\\u53C3"], [63852, 1, "\\u585E"], [63853, 1, "\\u7701"], [63854, 1, "\\u8449"], [63855, 1, "\\u8AAA"], [63856, 1, "\\u6BBA"], [63857, 1, "\\u8FB0"], [63858, 1, "\\u6C88"], [63859, 1, "\\u62FE"], [63860, 1, "\\u82E5"], [63861, 1, "\\u63A0"], [63862, 1, "\\u7565"], [63863, 1, "\\u4EAE"], [63864, 1, "\\u5169"], [63865, 1, "\\u51C9"], [63866, 1, "\\u6881"], [63867, 1, "\\u7CE7"], [63868, 1, "\\u826F"], [63869, 1, "\\u8AD2"], [63870, 1, "\\u91CF"], [63871, 1, "\\u52F5"], [63872, 1, "\\u5442"], [63873, 1, "\\u5973"], [63874, 1, "\\u5EEC"], [63875, 1, "\\u65C5"], [63876, 1, "\\u6FFE"], [63877, 1, "\\u792A"], [63878, 1, "\\u95AD"], [63879, 1, "\\u9A6A"], [63880, 1, "\\u9E97"], [63881, 1, "\\u9ECE"], [63882, 1, "\\u529B"], [63883, 1, "\\u66C6"], [63884, 1, "\\u6B77"], [63885, 1, "\\u8F62"], [63886, 1, "\\u5E74"], [63887, 1, "\\u6190"], [63888, 1, "\\u6200"], [63889, 1, "\\u649A"], [63890, 1, "\\u6F23"], [63891, 1, "\\u7149"], [63892, 1, "\\u7489"], [63893, 1, "\\u79CA"], [63894, 1, "\\u7DF4"], [63895, 1, "\\u806F"], [63896, 1, "\\u8F26"], [63897, 1, "\\u84EE"], [63898, 1, "\\u9023"], [63899, 1, "\\u934A"], [63900, 1, "\\u5217"], [63901, 1, "\\u52A3"], [63902, 1, "\\u54BD"], [63903, 1, "\\u70C8"], [63904, 1, "\\u88C2"], [63905, 1, "\\u8AAA"], [63906, 1, "\\u5EC9"], [63907, 1, "\\u5FF5"], [63908, 1, "\\u637B"], [63909, 1, "\\u6BAE"], [63910, 1, "\\u7C3E"], [63911, 1, "\\u7375"], [63912, 1, "\\u4EE4"], [63913, 1, "\\u56F9"], [63914, 1, "\\u5BE7"], [63915, 1, "\\u5DBA"], [63916, 1, "\\u601C"], [63917, 1, "\\u73B2"], [63918, 1, "\\u7469"], [63919, 1, "\\u7F9A"], [63920, 1, "\\u8046"], [63921, 1, "\\u9234"], [63922, 1, "\\u96F6"], [63923, 1, "\\u9748"], [63924, 1, "\\u9818"], [63925, 1, "\\u4F8B"], [63926, 1, "\\u79AE"], [63927, 1, "\\u91B4"], [63928, 1, "\\u96B8"], [63929, 1, "\\u60E1"], [63930, 1, "\\u4E86"], [63931, 1, "\\u50DA"], [63932, 1, "\\u5BEE"], [63933, 1, "\\u5C3F"], [63934, 1, "\\u6599"], [63935, 1, "\\u6A02"], [63936, 1, "\\u71CE"], [63937, 1, "\\u7642"], [63938, 1, "\\u84FC"], [63939, 1, "\\u907C"], [63940, 1, "\\u9F8D"], [63941, 1, "\\u6688"], [63942, 1, "\\u962E"], [63943, 1, "\\u5289"], [63944, 1, "\\u677B"], [63945, 1, "\\u67F3"], [63946, 1, "\\u6D41"], [63947, 1, "\\u6E9C"], [63948, 1, "\\u7409"], [63949, 1, "\\u7559"], [63950, 1, "\\u786B"], [63951, 1, "\\u7D10"], [63952, 1, "\\u985E"], [63953, 1, "\\u516D"], [63954, 1, "\\u622E"], [63955, 1, "\\u9678"], [63956, 1, "\\u502B"], [63957, 1, "\\u5D19"], [63958, 1, "\\u6DEA"], [63959, 1, "\\u8F2A"], [63960, 1, "\\u5F8B"], [63961, 1, "\\u6144"], [63962, 1, "\\u6817"], [63963, 1, "\\u7387"], [63964, 1, "\\u9686"], [63965, 1, "\\u5229"], [63966, 1, "\\u540F"], [63967, 1, "\\u5C65"], [63968, 1, "\\u6613"], [63969, 1, "\\u674E"], [63970, 1, "\\u68A8"], [63971, 1, "\\u6CE5"], [63972, 1, "\\u7406"], [63973, 1, "\\u75E2"], [63974, 1, "\\u7F79"], [63975, 1, "\\u88CF"], [63976, 1, "\\u88E1"], [63977, 1, "\\u91CC"], [63978, 1, "\\u96E2"], [63979, 1, "\\u533F"], [63980, 1, "\\u6EBA"], [63981, 1, "\\u541D"], [63982, 1, "\\u71D0"], [63983, 1, "\\u7498"], [63984, 1, "\\u85FA"], [63985, 1, "\\u96A3"], [63986, 1, "\\u9C57"], [63987, 1, "\\u9E9F"], [63988, 1, "\\u6797"], [63989, 1, "\\u6DCB"], [63990, 1, "\\u81E8"], [63991, 1, "\\u7ACB"], [63992, 1, "\\u7B20"], [63993, 1, "\\u7C92"], [63994, 1, "\\u72C0"], [63995, 1, "\\u7099"], [63996, 1, "\\u8B58"], [63997, 1, "\\u4EC0"], [63998, 1, "\\u8336"], [63999, 1, "\\u523A"], [64e3, 1, "\\u5207"], [64001, 1, "\\u5EA6"], [64002, 1, "\\u62D3"], [64003, 1, "\\u7CD6"], [64004, 1, "\\u5B85"], [64005, 1, "\\u6D1E"], [64006, 1, "\\u66B4"], [64007, 1, "\\u8F3B"], [64008, 1, "\\u884C"], [64009, 1, "\\u964D"], [64010, 1, "\\u898B"], [64011, 1, "\\u5ED3"], [64012, 1, "\\u5140"], [64013, 1, "\\u55C0"], [[64014, 64015], 2], [64016, 1, "\\u585A"], [64017, 2], [64018, 1, "\\u6674"], [[64019, 64020], 2], [64021, 1, "\\u51DE"], [64022, 1, "\\u732A"], [64023, 1, "\\u76CA"], [64024, 1, "\\u793C"], [64025, 1, "\\u795E"], [64026, 1, "\\u7965"], [64027, 1, "\\u798F"], [64028, 1, "\\u9756"], [64029, 1, "\\u7CBE"], [64030, 1, "\\u7FBD"], [64031, 2], [64032, 1, "\\u8612"], [64033, 2], [64034, 1, "\\u8AF8"], [[64035, 64036], 2], [64037, 1, "\\u9038"], [64038, 1, "\\u90FD"], [[64039, 64041], 2], [64042, 1, "\\u98EF"], [64043, 1, "\\u98FC"], [64044, 1, "\\u9928"], [64045, 1, "\\u9DB4"], [64046, 1, "\\u90DE"], [64047, 1, "\\u96B7"], [64048, 1, "\\u4FAE"], [64049, 1, "\\u50E7"], [64050, 1, "\\u514D"], [64051, 1, "\\u52C9"], [64052, 1, "\\u52E4"], [64053, 1, "\\u5351"], [64054, 1, "\\u559D"], [64055, 1, "\\u5606"], [64056, 1, "\\u5668"], [64057, 1, "\\u5840"], [64058, 1, "\\u58A8"], [64059, 1, "\\u5C64"], [64060, 1, "\\u5C6E"], [64061, 1, "\\u6094"], [64062, 1, "\\u6168"], [64063, 1, "\\u618E"], [64064, 1, "\\u61F2"], [64065, 1, "\\u654F"], [64066, 1, "\\u65E2"], [64067, 1, "\\u6691"], [64068, 1, "\\u6885"], [64069, 1, "\\u6D77"], [64070, 1, "\\u6E1A"], [64071, 1, "\\u6F22"], [64072, 1, "\\u716E"], [64073, 1, "\\u722B"], [64074, 1, "\\u7422"], [64075, 1, "\\u7891"], [64076, 1, "\\u793E"], [64077, 1, "\\u7949"], [64078, 1, "\\u7948"], [64079, 1, "\\u7950"], [64080, 1, "\\u7956"], [64081, 1, "\\u795D"], [64082, 1, "\\u798D"], [64083, 1, "\\u798E"], [64084, 1, "\\u7A40"], [64085, 1, "\\u7A81"], [64086, 1, "\\u7BC0"], [64087, 1, "\\u7DF4"], [64088, 1, "\\u7E09"], [64089, 1, "\\u7E41"], [64090, 1, "\\u7F72"], [64091, 1, "\\u8005"], [64092, 1, "\\u81ED"], [[64093, 64094], 1, "\\u8279"], [64095, 1, "\\u8457"], [64096, 1, "\\u8910"], [64097, 1, "\\u8996"], [64098, 1, "\\u8B01"], [64099, 1, "\\u8B39"], [64100, 1, "\\u8CD3"], [64101, 1, "\\u8D08"], [64102, 1, "\\u8FB6"], [64103, 1, "\\u9038"], [64104, 1, "\\u96E3"], [64105, 1, "\\u97FF"], [64106, 1, "\\u983B"], [64107, 1, "\\u6075"], [64108, 1, "\\u{242EE}"], [64109, 1, "\\u8218"], [[64110, 64111], 3], [64112, 1, "\\u4E26"], [64113, 1, "\\u51B5"], [64114, 1, "\\u5168"], [64115, 1, "\\u4F80"], [64116, 1, "\\u5145"], [64117, 1, "\\u5180"], [64118, 1, "\\u52C7"], [64119, 1, "\\u52FA"], [64120, 1, "\\u559D"], [64121, 1, "\\u5555"], [64122, 1, "\\u5599"], [64123, 1, "\\u55E2"], [64124, 1, "\\u585A"], [64125, 1, "\\u58B3"], [64126, 1, "\\u5944"], [64127, 1, "\\u5954"], [64128, 1, "\\u5A62"], [64129, 1, "\\u5B28"], [64130, 1, "\\u5ED2"], [64131, 1, "\\u5ED9"], [64132, 1, "\\u5F69"], [64133, 1, "\\u5FAD"], [64134, 1, "\\u60D8"], [64135, 1, "\\u614E"], [64136, 1, "\\u6108"], [64137, 1, "\\u618E"], [64138, 1, "\\u6160"], [64139, 1, "\\u61F2"], [64140, 1, "\\u6234"], [64141, 1, "\\u63C4"], [64142, 1, "\\u641C"], [64143, 1, "\\u6452"], [64144, 1, "\\u6556"], [64145, 1, "\\u6674"], [64146, 1, "\\u6717"], [64147, 1, "\\u671B"], [64148, 1, "\\u6756"], [64149, 1, "\\u6B79"], [64150, 1, "\\u6BBA"], [64151, 1, "\\u6D41"], [64152, 1, "\\u6EDB"], [64153, 1, "\\u6ECB"], [64154, 1, "\\u6F22"], [64155, 1, "\\u701E"], [64156, 1, "\\u716E"], [64157, 1, "\\u77A7"], [64158, 1, "\\u7235"], [64159, 1, "\\u72AF"], [64160, 1, "\\u732A"], [64161, 1, "\\u7471"], [64162, 1, "\\u7506"], [64163, 1, "\\u753B"], [64164, 1, "\\u761D"], [64165, 1, "\\u761F"], [64166, 1, "\\u76CA"], [64167, 1, "\\u76DB"], [64168, 1, "\\u76F4"], [64169, 1, "\\u774A"], [64170, 1, "\\u7740"], [64171, 1, "\\u78CC"], [64172, 1, "\\u7AB1"], [64173, 1, "\\u7BC0"], [64174, 1, "\\u7C7B"], [64175, 1, "\\u7D5B"], [64176, 1, "\\u7DF4"], [64177, 1, "\\u7F3E"], [64178, 1, "\\u8005"], [64179, 1, "\\u8352"], [64180, 1, "\\u83EF"], [64181, 1, "\\u8779"], [64182, 1, "\\u8941"], [64183, 1, "\\u8986"], [64184, 1, "\\u8996"], [64185, 1, "\\u8ABF"], [64186, 1, "\\u8AF8"], [64187, 1, "\\u8ACB"], [64188, 1, "\\u8B01"], [64189, 1, "\\u8AFE"], [64190, 1, "\\u8AED"], [64191, 1, "\\u8B39"], [64192, 1, "\\u8B8A"], [64193, 1, "\\u8D08"], [64194, 1, "\\u8F38"], [64195, 1, "\\u9072"], [64196, 1, "\\u9199"], [64197, 1, "\\u9276"], [64198, 1, "\\u967C"], [64199, 1, "\\u96E3"], [64200, 1, "\\u9756"], [64201, 1, "\\u97DB"], [64202, 1, "\\u97FF"], [64203, 1, "\\u980B"], [64204, 1, "\\u983B"], [64205, 1, "\\u9B12"], [64206, 1, "\\u9F9C"], [64207, 1, "\\u{2284A}"], [64208, 1, "\\u{22844}"], [64209, 1, "\\u{233D5}"], [64210, 1, "\\u3B9D"], [64211, 1, "\\u4018"], [64212, 1, "\\u4039"], [64213, 1, "\\u{25249}"], [64214, 1, "\\u{25CD0}"], [64215, 1, "\\u{27ED3}"], [64216, 1, "\\u9F43"], [64217, 1, "\\u9F8E"], [[64218, 64255], 3], [64256, 1, "ff"], [64257, 1, "fi"], [64258, 1, "fl"], [64259, 1, "ffi"], [64260, 1, "ffl"], [[64261, 64262], 1, "st"], [[64263, 64274], 3], [64275, 1, "\\u0574\\u0576"], [64276, 1, "\\u0574\\u0565"], [64277, 1, "\\u0574\\u056B"], [64278, 1, "\\u057E\\u0576"], [64279, 1, "\\u0574\\u056D"], [[64280, 64284], 3], [64285, 1, "\\u05D9\\u05B4"], [64286, 2], [64287, 1, "\\u05F2\\u05B7"], [64288, 1, "\\u05E2"], [64289, 1, "\\u05D0"], [64290, 1, "\\u05D3"], [64291, 1, "\\u05D4"], [64292, 1, "\\u05DB"], [64293, 1, "\\u05DC"], [64294, 1, "\\u05DD"], [64295, 1, "\\u05E8"], [64296, 1, "\\u05EA"], [64297, 5, "+"], [64298, 1, "\\u05E9\\u05C1"], [64299, 1, "\\u05E9\\u05C2"], [64300, 1, "\\u05E9\\u05BC\\u05C1"], [64301, 1, "\\u05E9\\u05BC\\u05C2"], [64302, 1, "\\u05D0\\u05B7"], [64303, 1, "\\u05D0\\u05B8"], [64304, 1, "\\u05D0\\u05BC"], [64305, 1, "\\u05D1\\u05BC"], [64306, 1, "\\u05D2\\u05BC"], [64307, 1, "\\u05D3\\u05BC"], [64308, 1, "\\u05D4\\u05BC"], [64309, 1, "\\u05D5\\u05BC"], [64310, 1, "\\u05D6\\u05BC"], [64311, 3], [64312, 1, "\\u05D8\\u05BC"], [64313, 1, "\\u05D9\\u05BC"], [64314, 1, "\\u05DA\\u05BC"], [64315, 1, "\\u05DB\\u05BC"], [64316, 1, "\\u05DC\\u05BC"], [64317, 3], [64318, 1, "\\u05DE\\u05BC"], [64319, 3], [64320, 1, "\\u05E0\\u05BC"], [64321, 1, "\\u05E1\\u05BC"], [64322, 3], [64323, 1, "\\u05E3\\u05BC"], [64324, 1, "\\u05E4\\u05BC"], [64325, 3], [64326, 1, "\\u05E6\\u05BC"], [64327, 1, "\\u05E7\\u05BC"], [64328, 1, "\\u05E8\\u05BC"], [64329, 1, "\\u05E9\\u05BC"], [64330, 1, "\\u05EA\\u05BC"], [64331, 1, "\\u05D5\\u05B9"], [64332, 1, "\\u05D1\\u05BF"], [64333, 1, "\\u05DB\\u05BF"], [64334, 1, "\\u05E4\\u05BF"], [64335, 1, "\\u05D0\\u05DC"], [[64336, 64337], 1, "\\u0671"], [[64338, 64341], 1, "\\u067B"], [[64342, 64345], 1, "\\u067E"], [[64346, 64349], 1, "\\u0680"], [[64350, 64353], 1, "\\u067A"], [[64354, 64357], 1, "\\u067F"], [[64358, 64361], 1, "\\u0679"], [[64362, 64365], 1, "\\u06A4"], [[64366, 64369], 1, "\\u06A6"], [[64370, 64373], 1, "\\u0684"], [[64374, 64377], 1, "\\u0683"], [[64378, 64381], 1, "\\u0686"], [[64382, 64385], 1, "\\u0687"], [[64386, 64387], 1, "\\u068D"], [[64388, 64389], 1, "\\u068C"], [[64390, 64391], 1, "\\u068E"], [[64392, 64393], 1, "\\u0688"], [[64394, 64395], 1, "\\u0698"], [[64396, 64397], 1, "\\u0691"], [[64398, 64401], 1, "\\u06A9"], [[64402, 64405], 1, "\\u06AF"], [[64406, 64409], 1, "\\u06B3"], [[64410, 64413], 1, "\\u06B1"], [[64414, 64415], 1, "\\u06BA"], [[64416, 64419], 1, "\\u06BB"], [[64420, 64421], 1, "\\u06C0"], [[64422, 64425], 1, "\\u06C1"], [[64426, 64429], 1, "\\u06BE"], [[64430, 64431], 1, "\\u06D2"], [[64432, 64433], 1, "\\u06D3"], [[64434, 64449], 2], [64450, 2], [[64451, 64466], 3], [[64467, 64470], 1, "\\u06AD"], [[64471, 64472], 1, "\\u06C7"], [[64473, 64474], 1, "\\u06C6"], [[64475, 64476], 1, "\\u06C8"], [64477, 1, "\\u06C7\\u0674"], [[64478, 64479], 1, "\\u06CB"], [[64480, 64481], 1, "\\u06C5"], [[64482, 64483], 1, "\\u06C9"], [[64484, 64487], 1, "\\u06D0"], [[64488, 64489], 1, "\\u0649"], [[64490, 64491], 1, "\\u0626\\u0627"], [[64492, 64493], 1, "\\u0626\\u06D5"], [[64494, 64495], 1, "\\u0626\\u0648"], [[64496, 64497], 1, "\\u0626\\u06C7"], [[64498, 64499], 1, "\\u0626\\u06C6"], [[64500, 64501], 1, "\\u0626\\u06C8"], [[64502, 64504], 1, "\\u0626\\u06D0"], [[64505, 64507], 1, "\\u0626\\u0649"], [[64508, 64511], 1, "\\u06CC"], [64512, 1, "\\u0626\\u062C"], [64513, 1, "\\u0626\\u062D"], [64514, 1, "\\u0626\\u0645"], [64515, 1, "\\u0626\\u0649"], [64516, 1, "\\u0626\\u064A"], [64517, 1, "\\u0628\\u062C"], [64518, 1, "\\u0628\\u062D"], [64519, 1, "\\u0628\\u062E"], [64520, 1, "\\u0628\\u0645"], [64521, 1, "\\u0628\\u0649"], [64522, 1, "\\u0628\\u064A"], [64523, 1, "\\u062A\\u062C"], [64524, 1, "\\u062A\\u062D"], [64525, 1, "\\u062A\\u062E"], [64526, 1, "\\u062A\\u0645"], [64527, 1, "\\u062A\\u0649"], [64528, 1, "\\u062A\\u064A"], [64529, 1, "\\u062B\\u062C"], [64530, 1, "\\u062B\\u0645"], [64531, 1, "\\u062B\\u0649"], [64532, 1, "\\u062B\\u064A"], [64533, 1, "\\u062C\\u062D"], [64534, 1, "\\u062C\\u0645"], [64535, 1, "\\u062D\\u062C"], [64536, 1, "\\u062D\\u0645"], [64537, 1, "\\u062E\\u062C"], [64538, 1, "\\u062E\\u062D"], [64539, 1, "\\u062E\\u0645"], [64540, 1, "\\u0633\\u062C"], [64541, 1, "\\u0633\\u062D"], [64542, 1, "\\u0633\\u062E"], [64543, 1, "\\u0633\\u0645"], [64544, 1, "\\u0635\\u062D"], [64545, 1, "\\u0635\\u0645"], [64546, 1, "\\u0636\\u062C"], [64547, 1, "\\u0636\\u062D"], [64548, 1, "\\u0636\\u062E"], [64549, 1, "\\u0636\\u0645"], [64550, 1, "\\u0637\\u062D"], [64551, 1, "\\u0637\\u0645"], [64552, 1, "\\u0638\\u0645"], [64553, 1, "\\u0639\\u062C"], [64554, 1, "\\u0639\\u0645"], [64555, 1, "\\u063A\\u062C"], [64556, 1, "\\u063A\\u0645"], [64557, 1, "\\u0641\\u062C"], [64558, 1, "\\u0641\\u062D"], [64559, 1, "\\u0641\\u062E"], [64560, 1, "\\u0641\\u0645"], [64561, 1, "\\u0641\\u0649"], [64562, 1, "\\u0641\\u064A"], [64563, 1, "\\u0642\\u062D"], [64564, 1, "\\u0642\\u0645"], [64565, 1, "\\u0642\\u0649"], [64566, 1, "\\u0642\\u064A"], [64567, 1, "\\u0643\\u0627"], [64568, 1, "\\u0643\\u062C"], [64569, 1, "\\u0643\\u062D"], [64570, 1, "\\u0643\\u062E"], [64571, 1, "\\u0643\\u0644"], [64572, 1, "\\u0643\\u0645"], [64573, 1, "\\u0643\\u0649"], [64574, 1, "\\u0643\\u064A"], [64575, 1, "\\u0644\\u062C"], [64576, 1, "\\u0644\\u062D"], [64577, 1, "\\u0644\\u062E"], [64578, 1, "\\u0644\\u0645"], [64579, 1, "\\u0644\\u0649"], [64580, 1, "\\u0644\\u064A"], [64581, 1, "\\u0645\\u062C"], [64582, 1, "\\u0645\\u062D"], [64583, 1, "\\u0645\\u062E"], [64584, 1, "\\u0645\\u0645"], [64585, 1, "\\u0645\\u0649"], [64586, 1, "\\u0645\\u064A"], [64587, 1, "\\u0646\\u062C"], [64588, 1, "\\u0646\\u062D"], [64589, 1, "\\u0646\\u062E"], [64590, 1, "\\u0646\\u0645"], [64591, 1, "\\u0646\\u0649"], [64592, 1, "\\u0646\\u064A"], [64593, 1, "\\u0647\\u062C"], [64594, 1, "\\u0647\\u0645"], [64595, 1, "\\u0647\\u0649"], [64596, 1, "\\u0647\\u064A"], [64597, 1, "\\u064A\\u062C"], [64598, 1, "\\u064A\\u062D"], [64599, 1, "\\u064A\\u062E"], [64600, 1, "\\u064A\\u0645"], [64601, 1, "\\u064A\\u0649"], [64602, 1, "\\u064A\\u064A"], [64603, 1, "\\u0630\\u0670"], [64604, 1, "\\u0631\\u0670"], [64605, 1, "\\u0649\\u0670"], [64606, 5, " \\u064C\\u0651"], [64607, 5, " \\u064D\\u0651"], [64608, 5, " \\u064E\\u0651"], [64609, 5, " \\u064F\\u0651"], [64610, 5, " \\u0650\\u0651"], [64611, 5, " \\u0651\\u0670"], [64612, 1, "\\u0626\\u0631"], [64613, 1, "\\u0626\\u0632"], [64614, 1, "\\u0626\\u0645"], [64615, 1, "\\u0626\\u0646"], [64616, 1, "\\u0626\\u0649"], [64617, 1, "\\u0626\\u064A"], [64618, 1, "\\u0628\\u0631"], [64619, 1, "\\u0628\\u0632"], [64620, 1, "\\u0628\\u0645"], [64621, 1, "\\u0628\\u0646"], [64622, 1, "\\u0628\\u0649"], [64623, 1, "\\u0628\\u064A"], [64624, 1, "\\u062A\\u0631"], [64625, 1, "\\u062A\\u0632"], [64626, 1, "\\u062A\\u0645"], [64627, 1, "\\u062A\\u0646"], [64628, 1, "\\u062A\\u0649"], [64629, 1, "\\u062A\\u064A"], [64630, 1, "\\u062B\\u0631"], [64631, 1, "\\u062B\\u0632"], [64632, 1, "\\u062B\\u0645"], [64633, 1, "\\u062B\\u0646"], [64634, 1, "\\u062B\\u0649"], [64635, 1, "\\u062B\\u064A"], [64636, 1, "\\u0641\\u0649"], [64637, 1, "\\u0641\\u064A"], [64638, 1, "\\u0642\\u0649"], [64639, 1, "\\u0642\\u064A"], [64640, 1, "\\u0643\\u0627"], [64641, 1, "\\u0643\\u0644"], [64642, 1, "\\u0643\\u0645"], [64643, 1, "\\u0643\\u0649"], [64644, 1, "\\u0643\\u064A"], [64645, 1, "\\u0644\\u0645"], [64646, 1, "\\u0644\\u0649"], [64647, 1, "\\u0644\\u064A"], [64648, 1, "\\u0645\\u0627"], [64649, 1, "\\u0645\\u0645"], [64650, 1, "\\u0646\\u0631"], [64651, 1, "\\u0646\\u0632"], [64652, 1, "\\u0646\\u0645"], [64653, 1, "\\u0646\\u0646"], [64654, 1, "\\u0646\\u0649"], [64655, 1, "\\u0646\\u064A"], [64656, 1, "\\u0649\\u0670"], [64657, 1, "\\u064A\\u0631"], [64658, 1, "\\u064A\\u0632"], [64659, 1, "\\u064A\\u0645"], [64660, 1, "\\u064A\\u0646"], [64661, 1, "\\u064A\\u0649"], [64662, 1, "\\u064A\\u064A"], [64663, 1, "\\u0626\\u062C"], [64664, 1, "\\u0626\\u062D"], [64665, 1, "\\u0626\\u062E"], [64666, 1, "\\u0626\\u0645"], [64667, 1, "\\u0626\\u0647"], [64668, 1, "\\u0628\\u062C"], [64669, 1, "\\u0628\\u062D"], [64670, 1, "\\u0628\\u062E"], [64671, 1, "\\u0628\\u0645"], [64672, 1, "\\u0628\\u0647"], [64673, 1, "\\u062A\\u062C"], [64674, 1, "\\u062A\\u062D"], [64675, 1, "\\u062A\\u062E"], [64676, 1, "\\u062A\\u0645"], [64677, 1, "\\u062A\\u0647"], [64678, 1, "\\u062B\\u0645"], [64679, 1, "\\u062C\\u062D"], [64680, 1, "\\u062C\\u0645"], [64681, 1, "\\u062D\\u062C"], [64682, 1, "\\u062D\\u0645"], [64683, 1, "\\u062E\\u062C"], [64684, 1, "\\u062E\\u0645"], [64685, 1, "\\u0633\\u062C"], [64686, 1, "\\u0633\\u062D"], [64687, 1, "\\u0633\\u062E"], [64688, 1, "\\u0633\\u0645"], [64689, 1, "\\u0635\\u062D"], [64690, 1, "\\u0635\\u062E"], [64691, 1, "\\u0635\\u0645"], [64692, 1, "\\u0636\\u062C"], [64693, 1, "\\u0636\\u062D"], [64694, 1, "\\u0636\\u062E"], [64695, 1, "\\u0636\\u0645"], [64696, 1, "\\u0637\\u062D"], [64697, 1, "\\u0638\\u0645"], [64698, 1, "\\u0639\\u062C"], [64699, 1, "\\u0639\\u0645"], [64700, 1, "\\u063A\\u062C"], [64701, 1, "\\u063A\\u0645"], [64702, 1, "\\u0641\\u062C"], [64703, 1, "\\u0641\\u062D"], [64704, 1, "\\u0641\\u062E"], [64705, 1, "\\u0641\\u0645"], [64706, 1, "\\u0642\\u062D"], [64707, 1, "\\u0642\\u0645"], [64708, 1, "\\u0643\\u062C"], [64709, 1, "\\u0643\\u062D"], [64710, 1, "\\u0643\\u062E"], [64711, 1, "\\u0643\\u0644"], [64712, 1, "\\u0643\\u0645"], [64713, 1, "\\u0644\\u062C"], [64714, 1, "\\u0644\\u062D"], [64715, 1, "\\u0644\\u062E"], [64716, 1, "\\u0644\\u0645"], [64717, 1, "\\u0644\\u0647"], [64718, 1, "\\u0645\\u062C"], [64719, 1, "\\u0645\\u062D"], [64720, 1, "\\u0645\\u062E"], [64721, 1, "\\u0645\\u0645"], [64722, 1, "\\u0646\\u062C"], [64723, 1, "\\u0646\\u062D"], [64724, 1, "\\u0646\\u062E"], [64725, 1, "\\u0646\\u0645"], [64726, 1, "\\u0646\\u0647"], [64727, 1, "\\u0647\\u062C"], [64728, 1, "\\u0647\\u0645"], [64729, 1, "\\u0647\\u0670"], [64730, 1, "\\u064A\\u062C"], [64731, 1, "\\u064A\\u062D"], [64732, 1, "\\u064A\\u062E"], [64733, 1, "\\u064A\\u0645"], [64734, 1, "\\u064A\\u0647"], [64735, 1, "\\u0626\\u0645"], [64736, 1, "\\u0626\\u0647"], [64737, 1, "\\u0628\\u0645"], [64738, 1, "\\u0628\\u0647"], [64739, 1, "\\u062A\\u0645"], [64740, 1, "\\u062A\\u0647"], [64741, 1, "\\u062B\\u0645"], [64742, 1, "\\u062B\\u0647"], [64743, 1, "\\u0633\\u0645"], [64744, 1, "\\u0633\\u0647"], [64745, 1, "\\u0634\\u0645"], [64746, 1, "\\u0634\\u0647"], [64747, 1, "\\u0643\\u0644"], [64748, 1, "\\u0643\\u0645"], [64749, 1, "\\u0644\\u0645"], [64750, 1, "\\u0646\\u0645"], [64751, 1, "\\u0646\\u0647"], [64752, 1, "\\u064A\\u0645"], [64753, 1, "\\u064A\\u0647"], [64754, 1, "\\u0640\\u064E\\u0651"], [64755, 1, "\\u0640\\u064F\\u0651"], [64756, 1, "\\u0640\\u0650\\u0651"], [64757, 1, "\\u0637\\u0649"], [64758, 1, "\\u0637\\u064A"], [64759, 1, "\\u0639\\u0649"], [64760, 1, "\\u0639\\u064A"], [64761, 1, "\\u063A\\u0649"], [64762, 1, "\\u063A\\u064A"], [64763, 1, "\\u0633\\u0649"], [64764, 1, "\\u0633\\u064A"], [64765, 1, "\\u0634\\u0649"], [64766, 1, "\\u0634\\u064A"], [64767, 1, "\\u062D\\u0649"], [64768, 1, "\\u062D\\u064A"], [64769, 1, "\\u062C\\u0649"], [64770, 1, "\\u062C\\u064A"], [64771, 1, "\\u062E\\u0649"], [64772, 1, "\\u062E\\u064A"], [64773, 1, "\\u0635\\u0649"], [64774, 1, "\\u0635\\u064A"], [64775, 1, "\\u0636\\u0649"], [64776, 1, "\\u0636\\u064A"], [64777, 1, "\\u0634\\u062C"], [64778, 1, "\\u0634\\u062D"], [64779, 1, "\\u0634\\u062E"], [64780, 1, "\\u0634\\u0645"], [64781, 1, "\\u0634\\u0631"], [64782, 1, "\\u0633\\u0631"], [64783, 1, "\\u0635\\u0631"], [64784, 1, "\\u0636\\u0631"], [64785, 1, "\\u0637\\u0649"], [64786, 1, "\\u0637\\u064A"], [64787, 1, "\\u0639\\u0649"], [64788, 1, "\\u0639\\u064A"], [64789, 1, "\\u063A\\u0649"], [64790, 1, "\\u063A\\u064A"], [64791, 1, "\\u0633\\u0649"], [64792, 1, "\\u0633\\u064A"], [64793, 1, "\\u0634\\u0649"], [64794, 1, "\\u0634\\u064A"], [64795, 1, "\\u062D\\u0649"], [64796, 1, "\\u062D\\u064A"], [64797, 1, "\\u062C\\u0649"], [64798, 1, "\\u062C\\u064A"], [64799, 1, "\\u062E\\u0649"], [64800, 1, "\\u062E\\u064A"], [64801, 1, "\\u0635\\u0649"], [64802, 1, "\\u0635\\u064A"], [64803, 1, "\\u0636\\u0649"], [64804, 1, "\\u0636\\u064A"], [64805, 1, "\\u0634\\u062C"], [64806, 1, "\\u0634\\u062D"], [64807, 1, "\\u0634\\u062E"], [64808, 1, "\\u0634\\u0645"], [64809, 1, "\\u0634\\u0631"], [64810, 1, "\\u0633\\u0631"], [64811, 1, "\\u0635\\u0631"], [64812, 1, "\\u0636\\u0631"], [64813, 1, "\\u0634\\u062C"], [64814, 1, "\\u0634\\u062D"], [64815, 1, "\\u0634\\u062E"], [64816, 1, "\\u0634\\u0645"], [64817, 1, "\\u0633\\u0647"], [64818, 1, "\\u0634\\u0647"], [64819, 1, "\\u0637\\u0645"], [64820, 1, "\\u0633\\u062C"], [64821, 1, "\\u0633\\u062D"], [64822, 1, "\\u0633\\u062E"], [64823, 1, "\\u0634\\u062C"], [64824, 1, "\\u0634\\u062D"], [64825, 1, "\\u0634\\u062E"], [64826, 1, "\\u0637\\u0645"], [64827, 1, "\\u0638\\u0645"], [[64828, 64829], 1, "\\u0627\\u064B"], [[64830, 64831], 2], [[64832, 64847], 2], [64848, 1, "\\u062A\\u062C\\u0645"], [[64849, 64850], 1, "\\u062A\\u062D\\u062C"], [64851, 1, "\\u062A\\u062D\\u0645"], [64852, 1, "\\u062A\\u062E\\u0645"], [64853, 1, "\\u062A\\u0645\\u062C"], [64854, 1, "\\u062A\\u0645\\u062D"], [64855, 1, "\\u062A\\u0645\\u062E"], [[64856, 64857], 1, "\\u062C\\u0645\\u062D"], [64858, 1, "\\u062D\\u0645\\u064A"], [64859, 1, "\\u062D\\u0645\\u0649"], [64860, 1, "\\u0633\\u062D\\u062C"], [64861, 1, "\\u0633\\u062C\\u062D"], [64862, 1, "\\u0633\\u062C\\u0649"], [[64863, 64864], 1, "\\u0633\\u0645\\u062D"], [64865, 1, "\\u0633\\u0645\\u062C"], [[64866, 64867], 1, "\\u0633\\u0645\\u0645"], [[64868, 64869], 1, "\\u0635\\u062D\\u062D"], [64870, 1, "\\u0635\\u0645\\u0645"], [[64871, 64872], 1, "\\u0634\\u062D\\u0645"], [64873, 1, "\\u0634\\u062C\\u064A"], [[64874, 64875], 1, "\\u0634\\u0645\\u062E"], [[64876, 64877], 1, "\\u0634\\u0645\\u0645"], [64878, 1, "\\u0636\\u062D\\u0649"], [[64879, 64880], 1, "\\u0636\\u062E\\u0645"], [[64881, 64882], 1, "\\u0637\\u0645\\u062D"], [64883, 1, "\\u0637\\u0645\\u0645"], [64884, 1, "\\u0637\\u0645\\u064A"], [64885, 1, "\\u0639\\u062C\\u0645"], [[64886, 64887], 1, "\\u0639\\u0645\\u0645"], [64888, 1, "\\u0639\\u0645\\u0649"], [64889, 1, "\\u063A\\u0645\\u0645"], [64890, 1, "\\u063A\\u0645\\u064A"], [64891, 1, "\\u063A\\u0645\\u0649"], [[64892, 64893], 1, "\\u0641\\u062E\\u0645"], [64894, 1, "\\u0642\\u0645\\u062D"], [64895, 1, "\\u0642\\u0645\\u0645"], [64896, 1, "\\u0644\\u062D\\u0645"], [64897, 1, "\\u0644\\u062D\\u064A"], [64898, 1, "\\u0644\\u062D\\u0649"], [[64899, 64900], 1, "\\u0644\\u062C\\u062C"], [[64901, 64902], 1, "\\u0644\\u062E\\u0645"], [[64903, 64904], 1, "\\u0644\\u0645\\u062D"], [64905, 1, "\\u0645\\u062D\\u062C"], [64906, 1, "\\u0645\\u062D\\u0645"], [64907, 1, "\\u0645\\u062D\\u064A"], [64908, 1, "\\u0645\\u062C\\u062D"], [64909, 1, "\\u0645\\u062C\\u0645"], [64910, 1, "\\u0645\\u062E\\u062C"], [64911, 1, "\\u0645\\u062E\\u0645"], [[64912, 64913], 3], [64914, 1, "\\u0645\\u062C\\u062E"], [64915, 1, "\\u0647\\u0645\\u062C"], [64916, 1, "\\u0647\\u0645\\u0645"], [64917, 1, "\\u0646\\u062D\\u0645"], [64918, 1, "\\u0646\\u062D\\u0649"], [[64919, 64920], 1, "\\u0646\\u062C\\u0645"], [64921, 1, "\\u0646\\u062C\\u0649"], [64922, 1, "\\u0646\\u0645\\u064A"], [64923, 1, "\\u0646\\u0645\\u0649"], [[64924, 64925], 1, "\\u064A\\u0645\\u0645"], [64926, 1, "\\u0628\\u062E\\u064A"], [64927, 1, "\\u062A\\u062C\\u064A"], [64928, 1, "\\u062A\\u062C\\u0649"], [64929, 1, "\\u062A\\u062E\\u064A"], [64930, 1, "\\u062A\\u062E\\u0649"], [64931, 1, "\\u062A\\u0645\\u064A"], [64932, 1, "\\u062A\\u0645\\u0649"], [64933, 1, "\\u062C\\u0645\\u064A"], [64934, 1, "\\u062C\\u062D\\u0649"], [64935, 1, "\\u062C\\u0645\\u0649"], [64936, 1, "\\u0633\\u062E\\u0649"], [64937, 1, "\\u0635\\u062D\\u064A"], [64938, 1, "\\u0634\\u062D\\u064A"], [64939, 1, "\\u0636\\u062D\\u064A"], [64940, 1, "\\u0644\\u062C\\u064A"], [64941, 1, "\\u0644\\u0645\\u064A"], [64942, 1, "\\u064A\\u062D\\u064A"], [64943, 1, "\\u064A\\u062C\\u064A"], [64944, 1, "\\u064A\\u0645\\u064A"], [64945, 1, "\\u0645\\u0645\\u064A"], [64946, 1, "\\u0642\\u0645\\u064A"], [64947, 1, "\\u0646\\u062D\\u064A"], [64948, 1, "\\u0642\\u0645\\u062D"], [64949, 1, "\\u0644\\u062D\\u0645"], [64950, 1, "\\u0639\\u0645\\u064A"], [64951, 1, "\\u0643\\u0645\\u064A"], [64952, 1, "\\u0646\\u062C\\u062D"], [64953, 1, "\\u0645\\u062E\\u064A"], [64954, 1, "\\u0644\\u062C\\u0645"], [64955, 1, "\\u0643\\u0645\\u0645"], [64956, 1, "\\u0644\\u062C\\u0645"], [64957, 1, "\\u0646\\u062C\\u062D"], [64958, 1, "\\u062C\\u062D\\u064A"], [64959, 1, "\\u062D\\u062C\\u064A"], [64960, 1, "\\u0645\\u062C\\u064A"], [64961, 1, "\\u0641\\u0645\\u064A"], [64962, 1, "\\u0628\\u062D\\u064A"], [64963, 1, "\\u0643\\u0645\\u0645"], [64964, 1, "\\u0639\\u062C\\u0645"], [64965, 1, "\\u0635\\u0645\\u0645"], [64966, 1, "\\u0633\\u062E\\u064A"], [64967, 1, "\\u0646\\u062C\\u064A"], [[64968, 64974], 3], [64975, 2], [[64976, 65007], 3], [65008, 1, "\\u0635\\u0644\\u06D2"], [65009, 1, "\\u0642\\u0644\\u06D2"], [65010, 1, "\\u0627\\u0644\\u0644\\u0647"], [65011, 1, "\\u0627\\u0643\\u0628\\u0631"], [65012, 1, "\\u0645\\u062D\\u0645\\u062F"], [65013, 1, "\\u0635\\u0644\\u0639\\u0645"], [65014, 1, "\\u0631\\u0633\\u0648\\u0644"], [65015, 1, "\\u0639\\u0644\\u064A\\u0647"], [65016, 1, "\\u0648\\u0633\\u0644\\u0645"], [65017, 1, "\\u0635\\u0644\\u0649"], [65018, 5, "\\u0635\\u0644\\u0649 \\u0627\\u0644\\u0644\\u0647 \\u0639\\u0644\\u064A\\u0647 \\u0648\\u0633\\u0644\\u0645"], [65019, 5, "\\u062C\\u0644 \\u062C\\u0644\\u0627\\u0644\\u0647"], [65020, 1, "\\u0631\\u06CC\\u0627\\u0644"], [65021, 2], [[65022, 65023], 2], [[65024, 65039], 7], [65040, 5, ","], [65041, 1, "\\u3001"], [65042, 3], [65043, 5, ":"], [65044, 5, ";"], [65045, 5, "!"], [65046, 5, "?"], [65047, 1, "\\u3016"], [65048, 1, "\\u3017"], [65049, 3], [[65050, 65055], 3], [[65056, 65059], 2], [[65060, 65062], 2], [[65063, 65069], 2], [[65070, 65071], 2], [65072, 3], [65073, 1, "\\u2014"], [65074, 1, "\\u2013"], [[65075, 65076], 5, "_"], [65077, 5, "("], [65078, 5, ")"], [65079, 5, "{"], [65080, 5, "}"], [65081, 1, "\\u3014"], [65082, 1, "\\u3015"], [65083, 1, "\\u3010"], [65084, 1, "\\u3011"], [65085, 1, "\\u300A"], [65086, 1, "\\u300B"], [65087, 1, "\\u3008"], [65088, 1, "\\u3009"], [65089, 1, "\\u300C"], [65090, 1, "\\u300D"], [65091, 1, "\\u300E"], [65092, 1, "\\u300F"], [[65093, 65094], 2], [65095, 5, "["], [65096, 5, "]"], [[65097, 65100], 5, " \\u0305"], [[65101, 65103], 5, "_"], [65104, 5, ","], [65105, 1, "\\u3001"], [65106, 3], [65107, 3], [65108, 5, ";"], [65109, 5, ":"], [65110, 5, "?"], [65111, 5, "!"], [65112, 1, "\\u2014"], [65113, 5, "("], [65114, 5, ")"], [65115, 5, "{"], [65116, 5, "}"], [65117, 1, "\\u3014"], [65118, 1, "\\u3015"], [65119, 5, "#"], [65120, 5, "&"], [65121, 5, "*"], [65122, 5, "+"], [65123, 1, "-"], [65124, 5, "<"], [65125, 5, ">"], [65126, 5, "="], [65127, 3], [65128, 5, "\\\\"], [65129, 5, "$"], [65130, 5, "%"], [65131, 5, "@"], [[65132, 65135], 3], [65136, 5, " \\u064B"], [65137, 1, "\\u0640\\u064B"], [65138, 5, " \\u064C"], [65139, 2], [65140, 5, " \\u064D"], [65141, 3], [65142, 5, " \\u064E"], [65143, 1, "\\u0640\\u064E"], [65144, 5, " \\u064F"], [65145, 1, "\\u0640\\u064F"], [65146, 5, " \\u0650"], [65147, 1, "\\u0640\\u0650"], [65148, 5, " \\u0651"], [65149, 1, "\\u0640\\u0651"], [65150, 5, " \\u0652"], [65151, 1, "\\u0640\\u0652"], [65152, 1, "\\u0621"], [[65153, 65154], 1, "\\u0622"], [[65155, 65156], 1, "\\u0623"], [[65157, 65158], 1, "\\u0624"], [[65159, 65160], 1, "\\u0625"], [[65161, 65164], 1, "\\u0626"], [[65165, 65166], 1, "\\u0627"], [[65167, 65170], 1, "\\u0628"], [[65171, 65172], 1, "\\u0629"], [[65173, 65176], 1, "\\u062A"], [[65177, 65180], 1, "\\u062B"], [[65181, 65184], 1, "\\u062C"], [[65185, 65188], 1, "\\u062D"], [[65189, 65192], 1, "\\u062E"], [[65193, 65194], 1, "\\u062F"], [[65195, 65196], 1, "\\u0630"], [[65197, 65198], 1, "\\u0631"], [[65199, 65200], 1, "\\u0632"], [[65201, 65204], 1, "\\u0633"], [[65205, 65208], 1, "\\u0634"], [[65209, 65212], 1, "\\u0635"], [[65213, 65216], 1, "\\u0636"], [[65217, 65220], 1, "\\u0637"], [[65221, 65224], 1, "\\u0638"], [[65225, 65228], 1, "\\u0639"], [[65229, 65232], 1, "\\u063A"], [[65233, 65236], 1, "\\u0641"], [[65237, 65240], 1, "\\u0642"], [[65241, 65244], 1, "\\u0643"], [[65245, 65248], 1, "\\u0644"], [[65249, 65252], 1, "\\u0645"], [[65253, 65256], 1, "\\u0646"], [[65257, 65260], 1, "\\u0647"], [[65261, 65262], 1, "\\u0648"], [[65263, 65264], 1, "\\u0649"], [[65265, 65268], 1, "\\u064A"], [[65269, 65270], 1, "\\u0644\\u0622"], [[65271, 65272], 1, "\\u0644\\u0623"], [[65273, 65274], 1, "\\u0644\\u0625"], [[65275, 65276], 1, "\\u0644\\ua"], [65314, 1, "b"], [65315, 1, "c"], [65316, 1, "d"], [65317, 1, "e"], [65318, 1, "f"], [65319, 1, "g"], [65320, 1, "h"], [65321, 1, "i"], [65322, 1, "j"], [65323, 1, "k"], [65324, 1, "l"], [65325, 1, "m"], [65326, 1, "n"], [65327, 1, "o"], [65328, 1, "p"], [65329, 1, "q"], [65330, 1, "r"], [65331, 1, "s"], [65332, 1, "t"], [65333, 1, "u"], [65334, 1, "v"], [65335, 1, "w"], [65336, 1, "x"], [65337, 1, "y"], [65338, 1, "z"], [65339, 5, "["], [65340, 5, "\\\\"], [65341, 5, "]"], [65342, 5, "^"], [65343, 5, "_"], [65344, 5, "`"], [65345, 1, "a"], [65346, 1, "b"], [65347, 1, "c"], [65348, 1, "d"], [65349, 1, "e"], [65350, 1, "f"], [65351, 1, "g"], [65352, 1, "h"], [65353, 1, "i"], [65354, 1, "j"], [65355, 1, "k"], [65356, 1, "l"], [65357, 1, "m"], [65358, 1, "n"], [65359, 1, "o"], [65360, 1, "p"], [65361, 1, "q"], [65362, 1, "r"], [65363, 1, "s"], [65364, 1, "t"], [65365, 1, "u"], [65366, 1, "v"], [65367, 1, "w"], [65368, 1, "x"], [65369, 1, "y"], [65370, 1, "z"], [65371, 5, "{"], [65372, 5, "|"], [65373, 5, "}"], [65374, 5, "~"], [65375, 1, "\\u2985"], [65376, 1, "\\u2986"], [65377, 1, "."], [65378, 1, "\\u300C"], [65379, 1, "\\u300D"], [65380, 1, "\\u3001"], [65381, 1, "\\u30FB"], [65382, 1, "\\u30F2"], [65383, 1, "\\u30A1"], [65384, 1, "\\u30A3"], [65385, 1, "\\u30A5"], [65386, 1, "\\u30A7"], [65387, 1, "\\u30A9"], [65388, 1, "\\u30E3"], [65389, 1, "\\u30E5"], [65390, 1, "\\u30E7"], [65391, 1, "\\u30C3"], [65392, 1, "\\u30FC"], [65393, 1, "\\u30A2"], [65394, 1, "\\u30A4"], [65395, 1, "\\u30A6"], [65396, 1, "\\u30A8"], [65397, 1, "\\u30AA"], [65398, 1, "\\u30AB"], [65399, 1, "\\u30AD"], [65400, 1, "\\u30AF"], [65401, 1, "\\u30B1"], [65402, 1, "\\u30B3"], [65403, 1, "\\u30B5"], [65404, 1, "\\u30B7"], [65405, 1, "\\u30B9"], [65406, 1, "\\u30BB"], [65407, 1, "\\u30BD"], [65408, 1, "\\u30BF"], [65409, 1, "\\u30C1"], [65410, 1, "\\u30C4"], [65411, 1, "\\u30C6"], [65412, 1, "\\u30C8"], [65413, 1, "\\u30CA"], [65414, 1, "\\u30CB"], [65415, 1, "\\u30CC"], [65416, 1, "\\u30CD"], [65417, 1, "\\u30CE"], [65418, 1, "\\u30CF"], [65419, 1, "\\u30D2"], [65420, 1, "\\u30D5"], [65421, 1, "\\u30D8"], [65422, 1, "\\u30DB"], [65423, 1, "\\u30DE"], [65424, 1, "\\u30DF"], [65425, 1, "\\u30E0"], [65426, 1, "\\u30E1"], [65427, 1, "\\u30E2"], [65428, 1, "\\u30E4"], [65429, 1, "\\u30E6"], [65430, 1, "\\u30E8"], [65431, 1, "\\u30E9"], [65432, 1, "\\u30EA"], [65433, 1, "\\u30EB"], [65434, 1, "\\u30EC"], [65435, 1, "\\u30ED"], [65436, 1, "\\u30EF"], [65437, 1, "\\u30F3"], [65438, 1, "\\u3099"], [65439, 1, "\\u309A"], [65440, 3], [65441, 1, "\\u1100"], [65442, 1, "\\u1101"], [65443, 1, "\\u11AA"], [65444, 1, "\\u1102"], [65445, 1, "\\u11AC"], [65446, 1, "\\u11AD"], [65447, 1, "\\u1103"], [65448, 1, "\\u1104"], [65449, 1, "\\u1105"], [65450, 1, "\\u11B0"], [65451, 1, "\\u11B1"], [65452, 1, "\\u11B2"], [65453, 1, "\\u11B3"], [65454, 1, "\\u11B4"], [65455, 1, "\\u11B5"], [65456, 1, "\\u111A"], [65457, 1, "\\u1106"], [65458, 1, "\\u1107"], [65459, 1, "\\u1108"], [65460, 1, "\\u1121"], [65461, 1, "\\u1109"], [65462, 1, "\\u110A"], [65463, 1, "\\u110B"], [65464, 1, "\\u110C"], [65465, 1, "\\u110D"], [65466, 1, "\\u110E"], [65467, 1, "\\u110F"], [65468, 1, "\\u1110"], [65469, 1, "\\u1111"], [65470, 1, "\\u1112"], [[65471, 65473], 3], [65474, 1, "\\u1161"], [65475, 1, "\\u1162"], [65476, 1, "\\u1163"], [65477, 1, "\\u1164"], [65478, 1, "\\u1165"], [65479, 1, "\\u1166"], [[65480, 65481], 3], [65482, 1, "\\u1167"], [65483, 1, "\\u1168"], [65484, 1, "\\u1169"], [65485, 1, "\\u116A"], [65486, 1, "\\u116B"], [65487, 1, "\\u116C"], [[65488, 65489], 3], [65490, 1, "\\u116D"], [65491, 1, "\\u116E"], [65492, 1, "\\u116F"], [65493, 1, "\\u1170"], [65494, 1, "\\u1171"], [65495, 1, "\\u1172"], [[65496, 65497], 3], [65498, 1, "\\u1173"], [65499, 1, "\\u1174"], [65500, 1, "\\u1175"], [[65501, 65503], 3], [65504, 1, "\\xA2"], [65505, 1, "\\xA3"], [65506, 1, "\\xAC"], [65507, 5, " \\u0304"], [65508, 1, "\\xA6"], [65509, 1, "\\xA5"], [65510, 1, "\\u20A9"], [65511, 3], [65512, 1, "\\u2502"], [65513, 1, "\\u2190"], [65514, 1, "\\u2191"], [65515, 1, "\\u2192"], [65516, 1, "\\u2193"], [65517, 1, "\\u25A0"], [65518, 1, "\\u25CB"], [[65519, 65528], 3], [[65529, 65531], 3], [65532, 3], [65533, 3], [[65534, 65535], 3], [[65536, 65547], 2], [65548, 3], [[65549, 65574], 2], [65575, 3], [[65576, 65594], 2], [65595, 3], [[65596, 65597], 2], [65598, 3], [[65599, 65613], 2], [[65614, 65615], 3], [[65616, 65629], 2], [[65630, 65663], 3], [[65664, 65786], 2], [[65787, 65791], 3], [[65792, 65794], 2], [[65795, 65798], 3], [[65799, 65843], 2], [[65844, 65846], 3], [[65847, 65855], 2], [[65856, 65930], 2], [[65931, 65932], 2], [[65933, 65934], 2], [65935, 3], [[65936, 65947], 2], [65948, 2], [[65949, 65951], 3], [65952, 2], [[65953, 65999], 3], [[66e3, 66044], 2], [66045, 2], [[66046, 66175], 3], [[66176, 66204], 2], [[66205, 66207], 3], [[66208, 66256], 2], [[66257, 66271], 3], [66272, 2], [[66273, 66299], 2], [[66300, 66303], 3], [[66304, 66334], 2], [66335, 2], [[66336, 66339], 2], [[66340, 66348], 3], [[66349, 66351], 2], [[66352, 66368], 2], [66369, 2], [[66370, 66377], 2], [66378, 2], [[66379, 66383], 3], [[66384, 66426], 2], [[66427, 66431], 3], [[66432, 66461], 2], [66462, 3], [66463, 2], [[66464, 66499], 2], [[66500, 66503], 3], [[66504, 66511], 2], [[66512, 66517], 2], [[66518, 66559], 3], [66560, 1, "\\u{10428}"], [66561, 1, "\\u{10429}"], [66562, 1, "\\u{1042A}"], [66563, 1, "\\u{1042B}"], [66564, 1, "\\u{1042C}"], [66565, 1, "\\u{1042D}"], [66566, 1, "\\u{1042E}"], [66567, 1, "\\u{1042F}"], [66568, 1, "\\u{10430}"], [66569, 1, "\\u{10431}"], [66570, 1, "\\u{10432}"], [66571, 1, "\\u{10433}"], [66572, 1, "\\u{10434}"], [66573, 1, "\\u{10435}"], [66574, 1, "\\u{10436}"], [66575, 1, "\\u{10437}"], [66576, 1, "\\u{10438}"], [66577, 1, "\\u{10439}"], [66578, 1, "\\u{1043A}"], [66579, 1, "\\u{1043B}"], [66580, 1, "\\u{1043C}"], [66581, 1, "\\u{1043D}"], [66582, 1, "\\u{1043E}"], [66583, 1, "\\u{1043F}"], [66584, 1, "\\u{10440}"], [66585, 1, "\\u{10441}"], [66586, 1, "\\u{10442}"], [66587, 1, "\\u{10443}"], [66588, 1, "\\u{10444}"], [66589, 1, "\\u{10445}"], [66590, 1, "\\u{10446}"], [66591, 1, "\\u{10447}"], [66592, 1, "\\u{10448}"], [66593, 1, "\\u{10449}"], [66594, 1, "\\u{1044A}"], [66595, 1, "\\u{1044B}"], [66596, 1, "\\u{1044C}"], [66597, 1, "\\u{1044D}"], [66598, 1, "\\u{1044E}"], [66599, 1, "\\u{1044F}"], [[66600, 66637], 2], [[66638, 66717], 2], [[66718, 66719], 3], [[66720, 66729], 2], [[66730, 66735], 3], [66736, 1, "\\u{104D8}"], [66737, 1, "\\u{104D9}"], [66738, 1, "\\u{104DA}"], [66739, 1, "\\u{104DB}"], [66740, 1, "\\u{104DC}"], [66741, 1, "\\u{104DD}"], [66742, 1, "\\u{104DE}"], [66743, 1, "\\u{104DF}"], [66744, 1, "\\u{104E0}"], [66745, 1, "\\u{104E1}"], [66746, 1, "\\u{104E2}"], [66747, 1, "\\u{104E3}"], [66748, 1, "\\u{104E4}"], [66749, 1, "\\u{104E5}"], [66750, 1, "\\u{104E6}"], [66751, 1, "\\u{104E7}"], [66752, 1, "\\u{104E8}"], [66753, 1, "\\u{104E9}"], [66754, 1, "\\u{104EA}"], [66755, 1, "\\u{104EB}"], [66756, 1, "\\u{104EC}"], [66757, 1, "\\u{104ED}"], [66758, 1, "\\u{104EE}"], [66759, 1, "\\u{104EF}"], [66760, 1, "\\u{104F0}"], [66761, 1, "\\u{104F1}"], [66762, 1, "\\u{104F2}"], [66763, 1, "\\u{104F3}"], [66764, 1, "\\u{104F4}"], [66765, 1, "\\u{104F5}"], [66766, 1, "\\u{104F6}"], [66767, 1, "\\u{104F7}"], [66768, 1, "\\u{104F8}"], [66769, 1, "\\u{104F9}"], [66770, 1, "\\u{104FA}"], [66771, 1, "\\u{104FB}"], [[66772, 66775], 3], [[66776, 66811], 2], [[66812, 66815], 3], [[66816, 66855], 2], [[66856, 66863], 3], [[66864, 66915], 2], [[66916, 66926], 3], [66927, 2], [66928, 1, "\\u{10597}"], [66929, 1, "\\u{10598}"], [66930, 1, "\\u{10599}"], [66931, 1, "\\u{1059A}"], [66932, 1, "\\u{1059B}"], [66933, 1, "\\u{1059C}"], [66934, 1, "\\u{1059D}"], [66935, 1, "\\u{1059E}"], [66936, 1, "\\u{1059F}"], [66937, 1, "\\u{105A0}"], [66938, 1, "\\u{105A1}"], [66939, 3], [66940, 1, "\\u{105A3}"], [66941, 1, "\\u{105A4}"], [66942, 1, "\\u{105A5}"], [66943, 1, "\\u{105A6}"], [66944, 1, "\\u{105A7}"], [66945, 1, "\\u{105A8}"], [66946, 1, "\\u{105A9}"], [66947, 1, "\\u{105AA}"], [66948, 1, "\\u{105AB}"], [66949, 1, "\\u{105AC}"], [66950, 1, "\\u{105AD}"], [66951, 1, "\\u{105AE}"], [66952, 1, "\\u{105AF}"], [66953, 1, "\\u{105B0}"], [66954, 1, "\\u{105B1}"], [66955, 3], [66956, 1, "\\u{105B3}"], [66957, 1, "\\u{105B4}"], [66958, 1, "\\u{105B5}"], [66959, 1, "\\u{105B6}"], [66960, 1, "\\u{105B7}"], [66961, 1, "\\u{105B8}"], [66962, 1, "\\u{105B9}"], [66963, 3], [66964, 1, "\\u{105BB}"], [66965, 1, "\\u{105BC}"], [66966, 3], [[66967, 66977], 2], [66978, 3], [[66979, 66993], 2], [66994, 3], [[66995, 67001], 2], [67002, 3], [[67003, 67004], 2], [[67005, 67071], 3], [[67072, 67382], 2], [[67383, 67391], 3], [[67392, 67413], 2], [[67414, 67423], 3], [[67424, 67431], 2], [[67432, 67455], 3], [67456, 2], [67457, 1, "\\u02D0"], [67458, 1, "\\u02D1"], [67459, 1, "\\xE6"], [67460, 1, "\\u0299"], [67461, 1, "\\u0253"], [67462, 3], [67463, 1, "\\u02A3"], [67464, 1, "\\uAB66"], [67465, 1, "\\u02A5"], [67466, 1, "\\u02A4"], [67467, 1, "\\u0256"], [67468, 1, "\\u0257"], [67469, 1, "\\u1D91"], [67470, 1, "\\u0258"], [67471, 1, "\\u025E"], [67472, 1, "\\u02A9"], [67473, 1, "\\u0264"], [67474, 1, "\\u0262"], [67475, 1, "\\u0260"], [67476, 1, "\\u029B"], [67477, 1, "\\u0127"], [67478, 1, "\\u029C"], [67479, 1, "\\u0267"], [67480, 1, "\\u0284"], [67481, 1, "\\u02AA"], [67482, 1, "\\u02AB"], [67483, 1, "\\u026C"], [67484, 1, "\\u{1DF04}"], [67485, 1, "\\uA78E"], [67486, 1, "\\u026E"], [67487, 1, "\\u{1DF05}"], [67488, 1, "\\u028E"], [67489, 1, "\\u{1DF06}"], [67490, 1, "\\xF8"], [67491, 1, "\\u0276"], [67492, 1, "\\u0277"], [67493, 1, "q"], [67494, 1, "\\u027A"], [67495, 1, "\\u{1DF08}"], [67496, 1, "\\u027D"], [67497, 1, "\\u027E"], [67498, 1, "\\u0280"], [67499, 1, "\\u02A8"], [67500, 1, "\\u02A6"], [67501, 1, "\\uAB67"], [67502, 1, "\\u02A7"], [67503, 1, "\\u0288"], [67504, 1, "\\u2C71"], [67505, 3], [67506, 1, "\\u028F"], [67507, 1, "\\u02A1"], [67508, 1, "\\u02A2"], [67509, 1, "\\u0298"], [67510, 1, "\\u01C0"], [67511, 1, "\\u01C1"], [67512, 1, "\\u01C2"], [67513, 1, "\\u{1DF0A}"], [67514, 1, "\\u{1DF1E}"], [[67515, 67583], 3], [[67584, 67589], 2], [[67590, 67591], 3], [67592, 2], [67593, 3], [[67594, 67637], 2], [67638, 3], [[67639, 67640], 2], [[67641, 67643], 3], [67644, 2], [[67645, 67646], 3], [67647, 2], [[67648, 67669], 2], [67670, 3], [[67671, 67679], 2], [[67680, 67702], 2], [[67703, 67711], 2], [[67712, 67742], 2], [[67743, 67750], 3], [[67751, 67759], 2], [[67760, 67807], 3], [[67808, 67826], 2], [67827, 3], [[67828, 67829], 2], [[67830, 67834], 3], [[67835, 67839], 2], [[67840, 67861], 2], [[67862, 67865], 2], [[67866, 67867], 2], [[67868, 67870], 3], [67871, 2], [[67872, 67897], 2], [[67898, 67902], 3], [67903, 2], [[67904, 67967], 3], [[67968, 68023], 2], [[68024, 68027], 3], [[68028, 68029], 2], [[68030, 68031], 2], [[68032, 68047], 2], [[68048, 68049], 3], [[68050, 68095], 2], [[68096, 68099], 2], [68100, 3], [[68101, 68102], 2], [[68103, 68107], 3], [[68108, 68115], 2], [68116, 3], [[68117, 68119], 2], [68120, 3], [[68121, 68147], 2], [[68148, 68149], 2], [[68150, 68151], 3], [[68152, 68154], 2], [[68155, 68158], 3], [68159, 2], [[68160, 68167], 2], [68168, 2], [[68169, 68175], 3], [[68176, 68184], 2], [[68185, 68191], 3], [[68192, 68220], 2], [[68221, 68223], 2], [[68224, 68252], 2], [[68253, 68255], 2], [[68256, 68287], 3], [[68288, 68295], 2], [68296, 2], [[68297, 68326], 2], [[68327, 68330], 3], [[68331, 68342], 2], [[68343, 68351], 3], [[68352, 68405], 2], [[68406, 68408], 3], [[68409, 68415], 2], [[68416, 68437], 2], [[68438, 68439], 3], [[68440, 68447], 2], [[68448, 68466], 2], [[68467, 68471], 3], [[68472, 68479], 2], [[68480, 68497], 2], [[68498, 68504], 3], [[68505, 68508], 2], [[68509, 68520], 3], [[68521, 68527], 2], [[68528, 68607], 3], [[68608, 68680], 2], [[68681, 68735], 3], [68736, 1, "\\u{10CC0}"], [68737, 1, "\\u{10CC1}"], [68738, 1, "\\u{10CC2}"], [68739, 1, "\\u{10CC3}"], [68740, 1, "\\u{10CC4}"], [68741, 1, "\\u{10CC5}"], [68742, 1, "\\u{10CC6}"], [68743, 1, "\\u{10CC7}"], [68744, 1, "\\u{10CC8}"], [68745, 1, "\\u{10CC9}"], [68746, 1, "\\u{10CCA}"], [68747, 1, "\\u{10CCB}"], [68748, 1, "\\u{10CCC}"], [68749, 1, "\\u{10CCD}"], [68750, 1, "\\u{10CCE}"], [68751, 1, "\\u{10CCF}"], [68752, 1, "\\u{10CD0}"], [68753, 1, "\\u{10CD1}"], [68754, 1, "\\u{10CD2}"], [68755, 1, "\\u{10CD3}"], [68756, 1, "\\u{10CD4}"], [68757, 1, "\\u{10CD5}"], [68758, 1, "\\u{10CD6}"], [68759, 1, "\\u{10CD7}"], [68760, 1, "\\u{10CD8}"], [68761, 1, "\\u{10CD9}"], [68762, 1, "\\u{10CDA}"], [68763, 1, "\\u{10CDB}"], [68764, 1, "\\u{10CDC}"], [68765, 1, "\\u{10CDD}"], [68766, 1, "\\u{10CDE}"], [68767, 1, "\\u{10CDF}"], [68768, 1, "\\u{10CE0}"], [68769, 1, "\\u{10CE1}"], [68770, 1, "\\u{10CE2}"], [68771, 1, "\\u{10CE3}"], [68772, 1, "\\u{10CE4}"], [68773, 1, "\\u{10CE5}"], [68774, 1, "\\u{10CE6}"], [68775, 1, "\\u{10CE7}"], [68776, 1, "\\u{10CE8}"], [68777, 1, "\\u{10CE9}"], [68778, 1, "\\u{10CEA}"], [68779, 1, "\\u{10CEB}"], [68780, 1, "\\u{10CEC}"], [68781, 1, "\\u{10CED}"], [68782, 1, "\\u{10CEE}"], [68783, 1, "\\u{10CEF}"], [68784, 1, "\\u{10CF0}"], [68785, 1, "\\u{10CF1}"], [68786, 1, "\\u{10CF2}"], [[68787, 68799], 3], [[68800, 68850], 2], [[68851, 68857], 3], [[68858, 68863], 2], [[68864, 68903], 2], [[68904, 68911], 3], [[68912, 68921], 2], [[68922, 69215], 3], [[69216, 69246], 2], [69247, 3], [[69248, 69289], 2], [69290, 3], [[69291, 69292], 2], [69293, 2], [[69294, 69295], 3], [[69296, 69297], 2], [[69298, 69372], 3], [[69373, 69375], 2], [[69376, 69404], 2], [[69405, 69414], 2], [69415, 2], [[69416, 69423], 3], [[69424, 69456], 2], [[69457, 69465], 2], [[69466, 69487], 3], [[69488, 69509], 2], [[69510, 69513], 2], [[69514, 69551], 3], [[69552, 69572], 2], [[69573, 69579], 2], [[69580, 69599], 3], [[69600, 69622], 2], [[69623, 69631], 3], [[69632, 69702], 2], [[69703, 69709], 2], [[69710, 69713], 3], [[69714, 69733], 2], [[69734, 69743], 2], [[69744, 69749], 2], [[69750, 69758], 3], [69759, 2], [[69760, 69818], 2], [[69819, 69820], 2], [69821, 3], [[69822, 69825], 2], [69826, 2], [[69827, 69836], 3], [69837, 3], [[69838, 69839], 3], [[69840, 69864], 2], [[69865, 69871], 3], [[69872, 69881], 2], [[69882, 69887], 3], [[69888, 69940], 2], [69941, 3], [[69942, 69951], 2], [[69952, 69955], 2], [[69956, 69958], 2], [69959, 2], [[69960, 69967], 3], [[69968, 70003], 2], [[70004, 70005], 2], [70006, 2], [[70007, 70015], 3], [[70016, 70084], 2], [[70085, 70088], 2], [[70089, 70092], 2], [70093, 2], [[70094, 70095], 2], [[70096, 70105], 2], [70106, 2], [70107, 2], [70108, 2], [[70109, 70111], 2], [70112, 3], [[70113, 70132], 2], [[70133, 70143], 3], [[70144, 70161], 2], [70162, 3], [[70163, 70199], 2], [[70200, 70205], 2], [70206, 2], [[70207, 70209], 2], [[70210, 70271], 3], [[70272, 70278], 2], [70279, 3], [70280, 2], [70281, 3], [[70282, 70285], 2], [70286, 3], [[70287, 70301], 2], [70302, 3], [[70303, 70312], 2], [70313, 2], [[70314, 70319], 3], [[70320, 70378], 2], [[70379, 70383], 3], [[70384, 70393], 2], [[70394, 70399], 3], [70400, 2], [[70401, 70403], 2], [70404, 3], [[70405, 70412], 2], [[70413, 70414], 3], [[70415, 70416], 2], [[70417, 70418], 3], [[70419, 70440], 2], [70441, 3], [[70442, 70448], 2], [70449, 3], [[70450, 70451], 2], [70452, 3], [[70453, 70457], 2], [70458, 3], [70459, 2], [[70460, 70468], 2], [[70469, 70470], 3], [[70471, 70472], 2], [[70473, 70474], 3], [[70475, 70477], 2], [[70478, 70479], 3], [70480, 2], [[70481, 70486], 3], [70487, 2], [[70488, 70492], 3], [[70493, 70499], 2], [[70500, 70501], 3], [[70502, 70508], 2], [[70509, 70511], 3], [[70512, 70516], 2], [[70517, 70655], 3], [[70656, 70730], 2], [[70731, 70735], 2], [[70736, 70745], 2], [70746, 2], [70747, 2], [70748, 3], [70749, 2], [70750, 2], [70751, 2], [[70752, 70753], 2], [[70754, 70783], 3], [[70784, 70853], 2], [70854, 2], [70855, 2], [[70856, 70863], 3], [[70864, 70873], 2], [[70874, 71039], 3], [[71040, 71093], 2], [[71094, 71095], 3], [[71096, 71104], 2], [[71105, 71113], 2], [[71114, 71127], 2], [[71128, 71133], 2], [[71134, 71167], 3], [[71168, 71232], 2], [[71233, 71235], 2], [71236, 2], [[71237, 71247], 3], [[71248, 71257], 2], [[71258, 71263], 3], [[71264, 71276], 2], [[71277, 71295], 3], [[71296, 71351], 2], [71352, 2], [71353, 2], [[71354, 71359], 3], [[71360, 71369], 2], [[71370, 71423], 3], [[71424, 71449], 2], [71450, 2], [[71451, 71452], 3], [[71453, 71467], 2], [[71468, 71471], 3], [[71472, 71481], 2], [[71482, 71487], 2], [[71488, 71494], 2], [[71495, 71679], 3], [[71680, 71738], 2], [71739, 2], [[71740, 71839], 3], [71840, 1, "\\u{118C0}"], [71841, 1, "\\u{118C1}"], [71842, 1, "\\u{118C2}"], [71843, 1, "\\u{118C3}"], [71844, 1, "\\u{118C4}"], [71845, 1, "\\u{118C5}"], [71846, 1, "\\u{118C6}"], [71847, 1, "\\u{118C7}"], [71848, 1, "\\u{118C8}"], [71849, 1, "\\u{118C9}"], [71850, 1, "\\u{118CA}"], [71851, 1, "\\u{118CB}"], [71852, 1, "\\u{118CC}"], [71853, 1, "\\u{118CD}"], [71854, 1, "\\u{118CE}"], [71855, 1, "\\u{118CF}"], [71856, 1, "\\u{118D0}"], [71857, 1, "\\u{118D1}"], [71858, 1, "\\u{118D2}"], [71859, 1, "\\u{118D3}"], [71860, 1, "\\u{118D4}"], [71861, 1, "\\u{118D5}"], [71862, 1, "\\u{118D6}"], [71863, 1, "\\u{118D7}"], [71864, 1, "\\u{118D8}"], [71865, 1, "\\u{118D9}"], [71866, 1, "\\u{118DA}"], [71867, 1, "\\u{118DB}"], [71868, 1, "\\u{118DC}"], [71869, 1, "\\u{118DD}"], [71870, 1, "\\u{118DE}"], [71871, 1, "\\u{118DF}"], [[71872, 71913], 2], [[71914, 71922], 2], [[71923, 71934], 3], [71935, 2], [[71936, 71942], 2], [[71943, 71944], 3], [71945, 2], [[71946, 71947], 3], [[71948, 71955], 2], [71956, 3], [[71957, 71958], 2], [71959, 3], [[71960, 71989], 2], [71990, 3], [[71991, 71992], 2], [[71993, 71994], 3], [[71995, 72003], 2], [[72004, 72006], 2], [[72007, 72015], 3], [[72016, 72025], 2], [[72026, 72095], 3], [[72096, 72103], 2], [[72104, 72105], 3], [[72106, 72151], 2], [[72152, 72153], 3], [[72154, 72161], 2], [72162, 2], [[72163, 72164], 2], [[72165, 72191], 3], [[72192, 72254], 2], [[72255, 72262], 2], [72263, 2], [[72264, 72271], 3], [[72272, 72323], 2], [[72324, 72325], 2], [[72326, 72345], 2], [[72346, 72348], 2], [72349, 2], [[72350, 72354], 2], [[72355, 72367], 3], [[72368, 72383], 2], [[72384, 72440], 2], [[72441, 72447], 3], [[72448, 72457], 2], [[72458, 72703], 3], [[72704, 72712], 2], [72713, 3], [[72714, 72758], 2], [72759, 3], [[72760, 72768], 2], [[72769, 72773], 2], [[72774, 72783], 3], [[72784, 72793], 2], [[72794, 72812], 2], [[72813, 72815], 3], [[72816, 72817], 2], [[72818, 72847], 2], [[72848, 72849], 3], [[72850, 72871], 2], [72872, 3], [[72873, 72886], 2], [[72887, 72959], 3], [[72960, 72966], 2], [72967, 3], [[72968, 72969], 2], [72970, 3], [[72971, 73014], 2], [[73015, 73017], 3], [73018, 2], [73019, 3], [[73020, 73021], 2], [73022, 3], [[73023, 73031], 2], [[73032, 73039], 3], [[73040, 73049], 2], [[73050, 73055], 3], [[73056, 73061], 2], [73062, 3], [[73063, 73064], 2], [73065, 3], [[73066, 73102], 2], [73103, 3], [[73104, 73105], 2], [73106, 3], [[73107, 73112], 2], [[73113, 73119], 3], [[73120, 73129], 2], [[73130, 73439], 3], [[73440, 73462], 2], [[73463, 73464], 2], [[73465, 73471], 3], [[73472, 73488], 2], [73489, 3], [[73490, 73530], 2], [[73531, 73533], 3], [[73534, 73538], 2], [[73539, 73551], 2], [[73552, 73561], 2], [[73562, 73647], 3], [73648, 2], [[73649, 73663], 3], [[73664, 73713], 2], [[73714, 73726], 3], [73727, 2], [[73728, 74606], 2], [[74607, 74648], 2], [74649, 2], [[74650, 74751], 3], [[74752, 74850], 2], [[74851, 74862], 2], [74863, 3], [[74864, 74867], 2], [74868, 2], [[74869, 74879], 3], [[74880, 75075], 2], [[75076, 77711], 3], [[77712, 77808], 2], [[77809, 77810], 2], [[77811, 77823], 3], [[77824, 78894], 2], [78895, 2], [[78896, 78904], 3], [[78905, 78911], 3], [[78912, 78933], 2], [[78934, 82943], 3], [[82944, 83526], 2], [[83527, 92159], 3], [[92160, 92728], 2], [[92729, 92735], 3], [[92736, 92766], 2], [92767, 3], [[92768, 92777], 2], [[92778, 92781], 3], [[92782, 92783], 2], [[92784, 92862], 2], [92863, 3], [[92864, 92873], 2], [[92874, 92879], 3], [[92880, 92909], 2], [[92910, 92911], 3], [[92912, 92916], 2], [92917, 2], [[92918, 92927], 3], [[92928, 92982], 2], [[92983, 92991], 2], [[92992, 92995], 2], [[92996, 92997], 2], [[92998, 93007], 3], [[93008, 93017], 2], [93018, 3], [[93019, 93025], 2], [93026, 3], [[93027, 93047], 2], [[93048, 93052], 3], [[93053, 93071], 2], [[93072, 93759], 3], [93760, 1, "\\u{16E60}"], [93761, 1, "\\u{16E61}"], [93762, 1, "\\u{16E62}"], [93763, 1, "\\u{16E63}"], [93764, 1, "\\u{16E64}"], [93765, 1, "\\u{16E65}"], [93766, 1, "\\u{16E66}"], [93767, 1, "\\u{16E67}"], [93768, 1, "\\u{16E68}"], [93769, 1, "\\u{16E69}"], [93770, 1, "\\u{16E6A}"], [93771, 1, "\\u{16E6B}"], [93772, 1, "\\u{16E6C}"], [93773, 1, "\\u{16E6D}"], [93774, 1, "\\u{16E6E}"], [93775, 1, "\\u{16E6F}"], [93776, 1, "\\u{16E70}"], [93777, 1, "\\u{16E71}"], [93778, 1, "\\u{16E72}"], [93779, 1, "\\u{16E73}"], [93780, 1, "\\u{16E74}"], [93781, 1, "\\u{16E75}"], [93782, 1, "\\u{16E76}"], [93783, 1, "\\u{16E77}"], [93784, 1, "\\u{16E78}"], [93785, 1, "\\u{16E79}"], [93786, 1, "\\u{16E7A}"], [93787, 1, "\\u{16E7B}"], [93788, 1, "\\u{16E7C}"], [93789, 1, "\\u{16E7D}"], [93790, 1, "\\u{16E7E}"], [93791, 1, "\\u{16E7F}"], [[93792, 93823], 2], [[93824, 93850], 2], [[93851, 93951], 3], [[93952, 94020], 2], [[94021, 94026], 2], [[94027, 94030], 3], [94031, 2], [[94032, 94078], 2], [[94079, 94087], 2], [[94088, 94094], 3], [[94095, 94111], 2], [[94112, 94175], 3], [94176, 2], [94177, 2], [94178, 2], [94179, 2], [94180, 2], [[94181, 94191], 3], [[94192, 94193], 2], [[94194, 94207], 3], [[94208, 100332], 2], [[100333, 100337], 2], [[100338, 100343], 2], [[100344, 100351], 3], [[100352, 101106], 2], [[101107, 101589], 2], [[101590, 101631], 3], [[101632, 101640], 2], [[101641, 110575], 3], [[110576, 110579], 2], [110580, 3], [[110581, 110587], 2], [110588, 3], [[110589, 110590], 2], [110591, 3], [[110592, 110593], 2], [[110594, 110878], 2], [[110879, 110882], 2], [[110883, 110897], 3], [110898, 2], [[110899, 110927], 3], [[110928, 110930], 2], [[110931, 110932], 3], [110933, 2], [[110934, 110947], 3], [[110948, 110951], 2], [[110952, 110959], 3], [[110960, 111355], 2], [[111356, 113663], 3], [[113664, 113770], 2], [[113771, 113775], 3], [[113776, 113788], 2], [[113789, 113791], 3], [[113792, 113800], 2], [[113801, 113807], 3], [[113808, 113817], 2], [[113818, 113819], 3], [113820, 2], [[113821, 113822], 2], [113823, 2], [[113824, 113827], 7], [[113828, 118527], 3], [[118528, 118573], 2], [[118574, 118575], 3], [[118576, 118598], 2], [[118599, 118607], 3], [[118608, 118723], 2], [[118724, 118783], 3], [[118784, 119029], 2], [[119030, 119039], 3], [[119040, 119078], 2], [[119079, 119080], 3], [119081, 2], [[119082, 119133], 2], [119134, 1, "\\u{1D157}\\u{1D165}"], [119135, 1, "\\u{1D158}\\u{1D165}"], [119136, 1, "\\u{1D158}\\u{1D165}\\u{1D16E}"], [119137, 1, "\\u{1D158}\\u{1D165}\\u{1D16F}"], [119138, 1, "\\u{1D158}\\u{1D165}\\u{1D170}"], [119139, 1, "\\u{1D158}\\u{1D165}\\u{1D171}"], [119140, 1, "\\u{1D158}\\u{1D165}\\u{1D172}"], [[119141, 119154], 2], [[119155, 119162], 3], [[119163, 119226], 2], [119227, 1, "\\u{1D1B9}\\u{1D165}"], [119228, 1, "\\u{1D1BA}\\u{1D165}"], [119229, 1, "\\u{1D1B9}\\u{1D165}\\u{1D16E}"], [119230, 1, "\\u{1D1BA}\\u{1D165}\\u{1D16E}"], [119231, 1, "\\u{1D1B9}\\u{1D165}\\u{1D16F}"], [119232, 1, "\\u{1D1BA}\\u{1D165}\\u{1D16F}"], [[119233, 119261], 2], [[119262, 119272], 2], [[119273, 119274], 2], [[119275, 119295], 3], [[119296, 119365], 2], [[119366, 119487], 3], [[119488, 119507], 2], [[119508, 119519], 3], [[119520, 119539], 2], [[119540, 119551], 3], [[119552, 119638], 2], [[119639, 119647], 3], [[119648, 119665], 2], [[119666, 119672], 2], [[119673, 119807], 3], [119808, 1, "a"], [119809, 1, "b"], [119810, 1, "c"], [119811, 1, "d"], [119812, 1, "e"], [119813, 1, "f"], [119814, 1, "g"], [119815, 1, "h"], [119816, 1, "i"], [119817, 1, "j"], [119818, 1, "k"], [119819, 1, "l"], [119820, 1, "m"], [119821, 1, "n"], [119822, 1, "o"], [119823, 1, "p"], [119824, 1, "q"], [119825, 1, "r"], [119826, 1, "s"], [119827, 1, "t"], [119828, 1, "u"], [119829, 1, "v"], [119830, 1, "w"], [119831, 1, "x"], [119832, 1, "y"], [119833, 1, "z"], [119834, 1, "a"], [119835, 1, "b"], [119836, 1, "c"], [119837, 1, "d"], [119838, 1, "e"], [119839, 1, "f"], [119840, 1, "g"], [119841, 1, "h"], [119842, 1, "i"], [119843, 1, "j"], [119844, 1, "k"], [119845, 1, "l"], [119846, 1, "m"], [119847, 1, "n"], [119848, 1, "o"], [119849, 1, "p"], [119850, 1, "q"], [119851, 1, "r"], [119852, 1, "s"], [119853, 1, "t"], [119854, 1, "u"], [119855, 1, "v"], [119856, 1, "w"], [119857, 1, "x"], [119858, 1, "y"], [119859, 1, "z"], [119860, 1, "a"], [119861, 1, "b"], [119862, 1, "c"], [119863, 1, "d"], [119864, 1, "e"], [119865, 1, "f"], [119866, 1, "g"], [119867, 1, "h"], [119868, 1, "i"], [119869, 1, "j"], [119870, 1, "k"], [119871, 1, "l"], [119872, 1, "m"], [119873, 1, "n"], [119874, 1, "o"], [119875, 1, "p"], [119876, 1, "q"], [119877, 1, "r"], [119878, 1, "s"], [119879, 1, "t"], [119880, 1, "u"], [119881, 1, "v"], [119882, 1, "w"], [119883, 1, "x"], [119884, 1, "y"], [119885, 1, "z"], [119886, 1, "a"], [119887, 1, "b"], [119888, 1, "c"], [119889, 1, "d"], [119890, 1, "e"], [119891, 1, "f"], [119892, 1, "g"], [119893, 3], [119894, 1, "i"], [119895, 1, "j"], [119896, 1, "k"], [119897, 1, "l"], [119898, 1, "m"], [119899, 1, "n"], [119900, 1, "o"], [119901, 1, "p"], [119902, 1, "q"], [119903, 1, "r"], [119904, 1, "s"], [119905, 1, "t"], [119906, 1, "u"], [119907, 1, "v"], [119908, 1, "w"], [119909, 1, "x"], [119910, 1, "y"], [119911, 1, "z"], [119912, 1, "a"], [119913, 1, "b"], [119914, 1, "c"], [119915, 1, "d"], [119916, 1, "e"], [119917, 1, "f"], [119918, 1, "g"], [119919, 1, "h"], [119920, 1, "i"], [119921, 1, "j"], [119922, 1, "k"], [119923, 1, "l"], [119924, 1, "m"], [119925, 1, "n"], [119926, 1, "o"], [119927, 1, "p"], [119928, 1, "q"], [119929, 1, "r"], [119930, 1, "s"], [119931, 1, "t"], [119932, 1, "u"], [119933, 1, "v"], [119934, 1, "w"], [119935, 1, "x"], [119936, 1, "y"], [119937, 1, "z"], [119938, 1, "a"], [119939, 1, "b"], [119940, 1, "c"], [119941, 1, "d"], [119942, 1, "e"], [119943, 1, "f"], [119944, 1, "g"], [119945, 1, "h"], [119946, 1, "i"], [119947, 1, "j"], [119948, 1, "k"], [119949, 1, "l"], [119950, 1, "m"], [119951, 1, "n"], [119952, 1, "o"], [119953, 1, "p"], [119954, 1, "q"], [119955, 1, "r"], [119956, 1, "s"], [119957, 1, "t"], [119958, 1, "u"], [119959, 1, "v"], [119960, 1, "w"], [119961, 1, "x"], [119962, 1, "y"], [119963, 1, "z"], [119964, 1, "a"], [119965, 3], [119966, 1, "c"], [119967, 1, "d"], [[119968, 119969], 3], [119970, 1, "g"], [[119971, 119972], 3], [119973, 1, "j"], [119974, 1, "k"], [[119975, 119976], 3], [119977, 1, "n"], [119978, 1, "o"], [119979, 1, "p"], [119980, 1, "q"], [119981, 3], [119982, 1, "s"], [119983, 1, "t"], [119984, 1, "u"], [119985, 1, "v"], [119986, 1, "w"], [119987, 1, "x"], [119988, 1, "y"], [119989, 1, "z"], [119990, 1, "a"], [119991, 1, "b"], [119992, 1, "c"], [119993, 1, "d"], [119994, 3], [119995, 1, "f"], [119996, 3], [119997, 1, "h"], [119998, 1, "i"], [119999, 1, "j"], [12e4, 1, "k"], [120001, 1, "l"], [120002, 1, "m"], [120003, 1, "n"], [120004, 3], [120005, 1, "p"], [120006, 1, "q"], [120007, 1, "r"], [120008, 1, "s"], [120009, 1, "t"], [120010, 1, "u"], [120011, 1, "v"], [120012, 1, "w"], [120013, 1, "x"], [120014, 1, "y"], [120015, 1, "z"], [120016, 1, "a"], [120017, 1, "b"], [120018, 1, "c"], [120019, 1, "d"], [120020, 1, "e"], [120021, 1, "f"], [120022, 1, "g"], [120023, 1, "h"], [120024, 1, "i"], [120025, 1, "j"], [120026, 1, "k"], [120027, 1, "l"], [120028, 1, "m"], [120029, 1, "n"], [120030, 1, "o"], [120031, 1, "p"], [120032, 1, "q"], [120033, 1, "r"], [120034, 1, "s"], [120035, 1, "t"], [120036, 1, "u"], [120037, 1, "v"], [120038, 1, "w"], [120039, 1, "x"], [120040, 1, "y"], [120041, 1, "z"], [120042, 1, "a"], [120043, 1, "b"], [120044, 1, "c"], [120045, 1, "d"], [120046, 1, "e"], [120047, 1, "f"], [120048, 1, "g"], [120049, 1, "h"], [120050, 1, "i"], [120051, 1, "j"], [120052, 1, "k"], [120053, 1, "l"], [120054, 1, "m"], [120055, 1, "n"], [120056, 1, "o"], [120057, 1, "p"], [120058, 1, "q"], [120059, 1, "r"], [120060, 1, "s"], [120061, 1, "t"], [120062, 1, "u"], [120063, 1, "v"], [120064, 1, "w"], [120065, 1, "x"], [120066, 1, "y"], [120067, 1, "z"], [120068, 1, "a"], [120069, 1, "b"], [120070, 3], [120071, 1, "d"], [120072, 1, "e"], [120073, 1, "f"], [120074, 1, "g"], [[120075, 120076], 3], [120077, 1, "j"], [120078, 1, "k"], [120079, 1, "l"], [120080, 1, "m"], [120081, 1, "n"], [120082, 1, "o"], [120083, 1, "p"], [120084, 1, "q"], [120085, 3], [120086, 1, "s"], [120087, 1, "t"], [120088, 1, "u"], [120089, 1, "v"], [120090, 1, "w"], [120091, 1, "x"], [120092, 1, "y"], [120093, 3], [120094, 1, "a"], [120095, 1, "b"], [120096, 1, "c"], [120097, 1, "d"], [120098, 1, "e"], [120099, 1, "f"], [120100, 1, "g"], [120101, 1, "h"], [120102, 1, "i"], [120103, 1, "j"], [120104, 1, "k"], [120105, 1, "l"], [120106, 1, "m"], [120107, 1, "n"], [120108, 1, "o"], [120109, 1, "p"], [120110, 1, "q"], [120111, 1, "r"], [120112, 1, "s"], [120113, 1, "t"], [120114, 1, "u"], [120115, 1, "v"], [120116, 1, "w"], [120117, 1, "x"], [120118, 1, "y"], [120119, 1, "z"], [120120, 1, "a"], [120121, 1, "b"], [120122, 3], [120123, 1, "d"], [120124, 1, "e"], [120125, 1, "f"], [120126, 1, "g"], [120127, 3], [120128, 1, "i"], [120129, 1, "j"], [120130, 1, "k"], [120131, 1, "l"], [120132, 1, "m"], [120133, 3], [120134, 1, "o"], [[120135, 120137], 3], [120138, 1, "s"], [120139, 1, "t"], [120140, 1, "u"], [120141, 1, "v"], [120142, 1, "w"], [120143, 1, "x"], [120144, 1, "y"], [120145, 3], [120146, 1, "a"], [120147, 1, "b"], [120148, 1, "c"], [120149, 1, "d"], [120150, 1, "e"], [120151, 1, "f"], [120152, 1, "g"], [120153, 1, "h"], [120154, 1, "i"], [120155, 1, "j"], [120156, 1, "k"], [120157, 1, "l"], [120158, 1, "m"], [120159, 1, "n"], [120160, 1, "o"], [120161, 1, "p"], [120162, 1, "q"], [120163, 1, "r"], [120164, 1, "s"], [120165, 1, "t"], [120166, 1, "u"], [120167, 1, "v"], [120168, 1, "w"], [120169, 1, "x"], [120170, 1, "y"], [120171, 1, "z"], [120172, 1, "a"], [120173, 1, "b"], [120174, 1, "c"], [120175, 1, "d"], [120176, 1, "e"], [120177, 1, "f"], [120178, 1, "g"], [120179, 1, "h"], [120180, 1, "i"], [120181, 1, "j"], [120182, 1, "k"], [120183, 1, "l"], [120184, 1, "m"], [120185, 1, "n"], [120186, 1, "o"], [120187, 1, "p"], [120188, 1, "q"], [120189, 1, "r"], [120190, 1, "s"], [120191, 1, "t"], [120192, 1, "u"], [120193, 1, "v"], [120194, 1, "w"], [120195, 1, "x"], [120196, 1, "y"], [120197, 1, "z"], [120198, 1, "a"], [120199, 1, "b"], [120200, 1, "c"], [120201, 1, "d"], [120202, 1, "e"], [120203, 1, "f"], [120204, 1, "g"], [120205, 1, "h"], [120206, 1, "i"], [120207, 1, "j"], [120208, 1, "k"], [120209, 1, "l"], [120210, 1, "m"], [120211, 1, "n"], [120212, 1, "o"], [120213, 1, "p"], [120214, 1, "q"], [120215, 1, "r"], [120216, 1, "s"], [120217, 1, "t"], [120218, 1, "u"], [120219, 1, "v"], [120220, 1, "w"], [120221, 1, "x"], [120222, 1, "y"], [120223, 1, "z"], [120224, 1, "a"], [120225, 1, "b"], [120226, 1, "c"], [120227, 1, "d"], [120228, 1, "e"], [120229, 1, "f"], [120230, 1, "g"], [120231, 1, "h"], [120232, 1, "i"], [120233, 1, "j"], [120234, 1, "k"], [120235, 1, "l"], [120236, 1, "m"], [120237, 1, "n"], [120238, 1, "o"], [120239, 1, "p"], [120240, 1, "q"], [120241, 1, "r"], [120242, 1, "s"], [120243, 1, "t"], [120244, 1, "u"], [120245, 1, "v"], [120246, 1, "w"], [120247, 1, "x"], [120248, 1, "y"], [120249, 1, "z"], [120250, 1, "a"], [120251, 1, "b"], [120252, 1, "c"], [120253, 1, "d"], [120254, 1, "e"], [120255, 1, "f"], [120256, 1, "g"], [120257, 1, "h"], [120258, 1, "i"], [120259, 1, "j"], [120260, 1, "k"], [120261, 1, "l"], [120262, 1, "m"], [120263, 1, "n"], [120264, 1, "o"], [120265, 1, "p"], [120266, 1, "q"], [120267, 1, "r"], [120268, 1, "s"], [120269, 1, "t"], [120270, 1, "u"], [120271, 1, "v"], [120272, 1, "w"], [120273, 1, "x"], [120274, 1, "y"], [120275, 1, "z"], [120276, 1, "a"], [120277, 1, "b"], [120278, 1, "c"], [120279, 1, "d"], [120280, 1, "e"], [120281, 1, "f"], [120282, 1, "g"], [120283, 1, "h"], [120284, 1, "i"], [120285, 1, "j"], [120286, 1, "k"], [120287, 1, "l"], [120288, 1, "m"], [120289, 1, "n"], [120290, 1, "o"], [120291, 1, "p"], [120292, 1, "q"], [120293, 1, "r"], [120294, 1, "s"], [120295, 1, "t"], [120296, 1, "u"], [120297, 1, "v"], [120298, 1, "w"], [120299, 1, "x"], [120300, 1, "y"], [120301, 1, "z"], [120302, 1, "a"], [120303, 1, "b"], [120304, 1, "c"], [120305, 1, "d"], [120306, 1, "e"], [120307, 1, "f"], [120308, 1, "g"], [120309, 1, "h"], [120310, 1, "i"], [120311, 1, "j"], [120312, 1, "k"], [120313, 1, "l"], [120314, 1, "m"], [120315, 1, "n"], [120316, 1, "o"], [120317, 1, "p"], [120318, 1, "q"], [120319, 1, "r"], [120320, 1, "s"], [120321, 1, "t"], [120322, 1, "u"], [120323, 1, "v"], [120324, 1, "w"], [120325, 1, "x"], [120326, 1, "y"], [120327, 1, "z"], [120328, 1, "a"], [120329, 1, "b"], [120330, 1, "c"], [120331, 1, "d"], [120332, 1, "e"], [120333, 1, "f"], [120334, 1, "g"], [120335, 1, "h"], [120336, 1, "i"], [120337, 1, "j"], [120338, 1, "k"], [120339, 1, "l"], [120340, 1, "m"], [120341, 1, "n"], [120342, 1, "o"], [120343, 1, "p"], [120344, 1, "q"], [120345, 1, "r"], [120346, 1, "s"], [120347, 1, "t"], [120348, 1, "u"], [120349, 1, "v"], [120350, 1, "w"], [120351, 1, "x"], [120352, 1, "y"], [120353, 1, "z"], [120354, 1, "a"], [120355, 1, "b"], [120356, 1, "c"], [120357, 1, "d"], [120358, 1, "e"], [120359, 1, "f"], [120360, 1, "g"], [120361, 1, "h"], [120362, 1, "i"], [120363, 1, "j"], [120364, 1, "k"], [120365, 1, "l"], [120366, 1, "m"], [120367, 1, "n"], [120368, 1, "o"], [120369, 1, "p"], [120370, 1, "q"], [120371, 1, "r"], [120372, 1, "s"], [120373, 1, "t"], [120374, 1, "u"], [120375, 1, "v"], [120376, 1, "w"], [120377, 1, "x"], [120378, 1, "y"], [120379, 1, "z"], [120380, 1, "a"], [120381, 1, "b"], [120382, 1, "c"], [120383, 1, "d"], [120384, 1, "e"], [120385, 1, "f"], [120386, 1, "g"], [120387, 1, "h"], [120388, 1, "i"], [120389, 1, "j"], [120390, 1, "k"], [120391, 1, "l"], [120392, 1, "m"], [120393, 1, "n"], [120394, 1, "o"], [120395, 1, "p"], [120396, 1, "q"], [120397, 1, "r"], [120398, 1, "s"], [120399, 1, "t"], [120400, 1, "u"], [120401, 1, "v"], [120402, 1, "w"], [120403, 1, "x"], [120404, 1, "y"], [120405, 1, "z"], [120406, 1, "a"], [120407, 1, "b"], [120408, 1, "c"], [120409, 1, "d"], [120410, 1, "e"], [120411, 1, "f"], [120412, 1, "g"], [120413, 1, "h"], [120414, 1, "i"], [120415, 1, "j"], [120416, 1, "k"], [120417, 1, "l"], [120418, 1, "m"], [120419, 1, "n"], [120420, 1, "o"], [120421, 1, "p"], [120422, 1, "q"], [120423, 1, "r"], [120424, 1, "s"], [120425, 1, "t"], [120426, 1, "u"], [120427, 1, "v"], [120428, 1, "w"], [120429, 1, "x"], [120430, 1, "y"], [120431, 1, "z"], [120432, 1, "a"], [120433, 1, "b"], [120434, 1, "c"], [120435, 1, "d"], [120436, 1, "e"], [120437, 1, "f"], [120438, 1, "g"], [120439, 1, "h"], [120440, 1, "i"], [120441, 1, "j"], [120442, 1, "k"], [120443, 1, "l"], [120444, 1, "m"], [120445, 1, "n"], [120446, 1, "o"], [120447, 1, "p"], [120448, 1, "q"], [120449, 1, "r"], [120450, 1, "s"], [120451, 1, "t"], [120452, 1, "u"], [120453, 1, "v"], [120454, 1, "w"], [120455, 1, "x"], [120456, 1, "y"], [120457, 1, "z"], [120458, 1, "a"], [120459, 1, "b"], [120460, 1, "c"], [120461, 1, "d"], [120462, 1, "e"], [120463, 1, "f"], [120464, 1, "g"], [120465, 1, "h"], [120466, 1, "i"], [120467, 1, "j"], [120468, 1, "k"], [120469, 1, "l"], [120470, 1, "m"], [120471, 1, "n"], [120472, 1, "o"], [120473, 1, "p"], [120474, 1, "q"], [120475, 1, "r"], [120476, 1, "s"], [120477, 1, "t"], [120478, 1, "u"], [120479, 1, "v"], [120480, 1, "w"], [120481, 1, "x"], [120482, 1, "y"], [120483, 1, "z"], [120484, 1, "\\u0131"], [120485, 1, "\\u0237"], [[120486, 120487], 3], [120488, 1, "\\u03B1"], [120489, 1, "\\u03B2"], [120490, 1, "\\u03B3"], [120491, 1, "\\u03B4"], [120492, 1, "\\u03B5"], [120493, 1, "\\u03B6"], [120494, 1, "\\u03B7"], [120495, 1, "\\u03B8"], [120496, 1, "\\u03B9"], [120497, 1, "\\u03BA"], [120498, 1, "\\u03BB"], [120499, 1, "\\u03BC"], [120500, 1, "\\u03BD"], [120501, 1, "\\u03BE"], [120502, 1, "\\u03BF"], [120503, 1, "\\u03C0"], [120504, 1, "\\u03C1"], [120505, 1, "\\u03B8"], [120506, 1, "\\u03C3"], [120507, 1, "\\u03C4"], [120508, 1, "\\u03C5"], [120509, 1, "\\u03C6"], [120510, 1, "\\u03C7"], [120511, 1, "\\u03C8"], [120512, 1, "\\u03C9"], [120513, 1, "\\u2207"], [120514, 1, "\\u03B1"], [120515, 1, "\\u03B2"], [120516, 1, "\\u03B3"], [120517, 1, "\\u03B4"], [120518, 1, "\\u03B5"], [120519, 1, "\\u03B6"], [120520, 1, "\\u03B7"], [120521, 1, "\\u03B8"], [120522, 1, "\\u03B9"], [120523, 1, "\\u03BA"], [120524, 1, "\\u03BB"], [120525, 1, "\\u03BC"], [120526, 1, "\\u03BD"], [120527, 1, "\\u03BE"], [120528, 1, "\\u03BF"], [120529, 1, "\\u03C0"], [120530, 1, "\\u03C1"], [[120531, 120532], 1, "\\u03C3"], [120533, 1, "\\u03C4"], [120534, 1, "\\u03C5"], [120535, 1, "\\u03C6"], [120536, 1, "\\u03C7"], [120537, 1, "\\u03C8"], [120538, 1, "\\u03C9"], [120539, 1, "\\u2202"], [120540, 1, "\\u03B5"], [120541, 1, "\\u03B8"], [120542, 1, "\\u03BA"], [120543, 1, "\\u03C6"], [120544, 1, "\\u03C1"], [120545, 1, "\\u03C0"], [120546, 1, "\\u03B1"], [120547, 1, "\\u03B2"], [120548, 1, "\\u03B3"], [120549, 1, "\\u03B4"], [120550, 1, "\\u03B5"], [120551, 1, "\\u03B6"], [120552, 1, "\\u03B7"], [120553, 1, "\\u03B8"], [120554, 1, "\\u03B9"], [120555, 1, "\\u03BA"], [120556, 1, "\\u03BB"], [120557, 1, "\\u03BC"], [120558, 1, "\\u03BD"], [120559, 1, "\\u03BE"], [120560, 1, "\\u03BF"], [120561, 1, "\\u03C0"], [120562, 1, "\\u03C1"], [120563, 1, "\\u03B8"], [120564, 1, "\\u03C3"], [120565, 1, "\\u03C4"], [120566, 1, "\\u03C5"], [120567, 1, "\\u03C6"], [120568, 1, "\\u03C7"], [120569, 1, "\\u03C8"], [120570, 1, "\\u03C9"], [120571, 1, "\\u2207"], [120572, 1, "\\u03B1"], [120573, 1, "\\u03B2"], [120574, 1, "\\u03B3"], [120575, 1, "\\u03B4"], [120576, 1, "\\u03B5"], [120577, 1, "\\u03B6"], [120578, 1, "\\u03B7"], [120579, 1, "\\u03B8"], [120580, 1, "\\u03B9"], [120581, 1, "\\u03BA"], [120582, 1, "\\u03BB"], [120583, 1, "\\u03BC"], [120584, 1, "\\u03BD"], [120585, 1, "\\u03BE"], [120586, 1, "\\u03BF"], [120587, 1, "\\u03C0"], [120588, 1, "\\u03C1"], [[120589, 120590], 1, "\\u03C3"], [120591, 1, "\\u03C4"], [120592, 1, "\\u03C5"], [120593, 1, "\\u03C6"], [120594, 1, "\\u03C7"], [120595, 1, "\\u03C8"], [120596, 1, "\\u03C9"], [120597, 1, "\\u2202"], [120598, 1, "\\u03B5"], [120599, 1, "\\u03B8"], [120600, 1, "\\u03BA"], [120601, 1, "\\u03C6"], [120602, 1, "\\u03C1"], [120603, 1, "\\u03C0"], [120604, 1, "\\u03B1"], [120605, 1, "\\u03B2"], [120606, 1, "\\u03B3"], [120607, 1, "\\u03B4"], [120608, 1, "\\u03B5"], [120609, 1, "\\u03B6"], [120610, 1, "\\u03B7"], [120611, 1, "\\u03B8"], [120612, 1, "\\u03B9"], [120613, 1, "\\u03BA"], [120614, 1, "\\u03BB"], [120615, 1, "\\u03BC"], [120616, 1, "\\u03BD"], [120617, 1, "\\u03BE"], [120618, 1, "\\u03BF"], [120619, 1, "\\u03C0"], [120620, 1, "\\u03C1"], [120621, 1, "\\u03B8"], [120622, 1, "\\u03C3"], [120623, 1, "\\u03C4"], [120624, 1, "\\u03C5"], [120625, 1, "\\u03C6"], [120626, 1, "\\u03C7"], [120627, 1, "\\u03C8"], [120628, 1, "\\u03C9"], [120629, 1, "\\u2207"], [120630, 1, "\\u03B1"], [120631, 1, "\\u03B2"], [120632, 1, "\\u03B3"], [120633, 1, "\\u03B4"], [120634, 1, "\\u03B5"], [120635, 1, "\\u03B6"], [120636, 1, "\\u03B7"], [120637, 1, "\\u03B8"], [120638, 1, "\\u03B9"], [120639, 1, "\\u03BA"], [120640, 1, "\\u03BB"], [120641, 1, "\\u03BC"], [120642, 1, "\\u03BD"], [120643, 1, "\\u03BE"], [120644, 1, "\\u03BF"], [120645, 1, "\\u03C0"], [120646, 1, "\\u03C1"], [[120647, 120648], 1, "\\u03C3"], [120649, 1, "\\u03C4"], [120650, 1, "\\u03C5"], [120651, 1, "\\u03C6"], [120652, 1, "\\u03C7"], [120653, 1, "\\u03C8"], [120654, 1, "\\u03C9"], [120655, 1, "\\u2202"], [120656, 1, "\\u03B5"], [120657, 1, "\\u03B8"], [120658, 1, "\\u03BA"], [120659, 1, "\\u03C6"], [120660, 1, "\\u03C1"], [120661, 1, "\\u03C0"], [120662, 1, "\\u03B1"], [120663, 1, "\\u03B2"], [120664, 1, "\\u03B3"], [120665, 1, "\\u03B4"], [120666, 1, "\\u03B5"], [120667, 1, "\\u03B6"], [120668, 1, "\\u03B7"], [120669, 1, "\\u03B8"], [120670, 1, "\\u03B9"], [120671, 1, "\\u03BA"], [120672, 1, "\\u03BB"], [120673, 1, "\\u03BC"], [120674, 1, "\\u03BD"], [120675, 1, "\\u03BE"], [120676, 1, "\\u03BF"], [120677, 1, "\\u03C0"], [120678, 1, "\\u03C1"], [120679, 1, "\\u03B8"], [120680, 1, "\\u03C3"], [120681, 1, "\\u03C4"], [120682, 1, "\\u03C5"], [120683, 1, "\\u03C6"], [120684, 1, "\\u03C7"], [120685, 1, "\\u03C8"], [120686, 1, "\\u03C9"], [120687, 1, "\\u2207"], [120688, 1, "\\u03B1"], [120689, 1, "\\u03B2"], [120690, 1, "\\u03B3"], [120691, 1, "\\u03B4"], [120692, 1, "\\u03B5"], [120693, 1, "\\u03B6"], [120694, 1, "\\u03B7"], [120695, 1, "\\u03B8"], [120696, 1, "\\u03B9"], [120697, 1, "\\u03BA"], [120698, 1, "\\u03BB"], [120699, 1, "\\u03BC"], [120700, 1, "\\u03BD"], [120701, 1, "\\u03BE"], [120702, 1, "\\u03BF"], [120703, 1, "\\u03C0"], [120704, 1, "\\u03C1"], [[120705, 120706], 1, "\\u03C3"], [120707, 1, "\\u03C4"], [120708, 1, "\\u03C5"], [120709, 1, "\\u03C6"], [120710, 1, "\\u03C7"], [120711, 1, "\\u03C8"], [120712, 1, "\\u03C9"], [120713, 1, "\\u2202"], [120714, 1, "\\u03B5"], [120715, 1, "\\u03B8"], [120716, 1, "\\u03BA"], [120717, 1, "\\u03C6"], [120718, 1, "\\u03C1"], [120719, 1, "\\u03C0"], [120720, 1, "\\u03B1"], [120721, 1, "\\u03B2"], [120722, 1, "\\u03B3"], [120723, 1, "\\u03B4"], [120724, 1, "\\u03B5"], [120725, 1, "\\u03B6"], [120726, 1, "\\u03B7"], [120727, 1, "\\u03B8"], [120728, 1, "\\u03B9"], [120729, 1, "\\u03BA"], [120730, 1, "\\u03BB"], [120731, 1, "\\u03BC"], [120732, 1, "\\u03BD"], [120733, 1, "\\u03BE"], [120734, 1, "\\u03BF"], [120735, 1, "\\u03C0"], [120736, 1, "\\u03C1"], [120737, 1, "\\u03B8"], [120738, 1, "\\u03C3"], [120739, 1, "\\u03C4"], [120740, 1, "\\u03C5"], [120741, 1, "\\u03C6"], [120742, 1, "\\u03C7"], [120743, 1, "\\u03C8"], [120744, 1, "\\u03C9"], [120745, 1, "\\u2207"], [120746, 1, "\\u03B1"], [120747, 1, "\\u03B2"], [120748, 1, "\\u03B3"], [120749, 1, "\\u03B4"], [120750, 1, "\\u03B5"], [120751, 1, "\\u03B6"], [120752, 1, "\\u03B7"], [120753, 1, "\\u03B8"], [120754, 1, "\\u03B9"], [120755, 1, "\\u03BA"], [120756, 1, "\\u03BB"], [120757, 1, "\\u03BC"], [120758, 1, "\\u03BD"], [120759, 1, "\\u03BE"], [120760, 1, "\\u03BF"], [120761, 1, "\\u03C0"], [120762, 1, "\\u03C1"], [[120763, 120764], 1, "\\u03C3"], [120765, 1, "\\u03C4"], [120766, 1, "\\u03C5"], [120767, 1, "\\u03C6"], [120768, 1, "\\u03C7"], [120769, 1, "\\u03C8"], [120770, 1, "\\u03C9"], [120771, 1, "\\u2202"], [120772, 1, "\\u03B5"], [120773, 1, "\\u03B8"], [120774, 1, "\\u03BA"], [120775, 1, "\\u03C6"], [120776, 1, "\\u03C1"], [120777, 1, "\\u03C0"], [[120778, 120779], 1, "\\u03DD"], [[120780, 120781], 3], [120782, 1, "0"], [120783, 1, "1"], [120784, 1, "2"], [120785, 1, "3"], [120786, 1, "4"], [120787, 1, "5"], [120788, 1, "6"], [120789, 1, "7"], [120790, 1, "8"], [120791, 1, "9"], [120792, 1, "0"], [120793, 1, "1"], [120794, 1, "2"], [120795, 1, "3"], [120796, 1, "4"], [120797, 1, "5"], [120798, 1, "6"], [120799, 1, "7"], [120800, 1, "8"], [120801, 1, "9"], [120802, 1, "0"], [120803, 1, "1"], [120804, 1, "2"], [120805, 1, "3"], [120806, 1, "4"], [120807, 1, "5"], [120808, 1, "6"], [120809, 1, "7"], [120810, 1, "8"], [120811, 1, "9"], [120812, 1, "0"], [120813, 1, "1"], [120814, 1, "2"], [120815, 1, "3"], [120816, 1, "4"], [120817, 1, "5"], [120818, 1, "6"], [120819, 1, "7"], [120820, 1, "8"], [120821, 1, "9"], [120822, 1, "0"], [120823, 1, "1"], [120824, 1, "2"], [120825, 1, "3"], [120826, 1, "4"], [120827, 1, "5"], [120828, 1, "6"], [120829, 1, "7"], [120830, 1, "8"], [120831, 1, "9"], [[120832, 121343], 2], [[121344, 121398], 2], [[121399, 121402], 2], [[121403, 121452], 2], [[121453, 121460], 2], [121461, 2], [[121462, 121475], 2], [121476, 2], [[121477, 121483], 2], [[121484, 121498], 3], [[121499, 121503], 2], [121504, 3], [[121505, 121519], 2], [[121520, 122623], 3], [[122624, 122654], 2], [[122655, 122660], 3], [[122661, 122666], 2], [[122667, 122879], 3], [[122880, 122886], 2], [122887, 3], [[122888, 122904], 2], [[122905, 122906], 3], [[122907, 122913], 2], [122914, 3], [[122915, 122916], 2], [122917, 3], [[122918, 122922], 2], [[122923, 122927], 3], [122928, 1, "\\u0430"], [122929, 1, "\\u0431"], [122930, 1, "\\u0432"], [122931, 1, "\\u0433"], [122932, 1, "\\u0434"], [122933, 1, "\\u0435"], [122934, 1, "\\u0436"], [122935, 1, "\\u0437"], [122936, 1, "\\u0438"], [122937, 1, "\\u043A"], [122938, 1, "\\u043B"], [122939, 1, "\\u043C"], [122940, 1, "\\u043E"], [122941, 1, "\\u043F"], [122942, 1, "\\u0440"], [122943, 1, "\\u0441"], [122944, 1, "\\u0442"], [122945, 1, "\\u0443"], [122946, 1, "\\u0444"], [122947, 1, "\\u0445"], [122948, 1, "\\u0446"], [122949, 1, "\\u0447"], [122950, 1, "\\u0448"], [122951, 1, "\\u044B"], [122952, 1, "\\u044D"], [122953, 1, "\\u044E"], [122954, 1, "\\uA689"], [122955, 1, "\\u04D9"], [122956, 1, "\\u0456"], [122957, 1, "\\u0458"], [122958, 1, "\\u04E9"], [122959, 1, "\\u04AF"], [122960, 1, "\\u04CF"], [122961, 1, "\\u0430"], [122962, 1, "\\u0431"], [122963, 1, "\\u0432"], [122964, 1, "\\u0433"], [122965, 1, "\\u0434"], [122966, 1, "\\u0435"], [122967, 1, "\\u0436"], [122968, 1, "\\u0437"], [122969, 1, "\\u0438"], [122970, 1, "\\u043A"], [122971, 1, "\\u043B"], [122972, 1, "\\u043E"], [122973, 1, "\\u043F"], [122974, 1, "\\u0441"], [122975, 1, "\\u0443"], [122976, 1, "\\u0444"], [122977, 1, "\\u0445"], [122978, 1, "\\u0446"], [122979, 1, "\\u0447"], [122980, 1, "\\u0448"], [122981, 1, "\\u044A"], [122982, 1, "\\u044B"], [122983, 1, "\\u0491"], [122984, 1, "\\u0456"], [122985, 1, "\\u0455"], [122986, 1, "\\u045F"], [122987, 1, "\\u04AB"], [122988, 1, "\\uA651"], [122989, 1, "\\u04B1"], [[122990, 123022], 3], [123023, 2], [[123024, 123135], 3], [[123136, 123180], 2], [[123181, 123183], 3], [[123184, 123197], 2], [[123198, 123199], 3], [[123200, 123209], 2], [[123210, 123213], 3], [123214, 2], [123215, 2], [[123216, 123535], 3], [[123536, 123566], 2], [[123567, 123583], 3], [[123584, 123641], 2], [[123642, 123646], 3], [123647, 2], [[123648, 124111], 3], [[124112, 124153], 2], [[124154, 124895], 3], [[124896, 124902], 2], [124903, 3], [[124904, 124907], 2], [124908, 3], [[124909, 124910], 2], [124911, 3], [[124912, 124926], 2], [124927, 3], [[124928, 125124], 2], [[125125, 125126], 3], [[125127, 125135], 2], [[125136, 125142], 2], [[125143, 125183], 3], [125184, 1, "\\u{1E922}"], [125185, 1, "\\u{1E923}"], [125186, 1, "\\u{1E924}"], [125187, 1, "\\u{1E925}"], [125188, 1, "\\u{1E926}"], [125189, 1, "\\u{1E927}"], [125190, 1, "\\u{1E928}"], [125191, 1, "\\u{1E929}"], [125192, 1, "\\u{1E92A}"], [125193, 1, "\\u{1E92B}"], [125194, 1, "\\u{1E92C}"], [125195, 1, "\\u{1E92D}"], [125196, 1, "\\u{1E92E}"], [125197, 1, "\\u{1E92F}"], [125198, 1, "\\u{1E930}"], [125199, 1, "\\u{1E931}"], [125200, 1, "\\u{1E932}"], [125201, 1, "\\u{1E933}"], [125202, 1, "\\u{1E934}"], [125203, 1, "\\u{1E935}"], [125204, 1, "\\u{1E936}"], [125205, 1, "\\u{1E937}"], [125206, 1, "\\u{1E938}"], [125207, 1, "\\u{1E939}"], [125208, 1, "\\u{1E93A}"], [125209, 1, "\\u{1E93B}"], [125210, 1, "\\u{1E93C}"], [125211, 1, "\\u{1E93D}"], [125212, 1, "\\u{1E93E}"], [125213, 1, "\\u{1E93F}"], [125214, 1, "\\u{1E940}"], [125215, 1, "\\u{1E941}"], [125216, 1, "\\u{1E942}"], [125217, 1, "\\u{1E943}"], [[125218, 125258], 2], [125259, 2], [[125260, 125263], 3], [[125264, 125273], 2], [[125274, 125277], 3], [[125278, 125279], 2], [[125280, 126064], 3], [[126065, 126132], 2], [[126133, 126208], 3], [[126209, 126269], 2], [[126270, 126463], 3], [126464, 1, "\\u0627"], [126465, 1, "\\u0628"], [126466, 1, "\\u062C"], [126467, 1, "\\u062F"], [126468, 3], [126469, 1, "\\u0648"], [126470, 1, "\\u0632"], [126471, 1, "\\u062D"], [126472, 1, "\\u0637"], [126473, 1, "\\u064A"], [126474, 1, "\\u0643"], [126475, 1, "\\u0644"], [126476, 1, "\\u0645"], [126477, 1, "\\u0646"], [126478, 1, "\\u0633"], [126479, 1, "\\u0639"], [126480, 1, "\\u0641"], [126481, 1, "\\u0635"], [126482, 1, "\\u0642"], [126483, 1, "\\u0631"], [126484, 1, "\\u0634"], [126485, 1, "\\u062A"], [126486, 1, "\\u062B"], [126487, 1, "\\u062E"], [126488, 1, "\\u0630"], [126489, 1, "\\u0636"], [126490, 1, "\\u0638"], [126491, 1, "\\u063A"], [126492, 1, "\\u066E"], [126493, 1, "\\u06BA"], [126494, 1, "\\u06A1"], [126495, 1, "\\u066F"], [126496, 3], [126497, 1, "\\u0628"], [126498, 1, "\\u062C"], [126499, 3], [126500, 1, "\\u0647"], [[126501, 126502], 3], [126503, 1, "\\u062D"], [126504, 3], [126505, 1, "\\u064A"], [126506, 1, "\\u0643"], [126507, 1, "\\u0644"], [126508, 1, "\\u0645"], [126509, 1, "\\u0646"], [126510, 1, "\\u0633"], [126511, 1, "\\u0639"], [126512, 1, "\\u0641"], [126513, 1, "\\u0635"], [126514, 1, "\\u0642"], [126515, 3], [126516, 1, "\\u0634"], [126517, 1, "\\u062A"], [126518, 1, "\\u062B"], [126519, 1, "\\u062E"], [126520, 3], [126521, 1, "\\u0636"], [126522, 3], [126523, 1, "\\u063A"], [[126524, 126529], 3], [126530, 1, "\\u062C"], [[126531, 126534], 3], [126535, 1, "\\u062D"], [126536, 3], [126537, 1, "\\u064A"], [126538, 3], [126539, 1, "\\u0644"], [126540, 3], [126541, 1, "\\u0646"], [126542, 1, "\\u0633"], [126543, 1, "\\u0639"], [126544, 3], [126545, 1, "\\u0635"], [126546, 1, "\\u0642"], [126547, 3], [126548, 1, "\\u0634"], [[126549, 126550], 3], [126551, 1, "\\u062E"], [126552, 3], [126553, 1, "\\u0636"], [126554, 3], [126555, 1, "\\u063A"], [126556, 3], [126557, 1, "\\u06BA"], [126558, 3], [126559, 1, "\\u066F"], [126560, 3], [126561, 1, "\\u0628"], [126562, 1, "\\u062C"], [126563, 3], [126564, 1, "\\u0647"], [[126565, 126566], 3], [126567, 1, "\\u062D"], [126568, 1, "\\u0637"], [126569, 1, "\\u064A"], [126570, 1, "\\u0643"], [126571, 3], [126572, 1, "\\u0645"], [126573, 1, "\\u0646"], [126574, 1, "\\u0633"], [126575, 1, "\\u0639"], [126576, 1, "\\u0641"], [126577, 1, "\\u0635"], [126578, 1, "\\u0642"], [126579, 3], [126580, 1, "\\u0634"], [126581, 1, "\\u062A"], [126582, 1, "\\u062B"], [126583, 1, "\\u062E"], [126584, 3], [126585, 1, "\\u0636"], [126586, 1, "\\u0638"], [126587, 1, "\\u063A"], [126588, 1, "\\u066E"], [126589, 3], [126590, 1, "\\u06A1"], [126591, 3], [126592, 1, "\\u0627"], [126593, 1, "\\u0628"], [126594, 1, "\\u062C"], [126595, 1, "\\u062F"], [126596, 1, "\\u0647"], [126597, 1, "\\u0648"], [126598, 1, "\\u0632"], [126599, 1, "\\u062D"], [126600, 1, "\\u0637"], [126601, 1, "\\u064A"], [126602, 3], [126603, 1, "\\u0644"], [126604, 1, "\\u0645"], [126605, 1, "\\u0646"], [126606, 1, "\\u0633"], [126607, 1, "\\u0639"], [126608, 1, "\\u0641"], [126609, 1, "\\u0635"], [126610, 1, "\\u0642"], [126611, 1, "\\u0631"], [126612, 1, "\\u0634"], [126613, 1, "\\u062A"], [126614, 1, "\\u062B"], [126615, 1, "\\u062E"], [126616, 1, "\\u0630"], [126617, 1, "\\u0636"], [126618, 1, "\\u0638"], [126619, 1, "\\u063A"], [[126620, 126624], 3], [126625, 1, "\\u0628"], [126626, 1, "\\u062C"], [126627, 1, "\\u062F"], [126628, 3], [126629, 1, "\\u0648"], [126630, 1, "\\u0632"], [126631, 1, "\\u062D"], [126632, 1, "\\u0637"], [126633, 1, "\\u064A"], [126634, 3], [126635, 1, "\\u0644"], [126636, 1, "\\u0645"], [126637, 1, "\\u0646"], [126638, 1, "\\u0633"], [126639, 1, "\\u0639"], [126640, 1, "\\u0641"], [126641, 1, "\\u0635"], [126642, 1, "\\u0642"], [126643, 1, "\\u0631"], [126644, 1, "\\u0634"], [126645, 1, "\\u062A"], [126646, 1, "\\u062B"], [126647, 1, "\\u062E"], [126648, 1, "\\u0630"], [126649, 1, "\\u0636"], [126650, 1, "\\u0638"], [126651, 1, "\\u063A"], [[126652, 126703], 3], [[126704, 126705], 2], [[126706, 126975], 3], [[126976, 127019], 2], [[127020, 127023], 3], [[127024, 127123], 2], [[127124, 127135], 3], [[127136, 127150], 2], [[127151, 127152], 3], [[127153, 127166], 2], [127167, 2], [127168, 3], [[127169, 127183], 2], [127184, 3], [[127185, 127199], 2], [[127200, 127221], 2], [[127222, 127231], 3], [127232, 3], [127233, 5, "0,"], [127234, 5, "1,"], [127235, 5, "2,"], [127236, 5, "3,"], [127237, 5, "4,"], [127238, 5, "5,"], [127239, 5, "6,"], [127240, 5, "7,"], [127241, 5, "8,"], [127242, 5, "9,"], [[127243, 127244], 2], [[127245, 127247], 2], [127248, 5, "(a)"], [127249, 5, "(b)"], [127250, 5, "(c)"], [127251, 5, "(d)"], [127252, 5, "(e)"], [127253, 5, "(f)"], [127254, 5, "(g)"], [127255, 5, "(h)"], [127256, 5, "(i)"], [127257, 5, "(j)"], [127258, 5, "(k)"], [127259, 5, "(l)"], [127260, 5, "(m)"], [127261, 5, "(n)"], [127262, 5, "(o)"], [127263, 5, "(p)"], [127264, 5, "(q)"], [127265, 5, "(r)"], [127266, 5, "(s)"], [127267, 5, "(t)"], [127268, 5, "(u)"], [127269, 5, "(v)"], [127270, 5, "(w)"], [127271, 5, "(x)"], [127272, 5, "(y)"], [127273, 5, "(z)"], [127274, 1, "\\u3014s\\u3015"], [127275, 1, "c"], [127276, 1, "r"], [127277, 1, "cd"], [127278, 1, "wz"], [127279, 2], [127280, 1, "a"], [127281, 1, "b"], [127282, 1, "c"], [127283, 1, "d"], [127284, 1, "e"], [127285, 1, "f"], [127286, 1, "g"], [127287, 1, "h"], [127288, 1, "i"], [127289, 1, "j"], [127290, 1, "k"], [127291, 1, "l"], [127292, 1, "m"], [127293, 1, "n"], [127294, 1, "o"], [127295, 1, "p"], [127296, 1, "q"], [127297, 1, "r"], [127298, 1, "s"], [127299, 1, "t"], [127300, 1, "u"], [127301, 1, "v"], [127302, 1, "w"], [127303, 1, "x"], [127304, 1, "y"], [127305, 1, "z"], [127306, 1, "hv"], [127307, 1, "mv"], [127308, 1, "sd"], [127309, 1, "ss"], [127310, 1, "ppv"], [127311, 1, "wc"], [[127312, 127318], 2], [127319, 2], [[127320, 127326], 2], [127327, 2], [[127328, 127337], 2], [127338, 1, "mc"], [127339, 1, "md"], [127340, 1, "mr"], [[127341, 127343], 2], [[127344, 127352], 2], [127353, 2], [127354, 2], [[127355, 127356], 2], [[127357, 127358], 2], [127359, 2], [[127360, 127369], 2], [[127370, 127373], 2], [[127374, 127375], 2], [127376, 1, "dj"], [[127377, 127386], 2], [[127387, 127404], 2], [127405, 2], [[127406, 127461], 3], [[127462, 127487], 2], [127488, 1, "\\u307B\\u304B"], [127489, 1, "\\u30B3\\u30B3"], [127490, 1, "\\u30B5"], [[127491, 127503], 3], [127504, 1, "\\u624B"], [127505, 1, "\\u5B57"], [127506, 1, "\\u53CC"], [127507, 1, "\\u30C7"], [127508, 1, "\\u4E8C"], [127509, 1, "\\u591A"], [127510, 1, "\\u89E3"], [127511, 1, "\\u5929"], [127512, 1, "\\u4EA4"], [127513, 1, "\\u6620"], [127514, 1, "\\u7121"], [127515, 1, "\\u6599"], [127516, 1, "\\u524D"], [127517, 1, "\\u5F8C"], [127518, 1, "\\u518D"], [127519, 1, "\\u65B0"], [127520, 1, "\\u521D"], [127521, 1, "\\u7D42"], [127522, 1, "\\u751F"], [127523, 1, "\\u8CA9"], [127524, 1, "\\u58F0"], [127525, 1, "\\u5439"], [127526, 1, "\\u6F14"], [127527, 1, "\\u6295"], [127528, 1, "\\u6355"], [127529, 1, "\\u4E00"], [127530, 1, "\\u4E09"], [127531, 1, "\\u904A"], [127532, 1, "\\u5DE6"], [127533, 1, "\\u4E2D"], [127534, 1, "\\u53F3"], [127535, 1, "\\u6307"], [127536, 1, "\\u8D70"], [127537, 1, "\\u6253"], [127538, 1, "\\u7981"], [127539, 1, "\\u7A7A"], [127540, 1, "\\u5408"], [127541, 1, "\\u6E80"], [127542, 1, "\\u6709"], [127543, 1, "\\u6708"], [127544, 1, "\\u7533"], [127545, 1, "\\u5272"], [127546, 1, "\\u55B6"], [127547, 1, "\\u914D"], [[127548, 127551], 3], [127552, 1, "\\u3014\\u672C\\u3015"], [127553, 1, "\\u3014\\u4E09\\u3015"], [127554, 1, "\\u3014\\u4E8C\\u3015"], [127555, 1, "\\u3014\\u5B89\\u3015"], [127556, 1, "\\u3014\\u70B9\\u3015"], [127557, 1, "\\u3014\\u6253\\u3015"], [127558, 1, "\\u3014\\u76D7\\u3015"], [127559, 1, "\\u3014\\u52DD\\u3015"], [127560, 1, "\\u3014\\u6557\\u3015"], [[127561, 127567], 3], [127568, 1, "\\u5F97"], [127569, 1, "\\u53EF"], [[127570, 127583], 3], [[127584, 127589], 2], [[127590, 127743], 3], [[127744, 127776], 2], [[127777, 127788], 2], [[127789, 127791], 2], [[127792, 127797], 2], [127798, 2], [[127799, 127868], 2], [127869, 2], [[127870, 127871], 2], [[127872, 127891], 2], [[127892, 127903], 2], [[127904, 127940], 2], [127941, 2], [[127942, 127946], 2], [[127947, 127950], 2], [[127951, 127955], 2], [[127956, 127967], 2], [[127968, 127984], 2], [[127985, 127991], 2], [[127992, 127999], 2], [[128e3, 128062], 2], [128063, 2], [128064, 2], [128065, 2], [[128066, 128247], 2], [128248, 2], [[128249, 128252], 2], [[128253, 128254], 2], [128255, 2], [[128256, 128317], 2], [[128318, 128319], 2], [[128320, 128323], 2], [[128324, 128330], 2], [[128331, 128335], 2], [[128336, 128359], 2], [[128360, 128377], 2], [128378, 2], [[128379, 128419], 2], [128420, 2], [[128421, 128506], 2], [[128507, 128511], 2], [128512, 2], [[128513, 128528], 2], [128529, 2], [[128530, 128532], 2], [128533, 2], [128534, 2], [128535, 2], [128536, 2], [128537, 2], [128538, 2], [128539, 2], [[128540, 128542], 2], [128543, 2], [[128544, 128549], 2], [[128550, 128551], 2], [[128552, 128555], 2], [128556, 2], [128557, 2], [[128558, 128559], 2], [[128560, 128563], 2], [128564, 2], [[128565, 128576], 2], [[128577, 128578], 2], [[128579, 128580], 2], [[128581, 128591], 2], [[128592, 128639], 2], [[128640, 128709], 2], [[128710, 128719], 2], [128720, 2], [[128721, 128722], 2], [[128723, 128724], 2], [128725, 2], [[128726, 128727], 2], [[128728, 128731], 3], [128732, 2], [[128733, 128735], 2], [[128736, 128748], 2], [[128749, 128751], 3], [[128752, 128755], 2], [[128756, 128758], 2], [[128759, 128760], 2], [128761, 2], [128762, 2], [[128763, 128764], 2], [[128765, 128767], 3], [[128768, 128883], 2], [[128884, 128886], 2], [[128887, 128890], 3], [[128891, 128895], 2], [[128896, 128980], 2], [[128981, 128984], 2], [128985, 2], [[128986, 128991], 3], [[128992, 129003], 2], [[129004, 129007], 3], [129008, 2], [[129009, 129023], 3], [[129024, 129035], 2], [[129036, 129039], 3], [[129040, 129095], 2], [[129096, 129103], 3], [[129104, 129113], 2], [[129114, 129119], 3], [[129120, 129159], 2], [[129160, 129167], 3], [[129168, 129197], 2], [[129198, 129199], 3], [[129200, 129201], 2], [[129202, 129279], 3], [[129280, 129291], 2], [129292, 2], [[129293, 129295], 2], [[129296, 129304], 2], [[129305, 129310], 2], [129311, 2], [[129312, 129319], 2], [[129320, 129327], 2], [129328, 2], [[129329, 129330], 2], [[129331, 129342], 2], [129343, 2], [[129344, 129355], 2], [129356, 2], [[129357, 129359], 2], [[129360, 129374], 2], [[129375, 129387], 2], [[129388, 129392], 2], [129393, 2], [129394, 2], [[129395, 129398], 2], [[129399, 129400], 2], [129401, 2], [129402, 2], [129403, 2], [[129404, 129407], 2], [[129408, 129412], 2], [[129413, 129425], 2], [[129426, 129431], 2], [[129432, 129442], 2], [[129443, 129444], 2], [[129445, 129450], 2], [[129451, 129453], 2], [[129454, 129455], 2], [[129456, 129465], 2], [[129466, 129471], 2], [129472, 2], [[129473, 129474], 2], [[129475, 129482], 2], [129483, 2], [129484, 2], [[129485, 129487], 2], [[129488, 129510], 2], [[129511, 129535], 2], [[129536, 129619], 2], [[129620, 129631], 3], [[129632, 129645], 2], [[129646, 129647], 3], [[129648, 129651], 2], [129652, 2], [[129653, 129655], 2], [[129656, 129658], 2], [[129659, 129660], 2], [[129661, 129663], 3], [[129664, 129666], 2], [[129667, 129670], 2], [[129671, 129672], 2], [[129673, 129679], 3], [[129680, 129685], 2], [[129686, 129704], 2], [[129705, 129708], 2], [[129709, 129711], 2], [[129712, 129718], 2], [[129719, 129722], 2], [[129723, 129725], 2], [129726, 3], [129727, 2], [[129728, 129730], 2], [[129731, 129733], 2], [[129734, 129741], 3], [[129742, 129743], 2], [[129744, 129750], 2], [[129751, 129753], 2], [[129754, 129755], 2], [[129756, 129759], 3], [[129760, 129767], 2], [129768, 2], [[129769, 129775], 3], [[129776, 129782], 2], [[129783, 129784], 2], [[129785, 129791], 3], [[129792, 129938], 2], [129939, 3], [[129940, 129994], 2], [[129995, 130031], 3], [130032, 1, "0"], [130033, 1, "1"], [130034, 1, "2"], [130035, 1, "3"], [130036, 1, "4"], [130037, 1, "5"], [130038, 1, "6"], [130039, 1, "7"], [130040, 1, "8"], [130041, 1, "9"], [[130042, 131069], 3], [[131070, 131071], 3], [[131072, 173782], 2], [[173783, 173789], 2], [[173790, 173791], 2], [[173792, 173823], 3], [[173824, 177972], 2], [[177973, 177976], 2], [177977, 2], [[177978, 177983], 3], [[177984, 178205], 2], [[178206, 178207], 3], [[178208, 183969], 2], [[183970, 183983], 3], [[183984, 191456], 2], [[191457, 194559], 3], [194560, 1, "\\u4E3D"], [194561, 1, "\\u4E38"], [194562, 1, "\\u4E41"], [194563, 1, "\\u{20122}"], [194564, 1, "\\u4F60"], [194565, 1, "\\u4FAE"], [194566, 1, "\\u4FBB"], [194567, 1, "\\u5002"], [194568, 1, "\\u507A"], [194569, 1, "\\u5099"], [194570, 1, "\\u50E7"], [194571, 1, "\\u50CF"], [194572, 1, "\\u349E"], [194573, 1, "\\u{2063A}"], [194574, 1, "\\u514D"], [194575, 1, "\\u5154"], [194576, 1, "\\u5164"], [194577, 1, "\\u5177"], [194578, 1, "\\u{2051C}"], [194579, 1, "\\u34B9"], [194580, 1, "\\u5167"], [194581, 1, "\\u518D"], [194582, 1, "\\u{2054B}"], [194583, 1, "\\u5197"], [194584, 1, "\\u51A4"], [194585, 1, "\\u4ECC"], [194586, 1, "\\u51AC"], [194587, 1, "\\u51B5"], [194588, 1, "\\u{291DF}"], [194589, 1, "\\u51F5"], [194590, 1, "\\u5203"], [194591, 1, "\\u34DF"], [194592, 1, "\\u523B"], [194593, 1, "\\u5246"], [194594, 1, "\\u5272"], [194595, 1, "\\u5277"], [194596, 1, "\\u3515"], [194597, 1, "\\u52C7"], [194598, 1, "\\u52C9"], [194599, 1, "\\u52E4"], [194600, 1, "\\u52FA"], [194601, 1, "\\u5305"], [194602, 1, "\\u5306"], [194603, 1, "\\u5317"], [194604, 1, "\\u5349"], [194605, 1, "\\u5351"], [194606, 1, "\\u535A"], [194607, 1, "\\u5373"], [194608, 1, "\\u537D"], [[194609, 194611], 1, "\\u537F"], [194612, 1, "\\u{20A2C}"], [194613, 1, "\\u7070"], [194614, 1, "\\u53CA"], [194615, 1, "\\u53DF"], [194616, 1, "\\u{20B63}"], [194617, 1, "\\u53EB"], [194618, 1, "\\u53F1"], [194619, 1, "\\u5406"], [194620, 1, "\\u549E"], [194621, 1, "\\u5438"], [194622, 1, "\\u5448"], [194623, 1, "\\u5468"], [194624, 1, "\\u54A2"], [194625, 1, "\\u54F6"], [194626, 1, "\\u5510"], [194627, 1, "\\u5553"], [194628, 1, "\\u5563"], [[194629, 194630], 1, "\\u5584"], [194631, 1, "\\u5599"], [194632, 1, "\\u55AB"], [194633, 1, "\\u55B3"], [194634, 1, "\\u55C2"], [194635, 1, "\\u5716"], [194636, 1, "\\u5606"], [194637, 1, "\\u5717"], [194638, 1, "\\u5651"], [194639, 1, "\\u5674"], [194640, 1, "\\u5207"], [194641, 1, "\\u58EE"], [194642, 1, "\\u57CE"], [194643, 1, "\\u57F4"], [194644, 1, "\\u580D"], [194645, 1, "\\u578B"], [194646, 1, "\\u5832"], [194647, 1, "\\u5831"], [194648, 1, "\\u58AC"], [194649, 1, "\\u{214E4}"], [194650, 1, "\\u58F2"], [194651, 1, "\\u58F7"], [194652, 1, "\\u5906"], [194653, 1, "\\u591A"], [194654, 1, "\\u5922"], [194655, 1, "\\u5962"], [194656, 1, "\\u{216A8}"], [194657, 1, "\\u{216EA}"], [194658, 1, "\\u59EC"], [194659, 1, "\\u5A1B"], [194660, 1, "\\u5A27"], [194661, 1, "\\u59D8"], [194662, 1, "\\u5A66"], [194663, 1, "\\u36EE"], [194664, 3], [194665, 1, "\\u5B08"], [[194666, 194667], 1, "\\u5B3E"], [194668, 1, "\\u{219C8}"], [194669, 1, "\\u5BC3"], [194670, 1, "\\u5BD8"], [194671, 1, "\\u5BE7"], [194672, 1, "\\u5BF3"], [194673, 1, "\\u{21B18}"], [194674, 1, "\\u5BFF"], [194675, 1, "\\u5C06"], [194676, 3], [194677, 1, "\\u5C22"], [194678, 1, "\\u3781"], [194679, 1, "\\u5C60"], [194680, 1, "\\u5C6E"], [194681, 1, "\\u5CC0"], [194682, 1, "\\u5C8D"], [194683, 1, "\\u{21DE4}"], [194684, 1, "\\u5D43"], [194685, 1, "\\u{21DE6}"], [194686, 1, "\\u5D6E"], [194687, 1, "\\u5D6B"], [194688, 1, "\\u5D7C"], [194689, 1, "\\u5DE1"], [194690, 1, "\\u5DE2"], [194691, 1, "\\u382F"], [194692, 1, "\\u5DFD"], [194693, 1, "\\u5E28"], [194694, 1, "\\u5E3D"], [194695, 1, "\\u5E69"], [194696, 1, "\\u3862"], [194697, 1, "\\u{22183}"], [194698, 1, "\\u387C"], [194699, 1, "\\u5EB0"], [194700, 1, "\\u5EB3"], [194701, 1, "\\u5EB6"], [194702, 1, "\\u5ECA"], [194703, 1, "\\u{2A392}"], [194704, 1, "\\u5EFE"], [[194705, 194706], 1, "\\u{22331}"], [194707, 1, "\\u8201"], [[194708, 194709], 1, "\\u5F22"], [194710, 1, "\\u38C7"], [194711, 1, "\\u{232B8}"], [194712, 1, "\\u{261DA}"], [194713, 1, "\\u5F62"], [194714, 1, "\\u5F6B"], [194715, 1, "\\u38E3"], [194716, 1, "\\u5F9A"], [194717, 1, "\\u5FCD"], [194718, 1, "\\u5FD7"], [194719, 1, "\\u5FF9"], [194720, 1, "\\u6081"], [194721, 1, "\\u393A"], [194722, 1, "\\u391C"], [194723, 1, "\\u6094"], [194724, 1, "\\u{226D4}"], [194725, 1, "\\u60C7"], [194726, 1, "\\u6148"], [194727, 1, "\\u614C"], [194728, 1, "\\u614E"], [194729, 1, "\\u614C"], [194730, 1, "\\u617A"], [194731, 1, "\\u618E"], [194732, 1, "\\u61B2"], [194733, 1, "\\u61A4"], [194734, 1, "\\u61AF"], [194735, 1, "\\u61DE"], [194736, 1, "\\u61F2"], [194737, 1, "\\u61F6"], [194738, 1, "\\u6210"], [194739, 1, "\\u621B"], [194740, 1, "\\u625D"], [194741, 1, "\\u62B1"], [194742, 1, "\\u62D4"], [194743, 1, "\\u6350"], [194744, 1, "\\u{22B0C}"], [194745, 1, "\\u633D"], [194746, 1, "\\u62FC"], [194747, 1, "\\u6368"], [194748, 1, "\\u6383"], [194749, 1, "\\u63E4"], [194750, 1, "\\u{22BF1}"], [194751, 1, "\\u6422"], [194752, 1, "\\u63C5"], [194753, 1, "\\u63A9"], [194754, 1, "\\u3A2E"], [194755, 1, "\\u6469"], [194756, 1, "\\u647E"], [194757, 1, "\\u649D"], [194758, 1, "\\u6477"], [194759, 1, "\\u3A6C"], [194760, 1, "\\u654F"], [194761, 1, "\\u656C"], [194762, 1, "\\u{2300A}"], [194763, 1, "\\u65E3"], [194764, 1, "\\u66F8"], [194765, 1, "\\u6649"], [194766, 1, "\\u3B19"], [194767, 1, "\\u6691"], [194768, 1, "\\u3B08"], [194769, 1, "\\u3AE4"], [194770, 1, "\\u5192"], [194771, 1, "\\u5195"], [194772, 1, "\\u6700"], [194773, 1, "\\u669C"], [194774, 1, "\\u80AD"], [194775, 1, "\\u43D9"], [194776, 1, "\\u6717"], [194777, 1, "\\u671B"], [194778, 1, "\\u6721"], [194779, 1, "\\u675E"], [194780, 1, "\\u6753"], [194781, 1, "\\u{233C3}"], [194782, 1, "\\u3B49"], [194783, 1, "\\u67FA"], [194784, 1, "\\u6785"], [194785, 1, "\\u6852"], [194786, 1, "\\u6885"], [194787, 1, "\\u{2346D}"], [194788, 1, "\\u688E"], [194789, 1, "\\u681F"], [194790, 1, "\\u6914"], [194791, 1, "\\u3B9D"], [194792, 1, "\\u6942"], [194793, 1, "\\u69A3"], [194794, 1, "\\u69EA"], [194795, 1, "\\u6AA8"], [194796, 1, "\\u{236A3}"], [194797, 1, "\\u6ADB"], [194798, 1, "\\u3C18"], [194799, 1, "\\u6B21"], [194800, 1, "\\u{238A7}"], [194801, 1, "\\u6B54"], [194802, 1, "\\u3C4E"], [194803, 1, "\\u6B72"], [194804, 1, "\\u6B9F"], [194805, 1, "\\u6BBA"], [194806, 1, "\\u6BBB"], [194807, 1, "\\u{23A8D}"], [194808, 1, "\\u{21D0B}"], [194809, 1, "\\u{23AFA}"], [194810, 1, "\\u6C4E"], [194811, 1, "\\u{23CBC}"], [194812, 1, "\\u6CBF"], [194813, 1, "\\u6CCD"], [194814, 1, "\\u6C67"], [194815, 1, "\\u6D16"], [194816, 1, "\\u6D3E"], [194817, 1, "\\u6D77"], [194818, 1, "\\u6D41"], [194819, 1, "\\u6D69"], [194820, 1, "\\u6D78"], [194821, 1, "\\u6D85"], [194822, 1, "\\u{23D1E}"], [194823, 1, "\\u6D34"], [194824, 1, "\\u6E2F"], [194825, 1, "\\u6E6E"], [194826, 1, "\\u3D33"], [194827, 1, "\\u6ECB"], [194828, 1, "\\u6EC7"], [194829, 1, "\\u{23ED1}"], [194830, 1, "\\u6DF9"], [194831, 1, "\\u6F6E"], [194832, 1, "\\u{23F5E}"], [194833, 1, "\\u{23F8E}"], [194834, 1, "\\u6FC6"], [194835, 1, "\\u7039"], [194836, 1, "\\u701E"], [194837, 1, "\\u701B"], [194838, 1, "\\u3D96"], [194839, 1, "\\u704A"], [194840, 1, "\\u707D"], [194841, 1, "\\u7077"], [194842, 1, "\\u70AD"], [194843, 1, "\\u{20525}"], [194844, 1, "\\u7145"], [194845, 1, "\\u{24263}"], [194846, 1, "\\u719C"], [194847, 3], [194848, 1, "\\u7228"], [194849, 1, "\\u7235"], [194850, 1, "\\u7250"], [194851, 1, "\\u{24608}"], [194852, 1, "\\u7280"], [194853, 1, "\\u7295"], [194854, 1, "\\u{24735}"], [194855, 1, "\\u{24814}"], [194856, 1, "\\u737A"], [194857, 1, "\\u738B"], [194858, 1, "\\u3EAC"], [194859, 1, "\\u73A5"], [[194860, 194861], 1, "\\u3EB8"], [194862, 1, "\\u7447"], [194863, 1, "\\u745C"], [194864, 1, "\\u7471"], [194865, 1, "\\u7485"], [194866, 1, "\\u74CA"], [194867, 1, "\\u3F1B"], [194868, 1, "\\u7524"], [194869, 1, "\\u{24C36}"], [194870, 1, "\\u753E"], [194871, 1, "\\u{24C92}"], [194872, 1, "\\u7570"], [194873, 1, "\\u{2219F}"], [194874, 1, "\\u7610"], [194875, 1, "\\u{24FA1}"], [194876, 1, "\\u{24FB8}"], [194877, 1, "\\u{25044}"], [194878, 1, "\\u3FFC"], [194879, 1, "\\u4008"], [194880, 1, "\\u76F4"], [194881, 1, "\\u{250F3}"], [194882, 1, "\\u{250F2}"], [194883, 1, "\\u{25119}"], [194884, 1, "\\u{25133}"], [194885, 1, "\\u771E"], [[194886, 194887], 1, "\\u771F"], [194888, 1, "\\u774A"], [194889, 1, "\\u4039"], [194890, 1, "\\u778B"], [194891, 1, "\\u4046"], [194892, 1, "\\u4096"], [194893, 1, "\\u{2541D}"], [194894, 1, "\\u784E"], [194895, 1, "\\u788C"], [194896, 1, "\\u78CC"], [194897, 1, "\\u40E3"], [194898, 1, "\\u{25626}"], [194899, 1, "\\u7956"], [194900, 1, "\\u{2569A}"], [194901, 1, "\\u{256C5}"], [194902, 1, "\\u798F"], [194903, 1, "\\u79EB"], [194904, 1, "\\u412F"], [194905, 1, "\\u7A40"], [194906, 1, "\\u7A4A"], [194907, 1, "\\u7A4F"], [194908, 1, "\\u{2597C}"], [[194909, 194910], 1, "\\u{25AA7}"], [194911, 3], [194912, 1, "\\u4202"], [194913, 1, "\\u{25BAB}"], [194914, 1, "\\u7BC6"], [194915, 1, "\\u7BC9"], [194916, 1, "\\u4227"], [194917, 1, "\\u{25C80}"], [194918, 1, "\\u7CD2"], [194919, 1, "\\u42A0"], [194920, 1, "\\u7CE8"], [194921, 1, "\\u7CE3"], [194922, 1, "\\u7D00"], [194923, 1, "\\u{25F86}"], [194924, 1, "\\u7D63"], [194925, 1, "\\u4301"], [194926, 1, "\\u7DC7"], [194927, 1, "\\u7E02"], [194928, 1, "\\u7E45"], [194929, 1, "\\u4334"], [194930, 1, "\\u{26228}"], [194931, 1, "\\u{26247}"], [194932, 1, "\\u4359"], [194933, 1, "\\u{262D9}"], [194934, 1, "\\u7F7A"], [194935, 1, "\\u{2633E}"], [194936, 1, "\\u7F95"], [194937, 1, "\\u7FFA"], [194938, 1, "\\u8005"], [194939, 1, "\\u{264DA}"], [194940, 1, "\\u{26523}"], [194941, 1, "\\u8060"], [194942, 1, "\\u{265A8}"], [194943, 1, "\\u8070"], [194944, 1, "\\u{2335F}"], [194945, 1, "\\u43D5"], [194946, 1, "\\u80B2"], [194947, 1, "\\u8103"], [194948, 1, "\\u440B"], [194949, 1, "\\u813E"], [194950, 1, "\\u5AB5"], [194951, 1, "\\u{267A7}"], [194952, 1, "\\u{267B5}"], [194953, 1, "\\u{23393}"], [194954, 1, "\\u{2339C}"], [194955, 1, "\\u8201"], [194956, 1, "\\u8204"], [194957, 1, "\\u8F9E"], [194958, 1, "\\u446B"], [194959, 1, "\\u8291"], [194960, 1, "\\u828B"], [194961, 1, "\\u829D"], [194962, 1, "\\u52B3"], [194963, 1, "\\u82B1"], [194964, 1, "\\u82B3"], [194965, 1, "\\u82BD"], [194966, 1, "\\u82E6"], [194967, 1, "\\u{26B3C}"], [194968, 1, "\\u82E5"], [194969, 1, "\\u831D"], [194970, 1, "\\u8363"], [194971, 1, "\\u83AD"], [194972, 1, "\\u8323"], [194973, 1, "\\u83BD"], [194974, 1, "\\u83E7"], [194975, 1, "\\u8457"], [194976, 1, "\\u8353"], [194977, 1, "\\u83CA"], [194978, 1, "\\u83CC"], [194979, 1, "\\u83DC"], [194980, 1, "\\u{26C36}"], [194981, 1, "\\u{26D6B}"], [194982, 1, "\\u{26CD5}"], [194983, 1, "\\u452B"], [194984, 1, "\\u84F1"], [194985, 1, "\\u84F3"], [194986, 1, "\\u8516"], [194987, 1, "\\u{273CA}"], [194988, 1, "\\u8564"], [194989, 1, "\\u{26F2C}"], [194990, 1, "\\u455D"], [194991, 1, "\\u4561"], [194992, 1, "\\u{26FB1}"], [194993, 1, "\\u{270D2}"], [194994, 1, "\\u456B"], [194995, 1, "\\u8650"], [194996, 1, "\\u865C"], [194997, 1, "\\u8667"], [194998, 1, "\\u8669"], [194999, 1, "\\u86A9"], [195e3, 1, "\\u8688"], [195001, 1, "\\u870E"], [195002, 1, "\\u86E2"], [195003, 1, "\\u8779"], [195004, 1, "\\u8728"], [195005, 1, "\\u876B"], [195006, 1, "\\u8786"], [195007, 3], [195008, 1, "\\u87E1"], [195009, 1, "\\u8801"], [195010, 1, "\\u45F9"], [195011, 1, "\\u8860"], [195012, 1, "\\u8863"], [195013, 1, "\\u{27667}"], [195014, 1, "\\u88D7"], [195015, 1, "\\u88DE"], [195016, 1, "\\u4635"], [195017, 1, "\\u88FA"], [195018, 1, "\\u34BB"], [195019, 1, "\\u{278AE}"], [195020, 1, "\\u{27966}"], [195021, 1, "\\u46BE"], [195022, 1, "\\u46C7"], [195023, 1, "\\u8AA0"], [195024, 1, "\\u8AED"], [195025, 1, "\\u8B8A"], [195026, 1, "\\u8C55"], [195027, 1, "\\u{27CA8}"], [195028, 1, "\\u8CAB"], [195029, 1, "\\u8CC1"], [195030, 1, "\\u8D1B"], [195031, 1, "\\u8D77"], [195032, 1, "\\u{27F2F}"], [195033, 1, "\\u{20804}"], [195034, 1, "\\u8DCB"], [195035, 1, "\\u8DBC"], [195036, 1, "\\u8DF0"], [195037, 1, "\\u{208DE}"], [195038, 1, "\\u8ED4"], [195039, 1, "\\u8F38"], [195040, 1, "\\u{285D2}"], [195041, 1, "\\u{285ED}"], [195042, 1, "\\u9094"], [195043, 1, "\\u90F1"], [195044, 1, "\\u9111"], [195045, 1, "\\u{2872E}"], [195046, 1, "\\u911B"], [195047, 1, "\\u9238"], [195048, 1, "\\u92D7"], [195049, 1, "\\u92D8"], [195050, 1, "\\u927C"], [195051, 1, "\\u93F9"], [195052, 1, "\\u9415"], [195053, 1, "\\u{28BFA}"], [195054, 1, "\\u958B"], [195055, 1, "\\u4995"], [195056, 1, "\\u95B7"], [195057, 1, "\\u{28D77}"], [195058, 1, "\\u49E6"], [195059, 1, "\\u96C3"], [195060, 1, "\\u5DB2"], [195061, 1, "\\u9723"], [195062, 1, "\\u{29145}"], [195063, 1, "\\u{2921A}"], [195064, 1, "\\u4A6E"], [195065, 1, "\\u4A76"], [195066, 1, "\\u97E0"], [195067, 1, "\\u{2940A}"], [195068, 1, "\\u4AB2"], [195069, 1, "\\u{29496}"], [[195070, 195071], 1, "\\u980B"], [195072, 1, "\\u9829"], [195073, 1, "\\u{295B6}"], [195074, 1, "\\u98E2"], [195075, 1, "\\u4B33"], [195076, 1, "\\u9929"], [195077, 1, "\\u99A7"], [195078, 1, "\\u99C2"], [195079, 1, "\\u99FE"], [195080, 1, "\\u4BCE"], [195081, 1, "\\u{29B30}"], [195082, 1, "\\u9B12"], [195083, 1, "\\u9C40"], [195084, 1, "\\u9CFD"], [195085, 1, "\\u4CCE"], [195086, 1, "\\u4CED"], [195087, 1, "\\u9D67"], [195088, 1, "\\u{2A0CE}"], [195089, 1, "\\u4CF8"], [195090, 1, "\\u{2A105}"], [195091, 1, "\\u{2A20E}"], [195092, 1, "\\u{2A291}"], [195093, 1, "\\u9EBB"], [195094, 1, "\\u4D56"], [195095, 1, "\\u9EF9"], [195096, 1, "\\u9EFE"], [195097, 1, "\\u9F05"], [195098, 1, "\\u9F0F"], [195099, 1, "\\u9F16"], [195100, 1, "\\u9F3B"], [195101, 1, "\\u{2A600}"], [[195102, 196605], 3], [[196606, 196607], 3], [[196608, 201546], 2], [[201547, 201551], 3], [[201552, 205743], 2], [[205744, 262141], 3], [[262142, 262143], 3], [[262144, 327677], 3], [[327678, 327679], 3], [[327680, 393213], 3], [[393214, 393215], 3], [[393216, 458749], 3], [[458750, 458751], 3], [[458752, 524285], 3], [[524286, 524287], 3], [[524288, 589821], 3], [[589822, 589823], 3], [[589824, 655357], 3], [[655358, 655359], 3], [[655360, 720893], 3], [[720894, 720895], 3], [[720896, 786429], 3], [[786430, 786431], 3], [[786432, 851965], 3], [[851966, 851967], 3], [[851968, 917501], 3], [[917502, 917503], 3], [917504, 3], [917505, 3], [[917506, 917535], 3], [[917536, 917631], 3], [[917632, 917759], 3], [[917760, 917999], 7], [[918e3, 983037], 3], [[983038, 983039], 3], [[983040, 1048573], 3], [[1048574, 1048575], 3], [[1048576, 1114109], 3], [[1114110, 1114111], 3]];\n  }\n});\n\n// ../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/statusMapping.js\nvar require_statusMapping = __commonJS({\n  "../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/statusMapping.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports.STATUS_MAPPING = {\n      mapped: 1,\n      valid: 2,\n      disallowed: 3,\n      disallowed_STD3_valid: 4,\n      disallowed_STD3_mapped: 5,\n      deviation: 6,\n      ignored: 7\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/index.js\nvar require_tr46 = __commonJS({\n  "../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/index.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var punycode2 = (init_punycode_es6(), __toCommonJS(punycode_es6_exports));\n    var regexes = require_regexes();\n    var mappingTable = require_mappingTable();\n    var { STATUS_MAPPING } = require_statusMapping();\n    function containsNonASCII(str) {\n      return /[^\\x00-\\x7F]/u.test(str);\n    }\n    __name(containsNonASCII, "containsNonASCII");\n    function findStatus(val, { useSTD3ASCIIRules }) {\n      let start = 0;\n      let end = mappingTable.length - 1;\n      while (start <= end) {\n        const mid = Math.floor((start + end) / 2);\n        const target = mappingTable[mid];\n        const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n        const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n        if (min <= val && max >= val) {\n          if (useSTD3ASCIIRules && (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\n            return [STATUS_MAPPING.disallowed, ...target.slice(2)];\n          } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\n            return [STATUS_MAPPING.valid, ...target.slice(2)];\n          } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\n            return [STATUS_MAPPING.mapped, ...target.slice(2)];\n          }\n          return target.slice(1);\n        } else if (min > val) {\n          end = mid - 1;\n        } else {\n          start = mid + 1;\n        }\n      }\n      return null;\n    }\n    __name(findStatus, "findStatus");\n    function mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\n      let hasError = false;\n      let processed = "";\n      for (const ch of domainName) {\n        const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n        switch (status) {\n          case STATUS_MAPPING.disallowed:\n            hasError = true;\n            processed += ch;\n            break;\n          case STATUS_MAPPING.ignored:\n            break;\n          case STATUS_MAPPING.mapped:\n            processed += mapping;\n            break;\n          case STATUS_MAPPING.deviation:\n            if (processingOption === "transitional") {\n              processed += mapping;\n            } else {\n              processed += ch;\n            }\n            break;\n          case STATUS_MAPPING.valid:\n            processed += ch;\n            break;\n        }\n      }\n      return {\n        string: processed,\n        error: hasError\n      };\n    }\n    __name(mapChars, "mapChars");\n    function validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\n      if (label.normalize("NFC") !== label) {\n        return false;\n      }\n      const codePoints = Array.from(label);\n      if (checkHyphens) {\n        if (codePoints[2] === "-" && codePoints[3] === "-" || (label.startsWith("-") || label.endsWith("-"))) {\n          return false;\n        }\n      }\n      if (label.includes(".") || codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0])) {\n        return false;\n      }\n      for (const ch of codePoints) {\n        const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n        if (processingOption === "transitional" && status !== STATUS_MAPPING.valid || processingOption === "nontransitional" && status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation) {\n          return false;\n        }\n      }\n      if (checkJoiners) {\n        let last = 0;\n        for (const [i, ch] of codePoints.entries()) {\n          if (ch === "\\u200C" || ch === "\\u200D") {\n            if (i > 0) {\n              if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n                continue;\n              }\n              if (ch === "\\u200C") {\n                const next = codePoints.indexOf("\\u200C", i + 1);\n                const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n                if (regexes.validZWNJ.test(test.join(""))) {\n                  last = i + 1;\n                  continue;\n                }\n              }\n            }\n            return false;\n          }\n        }\n      }\n      if (checkBidi && codePoints.length > 0) {\n        let rtl;\n        if (regexes.bidiS1LTR.test(codePoints[0])) {\n          rtl = false;\n        } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n          rtl = true;\n        } else {\n          return false;\n        }\n        if (rtl) {\n          if (!regexes.bidiS2.test(label) || !regexes.bidiS3.test(label) || regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label)) {\n            return false;\n          }\n        } else if (!regexes.bidiS5.test(label) || !regexes.bidiS6.test(label)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(validateLabel, "validateLabel");\n    function isBidiDomain(labels) {\n      const domain = labels.map((label) => {\n        if (label.startsWith("xn--")) {\n          try {\n            return punycode2.decode(label.substring(4));\n          } catch (err) {\n            return "";\n          }\n        }\n        return label;\n      }).join(".");\n      return regexes.bidiDomain.test(domain);\n    }\n    __name(isBidiDomain, "isBidiDomain");\n    function processing(domainName, options) {\n      const { processingOption } = options;\n      let { string, error: error2 } = mapChars(domainName, options);\n      string = string.normalize("NFC");\n      const labels = string.split(".");\n      const isBidi = isBidiDomain(labels);\n      for (const [i, origLabel] of labels.entries()) {\n        let label = origLabel;\n        let curProcessing = processingOption;\n        if (label.startsWith("xn--")) {\n          try {\n            label = punycode2.decode(label.substring(4));\n            labels[i] = label;\n          } catch (err) {\n            error2 = true;\n            continue;\n          }\n          curProcessing = "nontransitional";\n        }\n        if (error2) {\n          continue;\n        }\n        const validation = validateLabel(label, {\n          ...options,\n          processingOption: curProcessing,\n          checkBidi: options.checkBidi && isBidi\n        });\n        if (!validation) {\n          error2 = true;\n        }\n      }\n      return {\n        string: labels.join("."),\n        error: error2\n      };\n    }\n    __name(processing, "processing");\n    function toASCII2(domainName, {\n      checkHyphens = false,\n      checkBidi = false,\n      checkJoiners = false,\n      useSTD3ASCIIRules = false,\n      processingOption = "nontransitional",\n      verifyDNSLength = false\n    } = {}) {\n      if (processingOption !== "transitional" && processingOption !== "nontransitional") {\n        throw new RangeError("processingOption must be either transitional or nontransitional");\n      }\n      const result = processing(domainName, {\n        processingOption,\n        checkHyphens,\n        checkBidi,\n        checkJoiners,\n        useSTD3ASCIIRules\n      });\n      let labels = result.string.split(".");\n      labels = labels.map((l) => {\n        if (containsNonASCII(l)) {\n          try {\n            return `xn--${punycode2.encode(l)}`;\n          } catch (e) {\n            result.error = true;\n          }\n        }\n        return l;\n      });\n      if (verifyDNSLength) {\n        const total = labels.join(".").length;\n        if (total > 253 || total === 0) {\n          result.error = true;\n        }\n        for (let i = 0; i < labels.length; ++i) {\n          if (labels[i].length > 63 || labels[i].length === 0) {\n            result.error = true;\n            break;\n          }\n        }\n      }\n      if (result.error) {\n        return null;\n      }\n      return labels.join(".");\n    }\n    __name(toASCII2, "toASCII");\n    function toUnicode2(domainName, {\n      checkHyphens = false,\n      checkBidi = false,\n      checkJoiners = false,\n      useSTD3ASCIIRules = false,\n      processingOption = "nontransitional"\n    } = {}) {\n      const result = processing(domainName, {\n        processingOption,\n        checkHyphens,\n        checkBidi,\n        checkJoiners,\n        useSTD3ASCIIRules\n      });\n      return {\n        domain: result.string,\n        error: result.error\n      };\n    }\n    __name(toUnicode2, "toUnicode");\n    module2.exports = {\n      toASCII: toASCII2,\n      toUnicode: toUnicode2\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/infra.js\nvar require_infra = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/infra.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    function isASCIIDigit(c) {\n      return c >= 48 && c <= 57;\n    }\n    __name(isASCIIDigit, "isASCIIDigit");\n    function isASCIIAlpha(c) {\n      return c >= 65 && c <= 90 || c >= 97 && c <= 122;\n    }\n    __name(isASCIIAlpha, "isASCIIAlpha");\n    function isASCIIAlphanumeric(c) {\n      return isASCIIAlpha(c) || isASCIIDigit(c);\n    }\n    __name(isASCIIAlphanumeric, "isASCIIAlphanumeric");\n    function isASCIIHex(c) {\n      return isASCIIDigit(c) || c >= 65 && c <= 70 || c >= 97 && c <= 102;\n    }\n    __name(isASCIIHex, "isASCIIHex");\n    module2.exports = {\n      isASCIIDigit,\n      isASCIIAlpha,\n      isASCIIAlphanumeric,\n      isASCIIHex\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/encoding.js\nvar require_encoding = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/encoding.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var utf8Encoder = new TextEncoder();\n    var utf8Decoder = new TextDecoder("utf-8", { ignoreBOM: true });\n    function utf8Encode(string) {\n      return utf8Encoder.encode(string);\n    }\n    __name(utf8Encode, "utf8Encode");\n    function utf8DecodeWithoutBOM(bytes) {\n      return utf8Decoder.decode(bytes);\n    }\n    __name(utf8DecodeWithoutBOM, "utf8DecodeWithoutBOM");\n    module2.exports = {\n      utf8Encode,\n      utf8DecodeWithoutBOM\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/percent-encoding.js\nvar require_percent_encoding = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/percent-encoding.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { isASCIIHex } = require_infra();\n    var { utf8Encode } = require_encoding();\n    function p(char) {\n      return char.codePointAt(0);\n    }\n    __name(p, "p");\n    function percentEncode(c) {\n      let hex = c.toString(16).toUpperCase();\n      if (hex.length === 1) {\n        hex = `0${hex}`;\n      }\n      return `%${hex}`;\n    }\n    __name(percentEncode, "percentEncode");\n    function percentDecodeBytes(input) {\n      const output = new Uint8Array(input.byteLength);\n      let outputIndex = 0;\n      for (let i = 0; i < input.byteLength; ++i) {\n        const byte = input[i];\n        if (byte !== 37) {\n          output[outputIndex++] = byte;\n        } else if (byte === 37 && (!isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2]))) {\n          output[outputIndex++] = byte;\n        } else {\n          const bytePoint = parseInt(String.fromCodePoint(input[i + 1], input[i + 2]), 16);\n          output[outputIndex++] = bytePoint;\n          i += 2;\n        }\n      }\n      return output.slice(0, outputIndex);\n    }\n    __name(percentDecodeBytes, "percentDecodeBytes");\n    function percentDecodeString(input) {\n      const bytes = utf8Encode(input);\n      return percentDecodeBytes(bytes);\n    }\n    __name(percentDecodeString, "percentDecodeString");\n    function isC0ControlPercentEncode(c) {\n      return c <= 31 || c > 126;\n    }\n    __name(isC0ControlPercentEncode, "isC0ControlPercentEncode");\n    var extraFragmentPercentEncodeSet = /* @__PURE__ */ new Set([p(" "), p(\'"\'), p("<"), p(">"), p("`")]);\n    function isFragmentPercentEncode(c) {\n      return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n    }\n    __name(isFragmentPercentEncode, "isFragmentPercentEncode");\n    var extraQueryPercentEncodeSet = /* @__PURE__ */ new Set([p(" "), p(\'"\'), p("#"), p("<"), p(">")]);\n    function isQueryPercentEncode(c) {\n      return isC0ControlPercentEncode(c) || extraQueryPercentEncodeSet.has(c);\n    }\n    __name(isQueryPercentEncode, "isQueryPercentEncode");\n    function isSpecialQueryPercentEncode(c) {\n      return isQueryPercentEncode(c) || c === p("\'");\n    }\n    __name(isSpecialQueryPercentEncode, "isSpecialQueryPercentEncode");\n    var extraPathPercentEncodeSet = /* @__PURE__ */ new Set([p("?"), p("`"), p("{"), p("}")]);\n    function isPathPercentEncode(c) {\n      return isQueryPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n    }\n    __name(isPathPercentEncode, "isPathPercentEncode");\n    var extraUserinfoPercentEncodeSet = /* @__PURE__ */ new Set([p("/"), p(":"), p(";"), p("="), p("@"), p("["), p("\\\\"), p("]"), p("^"), p("|")]);\n    function isUserinfoPercentEncode(c) {\n      return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n    }\n    __name(isUserinfoPercentEncode, "isUserinfoPercentEncode");\n    var extraComponentPercentEncodeSet = /* @__PURE__ */ new Set([p("$"), p("%"), p("&"), p("+"), p(",")]);\n    function isComponentPercentEncode(c) {\n      return isUserinfoPercentEncode(c) || extraComponentPercentEncodeSet.has(c);\n    }\n    __name(isComponentPercentEncode, "isComponentPercentEncode");\n    var extraURLEncodedPercentEncodeSet = /* @__PURE__ */ new Set([p("!"), p("\'"), p("("), p(")"), p("~")]);\n    function isURLEncodedPercentEncode(c) {\n      return isComponentPercentEncode(c) || extraURLEncodedPercentEncodeSet.has(c);\n    }\n    __name(isURLEncodedPercentEncode, "isURLEncodedPercentEncode");\n    function utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate) {\n      const bytes = utf8Encode(codePoint);\n      let output = "";\n      for (const byte of bytes) {\n        if (!percentEncodePredicate(byte)) {\n          output += String.fromCharCode(byte);\n        } else {\n          output += percentEncode(byte);\n        }\n      }\n      return output;\n    }\n    __name(utf8PercentEncodeCodePointInternal, "utf8PercentEncodeCodePointInternal");\n    function utf8PercentEncodeCodePoint(codePoint, percentEncodePredicate) {\n      return utf8PercentEncodeCodePointInternal(String.fromCodePoint(codePoint), percentEncodePredicate);\n    }\n    __name(utf8PercentEncodeCodePoint, "utf8PercentEncodeCodePoint");\n    function utf8PercentEncodeString(input, percentEncodePredicate, spaceAsPlus = false) {\n      let output = "";\n      for (const codePoint of input) {\n        if (spaceAsPlus && codePoint === " ") {\n          output += "+";\n        } else {\n          output += utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate);\n        }\n      }\n      return output;\n    }\n    __name(utf8PercentEncodeString, "utf8PercentEncodeString");\n    module2.exports = {\n      isC0ControlPercentEncode,\n      isFragmentPercentEncode,\n      isQueryPercentEncode,\n      isSpecialQueryPercentEncode,\n      isPathPercentEncode,\n      isUserinfoPercentEncode,\n      isURLEncodedPercentEncode,\n      percentDecodeString,\n      percentDecodeBytes,\n      utf8PercentEncodeString,\n      utf8PercentEncodeCodePoint\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/url-state-machine.js\nvar require_url_state_machine = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/url-state-machine.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var tr46 = require_tr46();\n    var infra = require_infra();\n    var { utf8DecodeWithoutBOM } = require_encoding();\n    var {\n      percentDecodeString,\n      utf8PercentEncodeCodePoint,\n      utf8PercentEncodeString,\n      isC0ControlPercentEncode,\n      isFragmentPercentEncode,\n      isQueryPercentEncode,\n      isSpecialQueryPercentEncode,\n      isPathPercentEncode,\n      isUserinfoPercentEncode\n    } = require_percent_encoding();\n    function p(char) {\n      return char.codePointAt(0);\n    }\n    __name(p, "p");\n    var specialSchemes = {\n      ftp: 21,\n      file: null,\n      http: 80,\n      https: 443,\n      ws: 80,\n      wss: 443\n    };\n    var failure = Symbol("failure");\n    function countSymbols(str) {\n      return [...str].length;\n    }\n    __name(countSymbols, "countSymbols");\n    function at(input, idx) {\n      const c = input[idx];\n      return isNaN(c) ? void 0 : String.fromCodePoint(c);\n    }\n    __name(at, "at");\n    function isSingleDot(buffer) {\n      return buffer === "." || buffer.toLowerCase() === "%2e";\n    }\n    __name(isSingleDot, "isSingleDot");\n    function isDoubleDot(buffer) {\n      buffer = buffer.toLowerCase();\n      return buffer === ".." || buffer === "%2e." || buffer === ".%2e" || buffer === "%2e%2e";\n    }\n    __name(isDoubleDot, "isDoubleDot");\n    function isWindowsDriveLetterCodePoints(cp1, cp2) {\n      return infra.isASCIIAlpha(cp1) && (cp2 === p(":") || cp2 === p("|"));\n    }\n    __name(isWindowsDriveLetterCodePoints, "isWindowsDriveLetterCodePoints");\n    function isWindowsDriveLetterString(string) {\n      return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === ":" || string[1] === "|");\n    }\n    __name(isWindowsDriveLetterString, "isWindowsDriveLetterString");\n    function isNormalizedWindowsDriveLetterString(string) {\n      return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === ":";\n    }\n    __name(isNormalizedWindowsDriveLetterString, "isNormalizedWindowsDriveLetterString");\n    function containsForbiddenHostCodePoint(string) {\n      return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n    }\n    __name(containsForbiddenHostCodePoint, "containsForbiddenHostCodePoint");\n    function containsForbiddenDomainCodePoint(string) {\n      return containsForbiddenHostCodePoint(string) || string.search(/[\\u0000-\\u001F]|%|\\u007F/u) !== -1;\n    }\n    __name(containsForbiddenDomainCodePoint, "containsForbiddenDomainCodePoint");\n    function isSpecialScheme2(scheme) {\n      return specialSchemes[scheme] !== void 0;\n    }\n    __name(isSpecialScheme2, "isSpecialScheme");\n    function isSpecial(url) {\n      return isSpecialScheme2(url.scheme);\n    }\n    __name(isSpecial, "isSpecial");\n    function isNotSpecial(url) {\n      return !isSpecialScheme2(url.scheme);\n    }\n    __name(isNotSpecial, "isNotSpecial");\n    function defaultPort(scheme) {\n      return specialSchemes[scheme];\n    }\n    __name(defaultPort, "defaultPort");\n    function parseIPv4Number(input) {\n      if (input === "") {\n        return failure;\n      }\n      let R = 10;\n      if (input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x") {\n        input = input.substring(2);\n        R = 16;\n      } else if (input.length >= 2 && input.charAt(0) === "0") {\n        input = input.substring(1);\n        R = 8;\n      }\n      if (input === "") {\n        return 0;\n      }\n      let regex = /[^0-7]/u;\n      if (R === 10) {\n        regex = /[^0-9]/u;\n      }\n      if (R === 16) {\n        regex = /[^0-9A-Fa-f]/u;\n      }\n      if (regex.test(input)) {\n        return failure;\n      }\n      return parseInt(input, R);\n    }\n    __name(parseIPv4Number, "parseIPv4Number");\n    function parseIPv4(input) {\n      const parts = input.split(".");\n      if (parts[parts.length - 1] === "") {\n        if (parts.length > 1) {\n          parts.pop();\n        }\n      }\n      if (parts.length > 4) {\n        return failure;\n      }\n      const numbers = [];\n      for (const part of parts) {\n        const n = parseIPv4Number(part);\n        if (n === failure) {\n          return failure;\n        }\n        numbers.push(n);\n      }\n      for (let i = 0; i < numbers.length - 1; ++i) {\n        if (numbers[i] > 255) {\n          return failure;\n        }\n      }\n      if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n        return failure;\n      }\n      let ipv4 = numbers.pop();\n      let counter = 0;\n      for (const n of numbers) {\n        ipv4 += n * 256 ** (3 - counter);\n        ++counter;\n      }\n      return ipv4;\n    }\n    __name(parseIPv4, "parseIPv4");\n    function serializeIPv4(address) {\n      let output = "";\n      let n = address;\n      for (let i = 1; i <= 4; ++i) {\n        output = String(n % 256) + output;\n        if (i !== 4) {\n          output = `.${output}`;\n        }\n        n = Math.floor(n / 256);\n      }\n      return output;\n    }\n    __name(serializeIPv4, "serializeIPv4");\n    function parseIPv6(input) {\n      const address = [0, 0, 0, 0, 0, 0, 0, 0];\n      let pieceIndex = 0;\n      let compress = null;\n      let pointer = 0;\n      input = Array.from(input, (c) => c.codePointAt(0));\n      if (input[pointer] === p(":")) {\n        if (input[pointer + 1] !== p(":")) {\n          return failure;\n        }\n        pointer += 2;\n        ++pieceIndex;\n        compress = pieceIndex;\n      }\n      while (pointer < input.length) {\n        if (pieceIndex === 8) {\n          return failure;\n        }\n        if (input[pointer] === p(":")) {\n          if (compress !== null) {\n            return failure;\n          }\n          ++pointer;\n          ++pieceIndex;\n          compress = pieceIndex;\n          continue;\n        }\n        let value = 0;\n        let length = 0;\n        while (length < 4 && infra.isASCIIHex(input[pointer])) {\n          value = value * 16 + parseInt(at(input, pointer), 16);\n          ++pointer;\n          ++length;\n        }\n        if (input[pointer] === p(".")) {\n          if (length === 0) {\n            return failure;\n          }\n          pointer -= length;\n          if (pieceIndex > 6) {\n            return failure;\n          }\n          let numbersSeen = 0;\n          while (input[pointer] !== void 0) {\n            let ipv4Piece = null;\n            if (numbersSeen > 0) {\n              if (input[pointer] === p(".") && numbersSeen < 4) {\n                ++pointer;\n              } else {\n                return failure;\n              }\n            }\n            if (!infra.isASCIIDigit(input[pointer])) {\n              return failure;\n            }\n            while (infra.isASCIIDigit(input[pointer])) {\n              const number = parseInt(at(input, pointer));\n              if (ipv4Piece === null) {\n                ipv4Piece = number;\n              } else if (ipv4Piece === 0) {\n                return failure;\n              } else {\n                ipv4Piece = ipv4Piece * 10 + number;\n              }\n              if (ipv4Piece > 255) {\n                return failure;\n              }\n              ++pointer;\n            }\n            address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n            ++numbersSeen;\n            if (numbersSeen === 2 || numbersSeen === 4) {\n              ++pieceIndex;\n            }\n          }\n          if (numbersSeen !== 4) {\n            return failure;\n          }\n          break;\n        } else if (input[pointer] === p(":")) {\n          ++pointer;\n          if (input[pointer] === void 0) {\n            return failure;\n          }\n        } else if (input[pointer] !== void 0) {\n          return failure;\n        }\n        address[pieceIndex] = value;\n        ++pieceIndex;\n      }\n      if (compress !== null) {\n        let swaps = pieceIndex - compress;\n        pieceIndex = 7;\n        while (pieceIndex !== 0 && swaps > 0) {\n          const temp = address[compress + swaps - 1];\n          address[compress + swaps - 1] = address[pieceIndex];\n          address[pieceIndex] = temp;\n          --pieceIndex;\n          --swaps;\n        }\n      } else if (compress === null && pieceIndex !== 8) {\n        return failure;\n      }\n      return address;\n    }\n    __name(parseIPv6, "parseIPv6");\n    function serializeIPv6(address) {\n      let output = "";\n      const compress = findLongestZeroSequence(address);\n      let ignore0 = false;\n      for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n        if (ignore0 && address[pieceIndex] === 0) {\n          continue;\n        } else if (ignore0) {\n          ignore0 = false;\n        }\n        if (compress === pieceIndex) {\n          const separator = pieceIndex === 0 ? "::" : ":";\n          output += separator;\n          ignore0 = true;\n          continue;\n        }\n        output += address[pieceIndex].toString(16);\n        if (pieceIndex !== 7) {\n          output += ":";\n        }\n      }\n      return output;\n    }\n    __name(serializeIPv6, "serializeIPv6");\n    function parseHost(input, isNotSpecialArg = false) {\n      if (input[0] === "[") {\n        if (input[input.length - 1] !== "]") {\n          return failure;\n        }\n        return parseIPv6(input.substring(1, input.length - 1));\n      }\n      if (isNotSpecialArg) {\n        return parseOpaqueHost(input);\n      }\n      const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n      const asciiDomain = domainToASCII(domain);\n      if (asciiDomain === failure) {\n        return failure;\n      }\n      if (containsForbiddenDomainCodePoint(asciiDomain)) {\n        return failure;\n      }\n      if (endsInANumber(asciiDomain)) {\n        return parseIPv4(asciiDomain);\n      }\n      return asciiDomain;\n    }\n    __name(parseHost, "parseHost");\n    function endsInANumber(input) {\n      const parts = input.split(".");\n      if (parts[parts.length - 1] === "") {\n        if (parts.length === 1) {\n          return false;\n        }\n        parts.pop();\n      }\n      const last = parts[parts.length - 1];\n      if (parseIPv4Number(last) !== failure) {\n        return true;\n      }\n      if (/^[0-9]+$/u.test(last)) {\n        return true;\n      }\n      return false;\n    }\n    __name(endsInANumber, "endsInANumber");\n    function parseOpaqueHost(input) {\n      if (containsForbiddenHostCodePoint(input)) {\n        return failure;\n      }\n      return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n    }\n    __name(parseOpaqueHost, "parseOpaqueHost");\n    function findLongestZeroSequence(arr) {\n      let maxIdx = null;\n      let maxLen = 1;\n      let currStart = null;\n      let currLen = 0;\n      for (let i = 0; i < arr.length; ++i) {\n        if (arr[i] !== 0) {\n          if (currLen > maxLen) {\n            maxIdx = currStart;\n            maxLen = currLen;\n          }\n          currStart = null;\n          currLen = 0;\n        } else {\n          if (currStart === null) {\n            currStart = i;\n          }\n          ++currLen;\n        }\n      }\n      if (currLen > maxLen) {\n        return currStart;\n      }\n      return maxIdx;\n    }\n    __name(findLongestZeroSequence, "findLongestZeroSequence");\n    function serializeHost(host) {\n      if (typeof host === "number") {\n        return serializeIPv4(host);\n      }\n      if (host instanceof Array) {\n        return `[${serializeIPv6(host)}]`;\n      }\n      return host;\n    }\n    __name(serializeHost, "serializeHost");\n    function domainToASCII(domain, beStrict = false) {\n      const result = tr46.toASCII(domain, {\n        checkBidi: true,\n        checkHyphens: false,\n        checkJoiners: true,\n        useSTD3ASCIIRules: beStrict,\n        verifyDNSLength: beStrict\n      });\n      if (result === null || result === "") {\n        return failure;\n      }\n      return result;\n    }\n    __name(domainToASCII, "domainToASCII");\n    function trimControlChars(url) {\n      return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, "");\n    }\n    __name(trimControlChars, "trimControlChars");\n    function trimTabAndNewline(url) {\n      return url.replace(/\\u0009|\\u000A|\\u000D/ug, "");\n    }\n    __name(trimTabAndNewline, "trimTabAndNewline");\n    function shortenPath(url) {\n      const { path } = url;\n      if (path.length === 0) {\n        return;\n      }\n      if (url.scheme === "file" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n        return;\n      }\n      path.pop();\n    }\n    __name(shortenPath, "shortenPath");\n    function includesCredentials(url) {\n      return url.username !== "" || url.password !== "";\n    }\n    __name(includesCredentials, "includesCredentials");\n    function cannotHaveAUsernamePasswordPort(url) {\n      return url.host === null || url.host === "" || url.scheme === "file";\n    }\n    __name(cannotHaveAUsernamePasswordPort, "cannotHaveAUsernamePasswordPort");\n    function hasAnOpaquePath(url) {\n      return typeof url.path === "string";\n    }\n    __name(hasAnOpaquePath, "hasAnOpaquePath");\n    function isNormalizedWindowsDriveLetter(string) {\n      return /^[A-Za-z]:$/u.test(string);\n    }\n    __name(isNormalizedWindowsDriveLetter, "isNormalizedWindowsDriveLetter");\n    function URLStateMachine(input, base2, encodingOverride, url, stateOverride) {\n      this.pointer = 0;\n      this.input = input;\n      this.base = base2 || null;\n      this.encodingOverride = encodingOverride || "utf-8";\n      this.stateOverride = stateOverride;\n      this.url = url;\n      this.failure = false;\n      this.parseError = false;\n      if (!this.url) {\n        this.url = {\n          scheme: "",\n          username: "",\n          password: "",\n          host: null,\n          port: null,\n          path: [],\n          query: null,\n          fragment: null\n        };\n        const res2 = trimControlChars(this.input);\n        if (res2 !== this.input) {\n          this.parseError = true;\n        }\n        this.input = res2;\n      }\n      const res = trimTabAndNewline(this.input);\n      if (res !== this.input) {\n        this.parseError = true;\n      }\n      this.input = res;\n      this.state = stateOverride || "scheme start";\n      this.buffer = "";\n      this.atFlag = false;\n      this.arrFlag = false;\n      this.passwordTokenSeenFlag = false;\n      this.input = Array.from(this.input, (c) => c.codePointAt(0));\n      for (; this.pointer <= this.input.length; ++this.pointer) {\n        const c = this.input[this.pointer];\n        const cStr = isNaN(c) ? void 0 : String.fromCodePoint(c);\n        const ret = this[`parse ${this.state}`](c, cStr);\n        if (!ret) {\n          break;\n        } else if (ret === failure) {\n          this.failure = true;\n          break;\n        }\n      }\n    }\n    __name(URLStateMachine, "URLStateMachine");\n    URLStateMachine.prototype["parse scheme start"] = /* @__PURE__ */ __name(function parseSchemeStart(c, cStr) {\n      if (infra.isASCIIAlpha(c)) {\n        this.buffer += cStr.toLowerCase();\n        this.state = "scheme";\n      } else if (!this.stateOverride) {\n        this.state = "no scheme";\n        --this.pointer;\n      } else {\n        this.parseError = true;\n        return failure;\n      }\n      return true;\n    }, "parseSchemeStart");\n    URLStateMachine.prototype["parse scheme"] = /* @__PURE__ */ __name(function parseScheme(c, cStr) {\n      if (infra.isASCIIAlphanumeric(c) || c === p("+") || c === p("-") || c === p(".")) {\n        this.buffer += cStr.toLowerCase();\n      } else if (c === p(":")) {\n        if (this.stateOverride) {\n          if (isSpecial(this.url) && !isSpecialScheme2(this.buffer)) {\n            return false;\n          }\n          if (!isSpecial(this.url) && isSpecialScheme2(this.buffer)) {\n            return false;\n          }\n          if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {\n            return false;\n          }\n          if (this.url.scheme === "file" && this.url.host === "") {\n            return false;\n          }\n        }\n        this.url.scheme = this.buffer;\n        if (this.stateOverride) {\n          if (this.url.port === defaultPort(this.url.scheme)) {\n            this.url.port = null;\n          }\n          return false;\n        }\n        this.buffer = "";\n        if (this.url.scheme === "file") {\n          if (this.input[this.pointer + 1] !== p("/") || this.input[this.pointer + 2] !== p("/")) {\n            this.parseError = true;\n          }\n          this.state = "file";\n        } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n          this.state = "special relative or authority";\n        } else if (isSpecial(this.url)) {\n          this.state = "special authority slashes";\n        } else if (this.input[this.pointer + 1] === p("/")) {\n          this.state = "path or authority";\n          ++this.pointer;\n        } else {\n          this.url.path = "";\n          this.state = "opaque path";\n        }\n      } else if (!this.stateOverride) {\n        this.buffer = "";\n        this.state = "no scheme";\n        this.pointer = -1;\n      } else {\n        this.parseError = true;\n        return failure;\n      }\n      return true;\n    }, "parseScheme");\n    URLStateMachine.prototype["parse no scheme"] = /* @__PURE__ */ __name(function parseNoScheme(c) {\n      if (this.base === null || hasAnOpaquePath(this.base) && c !== p("#")) {\n        return failure;\n      } else if (hasAnOpaquePath(this.base) && c === p("#")) {\n        this.url.scheme = this.base.scheme;\n        this.url.path = this.base.path;\n        this.url.query = this.base.query;\n        this.url.fragment = "";\n        this.state = "fragment";\n      } else if (this.base.scheme === "file") {\n        this.state = "file";\n        --this.pointer;\n      } else {\n        this.state = "relative";\n        --this.pointer;\n      }\n      return true;\n    }, "parseNoScheme");\n    URLStateMachine.prototype["parse special relative or authority"] = /* @__PURE__ */ __name(function parseSpecialRelativeOrAuthority(c) {\n      if (c === p("/") && this.input[this.pointer + 1] === p("/")) {\n        this.state = "special authority ignore slashes";\n        ++this.pointer;\n      } else {\n        this.parseError = true;\n        this.state = "relative";\n        --this.pointer;\n      }\n      return true;\n    }, "parseSpecialRelativeOrAuthority");\n    URLStateMachine.prototype["parse path or authority"] = /* @__PURE__ */ __name(function parsePathOrAuthority(c) {\n      if (c === p("/")) {\n        this.state = "authority";\n      } else {\n        this.state = "path";\n        --this.pointer;\n      }\n      return true;\n    }, "parsePathOrAuthority");\n    URLStateMachine.prototype["parse relative"] = /* @__PURE__ */ __name(function parseRelative(c) {\n      this.url.scheme = this.base.scheme;\n      if (c === p("/")) {\n        this.state = "relative slash";\n      } else if (isSpecial(this.url) && c === p("\\\\")) {\n        this.parseError = true;\n        this.state = "relative slash";\n      } else {\n        this.url.username = this.base.username;\n        this.url.password = this.base.password;\n        this.url.host = this.base.host;\n        this.url.port = this.base.port;\n        this.url.path = this.base.path.slice();\n        this.url.query = this.base.query;\n        if (c === p("?")) {\n          this.url.query = "";\n          this.state = "query";\n        } else if (c === p("#")) {\n          this.url.fragment = "";\n          this.state = "fragment";\n        } else if (!isNaN(c)) {\n          this.url.query = null;\n          this.url.path.pop();\n          this.state = "path";\n          --this.pointer;\n        }\n      }\n      return true;\n    }, "parseRelative");\n    URLStateMachine.prototype["parse relative slash"] = /* @__PURE__ */ __name(function parseRelativeSlash(c) {\n      if (isSpecial(this.url) && (c === p("/") || c === p("\\\\"))) {\n        if (c === p("\\\\")) {\n          this.parseError = true;\n        }\n        this.state = "special authority ignore slashes";\n      } else if (c === p("/")) {\n        this.state = "authority";\n      } else {\n        this.url.username = this.base.username;\n        this.url.password = this.base.password;\n        this.url.host = this.base.host;\n        this.url.port = this.base.port;\n        this.state = "path";\n        --this.pointer;\n      }\n      return true;\n    }, "parseRelativeSlash");\n    URLStateMachine.prototype["parse special authority slashes"] = /* @__PURE__ */ __name(function parseSpecialAuthoritySlashes(c) {\n      if (c === p("/") && this.input[this.pointer + 1] === p("/")) {\n        this.state = "special authority ignore slashes";\n        ++this.pointer;\n      } else {\n        this.parseError = true;\n        this.state = "special authority ignore slashes";\n        --this.pointer;\n      }\n      return true;\n    }, "parseSpecialAuthoritySlashes");\n    URLStateMachine.prototype["parse special authority ignore slashes"] = /* @__PURE__ */ __name(function parseSpecialAuthorityIgnoreSlashes(c) {\n      if (c !== p("/") && c !== p("\\\\")) {\n        this.state = "authority";\n        --this.pointer;\n      } else {\n        this.parseError = true;\n      }\n      return true;\n    }, "parseSpecialAuthorityIgnoreSlashes");\n    URLStateMachine.prototype["parse authority"] = /* @__PURE__ */ __name(function parseAuthority(c, cStr) {\n      if (c === p("@")) {\n        this.parseError = true;\n        if (this.atFlag) {\n          this.buffer = `%40${this.buffer}`;\n        }\n        this.atFlag = true;\n        const len = countSymbols(this.buffer);\n        for (let pointer = 0; pointer < len; ++pointer) {\n          const codePoint = this.buffer.codePointAt(pointer);\n          if (codePoint === p(":") && !this.passwordTokenSeenFlag) {\n            this.passwordTokenSeenFlag = true;\n            continue;\n          }\n          const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n          if (this.passwordTokenSeenFlag) {\n            this.url.password += encodedCodePoints;\n          } else {\n            this.url.username += encodedCodePoints;\n          }\n        }\n        this.buffer = "";\n      } else if (isNaN(c) || c === p("/") || c === p("?") || c === p("#") || isSpecial(this.url) && c === p("\\\\")) {\n        if (this.atFlag && this.buffer === "") {\n          this.parseError = true;\n          return failure;\n        }\n        this.pointer -= countSymbols(this.buffer) + 1;\n        this.buffer = "";\n        this.state = "host";\n      } else {\n        this.buffer += cStr;\n      }\n      return true;\n    }, "parseAuthority");\n    URLStateMachine.prototype["parse hostname"] = URLStateMachine.prototype["parse host"] = /* @__PURE__ */ __name(function parseHostName(c, cStr) {\n      if (this.stateOverride && this.url.scheme === "file") {\n        --this.pointer;\n        this.state = "file host";\n      } else if (c === p(":") && !this.arrFlag) {\n        if (this.buffer === "") {\n          this.parseError = true;\n          return failure;\n        }\n        if (this.stateOverride === "hostname") {\n          return false;\n        }\n        const host = parseHost(this.buffer, isNotSpecial(this.url));\n        if (host === failure) {\n          return failure;\n        }\n        this.url.host = host;\n        this.buffer = "";\n        this.state = "port";\n      } else if (isNaN(c) || c === p("/") || c === p("?") || c === p("#") || isSpecial(this.url) && c === p("\\\\")) {\n        --this.pointer;\n        if (isSpecial(this.url) && this.buffer === "") {\n          this.parseError = true;\n          return failure;\n        } else if (this.stateOverride && this.buffer === "" && (includesCredentials(this.url) || this.url.port !== null)) {\n          this.parseError = true;\n          return false;\n        }\n        const host = parseHost(this.buffer, isNotSpecial(this.url));\n        if (host === failure) {\n          return failure;\n        }\n        this.url.host = host;\n        this.buffer = "";\n        this.state = "path start";\n        if (this.stateOverride) {\n          return false;\n        }\n      } else {\n        if (c === p("[")) {\n          this.arrFlag = true;\n        } else if (c === p("]")) {\n          this.arrFlag = false;\n        }\n        this.buffer += cStr;\n      }\n      return true;\n    }, "parseHostName");\n    URLStateMachine.prototype["parse port"] = /* @__PURE__ */ __name(function parsePort(c, cStr) {\n      if (infra.isASCIIDigit(c)) {\n        this.buffer += cStr;\n      } else if (isNaN(c) || c === p("/") || c === p("?") || c === p("#") || isSpecial(this.url) && c === p("\\\\") || this.stateOverride) {\n        if (this.buffer !== "") {\n          const port = parseInt(this.buffer);\n          if (port > 2 ** 16 - 1) {\n            this.parseError = true;\n            return failure;\n          }\n          this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n          this.buffer = "";\n        }\n        if (this.stateOverride) {\n          return false;\n        }\n        this.state = "path start";\n        --this.pointer;\n      } else {\n        this.parseError = true;\n        return failure;\n      }\n      return true;\n    }, "parsePort");\n    var fileOtherwiseCodePoints = /* @__PURE__ */ new Set([p("/"), p("\\\\"), p("?"), p("#")]);\n    function startsWithWindowsDriveLetter(input, pointer) {\n      const length = input.length - pointer;\n      return length >= 2 && isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) && (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n    }\n    __name(startsWithWindowsDriveLetter, "startsWithWindowsDriveLetter");\n    URLStateMachine.prototype["parse file"] = /* @__PURE__ */ __name(function parseFile(c) {\n      this.url.scheme = "file";\n      this.url.host = "";\n      if (c === p("/") || c === p("\\\\")) {\n        if (c === p("\\\\")) {\n          this.parseError = true;\n        }\n        this.state = "file slash";\n      } else if (this.base !== null && this.base.scheme === "file") {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        this.url.query = this.base.query;\n        if (c === p("?")) {\n          this.url.query = "";\n          this.state = "query";\n        } else if (c === p("#")) {\n          this.url.fragment = "";\n          this.state = "fragment";\n        } else if (!isNaN(c)) {\n          this.url.query = null;\n          if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n            shortenPath(this.url);\n          } else {\n            this.parseError = true;\n            this.url.path = [];\n          }\n          this.state = "path";\n          --this.pointer;\n        }\n      } else {\n        this.state = "path";\n        --this.pointer;\n      }\n      return true;\n    }, "parseFile");\n    URLStateMachine.prototype["parse file slash"] = /* @__PURE__ */ __name(function parseFileSlash(c) {\n      if (c === p("/") || c === p("\\\\")) {\n        if (c === p("\\\\")) {\n          this.parseError = true;\n        }\n        this.state = "file host";\n      } else {\n        if (this.base !== null && this.base.scheme === "file") {\n          if (!startsWithWindowsDriveLetter(this.input, this.pointer) && isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n            this.url.path.push(this.base.path[0]);\n          }\n          this.url.host = this.base.host;\n        }\n        this.state = "path";\n        --this.pointer;\n      }\n      return true;\n    }, "parseFileSlash");\n    URLStateMachine.prototype["parse file host"] = /* @__PURE__ */ __name(function parseFileHost(c, cStr) {\n      if (isNaN(c) || c === p("/") || c === p("\\\\") || c === p("?") || c === p("#")) {\n        --this.pointer;\n        if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n          this.parseError = true;\n          this.state = "path";\n        } else if (this.buffer === "") {\n          this.url.host = "";\n          if (this.stateOverride) {\n            return false;\n          }\n          this.state = "path start";\n        } else {\n          let host = parseHost(this.buffer, isNotSpecial(this.url));\n          if (host === failure) {\n            return failure;\n          }\n          if (host === "localhost") {\n            host = "";\n          }\n          this.url.host = host;\n          if (this.stateOverride) {\n            return false;\n          }\n          this.buffer = "";\n          this.state = "path start";\n        }\n      } else {\n        this.buffer += cStr;\n      }\n      return true;\n    }, "parseFileHost");\n    URLStateMachine.prototype["parse path start"] = /* @__PURE__ */ __name(function parsePathStart(c) {\n      if (isSpecial(this.url)) {\n        if (c === p("\\\\")) {\n          this.parseError = true;\n        }\n        this.state = "path";\n        if (c !== p("/") && c !== p("\\\\")) {\n          --this.pointer;\n        }\n      } else if (!this.stateOverride && c === p("?")) {\n        this.url.query = "";\n        this.state = "query";\n      } else if (!this.stateOverride && c === p("#")) {\n        this.url.fragment = "";\n        this.state = "fragment";\n      } else if (c !== void 0) {\n        this.state = "path";\n        if (c !== p("/")) {\n          --this.pointer;\n        }\n      } else if (this.stateOverride && this.url.host === null) {\n        this.url.path.push("");\n      }\n      return true;\n    }, "parsePathStart");\n    URLStateMachine.prototype["parse path"] = /* @__PURE__ */ __name(function parsePath(c) {\n      if (isNaN(c) || c === p("/") || isSpecial(this.url) && c === p("\\\\") || !this.stateOverride && (c === p("?") || c === p("#"))) {\n        if (isSpecial(this.url) && c === p("\\\\")) {\n          this.parseError = true;\n        }\n        if (isDoubleDot(this.buffer)) {\n          shortenPath(this.url);\n          if (c !== p("/") && !(isSpecial(this.url) && c === p("\\\\"))) {\n            this.url.path.push("");\n          }\n        } else if (isSingleDot(this.buffer) && c !== p("/") && !(isSpecial(this.url) && c === p("\\\\"))) {\n          this.url.path.push("");\n        } else if (!isSingleDot(this.buffer)) {\n          if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n            this.buffer = `${this.buffer[0]}:`;\n          }\n          this.url.path.push(this.buffer);\n        }\n        this.buffer = "";\n        if (c === p("?")) {\n          this.url.query = "";\n          this.state = "query";\n        }\n        if (c === p("#")) {\n          this.url.fragment = "";\n          this.state = "fragment";\n        }\n      } else {\n        if (c === p("%") && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n          this.parseError = true;\n        }\n        this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n      }\n      return true;\n    }, "parsePath");\n    URLStateMachine.prototype["parse opaque path"] = /* @__PURE__ */ __name(function parseOpaquePath(c) {\n      if (c === p("?")) {\n        this.url.query = "";\n        this.state = "query";\n      } else if (c === p("#")) {\n        this.url.fragment = "";\n        this.state = "fragment";\n      } else {\n        if (!isNaN(c) && c !== p("%")) {\n          this.parseError = true;\n        }\n        if (c === p("%") && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n          this.parseError = true;\n        }\n        if (!isNaN(c)) {\n          this.url.path += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n        }\n      }\n      return true;\n    }, "parseOpaquePath");\n    URLStateMachine.prototype["parse query"] = /* @__PURE__ */ __name(function parseQuery(c, cStr) {\n      if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {\n        this.encodingOverride = "utf-8";\n      }\n      if (!this.stateOverride && c === p("#") || isNaN(c)) {\n        const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n        this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n        this.buffer = "";\n        if (c === p("#")) {\n          this.url.fragment = "";\n          this.state = "fragment";\n        }\n      } else if (!isNaN(c)) {\n        if (c === p("%") && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n          this.parseError = true;\n        }\n        this.buffer += cStr;\n      }\n      return true;\n    }, "parseQuery");\n    URLStateMachine.prototype["parse fragment"] = /* @__PURE__ */ __name(function parseFragment(c) {\n      if (!isNaN(c)) {\n        if (c === p("%") && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n          this.parseError = true;\n        }\n        this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n      }\n      return true;\n    }, "parseFragment");\n    function serializeURL(url, excludeFragment) {\n      let output = `${url.scheme}:`;\n      if (url.host !== null) {\n        output += "//";\n        if (url.username !== "" || url.password !== "") {\n          output += url.username;\n          if (url.password !== "") {\n            output += `:${url.password}`;\n          }\n          output += "@";\n        }\n        output += serializeHost(url.host);\n        if (url.port !== null) {\n          output += `:${url.port}`;\n        }\n      }\n      if (url.host === null && !hasAnOpaquePath(url) && url.path.length > 1 && url.path[0] === "") {\n        output += "/.";\n      }\n      output += serializePath(url);\n      if (url.query !== null) {\n        output += `?${url.query}`;\n      }\n      if (!excludeFragment && url.fragment !== null) {\n        output += `#${url.fragment}`;\n      }\n      return output;\n    }\n    __name(serializeURL, "serializeURL");\n    function serializeOrigin(tuple) {\n      let result = `${tuple.scheme}://`;\n      result += serializeHost(tuple.host);\n      if (tuple.port !== null) {\n        result += `:${tuple.port}`;\n      }\n      return result;\n    }\n    __name(serializeOrigin, "serializeOrigin");\n    function serializePath(url) {\n      if (hasAnOpaquePath(url)) {\n        return url.path;\n      }\n      let output = "";\n      for (const segment of url.path) {\n        output += `/${segment}`;\n      }\n      return output;\n    }\n    __name(serializePath, "serializePath");\n    module2.exports.serializeURL = serializeURL;\n    module2.exports.serializePath = serializePath;\n    module2.exports.serializeURLOrigin = function(url) {\n      switch (url.scheme) {\n        case "blob":\n          try {\n            return module2.exports.serializeURLOrigin(module2.exports.parseURL(serializePath(url)));\n          } catch (e) {\n            return "null";\n          }\n        case "ftp":\n        case "http":\n        case "https":\n        case "ws":\n        case "wss":\n          return serializeOrigin({\n            scheme: url.scheme,\n            host: url.host,\n            port: url.port\n          });\n        case "file":\n          return "null";\n        default:\n          return "null";\n      }\n    };\n    module2.exports.basicURLParse = function(input, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n      if (usm.failure) {\n        return null;\n      }\n      return usm.url;\n    };\n    module2.exports.setTheUsername = function(url, username) {\n      url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n    };\n    module2.exports.setThePassword = function(url, password) {\n      url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n    };\n    module2.exports.serializeHost = serializeHost;\n    module2.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n    module2.exports.hasAnOpaquePath = hasAnOpaquePath;\n    module2.exports.serializeInteger = function(integer) {\n      return String(integer);\n    };\n    module2.exports.parseURL = function(input, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return module2.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/urlencoded.js\nvar require_urlencoded = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/urlencoded.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { utf8Encode, utf8DecodeWithoutBOM } = require_encoding();\n    var { percentDecodeBytes, utf8PercentEncodeString, isURLEncodedPercentEncode } = require_percent_encoding();\n    function p(char) {\n      return char.codePointAt(0);\n    }\n    __name(p, "p");\n    function parseUrlencoded(input) {\n      const sequences = strictlySplitByteSequence(input, p("&"));\n      const output = [];\n      for (const bytes of sequences) {\n        if (bytes.length === 0) {\n          continue;\n        }\n        let name, value;\n        const indexOfEqual = bytes.indexOf(p("="));\n        if (indexOfEqual >= 0) {\n          name = bytes.slice(0, indexOfEqual);\n          value = bytes.slice(indexOfEqual + 1);\n        } else {\n          name = bytes;\n          value = new Uint8Array(0);\n        }\n        name = replaceByteInByteSequence(name, 43, 32);\n        value = replaceByteInByteSequence(value, 43, 32);\n        const nameString = utf8DecodeWithoutBOM(percentDecodeBytes(name));\n        const valueString = utf8DecodeWithoutBOM(percentDecodeBytes(value));\n        output.push([nameString, valueString]);\n      }\n      return output;\n    }\n    __name(parseUrlencoded, "parseUrlencoded");\n    function parseUrlencodedString(input) {\n      return parseUrlencoded(utf8Encode(input));\n    }\n    __name(parseUrlencodedString, "parseUrlencodedString");\n    function serializeUrlencoded(tuples, encodingOverride = void 0) {\n      let encoding = "utf-8";\n      if (encodingOverride !== void 0) {\n        encoding = encodingOverride;\n      }\n      let output = "";\n      for (const [i, tuple] of tuples.entries()) {\n        const name = utf8PercentEncodeString(tuple[0], isURLEncodedPercentEncode, true);\n        let value = tuple[1];\n        if (tuple.length > 2 && tuple[2] !== void 0) {\n          if (tuple[2] === "hidden" && name === "_charset_") {\n            value = encoding;\n          } else if (tuple[2] === "file") {\n            value = value.name;\n          }\n        }\n        value = utf8PercentEncodeString(value, isURLEncodedPercentEncode, true);\n        if (i !== 0) {\n          output += "&";\n        }\n        output += `${name}=${value}`;\n      }\n      return output;\n    }\n    __name(serializeUrlencoded, "serializeUrlencoded");\n    function strictlySplitByteSequence(buf, cp) {\n      const list = [];\n      let last = 0;\n      let i = buf.indexOf(cp);\n      while (i >= 0) {\n        list.push(buf.slice(last, i));\n        last = i + 1;\n        i = buf.indexOf(cp, last);\n      }\n      if (last !== buf.length) {\n        list.push(buf.slice(last));\n      }\n      return list;\n    }\n    __name(strictlySplitByteSequence, "strictlySplitByteSequence");\n    function replaceByteInByteSequence(buf, from, to) {\n      let i = buf.indexOf(from);\n      while (i >= 0) {\n        buf[i] = to;\n        i = buf.indexOf(from, i + 1);\n      }\n      return buf;\n    }\n    __name(replaceByteInByteSequence, "replaceByteInByteSequence");\n    module2.exports = {\n      parseUrlencodedString,\n      serializeUrlencoded\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/Function.js\nvar require_Function = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/Function.js"(exports) {\n    "use strict";\n    init_define_process();\n    var conversions = require_lib();\n    var utils = require_utils();\n    exports.convert = (globalObject, value, { context = "The provided value" } = {}) => {\n      if (typeof value !== "function") {\n        throw new globalObject.TypeError(context + " is not a function");\n      }\n      function invokeTheCallbackFunction(...args) {\n        const thisArg = utils.tryWrapperForImpl(this);\n        let callResult;\n        for (let i = 0; i < args.length; i++) {\n          args[i] = utils.tryWrapperForImpl(args[i]);\n        }\n        callResult = Reflect.apply(value, thisArg, args);\n        callResult = conversions["any"](callResult, { context, globals: globalObject });\n        return callResult;\n      }\n      __name(invokeTheCallbackFunction, "invokeTheCallbackFunction");\n      invokeTheCallbackFunction.construct = (...args) => {\n        for (let i = 0; i < args.length; i++) {\n          args[i] = utils.tryWrapperForImpl(args[i]);\n        }\n        let callResult = Reflect.construct(value, args);\n        callResult = conversions["any"](callResult, { context, globals: globalObject });\n        return callResult;\n      };\n      invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n      invokeTheCallbackFunction.objectReference = value;\n      return invokeTheCallbackFunction;\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/URLSearchParams-impl.js\nvar require_URLSearchParams_impl = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/URLSearchParams-impl.js"(exports) {\n    "use strict";\n    init_define_process();\n    var urlencoded = require_urlencoded();\n    exports.implementation = /* @__PURE__ */ __name(class URLSearchParamsImpl {\n      constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n        let init = constructorArgs[0];\n        this._list = [];\n        this._url = null;\n        if (!doNotStripQMark && typeof init === "string" && init[0] === "?") {\n          init = init.slice(1);\n        }\n        if (Array.isArray(init)) {\n          for (const pair of init) {\n            if (pair.length !== 2) {\n              throw new TypeError("Failed to construct \'URLSearchParams\': parameter 1 sequence\'s element does not contain exactly two elements.");\n            }\n            this._list.push([pair[0], pair[1]]);\n          }\n        } else if (typeof init === "object" && Object.getPrototypeOf(init) === null) {\n          for (const name of Object.keys(init)) {\n            const value = init[name];\n            this._list.push([name, value]);\n          }\n        } else {\n          this._list = urlencoded.parseUrlencodedString(init);\n        }\n      }\n      _updateSteps() {\n        if (this._url !== null) {\n          let serializedQuery = urlencoded.serializeUrlencoded(this._list);\n          if (serializedQuery === "") {\n            serializedQuery = null;\n          }\n          this._url._url.query = serializedQuery;\n          if (serializedQuery === null) {\n            this._url._potentiallyStripTrailingSpacesFromAnOpaquePath();\n          }\n        }\n      }\n      append(name, value) {\n        this._list.push([name, value]);\n        this._updateSteps();\n      }\n      delete(name) {\n        let i = 0;\n        while (i < this._list.length) {\n          if (this._list[i][0] === name) {\n            this._list.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n        this._updateSteps();\n      }\n      get(name) {\n        for (const tuple of this._list) {\n          if (tuple[0] === name) {\n            return tuple[1];\n          }\n        }\n        return null;\n      }\n      getAll(name) {\n        const output = [];\n        for (const tuple of this._list) {\n          if (tuple[0] === name) {\n            output.push(tuple[1]);\n          }\n        }\n        return output;\n      }\n      has(name) {\n        for (const tuple of this._list) {\n          if (tuple[0] === name) {\n            return true;\n          }\n        }\n        return false;\n      }\n      set(name, value) {\n        let found = false;\n        let i = 0;\n        while (i < this._list.length) {\n          if (this._list[i][0] === name) {\n            if (found) {\n              this._list.splice(i, 1);\n            } else {\n              found = true;\n              this._list[i][1] = value;\n              i++;\n            }\n          } else {\n            i++;\n          }\n        }\n        if (!found) {\n          this._list.push([name, value]);\n        }\n        this._updateSteps();\n      }\n      sort() {\n        this._list.sort((a, b) => {\n          if (a[0] < b[0]) {\n            return -1;\n          }\n          if (a[0] > b[0]) {\n            return 1;\n          }\n          return 0;\n        });\n        this._updateSteps();\n      }\n      [Symbol.iterator]() {\n        return this._list[Symbol.iterator]();\n      }\n      toString() {\n        return urlencoded.serializeUrlencoded(this._list);\n      }\n    }, "URLSearchParamsImpl");\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/URLSearchParams.js\nvar require_URLSearchParams = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/URLSearchParams.js"(exports) {\n    "use strict";\n    init_define_process();\n    var conversions = require_lib();\n    var utils = require_utils();\n    var Function2 = require_Function();\n    var newObjectInRealm = utils.newObjectInRealm;\n    var implSymbol = utils.implSymbol;\n    var ctorRegistrySymbol = utils.ctorRegistrySymbol;\n    var interfaceName = "URLSearchParams";\n    exports.is = (value) => {\n      return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n    };\n    exports.isImpl = (value) => {\n      return utils.isObject(value) && value instanceof Impl.implementation;\n    };\n    exports.convert = (globalObject, value, { context = "The provided value" } = {}) => {\n      if (exports.is(value)) {\n        return utils.implForWrapper(value);\n      }\n      throw new globalObject.TypeError(`${context} is not of type \'URLSearchParams\'.`);\n    };\n    exports.createDefaultIterator = (globalObject, target, kind) => {\n      const ctorRegistry = globalObject[ctorRegistrySymbol];\n      const iteratorPrototype = ctorRegistry["URLSearchParams Iterator"];\n      const iterator = Object.create(iteratorPrototype);\n      Object.defineProperty(iterator, utils.iterInternalSymbol, {\n        value: { target, kind, index: 0 },\n        configurable: true\n      });\n      return iterator;\n    };\n    function makeWrapper(globalObject, newTarget) {\n      let proto;\n      if (newTarget !== void 0) {\n        proto = newTarget.prototype;\n      }\n      if (!utils.isObject(proto)) {\n        proto = globalObject[ctorRegistrySymbol]["URLSearchParams"].prototype;\n      }\n      return Object.create(proto);\n    }\n    __name(makeWrapper, "makeWrapper");\n    exports.create = (globalObject, constructorArgs, privateData) => {\n      const wrapper = makeWrapper(globalObject);\n      return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n    };\n    exports.createImpl = (globalObject, constructorArgs, privateData) => {\n      const wrapper = exports.create(globalObject, constructorArgs, privateData);\n      return utils.implForWrapper(wrapper);\n    };\n    exports._internalSetup = (wrapper, globalObject) => {\n    };\n    exports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n      privateData.wrapper = wrapper;\n      exports._internalSetup(wrapper, globalObject);\n      Object.defineProperty(wrapper, implSymbol, {\n        value: new Impl.implementation(globalObject, constructorArgs, privateData),\n        configurable: true\n      });\n      wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n      if (Impl.init) {\n        Impl.init(wrapper[implSymbol]);\n      }\n      return wrapper;\n    };\n    exports.new = (globalObject, newTarget) => {\n      const wrapper = makeWrapper(globalObject, newTarget);\n      exports._internalSetup(wrapper, globalObject);\n      Object.defineProperty(wrapper, implSymbol, {\n        value: Object.create(Impl.implementation.prototype),\n        configurable: true\n      });\n      wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n      if (Impl.init) {\n        Impl.init(wrapper[implSymbol]);\n      }\n      return wrapper[implSymbol];\n    };\n    var exposed = /* @__PURE__ */ new Set(["Window", "Worker"]);\n    exports.install = (globalObject, globalNames) => {\n      if (!globalNames.some((globalName) => exposed.has(globalName))) {\n        return;\n      }\n      const ctorRegistry = utils.initCtorRegistry(globalObject);\n      class URLSearchParams2 {\n        constructor() {\n          const args = [];\n          {\n            let curArg = arguments[0];\n            if (curArg !== void 0) {\n              if (utils.isObject(curArg)) {\n                if (curArg[Symbol.iterator] !== void 0) {\n                  if (!utils.isObject(curArg)) {\n                    throw new globalObject.TypeError(\n                      "Failed to construct \'URLSearchParams\': parameter 1 sequence is not an iterable object."\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = curArg;\n                    for (let nextItem of tmp) {\n                      if (!utils.isObject(nextItem)) {\n                        throw new globalObject.TypeError(\n                          "Failed to construct \'URLSearchParams\': parameter 1 sequence\'s element is not an iterable object."\n                        );\n                      } else {\n                        const V2 = [];\n                        const tmp2 = nextItem;\n                        for (let nextItem2 of tmp2) {\n                          nextItem2 = conversions["USVString"](nextItem2, {\n                            context: "Failed to construct \'URLSearchParams\': parameter 1 sequence\'s element\'s element",\n                            globals: globalObject\n                          });\n                          V2.push(nextItem2);\n                        }\n                        nextItem = V2;\n                      }\n                      V.push(nextItem);\n                    }\n                    curArg = V;\n                  }\n                } else {\n                  if (!utils.isObject(curArg)) {\n                    throw new globalObject.TypeError(\n                      "Failed to construct \'URLSearchParams\': parameter 1 record is not an object."\n                    );\n                  } else {\n                    const result = /* @__PURE__ */ Object.create(null);\n                    for (const key of Reflect.ownKeys(curArg)) {\n                      const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                      if (desc && desc.enumerable) {\n                        let typedKey = key;\n                        typedKey = conversions["USVString"](typedKey, {\n                          context: "Failed to construct \'URLSearchParams\': parameter 1 record\'s key",\n                          globals: globalObject\n                        });\n                        let typedValue = curArg[key];\n                        typedValue = conversions["USVString"](typedValue, {\n                          context: "Failed to construct \'URLSearchParams\': parameter 1 record\'s value",\n                          globals: globalObject\n                        });\n                        result[typedKey] = typedValue;\n                      }\n                    }\n                    curArg = result;\n                  }\n                }\n              } else {\n                curArg = conversions["USVString"](curArg, {\n                  context: "Failed to construct \'URLSearchParams\': parameter 1",\n                  globals: globalObject\n                });\n              }\n            } else {\n              curArg = "";\n            }\n            args.push(curArg);\n          }\n          return exports.setup(Object.create(new.target.prototype), globalObject, args);\n        }\n        append(name, value) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError(\n              "\'append\' called on an object that is not a valid instance of URLSearchParams."\n            );\n          }\n          if (arguments.length < 2) {\n            throw new globalObject.TypeError(\n              `Failed to execute \'append\' on \'URLSearchParams\': 2 arguments required, but only ${arguments.length} present.`\n            );\n          }\n          const args = [];\n          {\n            let curArg = arguments[0];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to execute \'append\' on \'URLSearchParams\': parameter 1",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to execute \'append\' on \'URLSearchParams\': parameter 2",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          return utils.tryWrapperForImpl(esValue[implSymbol].append(...args));\n        }\n        delete(name) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError(\n              "\'delete\' called on an object that is not a valid instance of URLSearchParams."\n            );\n          }\n          if (arguments.length < 1) {\n            throw new globalObject.TypeError(\n              `Failed to execute \'delete\' on \'URLSearchParams\': 1 argument required, but only ${arguments.length} present.`\n            );\n          }\n          const args = [];\n          {\n            let curArg = arguments[0];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to execute \'delete\' on \'URLSearchParams\': parameter 1",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          return utils.tryWrapperForImpl(esValue[implSymbol].delete(...args));\n        }\n        get(name) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get\' called on an object that is not a valid instance of URLSearchParams.");\n          }\n          if (arguments.length < 1) {\n            throw new globalObject.TypeError(\n              `Failed to execute \'get\' on \'URLSearchParams\': 1 argument required, but only ${arguments.length} present.`\n            );\n          }\n          const args = [];\n          {\n            let curArg = arguments[0];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to execute \'get\' on \'URLSearchParams\': parameter 1",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          return esValue[implSymbol].get(...args);\n        }\n        getAll(name) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError(\n              "\'getAll\' called on an object that is not a valid instance of URLSearchParams."\n            );\n          }\n          if (arguments.length < 1) {\n            throw new globalObject.TypeError(\n              `Failed to execute \'getAll\' on \'URLSearchParams\': 1 argument required, but only ${arguments.length} present.`\n            );\n          }\n          const args = [];\n          {\n            let curArg = arguments[0];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to execute \'getAll\' on \'URLSearchParams\': parameter 1",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n        }\n        has(name) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'has\' called on an object that is not a valid instance of URLSearchParams.");\n          }\n          if (arguments.length < 1) {\n            throw new globalObject.TypeError(\n              `Failed to execute \'has\' on \'URLSearchParams\': 1 argument required, but only ${arguments.length} present.`\n            );\n          }\n          const args = [];\n          {\n            let curArg = arguments[0];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to execute \'has\' on \'URLSearchParams\': parameter 1",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          return esValue[implSymbol].has(...args);\n        }\n        set(name, value) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set\' called on an object that is not a valid instance of URLSearchParams.");\n          }\n          if (arguments.length < 2) {\n            throw new globalObject.TypeError(\n              `Failed to execute \'set\' on \'URLSearchParams\': 2 arguments required, but only ${arguments.length} present.`\n            );\n          }\n          const args = [];\n          {\n            let curArg = arguments[0];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to execute \'set\' on \'URLSearchParams\': parameter 1",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to execute \'set\' on \'URLSearchParams\': parameter 2",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          return utils.tryWrapperForImpl(esValue[implSymbol].set(...args));\n        }\n        sort() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'sort\' called on an object that is not a valid instance of URLSearchParams.");\n          }\n          return utils.tryWrapperForImpl(esValue[implSymbol].sort());\n        }\n        toString() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError(\n              "\'toString\' called on an object that is not a valid instance of URLSearchParams."\n            );\n          }\n          return esValue[implSymbol].toString();\n        }\n        keys() {\n          if (!exports.is(this)) {\n            throw new globalObject.TypeError("\'keys\' called on an object that is not a valid instance of URLSearchParams.");\n          }\n          return exports.createDefaultIterator(globalObject, this, "key");\n        }\n        values() {\n          if (!exports.is(this)) {\n            throw new globalObject.TypeError(\n              "\'values\' called on an object that is not a valid instance of URLSearchParams."\n            );\n          }\n          return exports.createDefaultIterator(globalObject, this, "value");\n        }\n        entries() {\n          if (!exports.is(this)) {\n            throw new globalObject.TypeError(\n              "\'entries\' called on an object that is not a valid instance of URLSearchParams."\n            );\n          }\n          return exports.createDefaultIterator(globalObject, this, "key+value");\n        }\n        forEach(callback) {\n          if (!exports.is(this)) {\n            throw new globalObject.TypeError(\n              "\'forEach\' called on an object that is not a valid instance of URLSearchParams."\n            );\n          }\n          if (arguments.length < 1) {\n            throw new globalObject.TypeError(\n              "Failed to execute \'forEach\' on \'iterable\': 1 argument required, but only 0 present."\n            );\n          }\n          callback = Function2.convert(globalObject, callback, {\n            context: "Failed to execute \'forEach\' on \'iterable\': The callback provided as parameter 1"\n          });\n          const thisArg = arguments[1];\n          let pairs = Array.from(this[implSymbol]);\n          let i = 0;\n          while (i < pairs.length) {\n            const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n            callback.call(thisArg, value, key, this);\n            pairs = Array.from(this[implSymbol]);\n            i++;\n          }\n        }\n      }\n      __name(URLSearchParams2, "URLSearchParams");\n      Object.defineProperties(URLSearchParams2.prototype, {\n        append: { enumerable: true },\n        delete: { enumerable: true },\n        get: { enumerable: true },\n        getAll: { enumerable: true },\n        has: { enumerable: true },\n        set: { enumerable: true },\n        sort: { enumerable: true },\n        toString: { enumerable: true },\n        keys: { enumerable: true },\n        values: { enumerable: true },\n        entries: { enumerable: true },\n        forEach: { enumerable: true },\n        [Symbol.toStringTag]: { value: "URLSearchParams", configurable: true },\n        [Symbol.iterator]: { value: URLSearchParams2.prototype.entries, configurable: true, writable: true }\n      });\n      ctorRegistry[interfaceName] = URLSearchParams2;\n      ctorRegistry["URLSearchParams Iterator"] = Object.create(ctorRegistry["%IteratorPrototype%"], {\n        [Symbol.toStringTag]: {\n          configurable: true,\n          value: "URLSearchParams Iterator"\n        }\n      });\n      utils.define(ctorRegistry["URLSearchParams Iterator"], {\n        next() {\n          const internal = this && this[utils.iterInternalSymbol];\n          if (!internal) {\n            throw new globalObject.TypeError("next() called on a value that is not a URLSearchParams iterator object");\n          }\n          const { target, kind, index } = internal;\n          const values = Array.from(target[implSymbol]);\n          const len = values.length;\n          if (index >= len) {\n            return newObjectInRealm(globalObject, { value: void 0, done: true });\n          }\n          const pair = values[index];\n          internal.index = index + 1;\n          return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n        }\n      });\n      Object.defineProperty(globalObject, interfaceName, {\n        configurable: true,\n        writable: true,\n        value: URLSearchParams2\n      });\n    };\n    var Impl = require_URLSearchParams_impl();\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/URL-impl.js\nvar require_URL_impl = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/URL-impl.js"(exports) {\n    "use strict";\n    init_define_process();\n    var usm = require_url_state_machine();\n    var urlencoded = require_urlencoded();\n    var URLSearchParams2 = require_URLSearchParams();\n    exports.implementation = /* @__PURE__ */ __name(class URLImpl {\n      constructor(globalObject, constructorArgs) {\n        const url = constructorArgs[0];\n        const base2 = constructorArgs[1];\n        let parsedBase = null;\n        if (base2 !== void 0) {\n          parsedBase = usm.basicURLParse(base2);\n          if (parsedBase === null) {\n            throw new TypeError(`Invalid base URL: ${base2}`);\n          }\n        }\n        const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n        if (parsedURL === null) {\n          throw new TypeError(`Invalid URL: ${url}`);\n        }\n        const query = parsedURL.query !== null ? parsedURL.query : "";\n        this._url = parsedURL;\n        this._query = URLSearchParams2.createImpl(globalObject, [query], { doNotStripQMark: true });\n        this._query._url = this;\n      }\n      get href() {\n        return usm.serializeURL(this._url);\n      }\n      set href(v) {\n        const parsedURL = usm.basicURLParse(v);\n        if (parsedURL === null) {\n          throw new TypeError(`Invalid URL: ${v}`);\n        }\n        this._url = parsedURL;\n        this._query._list.splice(0);\n        const { query } = parsedURL;\n        if (query !== null) {\n          this._query._list = urlencoded.parseUrlencodedString(query);\n        }\n      }\n      get origin() {\n        return usm.serializeURLOrigin(this._url);\n      }\n      get protocol() {\n        return `${this._url.scheme}:`;\n      }\n      set protocol(v) {\n        usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: "scheme start" });\n      }\n      get username() {\n        return this._url.username;\n      }\n      set username(v) {\n        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n          return;\n        }\n        usm.setTheUsername(this._url, v);\n      }\n      get password() {\n        return this._url.password;\n      }\n      set password(v) {\n        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n          return;\n        }\n        usm.setThePassword(this._url, v);\n      }\n      get host() {\n        const url = this._url;\n        if (url.host === null) {\n          return "";\n        }\n        if (url.port === null) {\n          return usm.serializeHost(url.host);\n        }\n        return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n      }\n      set host(v) {\n        if (usm.hasAnOpaquePath(this._url)) {\n          return;\n        }\n        usm.basicURLParse(v, { url: this._url, stateOverride: "host" });\n      }\n      get hostname() {\n        if (this._url.host === null) {\n          return "";\n        }\n        return usm.serializeHost(this._url.host);\n      }\n      set hostname(v) {\n        if (usm.hasAnOpaquePath(this._url)) {\n          return;\n        }\n        usm.basicURLParse(v, { url: this._url, stateOverride: "hostname" });\n      }\n      get port() {\n        if (this._url.port === null) {\n          return "";\n        }\n        return usm.serializeInteger(this._url.port);\n      }\n      set port(v) {\n        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n          return;\n        }\n        if (v === "") {\n          this._url.port = null;\n        } else {\n          usm.basicURLParse(v, { url: this._url, stateOverride: "port" });\n        }\n      }\n      get pathname() {\n        return usm.serializePath(this._url);\n      }\n      set pathname(v) {\n        if (usm.hasAnOpaquePath(this._url)) {\n          return;\n        }\n        this._url.path = [];\n        usm.basicURLParse(v, { url: this._url, stateOverride: "path start" });\n      }\n      get search() {\n        if (this._url.query === null || this._url.query === "") {\n          return "";\n        }\n        return `?${this._url.query}`;\n      }\n      set search(v) {\n        const url = this._url;\n        if (v === "") {\n          url.query = null;\n          this._query._list = [];\n          this._potentiallyStripTrailingSpacesFromAnOpaquePath();\n          return;\n        }\n        const input = v[0] === "?" ? v.substring(1) : v;\n        url.query = "";\n        usm.basicURLParse(input, { url, stateOverride: "query" });\n        this._query._list = urlencoded.parseUrlencodedString(input);\n      }\n      get searchParams() {\n        return this._query;\n      }\n      get hash() {\n        if (this._url.fragment === null || this._url.fragment === "") {\n          return "";\n        }\n        return `#${this._url.fragment}`;\n      }\n      set hash(v) {\n        if (v === "") {\n          this._url.fragment = null;\n          this._potentiallyStripTrailingSpacesFromAnOpaquePath();\n          return;\n        }\n        const input = v[0] === "#" ? v.substring(1) : v;\n        this._url.fragment = "";\n        usm.basicURLParse(input, { url: this._url, stateOverride: "fragment" });\n      }\n      toJSON() {\n        return this.href;\n      }\n      _potentiallyStripTrailingSpacesFromAnOpaquePath() {\n        if (!usm.hasAnOpaquePath(this._url)) {\n          return;\n        }\n        if (this._url.fragment !== null) {\n          return;\n        }\n        if (this._url.query !== null) {\n          return;\n        }\n        this._url.path = this._url.path.replace(/\\u0020+$/u, "");\n      }\n    }, "URLImpl");\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/URL.js\nvar require_URL = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/lib/URL.js"(exports) {\n    "use strict";\n    init_define_process();\n    var conversions = require_lib();\n    var utils = require_utils();\n    var implSymbol = utils.implSymbol;\n    var ctorRegistrySymbol = utils.ctorRegistrySymbol;\n    var interfaceName = "URL";\n    exports.is = (value) => {\n      return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n    };\n    exports.isImpl = (value) => {\n      return utils.isObject(value) && value instanceof Impl.implementation;\n    };\n    exports.convert = (globalObject, value, { context = "The provided value" } = {}) => {\n      if (exports.is(value)) {\n        return utils.implForWrapper(value);\n      }\n      throw new globalObject.TypeError(`${context} is not of type \'URL\'.`);\n    };\n    function makeWrapper(globalObject, newTarget) {\n      let proto;\n      if (newTarget !== void 0) {\n        proto = newTarget.prototype;\n      }\n      if (!utils.isObject(proto)) {\n        proto = globalObject[ctorRegistrySymbol]["URL"].prototype;\n      }\n      return Object.create(proto);\n    }\n    __name(makeWrapper, "makeWrapper");\n    exports.create = (globalObject, constructorArgs, privateData) => {\n      const wrapper = makeWrapper(globalObject);\n      return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n    };\n    exports.createImpl = (globalObject, constructorArgs, privateData) => {\n      const wrapper = exports.create(globalObject, constructorArgs, privateData);\n      return utils.implForWrapper(wrapper);\n    };\n    exports._internalSetup = (wrapper, globalObject) => {\n    };\n    exports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n      privateData.wrapper = wrapper;\n      exports._internalSetup(wrapper, globalObject);\n      Object.defineProperty(wrapper, implSymbol, {\n        value: new Impl.implementation(globalObject, constructorArgs, privateData),\n        configurable: true\n      });\n      wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n      if (Impl.init) {\n        Impl.init(wrapper[implSymbol]);\n      }\n      return wrapper;\n    };\n    exports.new = (globalObject, newTarget) => {\n      const wrapper = makeWrapper(globalObject, newTarget);\n      exports._internalSetup(wrapper, globalObject);\n      Object.defineProperty(wrapper, implSymbol, {\n        value: Object.create(Impl.implementation.prototype),\n        configurable: true\n      });\n      wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n      if (Impl.init) {\n        Impl.init(wrapper[implSymbol]);\n      }\n      return wrapper[implSymbol];\n    };\n    var exposed = /* @__PURE__ */ new Set(["Window", "Worker"]);\n    exports.install = (globalObject, globalNames) => {\n      if (!globalNames.some((globalName) => exposed.has(globalName))) {\n        return;\n      }\n      const ctorRegistry = utils.initCtorRegistry(globalObject);\n      class URL3 {\n        constructor(url) {\n          if (arguments.length < 1) {\n            throw new globalObject.TypeError(\n              `Failed to construct \'URL\': 1 argument required, but only ${arguments.length} present.`\n            );\n          }\n          const args = [];\n          {\n            let curArg = arguments[0];\n            curArg = conversions["USVString"](curArg, {\n              context: "Failed to construct \'URL\': parameter 1",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (curArg !== void 0) {\n              curArg = conversions["USVString"](curArg, {\n                context: "Failed to construct \'URL\': parameter 2",\n                globals: globalObject\n              });\n            }\n            args.push(curArg);\n          }\n          return exports.setup(Object.create(new.target.prototype), globalObject, args);\n        }\n        toJSON() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'toJSON\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol].toJSON();\n        }\n        get href() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get href\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["href"];\n        }\n        set href(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set href\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'href\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["href"] = V;\n        }\n        toString() {\n          const esValue = this;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'toString\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["href"];\n        }\n        get origin() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get origin\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["origin"];\n        }\n        get protocol() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get protocol\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["protocol"];\n        }\n        set protocol(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set protocol\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'protocol\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["protocol"] = V;\n        }\n        get username() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get username\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["username"];\n        }\n        set username(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set username\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'username\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["username"] = V;\n        }\n        get password() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get password\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["password"];\n        }\n        set password(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set password\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'password\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["password"] = V;\n        }\n        get host() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get host\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["host"];\n        }\n        set host(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set host\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'host\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["host"] = V;\n        }\n        get hostname() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get hostname\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["hostname"];\n        }\n        set hostname(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set hostname\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'hostname\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["hostname"] = V;\n        }\n        get port() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get port\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["port"];\n        }\n        set port(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set port\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'port\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["port"] = V;\n        }\n        get pathname() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get pathname\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["pathname"];\n        }\n        set pathname(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set pathname\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'pathname\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["pathname"] = V;\n        }\n        get search() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get search\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["search"];\n        }\n        set search(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set search\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'search\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["search"] = V;\n        }\n        get searchParams() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get searchParams\' called on an object that is not a valid instance of URL.");\n          }\n          return utils.getSameObject(this, "searchParams", () => {\n            return utils.tryWrapperForImpl(esValue[implSymbol]["searchParams"]);\n          });\n        }\n        get hash() {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'get hash\' called on an object that is not a valid instance of URL.");\n          }\n          return esValue[implSymbol]["hash"];\n        }\n        set hash(V) {\n          const esValue = this !== null && this !== void 0 ? this : globalObject;\n          if (!exports.is(esValue)) {\n            throw new globalObject.TypeError("\'set hash\' called on an object that is not a valid instance of URL.");\n          }\n          V = conversions["USVString"](V, {\n            context: "Failed to set the \'hash\' property on \'URL\': The provided value",\n            globals: globalObject\n          });\n          esValue[implSymbol]["hash"] = V;\n        }\n      }\n      __name(URL3, "URL");\n      Object.defineProperties(URL3.prototype, {\n        toJSON: { enumerable: true },\n        href: { enumerable: true },\n        toString: { enumerable: true },\n        origin: { enumerable: true },\n        protocol: { enumerable: true },\n        username: { enumerable: true },\n        password: { enumerable: true },\n        host: { enumerable: true },\n        hostname: { enumerable: true },\n        port: { enumerable: true },\n        pathname: { enumerable: true },\n        search: { enumerable: true },\n        searchParams: { enumerable: true },\n        hash: { enumerable: true },\n        [Symbol.toStringTag]: { value: "URL", configurable: true }\n      });\n      ctorRegistry[interfaceName] = URL3;\n      Object.defineProperty(globalObject, interfaceName, {\n        configurable: true,\n        writable: true,\n        value: URL3\n      });\n      if (globalNames.includes("Window")) {\n        Object.defineProperty(globalObject, "webkitURL", {\n          configurable: true,\n          writable: true,\n          value: URL3\n        });\n      }\n    };\n    var Impl = require_URL_impl();\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/webidl2js-wrapper.js\nvar require_webidl2js_wrapper = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/webidl2js-wrapper.js"(exports) {\n    "use strict";\n    init_define_process();\n    var URL3 = require_URL();\n    var URLSearchParams2 = require_URLSearchParams();\n    exports.URL = URL3;\n    exports.URLSearchParams = URLSearchParams2;\n  }\n});\n\n// ../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/index.js\nvar require_whatwg_url = __commonJS({\n  "../../node_modules/.pnpm/whatwg-url@12.0.1/node_modules/whatwg-url/index.js"(exports) {\n    "use strict";\n    init_define_process();\n    var { URL: URL3, URLSearchParams: URLSearchParams2 } = require_webidl2js_wrapper();\n    var urlStateMachine = require_url_state_machine();\n    var percentEncoding = require_percent_encoding();\n    var sharedGlobalObject = { Array, Object, Promise, String, TypeError };\n    URL3.install(sharedGlobalObject, ["Window"]);\n    URLSearchParams2.install(sharedGlobalObject, ["Window"]);\n    exports.URL = sharedGlobalObject.URL;\n    exports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n    exports.parseURL = urlStateMachine.parseURL;\n    exports.basicURLParse = urlStateMachine.basicURLParse;\n    exports.serializeURL = urlStateMachine.serializeURL;\n    exports.serializePath = urlStateMachine.serializePath;\n    exports.serializeHost = urlStateMachine.serializeHost;\n    exports.serializeInteger = urlStateMachine.serializeInteger;\n    exports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\n    exports.setTheUsername = urlStateMachine.setTheUsername;\n    exports.setThePassword = urlStateMachine.setThePassword;\n    exports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\n    exports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;\n    exports.percentDecodeString = percentEncoding.percentDecodeString;\n    exports.percentDecodeBytes = percentEncoding.percentDecodeBytes;\n  }\n});\n\n// src/primitives/url.js\nvar url_exports = {};\n__export(url_exports, {\n  URL: () => import_whatwg_url.URL,\n  URLPattern: () => URLPattern,\n  URLSearchParams: () => import_whatwg_url.URLSearchParams\n});\nmodule.exports = __toCommonJS(url_exports);\ninit_define_process();\nvar import_whatwg_url = __toESM(require_whatwg_url());\n\n// ../../node_modules/.pnpm/urlpattern-polyfill@8.0.2/node_modules/urlpattern-polyfill/index.js\ninit_define_process();\n\n// ../../node_modules/.pnpm/urlpattern-polyfill@8.0.2/node_modules/urlpattern-polyfill/dist/urlpattern.js\ninit_define_process();\nvar Part = /* @__PURE__ */ __name(class {\n  constructor(type, name, prefix, value, suffix, modifier) {\n    this.type = 3;\n    this.name = "";\n    this.prefix = "";\n    this.value = "";\n    this.suffix = "";\n    this.modifier = 3;\n    this.type = type;\n    this.name = name;\n    this.prefix = prefix;\n    this.value = value;\n    this.suffix = suffix;\n    this.modifier = modifier;\n  }\n  hasCustomName() {\n    return this.name !== "" && typeof this.name !== "number";\n  }\n}, "Part");\nvar regexIdentifierStart = /[$_\\p{ID_Start}]/u;\nvar regexIdentifierPart = /[$_\\u200C\\u200D\\p{ID_Continue}]/u;\nvar kFullWildcardRegex = ".*";\nfunction isASCII(str, extended) {\n  return (extended ? /^[\\x00-\\xFF]*$/ : /^[\\x00-\\x7F]*$/).test(str);\n}\n__name(isASCII, "isASCII");\nfunction lexer(str, lenient = false) {\n  const tokens = [];\n  let i = 0;\n  while (i < str.length) {\n    const char = str[i];\n    const ErrorOrInvalid = /* @__PURE__ */ __name(function(msg) {\n      if (!lenient)\n        throw new TypeError(msg);\n      tokens.push({ type: "INVALID_CHAR", index: i, value: str[i++] });\n    }, "ErrorOrInvalid");\n    if (char === "*") {\n      tokens.push({ type: "ASTERISK", index: i, value: str[i++] });\n      continue;\n    }\n    if (char === "+" || char === "?") {\n      tokens.push({ type: "OTHER_MODIFIER", index: i, value: str[i++] });\n      continue;\n    }\n    if (char === "\\\\") {\n      tokens.push({ type: "ESCAPED_CHAR", index: i++, value: str[i++] });\n      continue;\n    }\n    if (char === "{") {\n      tokens.push({ type: "OPEN", index: i, value: str[i++] });\n      continue;\n    }\n    if (char === "}") {\n      tokens.push({ type: "CLOSE", index: i, value: str[i++] });\n      continue;\n    }\n    if (char === ":") {\n      let name = "";\n      let j = i + 1;\n      while (j < str.length) {\n        const code = str.substr(j, 1);\n        if (j === i + 1 && regexIdentifierStart.test(code) || j !== i + 1 && regexIdentifierPart.test(code)) {\n          name += str[j++];\n          continue;\n        }\n        break;\n      }\n      if (!name) {\n        ErrorOrInvalid(`Missing parameter name at ${i}`);\n        continue;\n      }\n      tokens.push({ type: "NAME", index: i, value: name });\n      i = j;\n      continue;\n    }\n    if (char === "(") {\n      let count = 1;\n      let pattern = "";\n      let j = i + 1;\n      let error2 = false;\n      if (str[j] === "?") {\n        ErrorOrInvalid(`Pattern cannot start with "?" at ${j}`);\n        continue;\n      }\n      while (j < str.length) {\n        if (!isASCII(str[j], false)) {\n          ErrorOrInvalid(`Invalid character \'${str[j]}\' at ${j}.`);\n          error2 = true;\n          break;\n        }\n        if (str[j] === "\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n        if (str[j] === ")") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === "(") {\n          count++;\n          if (str[j + 1] !== "?") {\n            ErrorOrInvalid(`Capturing groups are not allowed at ${j}`);\n            error2 = true;\n            break;\n          }\n        }\n        pattern += str[j++];\n      }\n      if (error2) {\n        continue;\n      }\n      if (count) {\n        ErrorOrInvalid(`Unbalanced pattern at ${i}`);\n        continue;\n      }\n      if (!pattern) {\n        ErrorOrInvalid(`Missing pattern at ${i}`);\n        continue;\n      }\n      tokens.push({ type: "REGEX", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n    tokens.push({ type: "CHAR", index: i, value: str[i++] });\n  }\n  tokens.push({ type: "END", index: i, value: "" });\n  return tokens;\n}\n__name(lexer, "lexer");\nfunction parse(str, options = {}) {\n  const tokens = lexer(str);\n  options.delimiter ?? (options.delimiter = "/#?");\n  options.prefixes ?? (options.prefixes = "./");\n  const segmentWildcardRegex = `[^${escapeString(options.delimiter)}]+?`;\n  const result = [];\n  let key = 0;\n  let i = 0;\n  let path = "";\n  let nameSet = /* @__PURE__ */ new Set();\n  const tryConsume = /* @__PURE__ */ __name((type) => {\n    if (i < tokens.length && tokens[i].type === type)\n      return tokens[i++].value;\n  }, "tryConsume");\n  const tryConsumeModifier = /* @__PURE__ */ __name(() => {\n    return tryConsume("OTHER_MODIFIER") ?? tryConsume("ASTERISK");\n  }, "tryConsumeModifier");\n  const mustConsume = /* @__PURE__ */ __name((type) => {\n    const value = tryConsume(type);\n    if (value !== void 0)\n      return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  }, "mustConsume");\n  const consumeText = /* @__PURE__ */ __name(() => {\n    let result2 = "";\n    let value;\n    while (value = tryConsume("CHAR") ?? tryConsume("ESCAPED_CHAR")) {\n      result2 += value;\n    }\n    return result2;\n  }, "consumeText");\n  const DefaultEncodePart = /* @__PURE__ */ __name((value) => {\n    return value;\n  }, "DefaultEncodePart");\n  const encodePart = options.encodePart || DefaultEncodePart;\n  let pendingFixedValue = "";\n  const appendToPendingFixedValue = /* @__PURE__ */ __name((value) => {\n    pendingFixedValue += value;\n  }, "appendToPendingFixedValue");\n  const maybeAddPartFromPendingFixedValue = /* @__PURE__ */ __name(() => {\n    if (!pendingFixedValue.length) {\n      return;\n    }\n    result.push(new Part(\n      3,\n      "",\n      "",\n      encodePart(pendingFixedValue),\n      "",\n      3\n      /* kNone */\n    ));\n    pendingFixedValue = "";\n  }, "maybeAddPartFromPendingFixedValue");\n  const addPart = /* @__PURE__ */ __name((prefix, nameToken, regexOrWildcardToken, suffix, modifierToken) => {\n    let modifier = 3;\n    switch (modifierToken) {\n      case "?":\n        modifier = 1;\n        break;\n      case "*":\n        modifier = 0;\n        break;\n      case "+":\n        modifier = 2;\n        break;\n    }\n    if (!nameToken && !regexOrWildcardToken && modifier === 3) {\n      appendToPendingFixedValue(prefix);\n      return;\n    }\n    maybeAddPartFromPendingFixedValue();\n    if (!nameToken && !regexOrWildcardToken) {\n      if (!prefix) {\n        return;\n      }\n      result.push(new Part(3, "", "", encodePart(prefix), "", modifier));\n      return;\n    }\n    let regexValue;\n    if (!regexOrWildcardToken) {\n      regexValue = segmentWildcardRegex;\n    } else if (regexOrWildcardToken === "*") {\n      regexValue = kFullWildcardRegex;\n    } else {\n      regexValue = regexOrWildcardToken;\n    }\n    let type = 2;\n    if (regexValue === segmentWildcardRegex) {\n      type = 1;\n      regexValue = "";\n    } else if (regexValue === kFullWildcardRegex) {\n      type = 0;\n      regexValue = "";\n    }\n    let name;\n    if (nameToken) {\n      name = nameToken;\n    } else if (regexOrWildcardToken) {\n      name = key++;\n    }\n    if (nameSet.has(name)) {\n      throw new TypeError(`Duplicate name \'${name}\'.`);\n    }\n    nameSet.add(name);\n    result.push(new Part(type, name, encodePart(prefix), regexValue, encodePart(suffix), modifier));\n  }, "addPart");\n  while (i < tokens.length) {\n    const charToken = tryConsume("CHAR");\n    const nameToken = tryConsume("NAME");\n    let regexOrWildcardToken = tryConsume("REGEX");\n    if (!nameToken && !regexOrWildcardToken) {\n      regexOrWildcardToken = tryConsume("ASTERISK");\n    }\n    if (nameToken || regexOrWildcardToken) {\n      let prefix = charToken ?? "";\n      if (options.prefixes.indexOf(prefix) === -1) {\n        appendToPendingFixedValue(prefix);\n        prefix = "";\n      }\n      maybeAddPartFromPendingFixedValue();\n      let modifierToken = tryConsumeModifier();\n      addPart(prefix, nameToken, regexOrWildcardToken, "", modifierToken);\n      continue;\n    }\n    const value = charToken ?? tryConsume("ESCAPED_CHAR");\n    if (value) {\n      appendToPendingFixedValue(value);\n      continue;\n    }\n    const openToken = tryConsume("OPEN");\n    if (openToken) {\n      const prefix = consumeText();\n      const nameToken2 = tryConsume("NAME");\n      let regexOrWildcardToken2 = tryConsume("REGEX");\n      if (!nameToken2 && !regexOrWildcardToken2) {\n        regexOrWildcardToken2 = tryConsume("ASTERISK");\n      }\n      const suffix = consumeText();\n      mustConsume("CLOSE");\n      const modifierToken = tryConsumeModifier();\n      addPart(prefix, nameToken2, regexOrWildcardToken2, suffix, modifierToken);\n      continue;\n    }\n    maybeAddPartFromPendingFixedValue();\n    mustConsume("END");\n  }\n  return result;\n}\n__name(parse, "parse");\nfunction escapeString(str) {\n  return str.replace(/([.+*?^${}()[\\]|/\\\\])/g, "\\\\$1");\n}\n__name(escapeString, "escapeString");\nfunction flags(options) {\n  return options && options.ignoreCase ? "ui" : "u";\n}\n__name(flags, "flags");\nfunction stringToRegexp(path, names, options) {\n  return partsToRegexp(parse(path, options), names, options);\n}\n__name(stringToRegexp, "stringToRegexp");\nfunction modifierToString(modifier) {\n  switch (modifier) {\n    case 0:\n      return "*";\n    case 1:\n      return "?";\n    case 2:\n      return "+";\n    case 3:\n      return "";\n  }\n}\n__name(modifierToString, "modifierToString");\nfunction partsToRegexp(parts, names, options = {}) {\n  options.delimiter ?? (options.delimiter = "/#?");\n  options.prefixes ?? (options.prefixes = "./");\n  options.sensitive ?? (options.sensitive = false);\n  options.strict ?? (options.strict = false);\n  options.end ?? (options.end = true);\n  options.start ?? (options.start = true);\n  options.endsWith = "";\n  let result = options.start ? "^" : "";\n  for (const part of parts) {\n    if (part.type === 3) {\n      if (part.modifier === 3) {\n        result += escapeString(part.value);\n      } else {\n        result += `(?:${escapeString(part.value)})${modifierToString(part.modifier)}`;\n      }\n      continue;\n    }\n    if (names)\n      names.push(part.name);\n    const segmentWildcardRegex = `[^${escapeString(options.delimiter)}]+?`;\n    let regexValue = part.value;\n    if (part.type === 1)\n      regexValue = segmentWildcardRegex;\n    else if (part.type === 0)\n      regexValue = kFullWildcardRegex;\n    if (!part.prefix.length && !part.suffix.length) {\n      if (part.modifier === 3 || part.modifier === 1) {\n        result += `(${regexValue})${modifierToString(part.modifier)}`;\n      } else {\n        result += `((?:${regexValue})${modifierToString(part.modifier)})`;\n      }\n      continue;\n    }\n    if (part.modifier === 3 || part.modifier === 1) {\n      result += `(?:${escapeString(part.prefix)}(${regexValue})${escapeString(part.suffix)})`;\n      result += modifierToString(part.modifier);\n      continue;\n    }\n    result += `(?:${escapeString(part.prefix)}`;\n    result += `((?:${regexValue})(?:`;\n    result += escapeString(part.suffix);\n    result += escapeString(part.prefix);\n    result += `(?:${regexValue}))*)${escapeString(part.suffix)})`;\n    if (part.modifier === 0) {\n      result += "?";\n    }\n  }\n  const endsWith = `[${escapeString(options.endsWith)}]|$`;\n  const delimiter2 = `[${escapeString(options.delimiter)}]`;\n  if (options.end) {\n    if (!options.strict) {\n      result += `${delimiter2}?`;\n    }\n    if (!options.endsWith.length) {\n      result += "$";\n    } else {\n      result += `(?=${endsWith})`;\n    }\n    return new RegExp(result, flags(options));\n  }\n  if (!options.strict) {\n    result += `(?:${delimiter2}(?=${endsWith}))?`;\n  }\n  let isEndDelimited = false;\n  if (parts.length) {\n    const lastPart = parts[parts.length - 1];\n    if (lastPart.type === 3 && lastPart.modifier === 3) {\n      isEndDelimited = options.delimiter.indexOf(lastPart) > -1;\n    }\n  }\n  if (!isEndDelimited) {\n    result += `(?=${delimiter2}|${endsWith})`;\n  }\n  return new RegExp(result, flags(options));\n}\n__name(partsToRegexp, "partsToRegexp");\nvar DEFAULT_OPTIONS = {\n  delimiter: "",\n  prefixes: "",\n  sensitive: true,\n  strict: true\n};\nvar HOSTNAME_OPTIONS = {\n  delimiter: ".",\n  prefixes: "",\n  sensitive: true,\n  strict: true\n};\nvar PATHNAME_OPTIONS = {\n  delimiter: "/",\n  prefixes: "/",\n  sensitive: true,\n  strict: true\n};\nfunction isAbsolutePathname(pathname, isPattern) {\n  if (!pathname.length) {\n    return false;\n  }\n  if (pathname[0] === "/") {\n    return true;\n  }\n  if (!isPattern) {\n    return false;\n  }\n  if (pathname.length < 2) {\n    return false;\n  }\n  if ((pathname[0] == "\\\\" || pathname[0] == "{") && pathname[1] == "/") {\n    return true;\n  }\n  return false;\n}\n__name(isAbsolutePathname, "isAbsolutePathname");\nfunction maybeStripPrefix(value, prefix) {\n  if (value.startsWith(prefix)) {\n    return value.substring(prefix.length, value.length);\n  }\n  return value;\n}\n__name(maybeStripPrefix, "maybeStripPrefix");\nfunction maybeStripSuffix(value, suffix) {\n  if (value.endsWith(suffix)) {\n    return value.substr(0, value.length - suffix.length);\n  }\n  return value;\n}\n__name(maybeStripSuffix, "maybeStripSuffix");\nfunction treatAsIPv6Hostname(value) {\n  if (!value || value.length < 2) {\n    return false;\n  }\n  if (value[0] === "[") {\n    return true;\n  }\n  if ((value[0] === "\\\\" || value[0] === "{") && value[1] === "[") {\n    return true;\n  }\n  return false;\n}\n__name(treatAsIPv6Hostname, "treatAsIPv6Hostname");\nvar SPECIAL_SCHEMES = [\n  "ftp",\n  "file",\n  "http",\n  "https",\n  "ws",\n  "wss"\n];\nfunction isSpecialScheme(protocol_regexp) {\n  if (!protocol_regexp) {\n    return true;\n  }\n  for (const scheme of SPECIAL_SCHEMES) {\n    if (protocol_regexp.test(scheme)) {\n      return true;\n    }\n  }\n  return false;\n}\n__name(isSpecialScheme, "isSpecialScheme");\nfunction canonicalizeHash(hash, isPattern) {\n  hash = maybeStripPrefix(hash, "#");\n  if (isPattern || hash === "") {\n    return hash;\n  }\n  const url = new URL("https://example.com");\n  url.hash = hash;\n  return url.hash ? url.hash.substring(1, url.hash.length) : "";\n}\n__name(canonicalizeHash, "canonicalizeHash");\nfunction canonicalizeSearch(search, isPattern) {\n  search = maybeStripPrefix(search, "?");\n  if (isPattern || search === "") {\n    return search;\n  }\n  const url = new URL("https://example.com");\n  url.search = search;\n  return url.search ? url.search.substring(1, url.search.length) : "";\n}\n__name(canonicalizeSearch, "canonicalizeSearch");\nfunction canonicalizeHostname(hostname, isPattern) {\n  if (isPattern || hostname === "") {\n    return hostname;\n  }\n  if (treatAsIPv6Hostname(hostname)) {\n    return ipv6HostnameEncodeCallback(hostname);\n  } else {\n    return hostnameEncodeCallback(hostname);\n  }\n}\n__name(canonicalizeHostname, "canonicalizeHostname");\nfunction canonicalizePassword(password, isPattern) {\n  if (isPattern || password === "") {\n    return password;\n  }\n  const url = new URL("https://example.com");\n  url.password = password;\n  return url.password;\n}\n__name(canonicalizePassword, "canonicalizePassword");\nfunction canonicalizeUsername(username, isPattern) {\n  if (isPattern || username === "") {\n    return username;\n  }\n  const url = new URL("https://example.com");\n  url.username = username;\n  return url.username;\n}\n__name(canonicalizeUsername, "canonicalizeUsername");\nfunction canonicalizePathname(pathname, protocol, isPattern) {\n  if (isPattern || pathname === "") {\n    return pathname;\n  }\n  if (protocol && !SPECIAL_SCHEMES.includes(protocol)) {\n    const url = new URL(`${protocol}:${pathname}`);\n    return url.pathname;\n  }\n  const leadingSlash = pathname[0] == "/";\n  pathname = new URL(\n    !leadingSlash ? "/-" + pathname : pathname,\n    "https://example.com"\n  ).pathname;\n  if (!leadingSlash) {\n    pathname = pathname.substring(2, pathname.length);\n  }\n  return pathname;\n}\n__name(canonicalizePathname, "canonicalizePathname");\nfunction canonicalizePort(port, protocol, isPattern) {\n  if (defaultPortForProtocol(protocol) === port) {\n    port = "";\n  }\n  if (isPattern || port === "") {\n    return port;\n  }\n  return portEncodeCallback(port);\n}\n__name(canonicalizePort, "canonicalizePort");\nfunction canonicalizeProtocol(protocol, isPattern) {\n  protocol = maybeStripSuffix(protocol, ":");\n  if (isPattern || protocol === "") {\n    return protocol;\n  }\n  return protocolEncodeCallback(protocol);\n}\n__name(canonicalizeProtocol, "canonicalizeProtocol");\nfunction defaultPortForProtocol(protocol) {\n  switch (protocol) {\n    case "ws":\n    case "http":\n      return "80";\n    case "wws":\n    case "https":\n      return "443";\n    case "ftp":\n      return "21";\n    default:\n      return "";\n  }\n}\n__name(defaultPortForProtocol, "defaultPortForProtocol");\nfunction protocolEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  if (/^[-+.A-Za-z0-9]*$/.test(input))\n    return input.toLowerCase();\n  throw new TypeError(`Invalid protocol \'${input}\'.`);\n}\n__name(protocolEncodeCallback, "protocolEncodeCallback");\nfunction usernameEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  const url = new URL("https://example.com");\n  url.username = input;\n  return url.username;\n}\n__name(usernameEncodeCallback, "usernameEncodeCallback");\nfunction passwordEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  const url = new URL("https://example.com");\n  url.password = input;\n  return url.password;\n}\n__name(passwordEncodeCallback, "passwordEncodeCallback");\nfunction hostnameEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  if (/[\\t\\n\\r #%/:<>?@[\\]^\\\\|]/g.test(input)) {\n    throw new TypeError(`Invalid hostname \'${input}\'`);\n  }\n  const url = new URL("https://example.com");\n  url.hostname = input;\n  return url.hostname;\n}\n__name(hostnameEncodeCallback, "hostnameEncodeCallback");\nfunction ipv6HostnameEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  if (/[^0-9a-fA-F[\\]:]/g.test(input)) {\n    throw new TypeError(`Invalid IPv6 hostname \'${input}\'`);\n  }\n  return input.toLowerCase();\n}\n__name(ipv6HostnameEncodeCallback, "ipv6HostnameEncodeCallback");\nfunction portEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  if (/^[0-9]*$/.test(input) && parseInt(input) <= 65535) {\n    return input;\n  }\n  throw new TypeError(`Invalid port \'${input}\'.`);\n}\n__name(portEncodeCallback, "portEncodeCallback");\nfunction standardURLPathnameEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  const url = new URL("https://example.com");\n  url.pathname = input[0] !== "/" ? "/-" + input : input;\n  if (input[0] !== "/") {\n    return url.pathname.substring(2, url.pathname.length);\n  }\n  return url.pathname;\n}\n__name(standardURLPathnameEncodeCallback, "standardURLPathnameEncodeCallback");\nfunction pathURLPathnameEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  const url = new URL(`data:${input}`);\n  return url.pathname;\n}\n__name(pathURLPathnameEncodeCallback, "pathURLPathnameEncodeCallback");\nfunction searchEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  const url = new URL("https://example.com");\n  url.search = input;\n  return url.search.substring(1, url.search.length);\n}\n__name(searchEncodeCallback, "searchEncodeCallback");\nfunction hashEncodeCallback(input) {\n  if (input === "") {\n    return input;\n  }\n  const url = new URL("https://example.com");\n  url.hash = input;\n  return url.hash.substring(1, url.hash.length);\n}\n__name(hashEncodeCallback, "hashEncodeCallback");\nvar Parser = /* @__PURE__ */ __name(class {\n  constructor(input) {\n    this.tokenList = [];\n    this.internalResult = {};\n    this.tokenIndex = 0;\n    this.tokenIncrement = 1;\n    this.componentStart = 0;\n    this.state = 0;\n    this.groupDepth = 0;\n    this.hostnameIPv6BracketDepth = 0;\n    this.shouldTreatAsStandardURL = false;\n    this.input = input;\n  }\n  // Return the parse result.  The result is only available after the\n  // `parse()` method completes.\n  get result() {\n    return this.internalResult;\n  }\n  // Attempt to parse the input string used to construct the Parser object.\n  // This method may only be called once.  Any errors will be thrown as an\n  // exception.  Retrieve the parse result by accessing the `Parser.result`\n  // property getter.\n  parse() {\n    this.tokenList = lexer(\n      this.input,\n      /*lenient=*/\n      true\n    );\n    for (; this.tokenIndex < this.tokenList.length; this.tokenIndex += this.tokenIncrement) {\n      this.tokenIncrement = 1;\n      if (this.tokenList[this.tokenIndex].type === "END") {\n        if (this.state === 0) {\n          this.rewind();\n          if (this.isHashPrefix()) {\n            this.changeState(\n              9,\n              /*skip=*/\n              1\n            );\n          } else if (this.isSearchPrefix()) {\n            this.changeState(\n              8,\n              /*skip=*/\n              1\n            );\n            this.internalResult.hash = "";\n          } else {\n            this.changeState(\n              7,\n              /*skip=*/\n              0\n            );\n            this.internalResult.search = "";\n            this.internalResult.hash = "";\n          }\n          continue;\n        } else if (this.state === 2) {\n          this.rewindAndSetState(\n            5\n            /* HOSTNAME */\n          );\n          continue;\n        }\n        this.changeState(\n          10,\n          /*skip=*/\n          0\n        );\n        break;\n      }\n      if (this.groupDepth > 0) {\n        if (this.isGroupClose()) {\n          this.groupDepth -= 1;\n        } else {\n          continue;\n        }\n      }\n      if (this.isGroupOpen()) {\n        this.groupDepth += 1;\n        continue;\n      }\n      switch (this.state) {\n        case 0:\n          if (this.isProtocolSuffix()) {\n            this.internalResult.username = "";\n            this.internalResult.password = "";\n            this.internalResult.hostname = "";\n            this.internalResult.port = "";\n            this.internalResult.pathname = "";\n            this.internalResult.search = "";\n            this.internalResult.hash = "";\n            this.rewindAndSetState(\n              1\n              /* PROTOCOL */\n            );\n          }\n          break;\n        case 1:\n          if (this.isProtocolSuffix()) {\n            this.computeShouldTreatAsStandardURL();\n            let nextState = 7;\n            let skip = 1;\n            if (this.shouldTreatAsStandardURL) {\n              this.internalResult.pathname = "/";\n            }\n            if (this.nextIsAuthoritySlashes()) {\n              nextState = 2;\n              skip = 3;\n            } else if (this.shouldTreatAsStandardURL) {\n              nextState = 2;\n            }\n            this.changeState(nextState, skip);\n          }\n          break;\n        case 2:\n          if (this.isIdentityTerminator()) {\n            this.rewindAndSetState(\n              3\n              /* USERNAME */\n            );\n          } else if (this.isPathnameStart() || this.isSearchPrefix() || this.isHashPrefix()) {\n            this.rewindAndSetState(\n              5\n              /* HOSTNAME */\n            );\n          }\n          break;\n        case 3:\n          if (this.isPasswordPrefix()) {\n            this.changeState(\n              4,\n              /*skip=*/\n              1\n            );\n          } else if (this.isIdentityTerminator()) {\n            this.changeState(\n              5,\n              /*skip=*/\n              1\n            );\n          }\n          break;\n        case 4:\n          if (this.isIdentityTerminator()) {\n            this.changeState(\n              5,\n              /*skip=*/\n              1\n            );\n          }\n          break;\n        case 5:\n          if (this.isIPv6Open()) {\n            this.hostnameIPv6BracketDepth += 1;\n          } else if (this.isIPv6Close()) {\n            this.hostnameIPv6BracketDepth -= 1;\n          }\n          if (this.isPortPrefix() && !this.hostnameIPv6BracketDepth) {\n            this.changeState(\n              6,\n              /*skip=*/\n              1\n            );\n          } else if (this.isPathnameStart()) {\n            this.changeState(\n              7,\n              /*skip=*/\n              0\n            );\n          } else if (this.isSearchPrefix()) {\n            this.changeState(\n              8,\n              /*skip=*/\n              1\n            );\n          } else if (this.isHashPrefix()) {\n            this.changeState(\n              9,\n              /*skip=*/\n              1\n            );\n          }\n          break;\n        case 6:\n          if (this.isPathnameStart()) {\n            this.changeState(\n              7,\n              /*skip=*/\n              0\n            );\n          } else if (this.isSearchPrefix()) {\n            this.changeState(\n              8,\n              /*skip=*/\n              1\n            );\n          } else if (this.isHashPrefix()) {\n            this.changeState(\n              9,\n              /*skip=*/\n              1\n            );\n          }\n          break;\n        case 7:\n          if (this.isSearchPrefix()) {\n            this.changeState(\n              8,\n              /*skip=*/\n              1\n            );\n          } else if (this.isHashPrefix()) {\n            this.changeState(\n              9,\n              /*skip=*/\n              1\n            );\n          }\n          break;\n        case 8:\n          if (this.isHashPrefix()) {\n            this.changeState(\n              9,\n              /*skip=*/\n              1\n            );\n          }\n          break;\n        case 9:\n          break;\n        case 10:\n          break;\n      }\n    }\n  }\n  changeState(newState, skip) {\n    switch (this.state) {\n      case 0:\n        break;\n      case 1:\n        this.internalResult.protocol = this.makeComponentString();\n        break;\n      case 2:\n        break;\n      case 3:\n        this.internalResult.username = this.makeComponentString();\n        break;\n      case 4:\n        this.internalResult.password = this.makeComponentString();\n        break;\n      case 5:\n        this.internalResult.hostname = this.makeComponentString();\n        break;\n      case 6:\n        this.internalResult.port = this.makeComponentString();\n        break;\n      case 7:\n        this.internalResult.pathname = this.makeComponentString();\n        break;\n      case 8:\n        this.internalResult.search = this.makeComponentString();\n        break;\n      case 9:\n        this.internalResult.hash = this.makeComponentString();\n        break;\n      case 10:\n        break;\n    }\n    this.changeStateWithoutSettingComponent(newState, skip);\n  }\n  changeStateWithoutSettingComponent(newState, skip) {\n    this.state = newState;\n    this.componentStart = this.tokenIndex + skip;\n    this.tokenIndex += skip;\n    this.tokenIncrement = 0;\n  }\n  rewind() {\n    this.tokenIndex = this.componentStart;\n    this.tokenIncrement = 0;\n  }\n  rewindAndSetState(newState) {\n    this.rewind();\n    this.state = newState;\n  }\n  safeToken(index) {\n    if (index < 0) {\n      index = this.tokenList.length - index;\n    }\n    if (index < this.tokenList.length) {\n      return this.tokenList[index];\n    }\n    return this.tokenList[this.tokenList.length - 1];\n  }\n  isNonSpecialPatternChar(index, value) {\n    const token = this.safeToken(index);\n    return token.value === value && (token.type === "CHAR" || token.type === "ESCAPED_CHAR" || token.type === "INVALID_CHAR");\n  }\n  isProtocolSuffix() {\n    return this.isNonSpecialPatternChar(this.tokenIndex, ":");\n  }\n  nextIsAuthoritySlashes() {\n    return this.isNonSpecialPatternChar(this.tokenIndex + 1, "/") && this.isNonSpecialPatternChar(this.tokenIndex + 2, "/");\n  }\n  isIdentityTerminator() {\n    return this.isNonSpecialPatternChar(this.tokenIndex, "@");\n  }\n  isPasswordPrefix() {\n    return this.isNonSpecialPatternChar(this.tokenIndex, ":");\n  }\n  isPortPrefix() {\n    return this.isNonSpecialPatternChar(this.tokenIndex, ":");\n  }\n  isPathnameStart() {\n    return this.isNonSpecialPatternChar(this.tokenIndex, "/");\n  }\n  isSearchPrefix() {\n    if (this.isNonSpecialPatternChar(this.tokenIndex, "?")) {\n      return true;\n    }\n    if (this.tokenList[this.tokenIndex].value !== "?") {\n      return false;\n    }\n    const previousToken = this.safeToken(this.tokenIndex - 1);\n    return previousToken.type !== "NAME" && previousToken.type !== "REGEX" && previousToken.type !== "CLOSE" && previousToken.type !== "ASTERISK";\n  }\n  isHashPrefix() {\n    return this.isNonSpecialPatternChar(this.tokenIndex, "#");\n  }\n  isGroupOpen() {\n    return this.tokenList[this.tokenIndex].type == "OPEN";\n  }\n  isGroupClose() {\n    return this.tokenList[this.tokenIndex].type == "CLOSE";\n  }\n  isIPv6Open() {\n    return this.isNonSpecialPatternChar(this.tokenIndex, "[");\n  }\n  isIPv6Close() {\n    return this.isNonSpecialPatternChar(this.tokenIndex, "]");\n  }\n  makeComponentString() {\n    const token = this.tokenList[this.tokenIndex];\n    const componentCharStart = this.safeToken(this.componentStart).index;\n    return this.input.substring(componentCharStart, token.index);\n  }\n  computeShouldTreatAsStandardURL() {\n    const options = {};\n    Object.assign(options, DEFAULT_OPTIONS);\n    options.encodePart = protocolEncodeCallback;\n    const regexp = stringToRegexp(\n      this.makeComponentString(),\n      /*keys=*/\n      void 0,\n      options\n    );\n    this.shouldTreatAsStandardURL = isSpecialScheme(regexp);\n  }\n}, "Parser");\nvar COMPONENTS = [\n  "protocol",\n  "username",\n  "password",\n  "hostname",\n  "port",\n  "pathname",\n  "search",\n  "hash"\n];\nvar DEFAULT_PATTERN = "*";\nfunction extractValues(url, baseURL) {\n  if (typeof url !== "string") {\n    throw new TypeError(`parameter 1 is not of type \'string\'.`);\n  }\n  const o = new URL(url, baseURL);\n  return {\n    protocol: o.protocol.substring(0, o.protocol.length - 1),\n    username: o.username,\n    password: o.password,\n    hostname: o.hostname,\n    port: o.port,\n    pathname: o.pathname,\n    search: o.search !== "" ? o.search.substring(1, o.search.length) : void 0,\n    hash: o.hash !== "" ? o.hash.substring(1, o.hash.length) : void 0\n  };\n}\n__name(extractValues, "extractValues");\nfunction processBaseURLString(input, isPattern) {\n  if (!isPattern) {\n    return input;\n  }\n  return escapePatternString(input);\n}\n__name(processBaseURLString, "processBaseURLString");\nfunction applyInit(o, init, isPattern) {\n  let baseURL;\n  if (typeof init.baseURL === "string") {\n    try {\n      baseURL = new URL(init.baseURL);\n      o.protocol = processBaseURLString(baseURL.protocol.substring(0, baseURL.protocol.length - 1), isPattern);\n      o.username = processBaseURLString(baseURL.username, isPattern);\n      o.password = processBaseURLString(baseURL.password, isPattern);\n      o.hostname = processBaseURLString(baseURL.hostname, isPattern);\n      o.port = processBaseURLString(baseURL.port, isPattern);\n      o.pathname = processBaseURLString(baseURL.pathname, isPattern);\n      o.search = processBaseURLString(baseURL.search.substring(1, baseURL.search.length), isPattern);\n      o.hash = processBaseURLString(baseURL.hash.substring(1, baseURL.hash.length), isPattern);\n    } catch {\n      throw new TypeError(`invalid baseURL \'${init.baseURL}\'.`);\n    }\n  }\n  if (typeof init.protocol === "string") {\n    o.protocol = canonicalizeProtocol(init.protocol, isPattern);\n  }\n  if (typeof init.username === "string") {\n    o.username = canonicalizeUsername(init.username, isPattern);\n  }\n  if (typeof init.password === "string") {\n    o.password = canonicalizePassword(init.password, isPattern);\n  }\n  if (typeof init.hostname === "string") {\n    o.hostname = canonicalizeHostname(init.hostname, isPattern);\n  }\n  if (typeof init.port === "string") {\n    o.port = canonicalizePort(init.port, o.protocol, isPattern);\n  }\n  if (typeof init.pathname === "string") {\n    o.pathname = init.pathname;\n    if (baseURL && !isAbsolutePathname(o.pathname, isPattern)) {\n      const slashIndex = baseURL.pathname.lastIndexOf("/");\n      if (slashIndex >= 0) {\n        o.pathname = processBaseURLString(baseURL.pathname.substring(0, slashIndex + 1), isPattern) + o.pathname;\n      }\n    }\n    o.pathname = canonicalizePathname(o.pathname, o.protocol, isPattern);\n  }\n  if (typeof init.search === "string") {\n    o.search = canonicalizeSearch(init.search, isPattern);\n  }\n  if (typeof init.hash === "string") {\n    o.hash = canonicalizeHash(init.hash, isPattern);\n  }\n  return o;\n}\n__name(applyInit, "applyInit");\nfunction escapePatternString(value) {\n  return value.replace(/([+*?:{}()\\\\])/g, "\\\\$1");\n}\n__name(escapePatternString, "escapePatternString");\nfunction escapeRegexpString(value) {\n  return value.replace(/([.+*?^${}()[\\]|/\\\\])/g, "\\\\$1");\n}\n__name(escapeRegexpString, "escapeRegexpString");\nfunction partsToPattern(parts, options) {\n  options.delimiter ?? (options.delimiter = "/#?");\n  options.prefixes ?? (options.prefixes = "./");\n  options.sensitive ?? (options.sensitive = false);\n  options.strict ?? (options.strict = false);\n  options.end ?? (options.end = true);\n  options.start ?? (options.start = true);\n  options.endsWith = "";\n  const kFullWildcardRegex2 = ".*";\n  const segmentWildcardRegex = `[^${escapeRegexpString(options.delimiter)}]+?`;\n  const regexIdentifierPart2 = /[$_\\u200C\\u200D\\p{ID_Continue}]/u;\n  let result = "";\n  for (let i = 0; i < parts.length; ++i) {\n    const part = parts[i];\n    if (part.type === 3) {\n      if (part.modifier === 3) {\n        result += escapePatternString(part.value);\n        continue;\n      }\n      result += `{${escapePatternString(part.value)}}${modifierToString(part.modifier)}`;\n      continue;\n    }\n    const customName = part.hasCustomName();\n    let needsGrouping = !!part.suffix.length || !!part.prefix.length && (part.prefix.length !== 1 || !options.prefixes.includes(part.prefix));\n    const lastPart = i > 0 ? parts[i - 1] : null;\n    const nextPart = i < parts.length - 1 ? parts[i + 1] : null;\n    if (!needsGrouping && customName && part.type === 1 && part.modifier === 3 && nextPart && !nextPart.prefix.length && !nextPart.suffix.length) {\n      if (nextPart.type === 3) {\n        const code = nextPart.value.length > 0 ? nextPart.value[0] : "";\n        needsGrouping = regexIdentifierPart2.test(code);\n      } else {\n        needsGrouping = !nextPart.hasCustomName();\n      }\n    }\n    if (!needsGrouping && !part.prefix.length && lastPart && lastPart.type === 3) {\n      const code = lastPart.value[lastPart.value.length - 1];\n      needsGrouping = options.prefixes.includes(code);\n    }\n    if (needsGrouping) {\n      result += "{";\n    }\n    result += escapePatternString(part.prefix);\n    if (customName) {\n      result += `:${part.name}`;\n    }\n    if (part.type === 2) {\n      result += `(${part.value})`;\n    } else if (part.type === 1) {\n      if (!customName) {\n        result += `(${segmentWildcardRegex})`;\n      }\n    } else if (part.type === 0) {\n      if (!customName && (!lastPart || lastPart.type === 3 || lastPart.modifier !== 3 || needsGrouping || part.prefix !== "")) {\n        result += "*";\n      } else {\n        result += `(${kFullWildcardRegex2})`;\n      }\n    }\n    if (part.type === 1 && customName && !!part.suffix.length) {\n      if (regexIdentifierPart2.test(part.suffix[0])) {\n        result += "\\\\";\n      }\n    }\n    result += escapePatternString(part.suffix);\n    if (needsGrouping) {\n      result += "}";\n    }\n    if (part.modifier !== 3) {\n      result += modifierToString(part.modifier);\n    }\n  }\n  return result;\n}\n__name(partsToPattern, "partsToPattern");\nvar URLPattern = /* @__PURE__ */ __name(class {\n  constructor(init = {}, baseURLOrOptions, options) {\n    this.regexp = {};\n    this.names = {};\n    this.component_pattern = {};\n    this.parts = {};\n    try {\n      let baseURL = void 0;\n      if (typeof baseURLOrOptions === "string") {\n        baseURL = baseURLOrOptions;\n      } else {\n        options = baseURLOrOptions;\n      }\n      if (typeof init === "string") {\n        const parser = new Parser(init);\n        parser.parse();\n        init = parser.result;\n        if (baseURL === void 0 && typeof init.protocol !== "string") {\n          throw new TypeError(`A base URL must be provided for a relative constructor string.`);\n        }\n        init.baseURL = baseURL;\n      } else {\n        if (!init || typeof init !== "object") {\n          throw new TypeError(`parameter 1 is not of type \'string\' and cannot convert to dictionary.`);\n        }\n        if (baseURL) {\n          throw new TypeError(`parameter 1 is not of type \'string\'.`);\n        }\n      }\n      if (typeof options === "undefined") {\n        options = { ignoreCase: false };\n      }\n      const ignoreCaseOptions = { ignoreCase: options.ignoreCase === true };\n      const defaults = {\n        pathname: DEFAULT_PATTERN,\n        protocol: DEFAULT_PATTERN,\n        username: DEFAULT_PATTERN,\n        password: DEFAULT_PATTERN,\n        hostname: DEFAULT_PATTERN,\n        port: DEFAULT_PATTERN,\n        search: DEFAULT_PATTERN,\n        hash: DEFAULT_PATTERN\n      };\n      this.pattern = applyInit(defaults, init, true);\n      if (defaultPortForProtocol(this.pattern.protocol) === this.pattern.port) {\n        this.pattern.port = "";\n      }\n      let component;\n      for (component of COMPONENTS) {\n        if (!(component in this.pattern))\n          continue;\n        const options2 = {};\n        const pattern = this.pattern[component];\n        this.names[component] = [];\n        switch (component) {\n          case "protocol":\n            Object.assign(options2, DEFAULT_OPTIONS);\n            options2.encodePart = protocolEncodeCallback;\n            break;\n          case "username":\n            Object.assign(options2, DEFAULT_OPTIONS);\n            options2.encodePart = usernameEncodeCallback;\n            break;\n          case "password":\n            Object.assign(options2, DEFAULT_OPTIONS);\n            options2.encodePart = passwordEncodeCallback;\n            break;\n          case "hostname":\n            Object.assign(options2, HOSTNAME_OPTIONS);\n            if (treatAsIPv6Hostname(pattern)) {\n              options2.encodePart = ipv6HostnameEncodeCallback;\n            } else {\n              options2.encodePart = hostnameEncodeCallback;\n            }\n            break;\n          case "port":\n            Object.assign(options2, DEFAULT_OPTIONS);\n            options2.encodePart = portEncodeCallback;\n            break;\n          case "pathname":\n            if (isSpecialScheme(this.regexp.protocol)) {\n              Object.assign(options2, PATHNAME_OPTIONS, ignoreCaseOptions);\n              options2.encodePart = standardURLPathnameEncodeCallback;\n            } else {\n              Object.assign(options2, DEFAULT_OPTIONS, ignoreCaseOptions);\n              options2.encodePart = pathURLPathnameEncodeCallback;\n            }\n            break;\n          case "search":\n            Object.assign(options2, DEFAULT_OPTIONS, ignoreCaseOptions);\n            options2.encodePart = searchEncodeCallback;\n            break;\n          case "hash":\n            Object.assign(options2, DEFAULT_OPTIONS, ignoreCaseOptions);\n            options2.encodePart = hashEncodeCallback;\n            break;\n        }\n        try {\n          this.parts[component] = parse(pattern, options2);\n          this.regexp[component] = partsToRegexp(\n            this.parts[component],\n            /* out */\n            this.names[component],\n            options2\n          );\n          this.component_pattern[component] = partsToPattern(this.parts[component], options2);\n        } catch (err) {\n          throw new TypeError(`invalid ${component} pattern \'${this.pattern[component]}\'.`);\n        }\n      }\n    } catch (err) {\n      throw new TypeError(`Failed to construct \'URLPattern\': ${err.message}`);\n    }\n  }\n  test(input = {}, baseURL) {\n    let values = {\n      pathname: "",\n      protocol: "",\n      username: "",\n      password: "",\n      hostname: "",\n      port: "",\n      search: "",\n      hash: ""\n    };\n    if (typeof input !== "string" && baseURL) {\n      throw new TypeError(`parameter 1 is not of type \'string\'.`);\n    }\n    if (typeof input === "undefined") {\n      return false;\n    }\n    try {\n      if (typeof input === "object") {\n        values = applyInit(values, input, false);\n      } else {\n        values = applyInit(values, extractValues(input, baseURL), false);\n      }\n    } catch (err) {\n      return false;\n    }\n    let component;\n    for (component of COMPONENTS) {\n      if (!this.regexp[component].exec(values[component])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  exec(input = {}, baseURL) {\n    let values = {\n      pathname: "",\n      protocol: "",\n      username: "",\n      password: "",\n      hostname: "",\n      port: "",\n      search: "",\n      hash: ""\n    };\n    if (typeof input !== "string" && baseURL) {\n      throw new TypeError(`parameter 1 is not of type \'string\'.`);\n    }\n    if (typeof input === "undefined") {\n      return;\n    }\n    try {\n      if (typeof input === "object") {\n        values = applyInit(values, input, false);\n      } else {\n        values = applyInit(values, extractValues(input, baseURL), false);\n      }\n    } catch (err) {\n      return null;\n    }\n    let result = {};\n    if (baseURL) {\n      result.inputs = [input, baseURL];\n    } else {\n      result.inputs = [input];\n    }\n    let component;\n    for (component of COMPONENTS) {\n      let match = this.regexp[component].exec(values[component]);\n      if (!match) {\n        return null;\n      }\n      let groups = {};\n      for (let [i, name] of this.names[component].entries()) {\n        if (typeof name === "string" || typeof name === "number") {\n          let value = match[i + 1];\n          groups[name] = value;\n        }\n      }\n      result[component] = {\n        input: values[component] ?? "",\n        groups\n      };\n    }\n    return result;\n  }\n  static compareComponent(component, left, right) {\n    const comparePart = /* @__PURE__ */ __name((left2, right2) => {\n      for (let attr of ["type", "modifier", "prefix", "value", "suffix"]) {\n        if (left2[attr] < right2[attr])\n          return -1;\n        else if (left2[attr] === right2[attr])\n          continue;\n        else\n          return 1;\n      }\n      return 0;\n    }, "comparePart");\n    const emptyFixedPart = new Part(\n      3,\n      "",\n      "",\n      "",\n      "",\n      3\n      /* kNone */\n    );\n    const wildcardOnlyPart = new Part(\n      0,\n      "",\n      "",\n      "",\n      "",\n      3\n      /* kNone */\n    );\n    const comparePartList = /* @__PURE__ */ __name((left2, right2) => {\n      let i = 0;\n      for (; i < Math.min(left2.length, right2.length); ++i) {\n        let result = comparePart(left2[i], right2[i]);\n        if (result)\n          return result;\n      }\n      if (left2.length === right2.length) {\n        return 0;\n      }\n      return comparePart(left2[i] ?? emptyFixedPart, right2[i] ?? emptyFixedPart);\n    }, "comparePartList");\n    if (!left.component_pattern[component] && !right.component_pattern[component]) {\n      return 0;\n    }\n    if (left.component_pattern[component] && !right.component_pattern[component]) {\n      return comparePartList(left.parts[component], [wildcardOnlyPart]);\n    }\n    if (!left.component_pattern[component] && right.component_pattern[component]) {\n      return comparePartList([wildcardOnlyPart], right.parts[component]);\n    }\n    return comparePartList(left.parts[component], right.parts[component]);\n  }\n  get protocol() {\n    return this.component_pattern.protocol;\n  }\n  get username() {\n    return this.component_pattern.username;\n  }\n  get password() {\n    return this.component_pattern.password;\n  }\n  get hostname() {\n    return this.component_pattern.hostname;\n  }\n  get port() {\n    return this.component_pattern.port;\n  }\n  get pathname() {\n    return this.component_pattern.pathname;\n  }\n  get search() {\n    return this.component_pattern.search;\n  }\n  get hash() {\n    return this.component_pattern.hash;\n  }\n}, "URLPattern");\n\n// ../../node_modules/.pnpm/urlpattern-polyfill@8.0.2/node_modules/urlpattern-polyfill/index.js\nif (!globalThis.URLPattern) {\n  globalThis.URLPattern = URLPattern;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  URL,\n  URLPattern,\n  URLSearchParams\n});\n'},108:(__unused_webpack_module,exports,__nccwpck_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.EdgeVM=void 0;const load_1=__nccwpck_require__(446);const vm_1=__nccwpck_require__(144);const vm_2=__nccwpck_require__(359);let unhandledRejectionHandlers;let uncaughtExceptionHandlers;class EdgeVM extends vm_2.VM{constructor(e){super({...e,extend:n=>(e===null||e===void 0?void 0:e.extend)?e.extend(addPrimitives(n)):addPrimitives(n)});Object.defineProperty(this.context,"__onUnhandledRejectionHandlers",{set:registerUnhandledRejectionHandlers,configurable:false,enumerable:false});Object.defineProperty(this,"__rejectionHandlers",{get:()=>unhandledRejectionHandlers,configurable:false,enumerable:false});Object.defineProperty(this.context,"__onErrorHandlers",{set:registerUncaughtExceptionHandlers,configurable:false,enumerable:false});Object.defineProperty(this,"__errorHandlers",{get:()=>uncaughtExceptionHandlers,configurable:false,enumerable:false});this.evaluate(getDefineEventListenersCode());this.dispatchFetch=this.evaluate(getDispatchFetchCode());for(const e of transferableConstructors){patchInstanceOf(e,this.context)}if(e===null||e===void 0?void 0:e.initialCode){this.evaluate(e.initialCode)}}}exports.EdgeVM=EdgeVM;const transferableConstructors=["Object","Array","RegExp","Uint8Array","ArrayBuffer","Error","SyntaxError","TypeError"];function patchInstanceOf(item,ctx){ctx[Symbol.for(`node:${item}`)]=eval(item);return(0,vm_1.runInContext)(`\n      globalThis.${item} = new Proxy(${item}, {\n        get(target, prop, receiver) {\n          if (prop === Symbol.hasInstance && receiver === globalThis.${item}) {\n            const nodeTarget = globalThis[Symbol.for('node:${item}')];\n            if (nodeTarget) {\n              return function(instance) {\n                return instance instanceof target || instance instanceof nodeTarget;\n              };\n            } else {\n              throw new Error('node target must exist')\n            }\n          }\n\n          return Reflect.get(target, prop, receiver);\n        }\n      })\n    `,ctx)}function registerUnhandledRejectionHandlers(e){if(!unhandledRejectionHandlers){process.on("unhandledRejection",(function invokeRejectionHandlers(e,n){unhandledRejectionHandlers.forEach((t=>t({reason:e,promise:n})))}))}unhandledRejectionHandlers=e}function registerUncaughtExceptionHandlers(e){if(!uncaughtExceptionHandlers){process.on("uncaughtException",(function invokeErrorHandlers(e){uncaughtExceptionHandlers.forEach((n=>n(e)))}))}uncaughtExceptionHandlers=e}function getDefineEventListenersCode(){return`\n    Object.defineProperty(self, '__listeners', {\n      configurable: false,\n      enumerable: false,\n      value: {},\n      writable: true,\n    })\n\n    function __conditionallyUpdatesHandlerList(eventType) {\n      if (eventType === 'unhandledrejection') {\n        self.__onUnhandledRejectionHandlers = self.__listeners[eventType];\n      } else if (eventType === 'error') {\n        self.__onErrorHandlers = self.__listeners[eventType];\n      }\n    }\n\n    function addEventListener(type, handler) {\n      const eventType = type.toLowerCase();\n      if (eventType === 'fetch' && self.__listeners.fetch) {\n        throw new TypeError('You can register just one "fetch" event listener');\n      }\n\n      self.__listeners[eventType] = self.__listeners[eventType] || [];\n      self.__listeners[eventType].push(handler);\n      __conditionallyUpdatesHandlerList(eventType);\n    }\n\n    function removeEventListener(type, handler) {\n      const eventType = type.toLowerCase();\n      if (self.__listeners[eventType]) {\n        self.__listeners[eventType] = self.__listeners[eventType].filter(item => {\n          return item !== handler;\n        });\n\n        if (self.__listeners[eventType].length === 0) {\n          delete self.__listeners[eventType];\n        }\n      }\n      __conditionallyUpdatesHandlerList(eventType);\n    }\n  `}function getDispatchFetchCode(){return`(async function dispatchFetch(input, init) {\n    const request = new Request(input, init);\n    const event = new FetchEvent(request);\n    if (!self.__listeners.fetch) {\n      throw new Error("No fetch event listeners found");\n    }\n\n    const getResponse = ({ response, error }) => {\n     if (error || !response || !(response instanceof Response)) {\n        console.error(error ? error.toString() : 'The event listener did not respond')\n        response = new Response(null, {\n          statusText: 'Internal Server Error',\n          status: 500\n        })\n      }\n\n      response.waitUntil = () => Promise.all(event.awaiting);\n\n      if (response.status < 300 || response.status >= 400 ) {\n        response.headers.delete('content-encoding');\n        response.headers.delete('transform-encoding');\n        response.headers.delete('content-length');\n      }\n\n      return response;\n    }\n\n    try {\n      await self.__listeners.fetch[0].call(event, event)\n    } catch (error) {\n      return getResponse({ error })\n    }\n\n    return Promise.resolve(event.response)\n      .then(response => getResponse({ response }))\n      .catch(error => getResponse({ error }))\n  })`}function addPrimitives(e){defineProperty(e,"self",{enumerable:true,value:e});defineProperty(e,"globalThis",{value:e});defineProperty(e,"Symbol",{value:Symbol});defineProperty(e,"clearInterval",{value:clearInterval});defineProperty(e,"clearTimeout",{value:clearTimeout});defineProperty(e,"setInterval",{value:setInterval});defineProperty(e,"setTimeout",{value:setTimeout});defineProperty(e,"EdgeRuntime",{value:"edge-runtime"});const n=getTransferablePrimitivesFromContext(e);defineProperties(e,{exports:(0,load_1.load)({...n,WeakRef:(0,vm_1.runInContext)(`WeakRef`,e)}),enumerable:["crypto"],nonenumerable:["Crypto","CryptoKey","SubtleCrypto","fetch","File","FormData","Headers","Request","Response","WebSocket","structuredClone","Blob","URL","URLSearchParams","URLPattern","AbortController","AbortSignal","DOMException","ReadableStream","ReadableStreamBYOBReader","ReadableStreamDefaultReader","TextDecoderStream","TextEncoderStream","TransformStream","WritableStream","WritableStreamDefaultWriter","atob","btoa","TextEncoder","TextDecoder","Event","EventTarget","FetchEvent","PromiseRejectionEvent","console"]});return e}function defineProperty(e,n,t){var r,A,o;Object.defineProperty(e,n,{configurable:(r=t.configurable)!==null&&r!==void 0?r:false,enumerable:(A=t.enumerable)!==null&&A!==void 0?A:false,value:t.value,writable:(o=t.writable)!==null&&o!==void 0?o:true})}function defineProperties(e,n){var t,r;for(const r of(t=n.enumerable)!==null&&t!==void 0?t:[]){if(!n.exports[r]){throw new Error(`Attempt to export a nullable value for "${r}"`)}defineProperty(e,r,{enumerable:true,value:n.exports[r]})}for(const t of(r=n.nonenumerable)!==null&&r!==void 0?r:[]){if(!n.exports[t]){throw new Error(`Attempt to export a nullable value for "${t}"`)}defineProperty(e,t,{value:n.exports[t]})}}function getTransferablePrimitivesFromContext(e){const n=transferableConstructors.join(",");const t=`({${n}})`;return(0,vm_1.runInContext)(t,e)}},790:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:true});n.VM=n.EdgeVM=void 0;var r=t(108);Object.defineProperty(n,"EdgeVM",{enumerable:true,get:function(){return r.EdgeVM}});var A=t(359);Object.defineProperty(n,"VM",{enumerable:true,get:function(){return A.VM}})},359:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:true});n.VM=void 0;const r=t(144);class VM{constructor(e={}){var n,t,A;const o=(0,r.createContext)({},{name:"Edge Runtime",codeGeneration:(n=e.codeGeneration)!==null&&n!==void 0?n:{strings:false,wasm:true}});this.context=(A=(t=e.extend)===null||t===void 0?void 0:t.call(e,o))!==null&&A!==void 0?A:o}evaluate(e){return(0,r.runInContext)(e,this.context)}}n.VM=VM},456:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){function adopt(e){return e instanceof t?e:new t((function(n){n(e)}))}return new(t||(t=Promise))((function(t,A){function fulfilled(e){try{step(r.next(e))}catch(e){A(e)}}function rejected(e){try{step(r["throw"](e))}catch(e){A(e)}}function step(e){e.done?t(e.value):adopt(e.value).then(fulfilled,rejected)}step((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:true});n.listen=void 0;const A=t(685);const o=t(687);const s=t(17);const i=t(361);const getProtocol=e=>{if(typeof e.protocol==="string")return e.protocol;if(e instanceof A.Server)return"http";if(e instanceof o.Server)return"https"};function listen(e,...n){return r(this,void 0,void 0,(function*(){e.listen(...n,(()=>{}));yield(0,i.once)(e,"listening");const t=e.address();if(!t){throw new Error("Server not listening")}let r;let A=getProtocol(e);if(typeof t==="string"){r=encodeURIComponent((0,s.resolve)(t));if(A){A+="+unix"}else{A="unix"}}else{const{address:e,port:n,family:o}=t;r=o==="IPv6"?`[${e}]`:e;r+=`:${n}`;if(!A){A="tcp"}}return new URL(`${A}://${r}`)}))}n.listen=listen;n["default"]=listen},162:e=>{"use strict";e.exports=e=>{const n=e[0]*1e9+e[1];const t=n/1e6;const r=n/1e9;return{seconds:r,milliseconds:t,nanoseconds:n}}},28:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:true});n.EdgeRuntime=void 0;var r=t(790);Object.defineProperty(n,"EdgeRuntime",{enumerable:true,get:function(){return r.EdgeVM}})},355:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:true});n.consumeUint8ArrayReadableStream=n.getClonableBodyStream=void 0;const r=t(781);function getClonableBodyStream(e,n,t){let r=null;return{finalize(){if(r){replaceRequestBody(e,bodyStreamToNodeStream(r))}},cloneBodyStream(){const A=r!==null&&r!==void 0?r:requestToBodyStream(e,n,t);const[o,s]=A.tee();r=o;return s}}}n.getClonableBodyStream=getClonableBodyStream;function requestToBodyStream(e,n,t){const r=new t({start(t){e.on("data",(e=>t.enqueue(new n([...new Uint8Array(e)]))));e.on("end",(()=>t.terminate()));e.on("error",(e=>t.error(e)))}});return r.readable}function bodyStreamToNodeStream(e){const n=e.getReader();return r.Readable.from(async function*(){while(true){const{done:e,value:t}=await n.read();if(e){return}yield t}}())}function replaceRequestBody(e,n){for(const t in n){let r=n[t];if(typeof r==="function"){r=r.bind(n)}e[t]=r}return e}async function*consumeUint8ArrayReadableStream(e){var n;const t=e===null||e===void 0?void 0:e.getReader();if(t){while(true){const{done:e,value:r}=await t.read();if(e){return}if(((n=r===null||r===void 0?void 0:r.constructor)===null||n===void 0?void 0:n.name)!=="Uint8Array"){throw new TypeError("This ReadableStream did not return bytes.")}yield r}}}n.consumeUint8ArrayReadableStream=consumeUint8ArrayReadableStream},326:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:true});n.createHandler=void 0;const A=t(355);const o=t(355);const s=r(t(606));const i=r(t(943));const a=t(685);function createHandler(e){const n=new Set;return{handler:async(t,r)=>{var u,l;try{const c=(0,i.default)();const g=t.method!=="GET"&&t.method!=="HEAD"?(0,o.getClonableBodyStream)(t,e.runtime.evaluate("Uint8Array"),e.runtime.context.TransformStream):undefined;const d=await e.runtime.dispatchFetch(String(getURL(t)),{headers:toRequestInitHeaders(t),method:t.method,body:g===null||g===void 0?void 0:g.cloneBodyStream()});const h=d.waitUntil();n.add(h);h.finally((()=>n.delete(h)));r.statusCode=d.status;r.statusMessage=d.statusText;for(const[e,n]of Object.entries(toNodeHeaders(d.headers))){if(n!==undefined){r.setHeader(e,n)}}if(d.body){for await(const e of(0,A.consumeUint8ArrayReadableStream)(d.body)){r.write(e)}}const p=`${t.socket.remoteAddress} ${t.method} ${t.url}`;const E=`${(u=(0,s.default)(c()).match(/[a-zA-Z]+|[0-9]+/g))===null||u===void 0?void 0:u.join(" ")}`;const C=`${r.statusCode} ${a.STATUS_CODES[r.statusCode]}`;(l=e.logger)===null||l===void 0?void 0:l.debug(`${p} → ${C} in ${E}`);r.end()}finally{if(!r.writableEnded){r.end()}}},waitUntil:()=>Promise.all(n)}}n.createHandler=createHandler;function getURL(e){var n;const t=((n=e.socket)===null||n===void 0?void 0:n.encrypted)?"https":"http";return new URL(String(e.url),`${t}://${String(e.headers.host)}`)}function toRequestInitHeaders(e){return Object.keys(e.headers).map((n=>{const t=e.headers[n];return[n,Array.isArray(t)?t.join(", "):t!==null&&t!==void 0?t:""]}))}function toNodeHeaders(e){const n={};if(e){for(const[t,r]of e.entries()){n[t]=t.toLowerCase()==="set-cookie"?e.getAll("set-cookie"):r}}return n}},511:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:true});n.runServer=n.createHandler=n.consumeUint8ArrayReadableStream=void 0;var r=t(355);Object.defineProperty(n,"consumeUint8ArrayReadableStream",{enumerable:true,get:function(){return r.consumeUint8ArrayReadableStream}});var A=t(326);Object.defineProperty(n,"createHandler",{enumerable:true,get:function(){return A.createHandler}});var o=t(680);Object.defineProperty(n,"runServer",{enumerable:true,get:function(){return o.runServer}})},680:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:true});n.runServer=void 0;const A=t(326);const o=r(t(456));const s=r(t(685));async function runServer(e){if(e.port===undefined)e.port=0;const{handler:n,waitUntil:t}=(0,A.createHandler)(e);const r=s.default.createServer(n);const i=await(0,o.default)(r,e);return{url:String(i),close:async()=>{await t();await new Promise(((e,n)=>r.close((t=>{if(t)n(t);e()}))))},waitUntil:t}}n.runServer=runServer},523:e=>{"use strict";e.exports=e=>{if(typeof e!=="number"){throw new TypeError("Expected a number")}const n=e>0?Math.floor:Math.ceil;return{days:n(e/864e5),hours:n(e/36e5)%24,minutes:n(e/6e4)%60,seconds:n(e/1e3)%60,milliseconds:n(e)%1e3,microseconds:n(e*1e3)%1e3,nanoseconds:n(e*1e6)%1e3}}},606:(e,n,t)=>{"use strict";const r=t(523);const pluralize=(e,n)=>n===1?e:`${e}s`;const A=1e-7;e.exports=(e,n={})=>{if(!Number.isFinite(e)){throw new TypeError("Expected a finite number")}if(n.colonNotation){n.compact=false;n.formatSubMilliseconds=false;n.separateMilliseconds=false;n.verbose=false}if(n.compact){n.secondsDecimalDigits=0;n.millisecondsDecimalDigits=0}const t=[];const floorDecimals=(e,n)=>{const t=Math.floor(e*10**n+A);const r=Math.round(t)/10**n;return r.toFixed(n)};const add=(e,r,A,o)=>{if((t.length===0||!n.colonNotation)&&e===0&&!(n.colonNotation&&A==="m")){return}o=(o||e||"0").toString();let s;let i;if(n.colonNotation){s=t.length>0?":":"";i="";const e=o.includes(".")?o.split(".")[0].length:o.length;const n=t.length>0?2:1;o="0".repeat(Math.max(0,n-e))+o}else{s="";i=n.verbose?" "+pluralize(r,e):A}t.push(s+o+i)};const o=r(e);add(Math.trunc(o.days/365),"year","y");add(o.days%365,"day","d");add(o.hours,"hour","h");add(o.minutes,"minute","m");if(n.separateMilliseconds||n.formatSubMilliseconds||!n.colonNotation&&e<1e3){add(o.seconds,"second","s");if(n.formatSubMilliseconds){add(o.milliseconds,"millisecond","ms");add(o.microseconds,"microsecond","µs");add(o.nanoseconds,"nanosecond","ns")}else{const e=o.milliseconds+o.microseconds/1e3+o.nanoseconds/1e6;const t=typeof n.millisecondsDecimalDigits==="number"?n.millisecondsDecimalDigits:0;const r=e>=1?Math.round(e):Math.ceil(e);const A=t?e.toFixed(t):r;add(Number.parseFloat(A,10),"millisecond","ms",A)}}else{const t=e/1e3%60;const r=typeof n.secondsDecimalDigits==="number"?n.secondsDecimalDigits:1;const A=floorDecimals(t,r);const o=n.keepDecimalsOnWholeSeconds?A:A.replace(/\.0+$/,"");add(Number.parseFloat(o,10),"second","s",o)}if(t.length===0){return"0"+(n.verbose?" milliseconds":"ms")}if(n.compact){return t[0]}if(typeof n.unitCount==="number"){const e=n.colonNotation?"":" ";return t.slice(0,Math.max(n.unitCount,1)).join(e)}return n.colonNotation?t.join(""):t.join(" ")}},943:(e,n,t)=>{"use strict";const r=t(162);e.exports=()=>{const e=process.hrtime();const end=n=>r(process.hrtime(e))[n];const returnValue=()=>end("milliseconds");returnValue.rounded=()=>Math.round(end("milliseconds"));returnValue.seconds=()=>end("seconds");returnValue.nanoseconds=()=>end("nanoseconds");return returnValue}},113:e=>{"use strict";e.exports=require("crypto")},361:e=>{"use strict";e.exports=require("events")},685:e=>{"use strict";e.exports=require("http")},687:e=>{"use strict";e.exports=require("https")},188:e=>{"use strict";e.exports=require("module")},17:e=>{"use strict";e.exports=require("path")},781:e=>{"use strict";e.exports=require("stream")},144:e=>{"use strict";e.exports=require("vm")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var n=__webpack_module_cache__[e];if(n!==undefined){return n.exports}var t=__webpack_module_cache__[e]={exports:{}};var r=true;try{__webpack_modules__[e].call(t.exports,t,t.exports,__nccwpck_require__);r=false}finally{if(r)delete __webpack_module_cache__[e]}return t.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{"use strict";var e=__webpack_exports__;Object.defineProperty(e,"__esModule",{value:true});e.EdgeRuntime=e.runServer=e.createHandler=e.consumeUint8ArrayReadableStream=void 0;var n=__nccwpck_require__(511);Object.defineProperty(e,"consumeUint8ArrayReadableStream",{enumerable:true,get:function(){return n.consumeUint8ArrayReadableStream}});Object.defineProperty(e,"createHandler",{enumerable:true,get:function(){return n.createHandler}});Object.defineProperty(e,"runServer",{enumerable:true,get:function(){return n.runServer}});var t=__nccwpck_require__(28);Object.defineProperty(e,"EdgeRuntime",{enumerable:true,get:function(){return t.EdgeRuntime}})})();module.exports=__webpack_exports__})();